( (CODE <BEGIN_langf-1696-e3-h>))

( (CODE <P_29>))

( (CODE <heading>))

( (NP (N CHAP.#chapter_n) (NUM IV#four_adj) (PUNC .))
  (ID LANGF-1696-E3-H,29.4))

( (PP (P OF#of_prep)
      (NP (N INOCULATING#inoculating_n))
      (PUNC .))
  (ID LANGF-1696-E3-H,29.5))

( (CODE <$$heading>))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (ONE 1#one_adj) (PUNC .))
  (ID LANGF-1696-E3-H,29.7))

( (IP-IMP (PP (NP-MSR (ADV About#about_adv) (D a#a_adj) (N fortnight#fortnight_n))
	      (P (P before#before_adv) (CONJ or#or_conj1) (P after#after_adv))
	      (CODE <font>)
	      (NP (NPR Midsummer#NA)
		  (CODE <$$font>)
		  (PUNC <paren>)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP is#be_v)
				  (NP-PRD (D the#the_adj) (ADJS best#best_adj) (N time#time_n))
				  (PUNC ,)
				  (PP (P though#though_adv)
				      (CP-ADV (C 0)
					      (IP-SUB (NP-SBJ (PRO it#it_pron))
						      (MD may#may_v1)
						      (BE be#be_v)
						      (DAN done#do_v)
						      (PP (P from#from_prep)
							  (NP (D the#the_adj)
							      (N beginning#beginning_n)
							      (PP (P of#of_prep)
								  (CODE <font>)
								  (NP (NPR May#NA)))))
						      (CODE <$$font>)
						      (PP (P till#till_prep)
							  (CODE <font>)
							  (NP (NPR August#NA))))))))))
	  (CODE <$$font>)
	  (PUNC <$$paren>)
	  (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (HVP have#have_v)
			      (VBN pitch'd#pitch_v2)
			      (PP (P upon#upon_prep)
				  (NP (SUCH such#such_adj)
				      (CODE <font>)
				      (NS stocks#stock_n1)
				      (CODE <$$font>)
				      (PP (P as#as_adv)
					  (CP-CMP (WNP-2 0)
						  (C 0)
						  (IP-SUB (NP-SBJ *T*-2)
							  (BEP are#be_v)
							  (ADJP-PRD (ADJ fit#fit_adj)
								    (IP-INF (TO to#to_prep) (BE be#be_v) (CODE <font>) (VAN inoculated#inoculate_v)))))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (VBI choose#choose_v)
	  (RP out#out_adv)
	  (NP-OB1 (D a#a_adj)
		  (ADJP (ADJP (ADJ strong#strong_adj))
			(CONJP (CONJ and#and_conj1)
			       (CODE <font>)
			       (ADJP (ADV well#well_adv) (ADJ liking#liking_adj1))))
		  (N branch#branch_n)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NX (N shoot#shoot_n1)))
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (NP (NP-POS (D that#that_pron1) (CODE <font>) (N$ years#year_n))
			  (N growth#growth_n1)))
		  (CODE <$$font>)
		  (PP (P upon#upon_prep)
		      (NP (D a#a_adj)
			  (N Tree#tree_n)
			  (CP-REL (WNP-3 0)
				  (C that#that_conj)
				  (IP-SUB (NP-SBJ *T*-3)
					  (VBP bears#bear_v1)
					  (NP-OB1 (SUCH such#such_adj)
						  (N kind#kind_n)
						  (PP (P of#of_prep)
						      (CODE <font>)
						      (NP (N fruit#fruit_n)))
						  (CODE <$$font>)
						  (PP (P as#as_adv)
						      (CP-CMP (WNP-4 0)
							      (C 0)
							      (IP-SUB (NP-OB1 *T*-4)
								      (NP-SBJ (PRO you#you_pron))
								      (MD would#will_v1)
								      (PP (P by#by_prep)
									  (NP (D this#this_pron) (N operation#operation_n)))
								      (VB produce#produce_v))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,29.8))

( (IP-IMP (CONJ and#and_conj1)
	  (PP (P about#about_adv)
	      (NP (D the#the_adj)
		  (N middle#middle_adj)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (NX (ADJ lower#lower_adj)
			     (N end#end_n)
			     (PP (P of#of_prep)
				 (NP (PRO it#it_pron)))))))
	  (PUNC ,)
	  (PUNC <paren>)
	  (IP-MAT-PRN (CONJ for#for_prep)
		      (NP-SBJ (D the#the_adj) (N top#top_n1))
		      (MD will#will_v1)
		      (BE be#be_v)
		      (ADJP-PRD (ADVR too#too_adv) (ADJ tender#tender_adj)))
	  (PUNC <$$paren>)
	  (VBI fix#fix_v)
	  (PP (P upon#upon_prep)
	      (NP (D a#a_adj)
		  (CODE <font>)
		  (N leaf#leaf_n1)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (HVP hath#have_v)
				  (NP-OB1 (D a#a_adj)
					  (ADJP (ADJ fresh#fresh_adj) (CONJ and#and_conj1) (ADJ fair#fair_adj))
					  (CODE <font>)
					  (N bud#bud_n1)
					  (CODE <$$font>)
					  (RRC (VAG growing#grow_v)
					       (PP (RP out#out_adv)
						   (P betwixt#betwixt_prep)
						   (NP (NP (PRO it#it_pron))
						       (CONJP (CONJ and#and_conj1)
							      (NP (D the#the_adj) (N bark#bark_n1)))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,29.9))

( (IP-IMP (CONJ and#and_conj1)
	  (PP (NP-MSR (QP (ADV about#about_adv) (Q half#half_adj))
		      (D an#a_adj)
		      (N inch#inch_n1))
	      (P (P below#below_adv) (PUNC ,) (CONJ and#and_conj1) (P above#above_adv))
	      (NP (D the#the_adj) (CODE <font>) (N bud#bud_n1)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (VBI cut#cut_v)
	  (RP off#off_adv)
	  (NP-OB1 (D the#the_adj) (CODE <font>) (N branch#branch_n))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,29.10))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (NP-SBJ (PRO you#you_pron))
	  (MD will#will_v1)
	  (HV have#have_v)
	  (NP-OB1 (D a#a_adj)
		  (N piece#piece_n)
		  (PP (P of#of_prep)
		      (NP (PRO it#it_pron)))
		  (ADJP (NP-MSR (ADV about#about_adv) (D an#a_adj) (N inch#inch_n1))
			(ADJ long#long_adj1))
		  (RRC (VAG remaining#remain_v))
		  (PUNC ,)
		  (PP (P with#with_prep)
		      (IP-SMC (NP-SBJ (NP (D a#a_adj) (CODE <font>) (N bud#bud_n1))
				      (CODE <$$font>)
				      (CONJP (CONJ and#and_conj1)
					     (NP (D a#a_adj) (CODE <font>) (N leaf#leaf_n1))))
			      (CODE <$$font>)
			      (RP on#on_adv))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,29.11))

( (IP-MAT (NP-OB1 (D this#this_pron))
	  (NP-SBJ (PRO you#you_pron))
	  (MD must#must_v1)
	  (CODE <font>)
	  (VB cleave#cleave_v1)
	  (CODE <$$font>)
	  (PP (ADV just#just_adv)
	      (P through#through_prep)
	      (NP (D the#the_adj) (N midst#midst_n)))
	  (PUNC ,)
	  (PP (P so#so_adv)
	      (PP (P as#as_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N bud#bud_n1))
				  (CODE <$$font>)
				  (MD may#may_v1)
				  (BE be#be_v)
				  (PP (ADV directly#directly_adv)
				      (P in#in_prep)
				      (NP (D the#the_adj)
					  (N middle#middle_adj)
					  (PP (P of#of_prep)
					      (NP (D the#the_adj) (ONE one#one_adj) (N half#half_n)))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,29.12))

( (IP-IMP (CONJ and#and_conj1)
	  (ADVP-TMP (ADV then#then_adv))
	  (VBI snip#snip_v)
	  (RP off#off_adv)
	  (NP-OB1 (NP (D a#a_adj)
		      (N part#part_n1)
		      (PP (P of#of_prep)
			  (NP (D the#the_adj) (CODE <font>) (N leaf#leaf_n1))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (NP (D the#the_adj) (N whole#whole_adj))))
	  (IP-PPL (VAG leaving#leave_v1)
		  (NP-OB1 (D the#the_adj) (N stalk#stalk_n1)))
	  (PUNC :))
  (ID LANGF-1696-E3-H,29.13))

( (IP-IMP (CONJ and#and_conj1)
	  (IP-PPL (VAG holding#hold_v)
		  (NP-OB1 (PRO it#it_pron))
		  (PP (P by#by_prep)
		      (NP (D the#the_adj) (N remainder#remainder_n))))
	  (PUNC ,)
	  (VBI clap#clap_v1)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P to#to_prep)
	      (NP (D a#a_adj) (ADJ smooth#smooth_adj) (N place#place_n1)))
	  (PP (P on#on_prep)
	      (NP (D the#the_adj) (N stock#stock_n1)))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,29.14))

( (IP-IMP (IP-IMP-1 (CONJ and#and_conj1)
		    (PP (P with#with_prep)
			(NP (D a#a_adj) (CODE <P_30>) (N Pen-knife#penknife_n)))
		    (VBI score#score_v)
		    (RP out#out_adv)
		    (PUNC ,)
		    (PP (P on#on_prep)
			(NP (Q each#each_adj)
			    (N side#side_n1)
			    (PP (P of#of_prep)
				(NP (PRO it#it_pron)))))
		    (PUNC ,)
		    (NP-OB1 (QP (ADVR so#so_adv) (Q much#much_adj))
			    (PP (P of#of_prep)
				(NP (D the#the_adj) (N stock#stock_n1)))
			    (PP (P as#as_adv)
				(CP-CMP (WNP-2 0)
					(C 0)
					(IP-SUB (NP-OB1 *T*-2)
						(NP-SBJ (PRO it#it_pron))
						(VBP covers#cover_v1))))))
	  (PUNC ,)
	  (CONJP (CONJ or#or_conj1)
		 (IP-IMP=1 (ADVP (ADVR rather#rather_adv))
			   (NP-OB1 (ADJP (NP-MSR (D a#a_adj) (ADJ little#little_adj))
					 (ADJR broader#broad_adj1)))
			   (PUNC <paren>)
			   (PP-PRN (P because#because_adv)
				   (CP-ADV (C 0)
					   (IP-SUB (PP (P when#when_adv)
						       (CP-ADV (C 0)
							       (IP-SUB (IP-SUB-3 (NP-SBJ (D the#the_adj)
											 (CODE <font>)
											 (N bark#bark_n1)
											 (CODE <$$font>)
											 (CP-REL (WPP-4 (P on#on_prep)
													(WNP (WPRO which#which_adj)))
												 (C 0)
												 (IP-SUB (PP *T*-4)
													 (NP-SBJ (D the#the_adj) (CODE <font>) (N bud#bud_n1))
													 (CODE <$$font>)
													 (BEP is#be_v))))
										 (PUNC ,)
										 (BEP is#be_v)
										 (VAN taken#take_v)
										 (PP (RP off#off_adv)
										     (P from#from_prep)
										     (NP (PRO$ its#its_adj) (ADJ own#own_adj) (CODE <font>) (N wood#wood_n1))))
								       (CODE <$$font>)
								       (CONJP (CONJ and#and_conj1)
									      (IP-SUB=3 (VAN applyed#apply_v)
											(PP (P to#to_prep)
											    (NP (D the#the_adj) (N stock#stock_n1))))))))
						   (PUNC ,)
						   (NP-SBJ (PRO it#it_pron))
						   (MD will#will_v1)
						   (VB cover#cover_v1)
						   (NP-OB1 (D a#a_adj)
							   (ADJR wider#wide_adj)
							   (N space#space_n1)
							   (PP (P of#of_prep)
							       (NP (D the#the_adj) (N stock#stock_n1)))
							   (PP (P than#than_conj)
							       (CP-CMP (WNP-5 0)
								       (C 0)
								       (IP-SUB (NP-OB1 *T*-5)
									       (NP-SBJ (PRO it#it_pron))
									       (DOD did#do_v)
									       (VB *)
									       (ADVP-TMP (ADV before#before_adv)))))))))))
	  (PUNC ;)
	  (PUNC <$$paren>))
  (ID LANGF-1696-E3-H,30.15))

( (IP-IMP (PP (P after#after_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (HVP have#have_v)
			      (ADVP (ADV thus#thus_adv))
			      (VBN marked#mark_v)
			      (NP-OB1 (PRO$ your#your_pron) (N stock#stock_n1)))))
	  (PUNC ,)
	  (VBI with-draw#withdraw_v)
	  (NP-OB1 (D the#the_adj) (N Scion#scion_n))
	  (ADVP (ADV again#again_adv))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,30.16))

( (IP-IMP (CONJ &#and_conj1)
	  (VBI cut#cut_v)
	  (NP-OB1 (D the#the_adj) (CODE <font>) (N bark#bark_n1))
	  (CODE <$$font>)
	  (RP through#through_prep)
	  (ADVP-LOC (CP-FRL (WADVP-1 (WADV where#where_adv))
			    (C 0)
			    (IP-SUB (ADVP-LOC *T*-1)
				    (NP-SBJ (PRO you#you_pron))
				    (HVD had#have_v)
				    (VBN marked#mark_v)
				    (NP-OB1 (PRO it#it_pron)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,30.17))

( (IP-IMP (ADVP-TMP (ADV then#then_adv))
	  (VBI cut#cut_v)
	  (NP-OB1 (D the#the_adj) (CODE <font>) (N bark#bark_n1))
	  (ADVP (ADV cross#cross_adv) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (ADV straight#straight_adj))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-MSR (PP (P from#from_prep)
		      (NP (D the#the_adj)
			  (ADJ uppermost#uppermost_adv)
			  (N end#end_n)
			  (PP (P of#of_prep)
			      (NP (ONE one#one_adj) (CODE <font>) (N score#score_n)))))
		  (CODE <$$font>)
		  (PP (P to#to_prep)
		      (NP (D the#the_adj)
			  (ADJ upper#upper_adj)
			  (N end#end_n)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj) (CODE <font>) (OTHER other#other_adj))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,30.18))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI cut#cut_v)
	  (NP-OB1 (D the#the_adj) (CODE <font>) (N bark#bark_n1))
	  (CODE <$$font>)
	  (ADVP (ADV again#again_adv))
	  (CODE <font>)
	  (ADVP (ADVP (ADV cross#cross_adv) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (ADV straight#straight_adj))
		(CODE <$$font>)
		(CONJP *ICH*-1))
	  (PUNC ,)
	  (NP-MSR (PP (P from#from_prep)
		      (NP (ONE one#one_adj) (CODE <font>) (N score#score_n)))
		  (CODE <$$font>)
		  (PP (P to#to_prep)
		      (NP (D the#the_adj) (CODE <font>) (OTHER other#other_adj))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CONJP-1 (CONJ but#but_prep)
		   (ADVP (NEG not#not_adv)
			 (ADVR so#so_adv)
			 (ADV low#low_adv)
			 (PP (P as#as_adv)
			     (NP (D the#the_adj)
				 (ADJ lower#lower_adj)
				 (NS ends#end_n)
				 (PP (P of#of_prep)
				     (NP (D the#the_adj) (CODE <font>) (NS scores#score_n))))))
		   (CODE <$$font>)
		   (PP (P by#by_prep)
		       (NP (D a#a_adj)
			   (N quarter#quarter_n)
			   (PP (P of#of_prep)
			       (NP (D an#a_adj) (N inch#inch_n1))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,30.19))

( (IP-IMP (ADVP-TMP (ADV then#then_adv))
	  (VBI take#take_v)
	  (NP-OB1 (D the#the_adj)
		  (ADJ oblong#oblong_adj)
		  (ADJ square#square_adj)
		  (N piece#piece_n)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (N bark#bark_n1)))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP is#be_v)
				  (VAN cut#cut_v)
				  (PP (P on#on_prep)
				      (NP (Q every#every_adj) (N side#side_n1)))
				  (PP (ADV quite#quite_adv)
				      (P off#off_adv)
				      (NP (D the#the_adj) (N Stock#stock_n1))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,30.20))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI raise#raise_v1)
	  (RP up#up_adv1)
	  (NP-OB1 (D that#that_pron1)
		  (N part#part_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (N bark#bark_n1)
			  (CP-REL (WNP-1 0)
				  (C that#that_conj)
				  (IP-SUB (NP-SBJ *T*-1)
					  (VBP remains#remain_v)
					  (PP (P betwixt#betwixt_prep)
					      (NP (D the#the_adj) (N side#side_n1) (CODE <font>) (NS scores#score_n)))
					  (CODE <$$font>)
					  (PUNC ,)
					  (PP (P at#at_prep)
					      (NP (D the#the_adj)
						  (N bottom#bottom_n)
						  (PP (P of#of_prep)
						      (NP (D the#the_adj) (N work#work_n)))))
					  (PUNC ,)
					  (PP (P from#from_prep)
					      (NP (D the#the_adj) (CODE <font>) (N wood#wood_n1))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P till#till_prep)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP come#come_v)
			      (PP (P to#to_prep)
				  (NP (D the#the_adj)
				      (ADJ lower#lower_adj)
				      (NS ends#end_n)
				      (PP (P of#of_prep)
					  (NP (D the#the_adj) (N side#side_n1) (CODE <font>) (NS scores#score_n))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-H,30.21))

( (IP-IMP (VBI Take#take_v)
	  (ADVP-TMP (ADV then#then_adv))
	  (NP-OB1 (D a#a_adj)
		  (N Goose-quill#goose-quill_n)
		  (PUNC ,)
		  (RRC (VAN cut#cut_v)
		       (PP (P in#in_prep)
			   (NP (D the#the_adj)
			       (N fashion#fashion_n)
			       (PP (P of#of_prep)
				   (NP (D an#a_adj)
				       (CODE <font>)
				       (N Apple#apple_n)
				       (N Scoop#scoop_n1)
				       (CODE <$$font>)
				       (PUNC ,)
				       (CONJP (CONJ or#or_conj1)
					      (CODE <font>)
					      (NX (N Scraper#scraper_n)))))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,30.22))

( (IP-IMP (CONJ and#and_conj1)
	  (IP-PPL (HAG having#have_v)
		  (PP (P with#with_prep)
		      (NP (PRO$ your#your_pron) (N Nail#nail_n)))
		  (NP-MSR (D a#a_adj) (ADJ little#little_adj))
		  (VBN loosened#loosen_v)
		  (NP-OB1 (D the#the_adj)
			  (ADJ upper#upper_adj)
			  (N part#part_n1)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj)
				  (CODE <font>)
				  (N bark#bark_n1)
				  (CODE <$$font>)
				  (CP-REL (WNP-1 0)
					  (C that#that_conj)
					  (IP-SUB (NP-SBJ *T*-1)
						  (BEP is#be_v)
						  (PP (P on#on_prep)
						      (NP (D the#the_adj) (N Scion#scion_n)))))))))
	  (PUNC ,)
	  (VBI thrust#thrust_v)
	  (NP-OB1 (D the#the_adj)
		  (CODE <font>)
		  (N quill#quill_n1)
		  (CODE <$$font>)
		  (PP (P betwixt#betwixt_prep)
		      (NP (NP (D the#the_adj) (CODE <font>) (N bark#bark_n1))
			  (CODE <$$font>)
			  (CONJP (CONJ and#and_conj1)
				 (NP (D the#the_adj) (CODE <font>) (N wood#wood_n1))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (IP-PPL (VAG holding#hold_v)
		  (NP-OB1 (PRO it#it_pron))
		  (PP (ADJ close#close_adj)
		      (P to#to_prep)
		      (NP (D the#the_adj) (CODE <font>) (N wood#wood_n1))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CP-THT-PRN (C that#that_conj)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (MD may#may_v1)
			      (VB separate#separate_v)
			      (NP-OB1 (PRO them#them_pron))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,30.23))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI take#take_v)
	  (RP off#off_adv)
	  (PP (P with#with_prep)
	      (NP (D the#the_adj) (CODE <font>) (N bark#bark_n1)))
	  (CODE <$$font>)
	  (NP-OB1 (NP-MSR (D a#a_adj) (ADJ little#little_adj))
		  (CODE <font>)
		  (N wood#wood_n1)
		  (CODE <$$font>)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <P_31>)
			 (CODE <font>)
			 (NX (N root#root_n1)))
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (CODE <font>)
			  (N bud#bud_n1)
			  (CODE <$$font>)
			  (PP (P over#over_prep)
			      (PP (P against#against_prep)
				  (NP (PRO it#it_pron)))))))
	  (PUNC :))
  (ID LANGF-1696-E3-H,31.24))

( (IP-IMP (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP see#see_v)
			      (NP-OB1 (D a#a_adj)
				      (CODE <font>)
				      (N hole#hole_n)
				      (CODE <$$font>)
				      (PP (P on#on_prep)
					  (NP (D the#the_adj)
					      (N inside#inside_n1)
					      (PP (P over#over_prep)
						  (PP (P against#against_prep)
						      (NP (D the#the_adj) (CODE <font>) (N bud#bud_n1)))))))
			      (CODE <$$font>)
			      (PUNC ,)
			      (PP (P when#when_adv)
				  (CP-ADV (C 0)
					  (IP-SUB (NP-SBJ (PRO you#you_pron))
						  (HVP have#have_v)
						  (VBN taken#take_v)
						  (NP-OB1 (D the#the_adj) (N bark#bark_n1))
						  (RP off#off_adv))))
			      (PUNC ,)
			      (PUNC <paren>)
			      (CP-CAR (WNP-1 (WPRO which#which_adj))
				      (C 0)
				      (IP-SUB (NP-SBJ *T*-1)
					      (BEP is#be_v)
					      (ADVP (ADV seldom#seldom_adv)))))))
	  (PUNC <$$paren>)
	  (VBI cast#cast_v)
	  (NP-OB1 (PRO it#it_pron))
	  (ADVP-DIR (ADV away#away_adv))
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (Q little#little_adj) (N labour#labour_n))
			  (BEP is#be_v)
			  (VAN lost#lose_v1)))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,31.25))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI try#try_v)
	  (NP-OB1 (D+OTHER another#another_pron))
	  (PP (P till#till_prep)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP find#find_v)
			      (IP-SMC (NP-SBJ (PRO it#it_pron))
				      (NP-ADV (OTHER+N otherwise#otherwise_n))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,31.26))

( (IP-IMP (ADVP-TMP (ADV Then#then_adv))
	  (VBI put#put_v)
	  (RP in#in_adv)
	  (NP-OB1 (D the#the_adj)
		  (ADJ lower#lower_adj)
		  (N end#end_n)
		  (PP (P of#of_prep)
		      (NP (D that#that_pron1)
			  (CODE <font>)
			  (N Bark#bark_n1)
			  (CODE <$$font>)
			  (CONJP (CONJ or#or_conj1)
				 (CODE <font>)
				 (NX (N Scion#scion_n))))))
	  (CODE <$$font>)
	  (PP (P betwixt#betwixt_prep)
	      (NP (D the#the_adj)
		  (CODE <font>)
		  (N bark#bark_n1)
		  (CODE <$$font>)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BED was#be_v)
				  (VAN raised#raise_v1)
				  (PP (P on#on_prep)
				      (NP (NP (D the#the_adj) (N Stock#stock_n1))
					  (CONJP (CONJ and#and_conj1)
						 (NP (D the#the_adj) (N Wood#wood_n1)))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,31.27))

( (IP-IMP (CONJ and#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (VBI bind#bind_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P on#on_prep)
	      (NP (D the#the_adj) (N Stock#stock_n1)))
	  (ADVP (ADV gently#gently_adv)
		(CONJP *ICH*-2))
	  (PP (PP (P with#with_prep)
		  (CODE <font>)
		  (NP (NP (N Woollen-yarn#SEE_woollen_adj))
		      (CODE <$$font>)
		      (PUNC ,)
		      (CONJP (CONJ or#or_conj1)
			     (CODE <font>)
			     (NP (ADJ narrow#narrow_adj)
				 (NS shreds#shred_n)
				 (CODE <$$font>)
				 (PP (P of#of_prep)
				     (CODE <font>)
				     (NP (NP (N Linen-cloth#lincloth_n))
					 (CODE <$$font>)
					 (PUNC ,)
					 (CONJP (CONJ or#or_conj1)
						(CODE <font>)
						(NP (ADJ gentle#gentle_adj) (N Stuff#stuff_n1)))))))))
	      (CODE <$$font>)
	      (PUNC ,)
	      (CONJP (CONJ or#or_conj1)
		     (PP (P with#with_prep)
			 (CODE <font>)
			 (NP (NS Basses#bass_n2)
			     (CODE <$$font>)
			     (PUNC ,)
			     (CONJ or#or_conj1)
			     (CODE <font>)
			     (N Bast#bast_n1)
			     (CODE <$$font>)
			     (PUNC ,)
			     (CP-REL (WPP-1 (P of#of_prep)
					    (WNP (WPRO which#which_adj)))
				     (C 0)
				     (IP-SUB (PP *T*-1)
					     (NP-SBJ (D the#the_adj) (CODE <font>) (NPR Russia#NA) (NS Mats#mat_n1))
					     (CODE <$$font>)
					     (BEP are#be_v)
					     (VAN made#make_v1)))))))
	  (PUNC ,)
	  (CONJP-2 (CONJ but#but_prep)
		   (ADVP (ADVR so#so_adv)
			 (CP-DEG (C that#that_conj)
				 (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N Scion#scion_n))
					 (CODE <$$font>)
					 (MD may#may_v1)
					 (VB lie#lie_v1)
					 (PP (ADJ close#close_adj)
					     (P to#to_prep)
					     (NP (D the#the_adj)
						 (CODE <font>)
						 (N wood#wood_n1)
						 (CODE <$$font>)
						 (PP (P of#of_prep)
						     (NP (D the#the_adj)
							 (CODE <font>)
							 (N stock#stock_n1)
							 (CODE <$$font>)
							 (CP-REL (WNP-3 0)
								 (C that#that_conj)
								 (IP-SUB (NP-SBJ-4 *T*-3)
									 (BED was#be_v)
									 (VAN made#make_v1)
									 (IP-SMC (NP-SBJ *-4)
										 (ADJP-PRD (ADJ bare#bare_adj)))))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,31.28))

( (IP-IMP (CONJ and#and_conj1)
	  (HVI have#have_v)
	  (NP-OB1 (D a#a_adj) (ADJ special#special_adj) (N care#care_n1))
	  (CP-THT (C that#that_conj)
		  (IP-SUB (NP-SBJ (PRO you#you_pron))
			  (VBP hurt#hurt_v)
			  (NEG not#not_adv)
			  (NP-OB1 (D the#the_adj) (CODE <font>) (N bud#bud_n1))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-H,31.29))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 2#two_adj) (PUNC .))
  (ID LANGF-1696-E3-H,31.30))

( (IP-MAT (NP-SBJ-1 (EX There#there_adv))
	  (BEP are#be_v)
	  (NP-1 (Q some#some_pron)
		(OTHER other#other_adj)
		(NS ways#way_n1)
		(PP (P of#of_prep)
		    (CODE <font>)
		    (NP (N inoculating#inoculating_n))))
	  (CODE <$$font>)
	  (VAN used#use_v)
	  (PUNC ,)
	  (IP-PPL (VAG differing#differ_v)
		  (PP (FP only#only_adj)
		      (P in#in_prep)
		      (NP (D the#the_adj)
			  (N manner#manner_n)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj)
				  (N cut#cut_n2)
				  (PP (CONJ-2 both#NA)
				      (P in#in_prep)
				      (NP (D the#the_adj)
					  (CODE <font>)
					  (N bark#bark_n1)
					  (CODE <$$font>)
					  (PP (CONJ *ICH*-2)
					      (PP (P of#of_prep)
						  (NP (D the#the_adj) (N Stock#stock_n1)))
					      (PUNC ,)
					      (CONJP (CONJ and#and_conj1)
						     (PP (P of#of_prep)
							 (NP (D the#the_adj) (CODE <font>) (N Scion#scion_n))))))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-H,31.31))

( (IP-MAT (CONJ And#and_conj1)
	  (ADVP (ADV first#first_adj))
	  (PUNC ,)
	  (NP-SBJ (Q some#some_pron)
		  (RRC (VAG proceeding#proceed_v)
		       (PP (P in#in_prep)
			   (NP (Q all#all_adj) (OTHER other#other_adj) (NS things#thing_n1)))
		       (PP (P as#as_adv)
			   (CP-CMP (WNP-1 0)
				   (C 0)
				   (IP-SUB (NP-SBJ *T*-1)
					   (BEP is#be_v)
					   (ADVP-TMP (ADV before#before_adv))
					   (VAN directed#direct_v))))))
	  (PUNC ,)
	  (VBP cut#cut_v)
	  (NP-OB1 (D the#the_adj) (N Bark#bark_n1))
	  (PP (RP out#out_adv)
	      (P of#of_prep)
	      (NP (D the#the_adj)
		  (ADJ whole#whole_adj)
		  (N length#length_n)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (N side#side_n1) (CODE <font>) (NS scores#score_n)))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,31.32))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (VBP apply#apply_v)
	  (NP-OB1 (D the#the_adj) (CODE <font>) (N Scion#scion_n))
	  (CODE <$$font>)
	  (PP (P to#to_prep)
	      (NP (D the#the_adj) (ADJ disbarked#SEE_disbark_v2) (N place#place_n1)))
	  (PUNC .))
  (ID LANGF-1696-E3-H,31.33))

( (IP-MAT (IP-MAT-1 (LS Secondly#secondly_adv)
		    (PUNC ,)
		    (NP-SBJ (OTHERS Others#other_adj))
		    (VBP cut#cut_v)
		    (NP-OB1 (ONE one#one_adj) (N slit#slit_n) (FP only#only_adj))
		    (PUNC ,)
		    (PP (P down#down_prep)
			(NP (D the#the_adj)
			    (N bark#bark_n1)
			    (PP (P of#of_prep)
				(NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (NP-SBJ (D+OTHER another#another_pron))
			   (CODE <font>)
			   (PP (P cross#cross_prep)
			       (CODE <$$font>)
			       (NP (D the#the_adj)
				   (N top#top_n1)
				   (PP (P of#of_prep)
				       (NP (PRO it#it_pron)))))
			   (PUNC ,)
			   (ADJP-PRD (ADJ like#like_adj)
				     (NP (D a#a_adj) (ADJ great#great_adj) (N T#NA)))))
	  (PUNC :))
  (ID LANGF-1696-E3-H,31.34))

( (IP-MAT (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D this#this_pron))
			      (BEP is#be_v)
			      (DAN done#do_v))))
	  (PUNC ,)
	  (NP-SBJ (PRO they#they_pron))
	  (VBP prepare#prepare_v)
	  (NP-OB1 (D the#the_adj)
		  (CODE <P_32>)
		  (CODE <font>)
		  (N Scion#scion_n)
		  (CODE <$$font>)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NX (N bark#bark_n1))))
	  (CODE <$$font>)
	  (PP (P as#as_adv)
	      (IP-PPL (ADVP-TMP (ADV before#before_adv))
		      (VAN directed#direct_v)))
	  (PUNC ,)
	  (PUNC <paren>)
	  (IP-PPL (FP only#only_adj)
		  (VAG cutting#cut_v)
		  (NP-OB1 (PRO it#it_pron))
		  (ADJP-SPR (ADJ sharp_pointed#sharp-pointed_adj))
		  (PP (P at#at_prep)
		      (NP (D the#the_adj) (ADJ lower#lower_adj) (N end#end_n)))
		  (PP (P before#before_adv)
		      (CP-ADV (C 0)
			      (IP-SUB (NP-SBJ (PRO they#they_pron))
				      (VBP take#take_v)
				      (NP-OB1 (D the#the_adj) (CODE <font>) (N bud#bud_n1))
				      (CODE <$$font>)
				      (PP (P off#off_adv)
					  (NP (PRO$ its#its_adj) (CODE <font>) (N wood#wood_n1)))))))
	  (CODE <$$font>)
	  (PUNC <$$paren>))
  (ID LANGF-1696-E3-H,32.35))

( (IP-MAT (ADVP-TMP (ADV then#then_adv))
	  (NP-SBJ *con*)
	  (VBP raise#raise_v1)
	  (NP-OB1 (D the#the_adj)
		  (CODE <font>)
		  (N bark#bark_n1)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))
	  (CODE <$$font>)
	  (RP up#up_adv1)
	  (PP (P on#on_prep)
	      (NP (Q each#each_adj)
		  (N side#side_n1)
		  (NP-COM (D the#the_adj) (CODE <font>) (N slit#slit_n))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,32.36))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (VBP put#put_v)
	  (RP in#in_adv)
	  (NP-OB1 (D the#the_adj) (N Scion#scion_n))
	  (PUNC ,)
	  (IP-PPL (IP-PPL (VAG beginning#begin_v1)
			  (PP (P at#at_prep)
			      (NP (D the#the_adj) (N top#top_n1))))
		  (CONJP (CONJ and#and_conj1)
			 (IP-PPL (VAG sliding#slide_v)
				 (NP-OB1 (PRO it#it_pron))
				 (ADVP-DIR (ADV downward#downward_adv))
				 (ADVP (ADV gently#gently_adv)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,32.37))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (ADVP (ADV so#so_adv))
	  (VBP bind#bind_v)
	  (NP-OB1 (D the#the_adj) (N bark#bark_n1))
	  (ADVP (ADV gently#gently_adv))
	  (PP (P upon#upon_prep)
	      (NP (PRO it#it_pron)))
	  (PUNC .))
  (ID LANGF-1696-E3-H,32.38))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (D This#this_pron))
	  (BEP is#be_v)
	  (NP-PRD (D the#the_adj)
		  (ADJ common#common_adj)
		  (N way#way_n1)
		  (RRC (VAN used#use_v)
		       (PP (P among#among_prep)
			   (NP (NS Gardiners#gardener_n)))))
	  (PUNC .)
	  (CODE <$$font>))
  (ID LANGF-1696-E3-H,32.39))

( (IP-MAT (CODE <font>)
	  (LS Thirdly#thirdly_adv)
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (PRO You#you_pron))
	  (MD may#may_v1)
	  (VB make#make_v1)
	  (NP-OB1 (D the#the_adj) (CODE <font>) (N cross#cross_n) (N cut#cut_n2))
	  (CODE <$$font>)
	  (PP (P in#in_prep)
	      (NP (D the#the_adj)
		  (N middle#middle_adj)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (ADJ downright#downright_adv)
			  (CODE <font>)
			  (N score#score_n)
			  (CODE <$$font>)
			  (PP (P on#on_prep)
			      (NP (D the#the_adj) (N Stock#stock_n1)))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,32.40))

( (IP-IMP (CONJ and#and_conj1)
	  (IP-PPL (IP-PPL (VAG lifting#lift_v)
			  (RP up#up_adv1)
			  (NP-OB1 (D the#the_adj)
				  (NUM four#four_adj)
				  (NS corners#corner_n1)
				  (PP (P of#of_prep)
				      (NP (D the#the_adj) (CODE <font>) (N bark#bark_n1)))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (IP-SUB (VAG making#make_v1)
				 (IP-SMC (NP-SBJ (D the#the_adj) (N Scion#scion_n))
					 (ADJP-PRD (ADJ sharp#sharp_adj))
					 (PP (P at#at_prep)
					     (NP (Q both#both_pron) (NS ends#end_n)))))))
	  (PUNC ,)
	  (VBI put#put_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P under#under_prep)
	      (NP (D the#the_adj)
		  (N bark#bark_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (N Stock#stock_n1)))))
	  (PP (P at#at_prep)
	      (NP (Q both#both_pron) (NS ends#end_n)))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,32.41))

( (IP-IMP (CONJ and#and_conj1)
	  (ADVP-TMP (ADV then#then_adv))
	  (VBI bind#bind_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PUNC .))
  (ID LANGF-1696-E3-H,32.42))

( (IP-MAT (CONJ But#but_prep)
	  (PP (P in#in_prep)
	      (IP-PPL (DAG doing#do_v)
		      (NP-OB1 (D this#this_pron))))
	  (NP-SBJ-1 (EX there#there_adv))
	  (BEP is#be_v)
	  (NP-1 (N danger#danger_n)
		(PP (P of#of_prep)
		    (IP-PPL (VAG hurting#hurt_v)
			    (NP-OB1 (D the#the_adj) (N Scion#scion_n)))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,32.43))

( (IP-MAT (CODE <font>)
	  (LS Fourthly#NA)
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (NPR Mr.#NA) (CODE <font>) (NPR Rea#NA))
	  (CODE <$$font>)
	  (VBP commends#commend_v)
	  (NP-OB1 (NP (D the#the_adj)
		      (IP-PPL (VAG making#make_v1)
			      (NP-OB1 (D the#the_adj) (CODE <font>) (N cross#cross_n) (N cut#cut_n2))
			      (CODE <$$font>)
			      (PP (P at#at_prep)
				  (NP (D the#the_adj)
				      (ADJ lower#lower_adj)
				      (N end#end_n)
				      (PP (P of#of_prep)
					  (NP (D the#the_adj) (CODE <font>) (ADJ down_right#downright_adv) (N cut#cut_n2)))))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (IP-INF (IP-PPL (HAG having#have_v)
					 (VBN opened#open_v)
					 (NP-OB1 (D the#the_adj) (NS sides#side_n1)))
				 (PUNC ,)
				 (TO *)
				 (VB put#put_v)
				 (RP in#in_adv)
				 (NP-OB1 (D the#the_adj)
					 (N Scion#scion_n)
					 (RRC *ICH*-1))
				 (ADVP-DIR (ADV upward#upward_adv))
				 (PUNC ,)
				 (RRC-1 (BAG being#be_v)
					(VAN made#make_v1)
					(IP-SMC (NP-SBJ *)
						(ADJP-PRD (ADJ sharp#sharp_adj))
						(PP (P at#at_prep)
						    (NP (D the#the_adj) (ADJ upper#upper_adj) (N end#end_n) (FP only#only_adj))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,32.44))

( (FRAG (NP-MSR (QP (ADV Thus#thus_adv) (Q much#much_adj)))
	(IP-INF-PRP (TO to#to_prep)
		    (VB satisfie#satisfy_v)
		    (NP-OB1 (D the#the_adj)
			    (N curiosity#curiosity_n)
			    (PP (P of#of_prep)
				(NP (SUCH such#such_adj)
				    (PP (P as#as_adv)
					(CP-CMP (WNP-1 0)
						(C 0)
						(IP-SUB (NP-SBJ *T*-1)
							(HVP have#have_v)
							(NP-OB1 (D a#a_adj) (N mind#mind_n1))
							(IP-INF (TO to#to_prep)
								(VB make#make_v1)
								(NP-OB1 (N tryal#trial_n1)
									(PP (P of#of_prep)
									    (NP (Q every#every_adj) (N way#way_n1))))))))))))
	(PUNC ;))
  (ID LANGF-1696-E3-H,32.45))

( (IP-MAT (CONJ but#but_prep)
	  (NP-1 (D the#the_adj)
		(ADJ first#first_adj)
		(CP-REL (WNP-2 0)
			(C that#that_conj)
			(IP-SUB (NP-OB1 *T*-2)
				(NP-SBJ (PRO I#i_pron))
				(HVP have#have_v)
				(VBN described#describe_v)
				(PP (P at#at_prep)
				    (ADJP (ADJ large#large_adj))))))
	  (PUNC ,)
	  (NP-SBJ (PRO I#i_pron))
	  (VBP take#take_v)
	  (IP-INF (NP-SBJ *ICH*-1)
		  (TO to#to_prep)
		  (BE be#be_v)
		  (NP-PRD (D the#the_adj) (ADJS best#best_adj)))
	  (PUNC .))
  (ID LANGF-1696-E3-H,32.46))

( (CODE <P_33>))

( (CODE <heading>))

( (NP (N CHAP.#chapter_n) (NUM V#five_v) (PUNC .))
  (ID LANGF-1696-E3-H,33.49))

( (NP (NS OBSERVATIONS#observation_n)
      (PP (P TOUCHING#touching_prep)
	  (NP (N INOCULATING#inoculating_n)))
      (PUNC .))
  (ID LANGF-1696-E3-H,33.50))

( (CODE <$$heading>))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (ONE 1#one_adj) (PUNC .))
  (ID LANGF-1696-E3-H,33.52))

( (IP-IMP (PP (P Lest#lest_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (NP-SBJ (ONE one#one_adj) (CODE <font>) (N bud#bud_n1))
				      (CODE <$$font>)
				      (VBP fail#fail_v))
			      (PUNC ,)
			      (CONJP (CONJ or#or_conj1)
				     (IP-SUB (NP-SBJ (Q any#any_adj) (N mischance#mischance_n))
					     (VBP break#break_v)
					     (NP-OB1 (PRO it#it_pron)))))))
	  (PUNC ,)
	  (VBI put#put_v)
	  (CODE <font>)
	  (NP-OB1 (NUM two#two_adj))
	  (CODE <$$font>)
	  (PP (PP (P in#in_prep)
		  (NP (Q every#every_adj) (CODE <font>) (N Stock#stock_n1)))
	      (CODE <$$font>)
	      (PUNC ,)
	      (CONJP (CONJ but#but_prep)
		     (PP (NEG not#not_adv)
			 (ADV directly#directly_adv)
			 (CODE <font>)
			 (P under#under_prep)
			 (CODE <$$font>)
			 (NP (ONE one#one_adj) (D+OTHER another#another_pron))
			 (PUNC ,)
			 (PP (P on#on_prep)
			     (NP (D the#the_adj)
				 (ADJ same#same_adj)
				 (N side#side_n1)
				 (PP (P of#of_prep)
				     (NP (D the#the_adj) (CODE <font>) (N stock#stock_n1))))))))
	  (CODE <$$font>)
	  (PUNC :))
  (ID LANGF-1696-E3-H,33.53))

( (IP-MAT (NP-SBJ (D The#the_adj)
		  (CODE <font>)
		  (N branch#branch_n)
		  (CODE <$$font>)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NX (N shoot#shoot_n1)))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CP-REL (WNP-1 0)
			  (C 0)
			  (IP-SUB (NP-SBJ (PRO you#you_pron))
				  (VBP cut#cut_v)
				  (NP-OB1 (ONE one#one_adj) (CODE <font>) (N Scion#scion_n))
				  (CODE <$$font>)
				  (PP (P off#off_adv)
				      (NP *T*-1)))))
	  (PUNC ,)
	  (MD may#may_v1)
	  (VB yield#yield_v)
	  (NP-OB2 (PRO you#you_pron))
	  (NP-OB1 (ADJ several#several_adj))
	  (PUNC .))
  (ID LANGF-1696-E3-H,33.54))

( (IP-IMP (IP-IMP-1 (PP (NP-MSR (ADV About#about_adv) (D a#a_adj) (CODE <font>) (N month#month_n1))
			(CODE <$$font>)
			(P after#after_adv)
			(NP (D the#the_adj) (CODE <font>) (N inoculating#inoculating_n)))
		    (CODE <$$font>)
		    (PUNC ,)
		    (IP-IMP-PRN=1 (CONJ or#or_conj1)
				  (ADVP-TMP (ADVR sooner#soon_adv))
				  (PUNC ,)
				  (PP (P if#if_conj)
				      (CP-ADV (C 0)
					      (IP-SUB (NP-SBJ (PRO you#you_pron))
						      (VBP perceive#perceive_v)
						      (IP-INF (NP-SBJ (D the#the_adj) (CODE <font>) (N bark#bark_n1))
							      (CODE <$$font>)
							      (TO *)
							      (VB swell#swell_v)
							      (ADVP-LOC (CP-FRL (WADVP-2 (WADV where#where_adv))
										(C 0)
										(IP-SUB (ADVP-LOC *T*-2)
											(NP-SBJ (D the#the_adj) (N binding#binding_n))
											(BEP is#be_v)))))))))
		    (PUNC ,)
		    (VBI cut#cut_v)
		    (RP off#off_adv)
		    (NP-OB1 (D the#the_adj) (N binding#binding_n)))
	  (PUNC .)
	  (CONJP (IP-MAT (IP-MAT-3 (PP (P If#if_conj)
				       (CP-ADV (C 0)
					       (IP-SUB (NP-SBJ (PRO it#it_pron))
						       (VBP grow#grow_v))))
				   (NP-SBJ (PRO it#it_pron))
				   (MD will#will_v1)
				   (VB fix#fix_v)
				   (PP (P to#to_prep)
				       (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))
			 (CODE <$$font>)
			 (PUNC ,)
			 (CONJP (IP-MAT=3 (VB keep#keep_v)
					  (NP-OB1 (PRO$ its#its_adj) (N colour#colour_n1))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,33.55))

( (IP-MAT (IP-MAT-1 (CONJ and#and_conj1)
		    (NP-SBJ (D that#that_pron1)
			    (N part#part_n1)
			    (PP (P of#of_prep)
				(NP (D the#the_adj)
				    (CODE <font>)
				    (N leaf#leaf_n1)
				    (CODE <$$font>)
				    (CONJP (CONJ and#and_conj1)
					   (CODE <font>)
					   (NX (N stalk#stalk_n1)))
				    (CODE <$$font>)
				    (CP-REL (WNP-2 0)
					    (C that#that_conj)
					    (IP-SUB (NP-SBJ *T*-2)
						    (BED was#be_v)
						    (VAN left#leave_v1))))))
		    (MD will#will_v1)
		    (VB drop#drop_v)
		    (RP off#off_adv))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (NP-SBJ (D the#the_adj) (CODE <font>) (N bud#bud_n1))
			   (CODE <$$font>)
			   (VB appear#appear_v)
			   (ADJP-PRD (ADJ fair#fair_adj))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,33.56))

( (IP-IMP (IP-IMP (IP-IMP-1 (ADVP-TMP (ADV then#then_adv))
			    (NP-TMP (Q+N sometime#sometime_adv)
				    (PP (P before#before_adv)
					(NP (D the#the_adj) (ADJS next#next_adj) (N spring#spring_n1))))
			    (VBI cut#cut_v)
			    (RP off#off_adv)
			    (NP-OB1 (D the#the_adj)
				    (CODE <font>)
				    (N top#top_n1)
				    (CODE <$$font>)
				    (PP (P of#of_prep)
					(NP (D the#the_adj) (CODE <font>) (N stock#stock_n1))))
			    (CODE <$$font>)
			    (PP (NP-MSR (NP-POS (D a#a_adj) (N$ hands#hand_n))
					(N breadth#breadth_n))
				(P above#above_adv)
				(NP (D the#the_adj)
				    (N place#place_n1)
				    (CP-REL (WNP-2 0)
					    (C 0)
					    (IP-SUB (NP-SBJ (PRO it#it_pron))
						    (BED was#be_v)
						    (CODE <font>)
						    (VAN inoculated#inoculate_v)
						    (CODE <$$font>)
						    (PP (P at#at_prep)
							(NP *T*-2)))))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (IP-IMP=1 (NP-OB1 (Q all#all_adj)
					   (D the#the_adj)
					   (CODE <font>)
					   (NS side-branches#SEE_side_n1)
					   (CODE <$$font>)
					   (PUNC ,)
					   (CP-REL (WNP-3 0)
						   (C that#that_conj)
						   (IP-SUB (NP-SBJ *T*-3)
							   (VBP grow#grow_v)
							   (ADVP-LOC (Q any#any_adj)
								     (WADV where#where_adv)
								     (PP (P upon#upon_prep)
									 (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))))))))
	  (CODE <$$font>)
	  (PUNC ;)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT (PP (P at#at_prep)
			     (NP (N Spring#spring_n1)))
			 (NP-SBJ (D the#the_adj) (CODE <font>) (N bud#bud_n1))
			 (CODE <$$font>)
			 (MD will#will_v1)
			 (VB put#put_v)
			 (ADVP (ADV forth#forth_adv))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,33.57))

( (IP-IMP (CONJ and#and_conj1)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (Q any#any_adj)
				      (OTHER other#other_adj)
				      (CODE <font>)
				      (NS sprouts#sprout_n2)
				      (CODE <$$font>)
				      (PP (P of#of_prep)
					  (CODE <font>)
					  (NP (NS buds#bud_n1))))
			      (CODE <$$font>)
			      (VBP appear#appear_v)
			      (PP (P on#on_prep)
				  (NP (D the#the_adj) (CODE <font>) (N stock#stock_n1))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (VBI cut#cut_v)
	  (NP-OB1 (PRO them#them_pron))
	  (RP off#off_adv)
	  (PUNC .))
  (ID LANGF-1696-E3-H,33.58))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (NP-SBJ (D the#the_adj) (ADJ first#first_adj) (CODE <font>) (N inoculation#inoculation_n))
				      (CODE <$$font>)
				      (VBP fail#fail_v))
			      (PUNC ,)
			      (CONJP (CONJ or#or_conj1)
				     (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (NS buds#bud_n1))
					     (CODE <$$font>)
					     (VBP die#die_v1))))))
	  (PUNC ,)
	  (NP-SBJ (D the#the_adj) (CODE <font>) (NS stocks#stock_n1))
	  (CODE <$$font>)
	  (MD may#may_v1)
	  (BE be#be_v)
	  (CODE <font>)
	  (VAN inoculated#inoculate_v)
	  (CODE <$$font>)
	  (ADVP (ADV again#again_adv))
	  (NP-TMP (ADJS next#next_adj) (N Summer#summer_n1))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,33.59))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P of#of_prep)
	      (NP (SUCH such#such_adj)
		  (PP (P as#as_adv)
		      (CP-CMP (WNP-1 0)
			      (C 0)
			      (IP-SUB (NP-SBJ *T*-1)
				      (BEP are#be_v)
				      (CODE <font>)
				      (VAN inoculated#inoculate_v)
				      (CODE <$$font>)
				      (CODE <P_34>)
				      (ADVP-TMP (ADV timely#timely_adv)
						(PP (P in#in_prep)
						    (NP (D the#the_adj) (N year#year_n)))))))))
	  (PUNC ,)
	  (NP-SBJ-2 (PRO it#it_pron))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (NP-TMP (Q+NS sometimes#sometimes_adv))
	  (VAN seen#see_v)
	  (CP-QUE-SUB-2 (WQ whether#whether_pron)
			(C 0)
			(IP-SUB (IP-SUB-3 (NP-SBJ (PRO they#they_pron))
					  (VBP grow#grow_v))
				(CONJP (CONJ or#or_conj1)
				       (IP-SUB=3 (NEG not#not_adv)))))
	  (PUNC ,)
	  (NP-TMP (N time#time_n)
		  (ADJP (ADJR enough#enough_adj))
		  (IP-INF (TO to#to_prep)
			  (CODE <font>)
			  (VB inoculate#inoculate_v)
			  (CODE <$$font>)
			  (NP-OB1 (PRO them#them_pron))
			  (ADVP (ADV again#again_adv))
			  (NP-TMP (D the#the_adj) (ADJ same#same_adj) (N year#year_n))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,34.60))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Apricocks#apricot_n))
	  (CODE <$$font>)
	  (MD will#will_v1)
	  (HV have#have_v)
	  (CODE <font>)
	  (NP-OB1 (NS buds#bud_n1)
		  (CODE <$$font>)
		  (RRC (ADVP-TMP (ADVR sooner#soon_adv)
				 (PP *ICH*-1))
		       (ADJP-PRD (ADJ ready#ready_adj))
		       (PP-1 (P than#than_conj)
			     (NP (OTHER other#other_adj) (N fruit#fruit_n)))))
	  (PUNC ;)
	  (PP (P so#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (IP-SUB-2 (NP-SBJ (PRO you#you_pron))
					(MD may#may_v1)
					(VB begin#begin_v1)
					(PP (P with#with_prep)
					    (NP (PRO them#them_pron))))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB=2 (VB follow#follow_v)
					       (PP (P with#with_prep)
						   (NP (OTHER other#other_adj) (NS kinds#kind_n))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,34.61))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 2#two_adj) (PUNC .))
  (ID LANGF-1696-E3-H,34.62))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Stocks#stock_n1)
		  (CODE <$$font>)
		  (RRC (VAN raised#raise_v1)
		       (PP (P of#of_prep)
			   (CODE <font>)
			   (NP (NS Peach-stones#SEE_peach_n1)))))
	  (CODE <$$font>)
	  (BEP are#be_v)
	  (ADVP (ADV commonly#commonly_adv))
	  (ADJP-PRD (ADJ big#big_adj)
		    (ADVP (ADVR enough#enough_adj))
		    (IP-INF-DEG (TO to#to_prep)
				(BE be#be_v)
				(CODE <font>)
				(VAN inoculated#inoculate_v)
				(CODE <$$font>)
				(NP-TMP (NP-TMP (D the#the_adj) (CODE <font>) (ADJ second#second_adj) (CODE <$$font>) (N Summer#summer_n1))
					(PUNC ,)
					(CONJP (NP-TMP (Q+NS sometimes#sometimes_adv))
					       (NP-TMP (D the#the_adj) (CODE <font>) (ADJ first#first_adj)))
					(CODE <$$font>)
					(PP (P after#after_adv)
					    (CP-ADV (C 0)
						    (IP-SUB (NP-SBJ (PRO they#they_pron))
							    (BEP are#be_v)
							    (VAN set#set_v1)))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,34.63))

( (IP-MAT (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (NP (PRO they#they_pron))
				      (PUNC ,)
				      (CONJP (CONJ or#or_conj1)
					     (NP (Q any#any_adj) (OTHER other#other_adj) (CODE <font>) (NS Stocks#stock_n1))))
			      (CODE <$$font>)
			      (BEP are#be_v)
			      (NP-PRD (NP (NP (D an#a_adj) (CODE <font>) (N inch#inch_n1))
					  (CODE <$$font>)
					  (CONJP (CONJ and#and_conj1)
						 (NP (NUM half#half_adj))))
				      (CONJP *ICH*-1)
				      (PP (P in#in_prep)
					  (NP (N compass#compass_n1)))
				      (PUNC ,)
				      (CONJP-1 (CONJ or#or_conj1)
					       (PP (ADV+P thereabouts#thereabouts_adv)))))))
	  (PUNC ,)
	  (NP-SBJ (PRO they#they_pron))
	  (BEP are#be_v)
	  (ADJP-PRD (ADJ big#big_adj)
		    (ADVP (ADVR enough#enough_adj))
		    (IP-INF-DEG (TO to#to_prep) (BE be#be_v) (CODE <font>) (VAN inoculated#inoculate_v)))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-H,34.64))

( (IP-MAT (NP-SBJ (D Those#those_pron)
		  (CP-REL (WNP-1 0)
			  (C 0)
			  (IP-SUB (NP-OB1 *T*-1)
				  (NP-SBJ (PRO you#you_pron))
				  (VBP intend#intend_v)
				  (PP (P for#for_prep)
				      (CODE <font>)
				      (NP (N Wall#wall_n1) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (NS Dwarf-trees#cNA))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (BEP are#be_v)
	  (IP-INF (IP-INF-2 (TO to#to_prep)
			    (IP-INF (BE be#be_v))
			    (CODE <font>)
			    (VAN inoculated#inoculate_v)
			    (CODE <$$font>)
			    (PP (P within#within_adv)
				(NP (D a#a_adj)
				    (CODE <font>)
				    (N handful#handful_n)
				    (CODE <$$font>)
				    (PP (P of#of_prep)
					(NP (D the#the_adj) (N ground#ground_n))))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (IP-INF=2 (NEG not#not_adv)
				   (VAN Pruned#prune_v2)
				   (PP (P at#at_prep)
				       (NP (Q all#all_adj)))
				   (PP (P till#till_prep)
				       (CP-ADV (C 0)
					       (IP-SUB (NP-SBJ (PRO you#you_pron))
						       (VBP remove#remove_v)
						       (NP-OB1 (PRO them#them_pron))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,34.65))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP-TMP (ADV then#then_adv))
	  (NP-SBJ (PRO you#you_pron))
	  (MD will#will_v1)
	  (ADVP (ADVR better#better_adj))
	  (VB see#see_v)
	  (CP-QUE-SUB (WNP-1 (WPRO what@#what_pron))
		      (C 0)
		      (IP-SUB (NP-SBJ *T*-1)
			      (BEP @'s#be_v)
			      (ADJP-PRD (ADJ necessary#necessary_adj)
					(IP-INF (TO to#to_prep) (BE be#be_v) (VAN cut#cut_v) (RP off#off_adv)))))
	  (PUNC :))
  (ID LANGF-1696-E3-H,34.66))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-OB1 (D these#these_pron))
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB remove#remove_v)
	  (PP (P after#after_adv)
	      (CODE <font>)
	      (NP (NP-MSR (NUMP (ONE one#one_adj)
				(CONJP *ICH*-1))
			  (CODE <$$font>)
			  (N$ years#year_n))
		  (N growth#growth_n1)
		  (PUNC ,)
		  (CONJP-1 (CONJ or#or_conj1)
			   (CODE <font>)
			   (NP (NUM two#two_adj)))))
	  (CODE <$$font>)
	  (PP (P with#with_prep)
	      (NP (QR more#more_adj) (N safety#safety_n)))
	  (PUNC .))
  (ID LANGF-1696-E3-H,34.67))

( (IP-MAT (IP-MAT-1 (PP (P If#if_conj)
			(CP-ADV (C 0)
				(IP-SUB (NP-SBJ (PRO you#you_pron))
					(CODE <font>)
					(VBP inoculate#inoculate_v)
					(CODE <$$font>)
					(NP-OB1 (Q any#any_adj)
						(CODE <font>)
						(NS Plums#plum_n)
						(CODE <$$font>)
						(PUNC ,)
						(CODE <font>)
						(CONJP (NX (NS Cherries#cherry_n)))
						(CODE <$$font>)
						(PUNC ,)
						(CODE <font>)
						(CONJP (NX (NS Pears#pear_n)))
						(CODE <$$font>)
						(CONJP (CONJ or#or_conj1)
						       (NX (OTHER other#other_adj) (CODE <font>) (N Fruit#fruit_n)))
						(CODE <$$font>)
						(PUNC ,)
						(CP-REL (WNP-2 0)
							(C that#that_conj)
							(IP-SUB (NP-OB1 *T*-2)
								(NP-SBJ (PRO you#you_pron))
								(VBP intend#intend_v)
								(PP (P for#for_prep)
								    (NP (NP (D an#a_adj) (N Orchard#orchard_n))
									(PUNC ,)
									(CONJP (CONJ or#or_conj1)
									       (NP (OTHER other#other_adj) (N place#place_n1)))
									(PUNC ,)
									(PP (P for#for_prep)
									    (NP (ADJ tall#tall_adj) (NS standards#standard_n)))))))))))
		    (PUNC ,)
		    (NP-SBJ (PRO you#you_pron))
		    (MD may#may_v1)
		    (DO do#do_v)
		    (NP-OB1 (PRO it#it_pron))
		    (PP (ADVR higher#high_adv)
			(P on#on_prep)
			(NP (D the#the_adj) (CODE <font>) (NS stocks#stock_n1))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (VB Prune#prune_v2)
			   (NP-OB1 (D these#these_pron))
			   (PP (RP up#up_adv1)
			       (P in#in_prep)
			       (NP (D the#the_adj) (CODE <font>) (N Nursery#nursery_n)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (VB let#let_v1)
			   (IP-INF (NP-SBJ (PRO them#them_pron))
				   (VB grow#grow_v)
				   (ADVP-LOC (ADV there#there_adv))
				   (NP-MSR (NUMP (NUM three#three_adj) (CONJ or#or_conj1) (NUM four#four_adj))
					   (NS years#year_n))
				   (PUNC <paren>)
				   (IP-PPL (VAG according#accord_v)
					   (PP (P as#as_adv)
					       (CP-ADV (WADVP-3 0)
						       (C 0)
						       (IP-SUB (ADVP *T*-3)
							       (NP-SBJ (PRO they#they_pron))
							       (VBP grow#grow_v)
							       (PP (P in#in_prep)
								   (NP (N height#height_n)))))))
				   (PUNC <$$paren>)
				   (PP (P before#before_adv)
				       (CP-ADV (C 0)
					       (IP-SUB (NP-SBJ (PRO they#they_pron))
						       (BEP be#be_v)
						       (VAN removed#remove_v)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,34.68))

( (CODE <P_35>))

( (IP-MAT (PP (P After#after_adv)
	      (CP-ADV (C 0)
		      (CODE <font>)
		      (IP-SUB (NP-SBJ (NS Stocks#stock_n1)
				      (CODE <$$font>)
				      (CP-REL (WNP-1 0)
					      (C that#that_conj)
					      (IP-SUB (NP-SBJ *T*-1)
						      (BEP are#be_v)
						      (CODE <font>)
						      (VAN inoculated#inoculate_v))))
			      (CODE <$$font>)
			      (HVP have#have_v)
			      (VBN made#make_v1)
			      (CODE <font>)
			      (NP-OB1 (NP-MSR (NUMP (ONE one#one_adj) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NUM two#two_adj))
					      (CODE <$$font>)
					      (NS years#year_n))
				      (N growth#growth_n1)))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD must#must_v1)
	  (VB cut#cut_v)
	  (RP off#off_adv)
	  (NP-OB1 (D the#the_adj)
		  (N head#head_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (CODE <font>)
			  (N stock#stock_n1)
			  (CODE <$$font>)
			  (PUNC ,)
			  (CP-REL (WNP-2 0)
				  (C that#that_conj)
				  (IP-SUB (NP-SBJ *T*-2)
					  (VBD remain'd#remain_v)
					  (PP (P above#above_adv)
					      (NP (D the#the_adj) (CODE <font>) (N bud#bud_n1)))
					  (CODE <$$font>)
					  (PP (P at#at_prep)
					      (NP (PRO$ your#your_pron)
						  (IP-PPL (ADVP-TMP (ADV first#first_adj))
							  (VAG cutting#cut_v)
							  (NP-OB1 (PRO it#it_pron))))))))))
	  (PUNC :))
  (ID LANGF-1696-E3-H,35.70))

( (IP-IMP (VBI Cut#cut_v)
	  (NP-OB1 (PRO it#it_pron))
	  (ADJP-LOC (ADJ close#close_adj)
		    (PP (P to#to_prep)
			(NP (D the#the_adj) (ADJ new#new_adj) (N branch#branch_n))))
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (PRO it#it_pron))
			  (MD may#may_v1)
			  (VB grow#grow_v)
			  (PP (P over#over_prep)
			      (NP (D the#the_adj) (N cut#cut_n2)))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,35.71))

( (IP-IMP (VBI let#let_v1)
	  (IP-INF-1 (NP-SBJ (PRO it#it_pron))
		    (BE be#be_v)
		    (VAN cut#cut_v)
		    (ADJP-SPR (NP-MSR (D a#a_adj) (ADJ little#little_adj))
			      (ADJ slope#slope_adj))
		    (PUNC ,)
		    (IP-INF-PRN=1 (CONJ and#and_conj1) (CODE <font>) (VAN clay'd#clay_v) (CODE <$$font>) (RP over#over_adv))
		    (PUNC ,)
		    (PP (P if#if_conj)
			(CP-ADV (C 0)
				(IP-SUB (NP-SBJ (PRO you#you_pron))
					(VBP desire#desire_v)
					(CP-THT (C 0)
						(IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N branch#branch_n))
							(CODE <$$font>)
							(MD should#shall_v)
							(ADVP (ADV quickly#quickly_adv))
							(VB cover#cover_v1)
							(NP-OB1 (PRO it#it_pron))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,35.72))

( (NP-ADV (CONJ and#and_conj1)
	  (ADVP-TMP (D the#the_adj)
		    (ADVR sooner#soon_adv)
		    (CP-CMP (WADVP-1 0)
			    (C 0)
			    (IP-SUB (ADVP-TMP *T*-1)
				    (NP-SBJ (PRO it#it_pron))
				    (DOP doth#do_v)
				    (VB *))))
	  (ADJP (D the#the_adj) (ADJR better#better_adj))
	  (PUNC .))
  (ID LANGF-1696-E3-H,35.73))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 3#three_adj) (PUNC .))
  (ID LANGF-1696-E3-H,35.74))

( (IP-MAT (NP-SBJ (N Care#care_n1))
	  (MD must#must_v1)
	  (BE be#be_v)
	  (HAN had#have_v)
	  (PP (P in#in_prep)
	      (IP-PPL (VAG choosing#choose_v)
		      (CODE <font>)
		      (NP-OB1 (NS branches#branch_n)
			      (CODE <$$font>)
			      (PUNC ,)
			      (CONJ or#or_conj1)
			      (CODE <font>)
			      (NS shoots#shoot_n1)
			      (CODE <$$font>)
			      (PUNC ,)
			      (CP-REL (WPP-1 (P from#from_prep)
					     (WNP (WPRO which#which_adj)))
				      (C 0)
				      (IP-SUB (NP-SBJ (PRO you#you_pron))
					      (BEP are#be_v)
					      (IP-INF (PP *T*-1)
						      (TO to#to_prep)
						      (HV have#have_v)
						      (NP-OB1 (PRO$ your#your_pron) (CODE <font>) (NS buds#bud_n1)))))
			      (CODE <$$font>)
			      (PUNC ,)
			      (CP-REL (WNP-2 0)
				      (C that#that_conj)
				      (IP-SUB (NP-SBJ *T*-2)
					      (BEP are#be_v)
					      (PP (P of#of_prep)
						  (NP (ADJ strong#strong_adj) (N growth#growth_n1)))
					      (PUNC ,)
					      (IP-ABS (NP-SBJ (D the#the_adj) (N Bark#bark_n1))
						      (ADJP-PRD (ADJP (ADJ firm#firm_adj))
								(PUNC ,)
								(CONJP (CONJ and#and_conj1)
								       (ADJP (NEG not#not_adv) (ADJ spungy#spongy_adj))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,35.75))

( (IP-IMP (IP-IMP (IP-IMP (VBI suffer#suffer_v)
			  (IP-INF (NP-SBJ (PRO them#them_pron))
				  (TO to#to_prep)
				  (VB fade#fade_v1)
				  (NP-MSR (QP (ADVR as#as_adv) (Q little#little_adj))
					  (PP (P as#as_adv)
					      (CP-CMP (WNP-1 0)
						      (C 0)
						      (IP-SUB (NP-MSR *T*-1)
							      (NP-SBJ *exp*)
							      (MD may#may_v1)
							      (BE be#be_v)
							      (PUNC ,)
							      (PP (P before#before_adv)
								  (CP-ADV (C 0)
									  (IP-SUB (NP-SBJ (PRO you#you_pron))
										  (VBP use#use_v)
										  (NP-OB1 (PRO them#them_pron)))))))))))
		  (PUNC ;)
		  (CONJP (CONJ and#and_conj1)
			 (IP-IMP (PP (P if#if_conj)
				     (CP-ADV (C 0)
					     (IP-SUB (NP-SBJ (D the#the_adj)
							     (N fruit#fruit_n)
							     (CP-REL (WNP-2 0)
								     (C 0)
								     (IP-SUB (NP-SBJ (PRO you#you_pron))
									     (VBP design#design_v)
									     (IP-INF (NP-OB1 *T*-2)
										     (TO to#to_prep)
										     (VB raise#raise_v1)))))
						     (PUNC ,)
						     (BEP be#be_v)
						     (PP (P at#at_prep)
							 (NP (SUCH such#such_adj)
							     (D a#a_adj)
							     (N distance#distance_n)
							     (CP-DEG (C that#that_conj)
								     (IP-SUB (NP-SBJ (PRO you#you_pron))
									     (MD can@#can_v1)
									     (NEG @not#not_adv)
									     (HV have#have_v)
									     (CODE <font>)
									     (NP-OB1 (NS buds#bud_n1)
										     (CODE <$$font>)
										     (CP-EOP (WNP-3 0)
											     (IP-INF (NP-OB1 *T*-3)
												     (TO to#to_prep)
												     (CODE <font>)
												     (VB inoculate#inoculate_v)
												     (CODE <$$font>)
												     (NP-TMP (D the#the_adj)
													     (ADJ same#same_adj)
													     (N day#day_n)
													     (CP-REL (WNP-4 0)
														     (C 0)
														     (IP-SUB (NP-TMP *T*-4)
															     (NP-SBJ (PRO they#they_pron))
															     (BEP are#be_v)
															     (VAN cut#cut_v))))))))))))))
				 (PUNC ,)
				 (VBI put#put_v)
				 (NP-OB1 (PRO them#them_pron))
				 (PP (P in#in_prep)
				     (NP (ADJ wet#wet_adj)
					 (CODE <font>)
					 (N Moss#moss_n1)
					 (CODE <$$font>)
					 (PUNC ,)
					 (CONJP (CONJ or#or_conj1)
						(CODE <font>)
						(NX (N Grass#grass_n1)
						    (CODE <$$font>)
						    (PP (P in#in_prep)
							(NP (D a#a_adj) (N Box#box_n2))))))))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT (ADVP (ADV so#so_adv))
			 (NP-SBJ (PRO they#they_pron))
			 (MD will#will_v1)
			 (VB keep#keep_v)
			 (NP-MSR (NP (D a#a_adj) (N day#day_n))
				 (CONJP (CONJ and#and_conj1)
					(NP (D a#a_adj) (N night#night_n))))
			 (ADVP (ADV very#very_adj) (ADV well#well_adv))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,35.76))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Nectarines#nectarine_n1) (PUNC ,) (NS Peaches#peach_n1) (CODE <$$font>) (PUNC ,) (CONJ and#and_conj1) (CODE <font>) (NS Apricocks#apricot_n))
	  (CODE <$$font>)
	  (PUNC ,)
	  (BEP are#be_v)
	  (ADVP-TMP (ADV seldom#seldom_adv))
	  (VAN raised#raise_v1)
	  (NP-ADV (OTHER+N otherwise#otherwise_n)
		  (PP (P than#than_conj)
		      (PP (P by#by_prep)
			  (CODE <font>)
			  (NP (N inoculation#inoculation_n)))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-H,35.77))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (VBD knew#know_v)
	  (IP-SMC (NP-SBJ (D an#a_adj)
			  (CODE <font>)
			  (N Apricock#apricot_n)
			  (RRC (VAN graffed#graff_v1)
			       (CODE <$$font>)
			       (PP (P in#in_prep)
				   (NP (D the#the_adj) (CODE <font>) (N cleft#cleft_n)))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (ADJP-PRD (ADVR as#as_adv)
			    (ADJ likely#likely_adj)
			    (PP (P as#as_adv)
				(CP-CMP (WADJP-1 0)
					(C 0)
					(IP-SUB (ADJP-PRD *T*-1)
						(NP-SBJ *exp*)
						(MD might#may_v1)
						(BE be#be_v))))
			    (IP-INF (TO to#to_prep) (VB grow#grow_v))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,35.78))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ *con*)
	  (VBD failed#fail_v)
	  (PUNC ;))
  (ID LANGF-1696-E3-H,35.79))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (VBN heard#hear_v)
	  (PP (P of#of_prep)
	      (NP (ONE one#one_adj)
		  (CODE <font>)
		  (RRC (VAN graffed#graff_v1)
		       (CODE <$$font>)
		       (PP (P in#in_prep)
			   (NP (D the#the_adj)
			       (CODE <font>)
			       (N bark#bark_n1)
			       (CODE <$$font>)
			       (CP-REL (WNP-1 0)
				       (C that#that_conj)
				       (IP-SUB (NP-SBJ *T*-1)
					       (VBD grew#grow_v))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,35.80))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Cherries#cherry_n)
		  (CODE <$$font>)
		  (CONJ and#and_conj1)
		  (CODE <font>)
		  (NS Pears#pear_n)
		  (CODE <$$font>)
		  (RRC *ICH*-1))
	  (VBP take#take_v)
	  (ADVP (ADV very#very_adj) (ADV sure#sure_adj))
	  (PUNC ,)
	  (RRC-1 (BAG being#be_v)
		 (PP (P on#on_prep)
		     (NP (ADJ young#young_adj)
			 (ADJ fresh#fresh_adj)
			 (NS stocks#stock_n1)
			 (CP-REL (WNP-2 (WPRO$ whose#whose_pron) (N bark#bark_n1))
				 (C 0)
				 (IP-SUB (NP-SBJ *T*-2)
					 (BEP is#be_v)
					 (NEG not#not_adv)
					 (ADJP-PRD (ADJ thick#thick_adj)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,35.81))

( (CODE <P_36>))

( (IP-MAT (NP-SBJ (D The#the_adj)
		  (CODE <font>)
		  (N bark#bark_n1)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (NS Scions#scion_n)
			  (CODE <$$font>)
			  (RRC (VAN taken#take_v)
			       (PP (P from#from_prep)
				   (NP (Q some#some_pron) (CODE <font>) (NS Plums#plum_n)))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (BEP is#be_v)
	  (ADJP-PRD (ADVR so#so_adv)
		    (ADJ tender#tender_adj)
		    (CONJP (CONJ and#and_conj1)
			   (ADJX (ADJ spungy#spongy_adj)))
		    (PUNC ,)
		    (CP-DEG (C 0)
			    (IP-SUB (NP-SBJ (PRO they#they_pron))
				    (MD will#will_v1)
				    (ADVP-TMP (ADV often#often_adv))
				    (VB miscarry#miscarry_v)
				    (PP (P when#when_adv)
					(CODE <font>)
					(IP-PPL (VAN inoculated#inoculate_v))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-H,36.83))

( (IP-MAT (PP (P from#from_prep)
	      (NP (SUCH such#such_adj)))
	  (NP-SBJ (ONE one#one_adj))
	  (MD would#will_v1)
	  (VB choose#choose_v)
	  (ADVP (ADVR rather#rather_adv))
	  (IP-INF (TO to#to_prep)
		  (VB raise#raise_v1)
		  (PP (P by#by_prep)
		      (NP (N Graffing#graffing_n))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,36.84))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (QS most#most_adj)
		  (CODE <font>)
		  (NS Plums#plum_n)
		  (CODE <$$font>)
		  (RRC *ICH*-1))
	  (MD will#will_v1)
	  (VB hit#hit_v)
	  (ADVP (ADV very#very_adj) (ADV well#well_adv))
	  (RRC-1 (BAG being#be_v) (VAN inoculated#inoculate_v))
	  (PUNC .))
  (ID LANGF-1696-E3-H,36.85))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Scions#scion_n)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (NS Apples#apple_n))))
	  (CODE <$$font>)
	  (VBP fails#fail_v)
	  (PP (P for#for_prep)
	      (NP (D the#the_adj) (QS most#most_adj) (N part#part_n1)))
	  (PUNC ,)
	  (IP-PPL-ABS (IP-PPL-1 (NP-SBJ (PRO$ their#their_adj) (N Bark#bark_n1))
				(BAG being#be_v)
				(ADJP-PRD (ADJ tender#tender_adj)))
		      (PUNC ,)
		      (CONJP (CONJ and#and_conj1)
			     (CODE <font>)
			     (IP-PPL=1 (NP-SBJ (NS buds#bud_n1))
				       (ADJP-PRD (ADJ weak#weak_adj)))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-H,36.86))

( (IP-MAT (CONJ but#but_prep)
	  (IP-INF-PRP (TO to#to_prep)
		      (VB preserve#preserve_v)
		      (NP-OB1 (N kind#kind_n)
			      (PP (P of#of_prep)
				  (NP (D a#a_adj)
				      (ADJ dying#dying_adj)
				      (CODE <font>)
				      (N Apple-tree#apple-tree_n)
				      (CODE <$$font>)
				      (PUNC ,)
				      (CP-REL (WNP-1 0)
					      (C that#that_conj)
					      (IP-SUB (NP-SBJ (PRO I#i_pron))
						      (MD could#can_v1)
						      (NEG not#not_adv)
						      (ADVP (ADV well#well_adv))
						      (VB cut#cut_v)
						      (NP-OB1 (D a#a_adj) (CODE <font>) (N Scion#scion_n))
						      (CODE <$$font>)
						      (IP-INF-PRP (TO to#to_prep)
								  (VB Graff#graff_v1)
								  (PP (P off#off_adv)
								      (NP *T*-1)))))))))
	  (PUNC ,)
	  (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (VBN taken#take_v)
	  (NP-OB1 (D a#a_adj)
		  (ADJ hungry#hungry_adj)
		  (CODE <font>)
		  (N bud#bud_n1)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (N year#year_n)
			  (ADJP (ADJ foregoing#foregoing_adj)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,36.87))

( (IP-MAT (IP-MAT-1 (CONJ and#and_conj1)
		    (NP-SBJ (PRO it#it_pron))
		    (HVP hath#have_v)
		    (VBN taken#take_v))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (VBN grown#grow_v)
			   (ADVP (ADV very#very_adj) (ADV well#well_adv))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,36.88))

( (IP-MAT (CODE <font>)
	  (IP-MAT-1 (NP-SBJ (NS Pears#pear_n) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Apples#apple_n))
		    (CODE <$$font>)
		    (VBP succeed#succeed_v)
		    (ADVP (ADV very#very_adj) (ADV well#well_adv)))
	  (PUNC <paren>)
	  (CONJP (IP-MAT=1 (CONJ and#and_conj1)
			   (NP-SBJ (D the#the_adj) (ADJ latter#latter_adj))
			   (ADVP (ADVS best#best_adj))
			   (PUNC <$$paren>)
			   (PP (P by#by_prep)
			       (IP-PPL (VAG taking#take_v)
				       (NP-OB1 (D a#a_adj)
					       (CODE <font>)
					       (N bud#bud_n1)
					       (CODE <$$font>)
					       (PP (P from#from_prep)
						   (NP (D a#a_adj)
						       (N shoot#shoot_n1)
						       (PP (P of#of_prep)
							   (NP (D the#the_adj)
							       (N year#year_n)
							       (ADJP (ADJ foregoing#foregoing_adj))))))
					       (CP-EOP (WNP-2 0)
						       (IP-INF (TO to#to_prep)
							       (VB inoculate#inoculate_v)
							       (PP (P with#with_prep)
								   (NP *T*-2)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,36.89))

( (IP-MAT (NP-SBJ (D The#the_adj)
		  (N skill#skill_n1)
		  (PP (P in#in_prep)
		      (IP-PPL (VAG finding#find_v)
			      (CODE <font>)
			      (NP-OB1 (NS buds#bud_n1)
				      (CODE <$$font>)
				      (CP-REL (WNP-1 0)
					      (C that#that_conj)
					      (IP-SUB (NP-SBJ *T*-1)
						      (BEP are#be_v)
						      (ADJP-PRD (ADJ fit#fit_adj)
								(PP (P for#for_prep)
								    (NP (PRO it#it_pron))))))
				      (PUNC ,)
				      (CP-REL (WNP-2 (WPRO which#which_adj))
					      (C 0)
					      (IP-SUB (NP-SBJ *T*-2)
						      (MD must#must_v1)
						      (BE be#be_v)
						      (ADJP-PRD (ADJP (ADJ short#short_adj))
								(CONJP (CONJ and#and_conj1)
								       (ADJP (NEG not#not_adv)
									     (ADJ likely#likely_adj)
									     (IP-INF (TO to#to_prep)
										     (VB make#make_v1)
										     (CODE <font>)
										     (NP-OB1 (NS buds#bud_n1)
											     (CODE <$$font>)
											     (PP (P for#for_prep)
												 (CODE <font>)
												 (NP (NS blossoms#blossom_n))))))))))))))
	  (CODE <$$font>)
	  (BEP is#be_v)
	  (NP-PRD (D the#the_adj) (ADJ only#only_adj) (N difficulty#difficulty_n))
	  (PUNC .))
  (ID LANGF-1696-E3-H,36.90))

( (IP-MAT (NP-SBJ-1 (EX There#there_adv))
	  (BEP is#be_v)
	  (NP-1 (D a#a_adj)
		(ADJ considerable#considerable_adj)
		(N advantage#advantage_n)
		(PP (P in#in_prep)
		    (NP (PRO it#it_pron))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,36.91))

( (IP-MAT (CODE <font>)
	  (IP-PPL (IP-PPL (FW viz.#NA)
			  (CODE <$$font>)
			  (BAG Being#be_v)
			  (DAN done#do_v)
			  (PP (P in#in_prep)
			      (CODE <font>)
			      (NP (NP (NPR May#NA))
				  (CODE <$$font>)
				  (CONJP (CONJ or#or_conj1)
					 (NP (D the#the_adj)
					     (N beginning#beginning_n)
					     (PP (P of#of_prep)
						 (CODE <font>)
						 (NP (NPR June#NA))))))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (IP-ABS (NP-SBJ (N part#part_n1)
					 (PP (P of#of_prep)
					     (NP (D the#the_adj)
						 (N head#head_n1)
						 (PP (P of#of_prep)
						     (NP (D the#the_adj) (CODE <font>) (N stock#stock_n1))))))
				 (CODE <$$font>)
				 (VAN cut#cut_v)
				 (RP off#off_adv))))
	  (PUNC ,)
	  (NP-SBJ (D the#the_adj)
		  (CODE <font>)
		  (N Bud#bud_n1)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj))))
	  (CODE {COM:sic})
	  (VBP shoots#shoot_v)
	  (NP-TMP (D the#the_adj) (ADJ same#same_adj) (N year#year_n))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,36.92))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (VBP becomes#become_v)
	  (ADJP-PRD (ADVR so#so_adv)
		    (ADJ strong#strong_adj)
		    (PUNC ,)
		    (CP-DEG (C that#that_conj)
			    (IP-SUB (NP-SBJ (PRO it#it_pron))
				    (VBP makes#make_v1)
				    (NP-OB1 (D a#a_adj)
					    (ADJP (NP-MSR (ADJ far#far_adj))
						  (ADJR better#better_adj))
					    (N growth#growth_n1)
					    (PP *ICH*-1))
				    (NP-TMP (D the#the_adj) (ADJ succeeding#succeeding_adj) (N year#year_n))
				    (PUNC ,)
				    (PP-1 (P than#than_conj)
					  (CP-CMP (WNP-2 0)
						  (C 0)
						  (IP-SUB (NP-OB1 *T*-2)
							  (NP-ADV (OTHER+N otherwise#otherwise_n))
							  (NP-SBJ (PRO it#it_pron))
							  (MD would#will_v1)
							  (HV have#have_v)
							  (DON done#do_v)))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,36.93))

( (IP-MAT (CONJ neither#neither_adv)
	  (BEP is#be_v)
	  (NP-SBJ (SUCH such#such_adj) (CODE <font>) (N shoot#shoot_n1))
	  (CODE <$$font>)
	  (ADJP-PRD (ADJ liable#liable_adj)
		    (PP (P to#to_prep)
			(NP (QP (ADVR so#so_adv) (Q many#many_adj))
			    (ADJ hurtful#hurtful_adj)
			    (NS casualties#casualty_n)
			    (PUNC ,)
			    (PP (P as#as_adv)
				(CP-CMP (WADJP-1 0)
					(C 0)
					(IP-SUB (ADJP-PRD *T*-1)
						(NP-SBJ (D a#a_adj) (CODE <font>) (N bud#bud_n1))
						(CODE <$$font>)
						(BEP is#be_v))))))
		    (PP (P before#before_adv)
			(NP (D the#the_adj) (ADJ ensuing#ensuing_adj) (N spring#spring_n1))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,36.94))

( (IP-MAT (CONJ And#and_conj1)
	  (ADVP (ADV lastly#lastly_adv))
	  (PUNC ,)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (MD should#shall_v)
			      (VB miscarry#miscarry_v)
			      (CODE <P_37>)
			      (PUNC <paren>)
			      (PP-PRN (P as#as_adv)
				      (CP-ADV (WADVP-1 0)
					      (C 0)
					      (IP-SUB (ADVP *T*-1)
						      (NP-SBJ (PRO it#it_pron))
						      (ADVP-TMP (ADV seldom#seldom_adv))
						      (DOP doth#do_v)
						      (VB *)))))))
	  (PUNC <$$paren>)
	  (NP-SBJ (PRO it#it_pron))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (VAN perceived#perceive_v)
	  (PP (P by#by_prep)
	      (CODE <font>)
	      (NP (N Midsummer#midsummer_n)))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,37.95))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj) (CODE <font>) (N stock#stock_n1))
	  (CODE <$$font>)
	  (MD may#may_v1)
	  (BE be#be_v)
	  (CODE <font>)
	  (VAN enoculated#inoculate_v)
	  (CODE <$$font>)
	  (ADVP (ADV again#again_adv))
	  (NP-TMP (D the#the_adj) (ADJ same#same_adj) (N year#year_n))
	  (PUNC .))
  (ID LANGF-1696-E3-H,37.96))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 4#four_adj) (PUNC .))
  (ID LANGF-1696-E3-H,37.97))

( (IP-MAT (ADVP-LOC (CP-FRL (WADVP-1 (WADV Where#where_adv))
			    (C 0)
			    (IP-SUB (ADVP-LOC *T*-1)
				    (CODE <font>)
				    (NP-SBJ (N inoculating#inoculating_n))
				    (CODE <$$font>)
				    (VBP succeeds#succeed_v)
				    (ADVP (ADV well#well_adv)))))
	  (PUNC ,)
	  (NP-SBJ (PRO it#it_pron))
	  (BEP is#be_v)
	  (IP-INF (TO to#to_prep)
		  (BE be#be_v)
		  (VAN prefer'd#prefer_v)
		  (PP (P before#before_adv)
		      (NP (N Graffing#graffing_n))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,37.98))

( (PP (LS 1#NA)
      (PUNC .)
      (P Because#because_adv)
      (CP-ADV (C 0)
	      (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N stock#stock_n1))
		      (CODE <$$font>)
		      (MD will#will_v1)
		      (BE be#be_v)
		      (ADJP-PRD (ADJ big#big_adj)
				(ADVP (ADVR enough#enough_adj)
				      (CP-TMC (WNP-1 0)
					      (IP-INF (NP-OB1 *T*-1)
						      (TO to#to_prep)
						      (CODE <font>)
						      (VB inoculate#inoculate_v)
						      (CODE <$$font>)
						      (ADVP-TMP (ADVR sooner#soon_adv)
								(PP (P by#by_prep)
								    (NP (NUMP (NUM two#two_adj) (CONJ or#or_conj1) (NUM three#three_adj))
									(CODE <font>)
									(NS years#year_n)))
								(CODE <$$font>)
								(PUNC ,)
								(PP (P than#than_conj)
								    (CP-TMC (WNP-2 0)
									    (IP-INF (NP-OB1 *T*-2)
										    (TO to#to_prep)
										    (VB graff#graff_v1)))))))))))
      (PUNC ,))
  (ID LANGF-1696-E3-H,37.99))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO$ your#your_pron) (CODE <font>) (N Plant#plant_n1))
	  (CODE <$$font>)
	  (VBP groweth#grow_v)
	  (ADVP (Q much#much_adj)
		(ADVR faster#fast_adv)
		(PP *ICH*-1))
	  (PUNC ,)
	  (PP (P after#after_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (N Nature#nature_n))
			      (BEP is#be_v)
			      (ADVP (ADV so#so_adv))
			      (VAN altered#alter_v))))
	  (PUNC ,)
	  (PP-1 (P than#than_conj)
		(CP-CMP (WADVP-2 0)
			(C 0)
			(IP-SUB (ADVP *T*-2)
				(NP-SBJ (PRO it#it_pron))
				(DOD did#do_v)
				(VB *)
				(ADVP-TMP (ADV before#before_adv)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,37.100))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADVP-TMP (ADVR sooner#soon_adv))
	  (ADJP-PRD (ADJ ready#ready_adj)
		    (CP-TMC (WNP-1 0)
			    (IP-INF (NP-OB1 *T*-1)
				    (TO to#to_prep)
				    (CODE <font>)
				    (VB Transplant#transplant_v))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P than#than_conj)
	      (CODE {SIC:and})
	      (PP (P if#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ-2 (PRO it#it_pron))
				  (BEP be#be_v)
				  (VAN suffered#suffer_v)
				  (IP-INF (NP-SBJ *-2)
					  (TO to#to_prep)
					  (VB grow#grow_v)
					  (CODE <font>)
					  (NP-MSR (ADJP (NP-MSR (NUMP (NUM two#two_adj) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NUM three#three_adj))
								(CODE <$$font>)
								(NS years#year_n))
							(ADJR longer#long_adj1))))
				  (PUNC ,)
				  (PP (P as#as_adv)
				      (CP-ADV (WADVP-3 0)
					      (C 0)
					      (IP-SUB (ADVP *T*-3)
						      (NP-SBJ (PRO it#it_pron))
						      (MD must#must_v1)
						      (BE be#be_v)
						      (VAN *)
						      (PP (P before#before_adv)
							  (CP-ADV (C 0)
								  (IP-SUB (NP-SBJ (PRO it#it_pron))
									  (MD will#will_v1)
									  (BE be#be_v)
									  (ADJP-PRD (ADJ fit#fit_adj)
										    (IP-INF (TO to#to_prep) (BE be#be_v) (CODE <font>) (VAN graffed#graff_v1)))))))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-H,37.101))

( (IP-MAT (LS 2#NA)
	  (PUNC .)
	  (NP-SBJ (PRO It#it_pron))
	  (VBP makes#make_v1)
	  (NP-OB1 (D a#a_adj)
		  (CODE <font>)
		  (ADJR sounder#sound_adj)
		  (N Tree#tree_n)
		  (CODE <$$font>)
		  (PP (P than#than_conj)
		      (NP (ONE one#one_adj)
			  (CP-REL (WNP-1 0)
				  (C that#that_conj)
				  (IP-SUB (NP-SBJ *T*-1)
					  (BEP is#be_v)
					  (CODE <font>)
					  (VAN graffed#graff_v1)
					  (CODE <$$font>)
					  (PUNC ,)
					  (PP (ADV especially#especially_adv)
					      (P in#in_prep)
					      (NP (D the#the_adj) (N cleft#cleft_n)))
					  (PUNC ;)
					  (PP (P because#because_adv)
					      (CP-ADV (C 0)
						      (IP-SUB (NP-SBJ (PRO it#it_pron))
							      (VBP covereth#cover_v1)
							      (NP-OB1 (D the#the_adj) (CODE <font>) (N Stock#stock_n1))
							      (CODE <$$font>)
							      (ADVP (ADV speedily#speedily_adv) (CONJ and#and_conj1) (ADV well#well_adv))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,37.102))

( (IP-MAT (LS 3#NA)
	  (PUNC .)
	  (NP-SBJ (PRO It#it_pron))
	  (CODE <font>)
	  (VBP hurts#hurt_v)
	  (CODE <$$font>)
	  (NEG not#not_adv)
	  (NP-OB1 (D the#the_adj) (CODE <font>) (N Stock#stock_n1))
	  (CODE <$$font>)
	  (NP-MSR (QP (ADVR so#so_adv) (Q much#much_adj))
		  (PP (P as#as_adv)
		      (CODE <font>)
		      (NP (N graffing#graffing_n))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-H,37.103))

( (IP-MAT (IP-MAT-1 (CONJ and#and_conj1)
		    (PP (P if#if_conj)
			(CP-ADV (C 0)
				(IP-SUB (NP-SBJ (PRO it#it_pron))
					(VBP chance#chance_v)
					(IP-INF (TO to#to_prep) (VB fail#fail_v)))))
		    (PUNC ,)
		    (NP-SBJ (PRO it#it_pron))
		    (MD may#may_v1)
		    (BE be#be_v)
		    (CODE <font>)
		    (VAN inoculated#inoculate_v)
		    (CODE <$$font>)
		    (NP-TMP (ADJS next#next_adj) (CODE <font>) (N year#year_n))
		    (CODE <$$font>)
		    (ADVP (ADV again#again_adv)))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (NP-TMP (Q+NS sometimes#sometimes_adv))
			   (NP-TMP (D the#the_adj) (ADJ same#same_adj) (CODE <font>) (N year#year_n))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-H,37.104))

( (IP-MAT (LS 4#NA)
	  (PUNC .)
	  (NP-SBJ (PRO It@#it_pron))
	  (BEP @'s#be_v)
	  (ADJP-PRD (QR more#more_adj)
		    (CODE <font>)
		    (ADJ speedy#speedy_adj)
		    (CODE <$$font>)
		    (PUNC ,)
		    (CODE <font>)
		    (CONJP (ADJX (ADJ easie#easy_adj)))
		    (CODE <$$font>)
		    (PUNC ,)
		    (CONJP (CONJ and#and_conj1)
			   (CODE <font>)
			   (ADJX (ADJ delightful#delightful_adj)))
		    (CODE <$$font>)
		    (PP (P than#than_conj)
			(CODE <font>)
			(NP (N Graffing#graffing_n))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,37.105))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (MD may#may_v1)
	  (BE be#be_v)
	  (VAN practis'd#practise_v)
	  (PP (P by#by_prep)
	      (CODE <font>)
	      (NP (NS Gentlemen#gentleman_n)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CP-REL (WNP-1 (WPRO who#who_pron))
			  (C 0)
			  (IP-SUB (IP-SUB-2 (NP-SBJ *T*-1)
					    (PP (P in#in_prep)
						(CODE <font>)
						(NP (NPR June#NA)))
					    (CODE <$$font>)
					    (MD may#may_v1)
					    (VB lie#lie_v1)
					    (PP (P on#on_prep)
						(NP (D the#the_adj) (N ground#ground_n))))
				  (CONJP (CONJ and#and_conj1)
					 (IP-SUB=2 (DO do#do_v)
						   (NP-OB1 (PRO it#it_pron))))))))
	  (PUNC ;)
	  (PP (P whereas#whereas_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (MD can@#can_v1)
			      (NEG @not#not_adv)
			      (VB bear#bear_v1)
			      (NP-OB1 (D the#the_adj) (N cold#cold_n))
			      (PP (P without#without_adv)
				  (NP (N danger#danger_n)
				      (PP (P of#of_prep)
					  (IP-PPL (VAG taking#take_v)
						  (CODE {SIC:taing})
						  (NP-OB1 (N hurt#hurt_n1))))))
			      (PUNC ,)
			      (PP (P in#in_prep)
				  (CODE <font>)
				  (NP (NPR February#NA)
				      (CODE <$$font>)
				      (PUNC ,)
				      (CONJ or#or_conj1)
				      (CODE <font>)
				      (NPR March#NA)
				      (CODE <$$font>)
				      (PUNC ,)
				      (CP-REL (WNP-3 (WPRO which#which_adj))
					      (C 0)
					      (IP-SUB (NP-SBJ *T*-3)
						      (BEP is#be_v)
						      (NP-PRD (D the#the_adj) (ADJ chief#chief_adj) (CODE <font>) (N Graffing#graffing_n) (CODE <$$font>) (N season#season_n)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,37.106))

( (CODE <P_38>))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 5#five_v) (PUNC .))
  (ID LANGF-1696-E3-H,38.108))

( (IP-MAT (NP-SBJ-1 (PRO It#it_pron))
	  (BEP is#be_v)
	  (VAN debated#debate_v1)
	  (PP (P among#among_prep)
	      (CODE <font>)
	      (NP (NS Planters#planter_n)))
	  (CODE <$$font>)
	  (CP-QUE-SUB-1 (WNP-2 (WD what#what_pron)
			       (CODE <font>)
			       (N time#time_n)
			       (CODE <$$font>)
			       (PP (P of#of_prep)
				   (NP (D the#the_adj) (CODE <font>) (N day#day_n))))
			(CODE <$$font>)
			(C 0)
			(IP-SUB (NP-SBJ *T*-2)
				(BEP is#be_v)
				(NP-PRD (ADJS best#best_adj)
					(PP (P for#for_prep)
					    (CODE <font>)
					    (NP (N Inoculating#inoculating_n))))))
	  (CODE <$$font>)
	  (PUNC :))
  (ID LANGF-1696-E3-H,38.109))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (VBN heard#hear_v)
	  (IP-INF (NP-SBJ (D an#a_adj) (ADJ Ingenious#ingenious_adj) (N person#person_n))
		  (VB argue#argue_v)
		  (PP (P for#for_prep)
		      (NP (D the#the_adj) (N morning#morning_n)))
		  (PUNC ;)
		  (PP (P because#because_adv)
		      (CP-ADV (C 0)
			      (IP-SUB (NP-SBJ-1 (EX there#there_adv))
				      (VBP passeth#pass_v)
				      (RP up#up_adv1)
				      (NP-1 (QP (Q much#much_adj) (QR more#more_adj))
					    (CODE <font>)
					    (N sap#sap_n1)
					    (CODE <$$font>)
					    (PUNC ,)
					    (CONJP (CONJ or#or_conj1)
						   (CODE <font>)
						   (NX (N juice#juice_n)))
					    (CODE <$$font>)
					    (PP *ICH*-2))
				      (PUNC ,)
				      (PP (P in#in_prep)
					  (NP (D the#the_adj) (CODE <font>) (N day#day_n) (CODE <$$font>) (N time#time_n)))
				      (PUNC ,)
				      (PP-2 (P than#than_conj)
					    (PP (P in#in_prep)
						(NP (D the#the_adj) (CODE <font>) (N night#night_n))))
				      (CODE <$$font>)
				      (PUNC ;)
				      (PP (P as#as_adv)
					  (CP-ADV (WNP-3 0)
						  (C 0)
						  (IP-SUB (NP-SBJ *T*-3)
							  (BED was#be_v)
							  (VAN observed#observe_v)
							  (PP (P by#by_prep)
							      (NP (PRO him#him_pron)))
							  (PP (P in#in_prep)
							      (IP-PPL (VAG piercing#pierce_v)
								      (NP-OB1 (D the#the_adj)
									      (CODE <font>)
									      (N Birch#birch_n)
									      (N tree#tree_n)
									      (CODE <$$font>)
									      (PUNC ,)
									      (CONJP (CONJ and#and_conj1)
										     (NX (OTHER other#other_adj) (CODE <font>) (NS Trees#tree_n))))
								      (CODE <$$font>)
								      (PUNC ,)
								      (IP-INF-PRP (TO to#to_prep)
										  (VB get#get_v)
										  (NP-OB1 (D the#the_adj)
											  (CODE <font>)
											  (N liquor#liquor_n)
											  (CODE <$$font>)
											  (PUNC ,)
											  (CP-REL (WNP-4 0)
												  (C that#that_conj)
												  (IP-SUB (NP-SBJ *T*-4)
													  (VBP distills#distil_v)
													  (PP (RP out#out_adv)
													      (P of#of_prep)
													      (NP (PRO them#them_pron))))))
										  (PUNC ,)
										  (PP (P for#for_prep)
										      (NP (ADJ Physical#physical_adj) (NS uses#use_n)))))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,38.110))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV consequently#consequently_adv))
	  (NP-SBJ (D the#the_adj)
		  (CODE <font>)
		  (N bud#bud_n1)
		  (RRC (VAN inoculated#inoculate_v)
		       (CODE <$$font>)
		       (PP (P in#in_prep)
			   (NP (D the#the_adj) (N morning#morning_n))))
		  (RRC *ICH*-1))
	  (PUNC ,)
	  (MD must#must_v1)
	  (BE be#be_v)
	  (ADJP-PRD (QR more#more_adj)
		    (ADJ likely#likely_adj)
		    (IP-INF (TO to#to_prep) (VB grow#grow_v))
		    (PP *ICH*-3))
	  (PUNC ,)
	  (RRC-1 (HAG having#have_v)
		 (NP-OB1 (NP-MSR (D the#the_adj) (ADJ whole#whole_adj) (N$ days#day_n))
			 (N plenty#plenty_n)
			 (PP (P of#of_prep)
			     (CODE <font>)
			     (NP (N sap#sap_n1)))
			 (CODE <$$font>)
			 (CP-EOP (WNP-2 0)
				 (IP-INF (NP-SBJ *T*-2)
					 (TO to#to_prep)
					 (VB invite#invite_v)
					 (NP-OB1 (PRO it#it_pron))
					 (IP-INF (TO to#to_prep)
						 (VB unite#unite_v)
						 (PP (P with#with_prep)
						     (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP-3 (P than#than_conj)
		(PP (P if#if_conj)
		    (CP-ADV (C 0)
			    (IP-SUB (IP-SUB (NP-SBJ (PRO it#it_pron))
					    (BEP be#be_v)
					    (CODE <font>)
					    (VAN inoculated#inoculate_v)
					    (CODE <$$font>)
					    (ADVP (ADV late#late_adv)
						  (PP (P in#in_prep)
						      (NP (D the#the_adj) (N day#day_n)))))
				    (PUNC ,)
				    (CONJP (CONJ and#and_conj1)
					   (IP-SUB (NP-SBJ *con*)
						   (ADVP (ADV so#so_adv))
						   (MD must#must_v1)
						   (BE be#be_v)
						   (VAN discouraged#discourage_v)
						   (PP (P in#in_prep)
						       (NP (PRO$ its#its_adj) (ADJ new#new_adj) (N habitation#habitation_n)))
						   (PUNC ,)
						   (PP (P by#by_prep)
						       (NP (D the#the_adj)
							   (ADJ niggardly#niggardly_adj)
							   (N provision#provision_n)
							   (PP (P of#of_prep)
							       (NP (NP-POS (D the#the_adj) (N$ nights#night_n))
								   (N Sap#sap_n1)))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,38.111))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP follow#follow_v)
			      (NP-OB1 (D this#this_pron) (N advice#advice_n)))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (HVD had#have_v)
	  (ADVP (ADVS best#best_adj))
	  (VB wrap#wrap_v)
	  (NP-OB1 (Q some#some_pron)
		  (ADJ broad#broad_adj1)
		  (CODE <font>)
		  (NS leaves#leaf_n1)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NX (N Fearn#fern_n1))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P about#about_adv)
	      (NP (D the#the_adj) (CODE <font>) (N stock#stock_n1)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P so#so_adv)
	      (PP (P as#as_adv)
		  (IP-INF (TO to#to_prep)
			  (VB shade#shade_v1)
			  (NP-OB1 (D the#the_adj) (N Scion#scion_n))
			  (PP (P from#from_prep)
			      (NP (D the#the_adj)
				  (ADJ scorching#scorching_adj1)
				  (N heat#heat_n)
				  (PP (P of#of_prep)
				      (NP (D the#the_adj)
					  (N day#day_n)
					  (RRC (VAG following#follow_v))))))
			  (PUNC ,)
			  (IP-INF-PRP (TO to#to_prep)
				      (VB prevent#prevent_v)
				      (NP-OB1 (PRO$ its#its_adj)
					      (IP-PPL (VAG drying#dry_v)
						      (PP (P before#before_adv)
							  (CP-ADV (C 0)
								  (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N Stock#stock_n1))
									  (CODE <$$font>)
									  (HVP hath#have_v)
									  (VBN undertaken#undertake_v)
									  (NP-OB1 (D the#the_adj)
										  (N charge#charge_n1)
										  (PP (P of#of_prep)
										      (IP-PPL (VAG preserving#preserve_v)
											      (NP-OB1 (PRO it#it_pron))))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,38.112))

( (IP-MAT (CONJ But#but_prep)
	  (NP-SBJ (D this#this_pron) (N work#work_n))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (DAN done#do_v)
	  (PP (P in#in_prep)
	      (NP (D the#the_adj)
		  (N middle#middle_adj)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (N day#day_n)))))
	  (PUNC ,)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (N heat#heat_n))
			      (BEP be#be_v)
			      (NEG not#not_adv)
			      (CODE <font>)
			      (ADJP-PRD (ADJ violent#violent_adj)))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,38.113))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP-TMP (ADV then#then_adv))
	  (NP-SBJ (PRO you#you_pron))
	  (MD must#must_v1)
	  (PUNC <paren>)
	  (PP-PRN (P as#as_adv)
		  (CP-ADV (WADVP-1 0)
			  (C 0)
			  (IP-SUB (ADVP *T*-1)
				  (PP (P at#at_prep)
				      (NP (Q all#all_adj) (NS times#time_n)))
				  (NP-SBJ (PRO you#you_pron))
				  (MD ought#ought_v)
				  (TO *)
				  (VB *))))
	  (PUNC <$$paren>)
	  (BE be#be_v)
	  (ADJP-PRD (ADV very#very_adj)
		    (ADJ quick#quick_adj)
		    (PP (P in#in_prep)
			(NP (D the#the_adj)
			    (N doing#doing_n)
			    (PP (P of#of_prep)
				(NP (PRO it#it_pron))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,38.114))

( (CODE <P_39>))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (P for#for_prep)
	      (NP (Q all#all_adj)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (HVP hath#have_v)
				  (BEN been#be_v)
				  (VAN said#say_v1)
				  (ADVP-TMP (ADV before#before_adv))))))
	  (PUNC ,)
	  (NP-SBJ (D the#the_adj) (N afternoon#afternoon_n))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (NP-PRD (ADJP (ADVR as#as_adv) (ADJ good#good_adj))
		  (D a#a_adj)
		  (N time#time_n)
		  (PP (P as#as_adv)
		      (NP (Q any#any_adj))))
	  (PUNC ;)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (PP-LFD (P if#if_conj)
				      (CP-ADV (C 0)
					      (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N bud#bud_n1))
						      (CODE <$$font>)
						      (HVP have#have_v)
						      (IP-SMC (NP-SBJ (QR less#less_adj) (CODE <font>) (N liquor#liquor_n))
							      (CODE <$$font>)
							      (VAN afforded#afford_v)
							      (NP-OB2 (PRO it#it_pron))
							      (PP (P in#in_prep)
								  (NP (D the#the_adj) (N night#night_n)))))))
			      (PUNC ,)
			      (ADVP-RSP (ADV then#then_adv))
			      (NP-SBJ (D the#the_adj)
				      (N coolness#coolness_n)
				      (PP (P of#of_prep)
					  (NP (D that#that_pron1) (N time#time_n))))
			      (VBP makes#make_v1)
			      (IP-SMC (NP-SBJ (PRO it#it_pron))
				      (ADJP-PRD (QR less#less_adj) (ADJ thirsty#thirsty_adj))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,39.116))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P as#as_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO$ its#its_adj) (N thirst#thirst_n))
			      (VBP encreaseth#increase_v)
			      (PP (P by#by_prep)
				  (NP (D the#the_adj)
				      (N heath#heath_n)
				      (PP (P of#of_prep)
					  (NP (D the#the_adj) (ADJS next#next_adj) (N day#day_n))))))))
	  (PUNC ,)
	  (NP-SBJ (D a#a_adj)
		  (ADJP (QR more#more_adj) (ADJ plentiful#plentiful_adj))
		  (N stream#stream_n))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADV very#very_adj)
		    (ADJ seasonable#seasonable_adj)
		    (IP-INF (TO to#to_prep)
			    (VB satisfie#satisfy_v)
			    (NP-OB1 (PRO it#it_pron))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,39.117))

( (CODE <heading>))

( (NP (N CHAP.#chapter_n) (NUM VI#six_adj) (PUNC .))
  (ID LANGF-1696-E3-H,39.119))

( (CODE <$$heading>))

( (PP (P OF#of_prep)
      (NP (D THE#the_adj)
	  (ADJ SEVERAL#several_adj)
	  (NS WAYS#way_n1)
	  (PP (P OF#of_prep)
	      (NP (N GRAFFING#graffing_n))))
      (PUNC .))
  (ID LANGF-1696-E3-H,39.121))

( (CODE <$$heading>))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (ONE 1#one_adj) (PUNC .))
  (ID LANGF-1696-E3-H,39.123))

( (IP-MAT (PP (P As#as_adv)
	      (CP-CMP (WADVP-1 0)
		      (C 0)
		      (IP-SUB (ADVP *T*-1)
			      (NP-SBJ-2 (EX there#there_adv))
			      (BEP are#be_v)
			      (NP-2 (ADJ several#several_adj)
				    (NS ways#way_n1)
				    (PP *ICH*-4))
			      (PUNC <paren>)
			      (PP-PRN (P as#as_adv)
				      (CP-ADV (WNP-3 0)
					      (C 0)
					      (IP-SUB (NP-OB1 *T*-3)
						      (NP-SBJ (PRO you#you_pron))
						      (HVP have#have_v)
						      (VBN seen#see_v))))
			      (PUNC <$$paren>)
			      (PP-4 (P of#of_prep)
				    (CODE <font>)
				    (NP (N inoculating#inoculating_n))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (ADVP (ADV so#so_adv))
	  (BEP are#be_v)
	  (NP-SBJ-5 (EX there#there_adv))
	  (NP-5 (PP (P of#of_prep)
		    (NP (N Graffing#graffing_n))))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-6 0)
		      (C 0)
		      (IP-SUB (ADVP-TMP (ADV now#now_adv))
			      (NP-SBJ (PRO I#i_pron))
			      (VBP come#come_v)
			      (IP-INF (TO to#to_prep)
				      (VB let#let_v1)
				      (IP-INF (NP-OB1 *T*-6)
					      (NP-SBJ (PRO you#you_pron))
					      (VB see#see_v))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,39.124))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj)
		  (ADJ first#first_adj)
		  (CP-REL (WNP-1 0)
			  (C 0)
			  (IP-SUB (NP-SBJ (PRO I#i_pron))
				  (MD shall#shall_v)
				  (VB speak#speak_v)
				  (PP (P of#of_prep)
				      (NP *T*-1)))))
	  (BEP is#be_v)
	  (NP-PRD (D that#that_pron1)
		  (CP-REL (WNP-2 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ-3 *T*-2)
				  (BEP is#be_v)
				  (VAN called#call_v)
				  (IP-SMC (NP-SBJ *-3)
					  (CODE <font>)
					  (NP-PRD (N Slicing#slicing_n1) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (N Packing#packing_n1)))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CP-REL (WNP-4 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-OB1 *T*-4)
				  (NP-SBJ (PRO I#i_pron))
				  (MD shall#shall_v)
				  (VB describe#describe_v)
				  (ADVP-LOC (ADV here#here_adv))
				  (PP (P at#at_prep)
				      (ADJP (ADJ large#large_adj))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,39.125))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (NP-SBJ (PRO it#it_pron))
	  (MD will#will_v1)
	  (VB serve#serve_v1)
	  (PP (P in#in_prep)
	      (NP (N part#part_n1)))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (NP (D a#a_adj)
		  (ADJ general#general_adj)
		  (N direction#direction_n)
		  (PP (P for#for_prep)
		      (NP (Q all#all_adj)))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,39.126))

( (IP-IMP (VBI Cut#cut_v)
	  (RP off#off_adv)
	  (NP-OB1 (D the#the_adj)
		  (CODE <font>)
		  (N top#top_n1)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (NP (PRO$ your#your_pron) (CODE <font>) (N Stock#stock_n1))))
	  (CODE <$$font>)
	  (PP (P in#in_prep)
	      (NP (Q some#some_pron) (ADJ smooth#smooth_adj) (ADJ straight#straight_adj) (N place#place_n1)))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,39.127))

( (IP-IMP (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (DOP do#do_v)
			      (NP-OB1 (PRO it#it_pron))
			      (PP (P with#with_prep)
				  (NP (D a#a_adj) (CODE <font>) (N Hand-saw#handsaw_n))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (VBI cut#cut_v)
	  (NP-OB1 (PRO it#it_pron))
	  (ADJP-SPR (ADJ smooth#smooth_adj))
	  (ADVP-TMP (ADV afterward#afterward_adv))
	  (PP (P with#with_prep)
	      (NP (PRO$ your#your_pron) (CODE <font>) (N Knife#knife_n)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (IP-PPL (VAG leaving#leave_v1)
		  (NP-OB1 (D the#the_adj) (N top#top_n1))
		  (ADJP-SPR (ADJ flat#flat_adj) (CONJ and#and_conj1) (ADJ even#even_adj1)))
	  (PUNC .))
  (ID LANGF-1696-E3-H,39.128))

( (CODE <P_40>))

( (IP-IMP (ADVP-TMP (ADV Then#then_adv))
	  (VBI prepare#prepare_v)
	  (NP-OB1 (PRO$ your#your_pron)
		  (CODE <font>)
		  (N Scion#scion_n)
		  (CODE <$$font>)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NX (N Graff#graff_n1))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P by#by_prep)
	      (IP-PPL (VAG cutting#cut_v)
		      (NP-OB1 (PRO it#it_pron))
		      (PP (P on#on_prep)
			  (NP (ONE one#one_adj) (N side#side_n1)))
		      (PUNC ,)
		      (PP (P from#from_prep)
			  (NP (D the#the_adj)
			      (CODE <font>)
			      (N joint#joint_n1)
			      (CODE <$$font>)
			      (PUNC ,)
			      (CONJP (CONJ or#or_conj1)
				     (CODE <font>)
				     (NX (N seam#seam_n1)))))
		      (CODE <$$font>)
		      (PUNC ,)
		      (PUNC <paren>)
		      (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
				  (BEP is#be_v)
				  (PUNC ,)
				  (PP (P at#at_prep)
				      (NP (NP-POS (Q every#every_adj) (N$ years#year_n))
					  (N growth#growth_n1))))
		      (PUNC <$$paren>)
		      (RP down#down_adv)
		      (NP-ADV (N slope-wise#slopewise_adv))
		      (PP (P in#in_prep)
			  (NP (D the#the_adj) (CODE <font>) (ADJ old#old_adj) (N wood#wood_n1)))
		      (CODE <$$font>)
		      (PUNC ,)
		      (PP (P till#till_prep)
			  (CP-ADV (C 0)
				  (IP-SUB (NP-SBJ (PRO it@#it_pron))
					  (BEP @'s#be_v)
					  (VAN cut#cut_v)
					  (ADVP (ADV quite#quite_adv))
					  (RP off#off_adv))))
		      (PUNC ,)
		      (CP-ADV (C that#that_conj)
			      (IP-SUB (NP-SBJ (D the#the_adj) (N slope#slope_n1))
				      (MD may#may_v1)
				      (BE be#be_v)
				      (ADJP-PRD (NP-MSR (NP-MSR (ADV about#about_adv) (D an#a_adj) (N inch#inch_n1))
							(CONJP *ICH*-1))
						(ADJ long#long_adj1)
						(PUNC ,)
						(CONJP-1 (CONJ or#or_conj1)
							 (QP (NP-MSR (Q+N something#something_n))
							     (QR more#more_adj))))))
		      (PUNC ,)
		      (IP-PPL (VAG observing#observe_v)
			      (NP-OB1 (PRO$ its#its_adj) (N bent#bent_n2)))
		      (PUNC ,)
		      (CP-ADV (C that#that_conj)
			      (IP-SUB (PP (P when#when_adv)
					  (CP-ADV (C 0)
						  (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N Scion#scion_n))
							  (CODE <$$font>)
							  (BEP is#be_v)
							  (VAN fixed#fix_v)
							  (PP (P to#to_prep)
							      (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))))
				      (CODE <$$font>)
				      (NP-SBJ (PRO it#it_pron))
				      (MD may#may_v1)
				      (VB stand#stand_v)
				      (ADJP-SPR (ADV almost#almost_adv) (ADJ upright#upright_adj))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,40.130))

( (IP-IMP (VBI give#give_v)
	  (NP-OB1 (D a#a_adj) (N cut#cut_n2))
	  (ADVP-TMP (ADV then#then_adv))
	  (PP (ADV cross#cross_adv)
	      (P through#through_prep)
	      (NP (D the#the_adj) (CODE <font>) (N bark#bark_n1)))
	  (CODE <$$font>)
	  (PP (P at#at_prep)
	      (NP (D the#the_adj)
		  (N top#top_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (N slope#slope_n1)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,40.131))

( (IP-IMP (CONJ and#and_conj1)
	  (ADVP-TMP (ADV then#then_adv))
	  (VBI cut#cut_v)
	  (NP-OB1 (D a#a_adj)
		  (ADJ thin#thin_adj)
		  (CODE <font>)
		  (N chip#chip_n2)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (CODE <font>) (N slope#slope_n1))))
	  (CODE <$$font>)
	  (ADVP-DIR (ADV upward#upward_adv))
	  (PP (P to#to_prep)
	      (NP (D the#the_adj) (CODE <font>) (N cross-cut#cross-cut_n)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ-1 (EX there#there_adv))
			  (MD may#may_v1)
			  (BE be#be_v)
			  (NP-1 (D a#a_adj)
				(CODE <font>)
				(N shoulder#shoulder_n)
				(CODE <$$font>)
				(CP-EOP (WNP-2 0)
					(IP-INF (NP-SBJ *T*-2)
						(TO to#to_prep)
						(VB rest#rest_v3)
						(PP (P on#on_prep)
						    (NP (D the#the_adj)
							(N top#top_n1)
							(PP (P of#of_prep)
							    (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,40.132))

( (IP-IMP (CONJ but#but_prep)
	  (VBI cut#cut_v)
	  (NEG not#not_adv)
	  (NP-OB1 (D this#this_pron) (CODE <font>) (N shoulder#shoulder_n))
	  (CODE <$$font>)
	  (ADVP (ADVR too#too_adv) (ADV deep#deep_adv))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,40.133))

( (IP-MAT (NP-SBJ (QP (Q little#little_adj)
		      (QR more#more_adj)
		      (PP (P than#than_conj)
			  (PP (P through#through_prep)
			      (NP (D the#the_adj) (CODE <font>) (N bark#bark_n1))))))
	  (CODE <$$font>)
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJR enough#enough_adj))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,40.134))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D this#this_pron))
	  (MD will#will_v1)
	  (VB cause#cause_v1)
	  (NP-OB1 (D a#a_adj)
		  (ADJ little#little_adj)
		  (N rising#rising_n)
		  (PP (P in#in_prep)
		      (NP (D the#the_adj) (ADJ sloped#sloped_adj) (N part#part_n1)))
		  (PUNC ,)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-OB1 *T*-1)
				  (NP-SBJ (PRO you#you_pron))
				  (MD must#must_v1)
				  (VB cut#cut_v)
				  (RP down#down_adv))))
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (IP-SUB-2 (NP-SBJ (D the#the_adj) (ADJ whole#whole_adj) (CODE <font>) (N slope#slope_n1))
				    (CODE <$$font>)
				    (MD may#may_v1)
				    (BE be#be_v)
				    (ADJP-PRD (ADJ plain#plain_adj2) (CONJ and#and_conj1) (ADJ smooth#smooth_adj))
				    (PUNC ,)
				    (PP (P without#without_adv)
					(NP (NS dints#dint_n) (CONJ or#or_conj1) (NS risings#rising_n))))
			  (PUNC ,)
			  (CONJP (CONJ and#and_conj1)
				 (IP-SUB=2 (VB lie#lie_v1)
					   (ADJP-SPR (ADJ even#even_adj1)
						     (PP (P to#to_prep)
							 (NP (D the#the_adj)
							     (N side#side_n1)
							     (PP (P of#of_prep)
								 (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-H,40.135))

( (IP-IMP (VBI Cut#cut_v)
	  (ADVP-TMP (ADV then#then_adv))
	  (NP-OB1 (D the#the_adj)
		  (N top#top_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (N Scion#scion_n))))
	  (RP off#off_adv)
	  (PUNC ,)
	  (ADJP-LOC (ADJ close#close_adj)
		    (PP (P about#about_adv)
			(NP (D a#a_adj) (CODE <font>) (N bud#bud_n1))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (NP-MSR (NUMP (ADV about#about_adv) (NUM four#four_adj))
		      (NS inches#inch_n1))
	      (P above#above_adv)
	      (NP (D the#the_adj) (CODE <font>) (N shoulder#shoulder_n)))
	  (CODE <$$font>)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (BEP be#be_v)
			      (PP (P for#for_prep)
				  (NP (D a#a_adj) (CODE <font>) (N standard#standard_n) (CODE <$$font>) (N Tree#tree_n))))))
	  (PUNC ,)
	  (IP-PPL-ABS (NP-SBJ (PP (NP-MSR (NUM two#two_adj) (CODE <font>) (NS buds#bud_n1))
				  (CODE <$$font>)
				  (P above#above_adv)
				  (NP (D the#the_adj) (N clay#clay_n))))
		      (BAG being#be_v)
		      (ADJP-PRD (ADJ full#full_adj)
				(ADVP (ADVR enough#enough_adj))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,40.136))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P for#for_prep)
	      (CODE <font>)
	      (NP (N Dwarf#dwarf_n) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (NS Wall-trees#SEE_wall_n1)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB let#let_v1)
	  (IP-INF (NP-SBJ (D the#the_adj) (CODE <font>) (N Scion#scion_n))
		  (CODE <$$font>)
		  (BE be#be_v)
		  (ADJP-PRD (NP-MSR (NUM six#six_adj) (NS inches#inch_n1))
			    (ADJ long#long_adj1))
		  (PP (P with#with_prep)
		      (NP (ADJ several#several_adj) (CODE <font>) (NS buds#bud_n1)))
		  (CODE <$$font>)
		  (CP-ADV (C that#that_conj)
			  (IP-SUB (IP-SUB-1 (NP-SBJ (PRO they#they_pron))
					    (MD may#may_v1)
					    (VB shoot#shoot_v)
					    (ADVP (ADV forth#forth_adv))
					    (NP-OB1 (Q many#many_adj) (NS branches#branch_n)))
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (IP-SUB=1 (VB spread#spread_v)
						   (PP (P from#from_prep)
						       (NP (D the#the_adj) (ADJ very#very_adj) (N Stock#stock_n1))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,40.137))

( (CODE <P_41>))

( (IP-IMP (IP-ABS (NP-SBJ (D The#the_adj)
			  (CODE <font>)
			  (N Scion#scion_n)
			  (CODE <$$font>)
			  (CONJP (CONJ or#or_conj1)
				 (CODE <font>)
				 (NX (N Graff#graff_n1))))
		  (CODE <$$font>)
		  (ADVP (ADV thus#thus_adv))
		  (VAN prepared#prepare_v))
	  (PUNC ;)
	  (VBI lay#lay_v1)
	  (NP-OB1 (D the#the_adj)
		  (ADJ cut#cut_adj)
		  (N part#part_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (CODE <font>) (N Scion#scion_n))))
	  (CODE <$$font>)
	  (PP (P on#on_prep)
	      (NP (D the#the_adj)
		  (CODE <font>)
		  (N (N West#west_adv) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (N South-west#south-west_adv))
		  (CODE <$$font>)
		  (N side#side_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (N Stock#stock_n1)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,41.139))

( (IP-IMP (CONJ and#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (VBI (VBI measure#measure_v) (CONJ and#and_conj1) (VBI mark#mark_v))
	  (NP-OB1 (D the#the_adj)
		  (N breadth#breadth_n)
		  (CONJP (CONJ and#and_conj1)
			 (NX (N length#length_n)))
		  (PP (P of#of_prep)
		      (NP (PRO it#it_pron))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,41.140))

( (IP-IMP (ADVP-TMP (ADV then#then_adv))
	  (VBI cut#cut_v)
	  (ADVP-DIR (ADV away#away_adv))
	  (NP-OB1 (QP (ADVR so#so_adv) (Q much#much_adj))
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (N bark#bark_n1)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj) (N stock#stock_n1)))))
		  (PUNC ,)
		  (PP (P as#as_adv)
		      (CP-CMP (WNP-1 0)
			      (C 0)
			      (IP-SUB (NP-OB1 *T*-1)
				      (NP-SBJ (D the#the_adj)
					      (ADJ cut#cut_adj)
					      (N part#part_n1)
					      (PP (P of#of_prep)
						  (NP (D the#the_adj) (N Scion#scion_n))))
				      (MD may#may_v1)
				      (VB fit#fit_v1)))))
	  (PUNC ,)
	  (IP-PPL (VAG drawing#draw_v)
		  (NP-OB1 (PRO$ your#your_pron) (N Knife#knife_n))
		  (ADVP-DIR (ADV upward#upward_adv)))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,41.141))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P as#as_adv)
	      (CP-CMP (WADVP-1 0)
		      (C 0)
		      (IP-SUB (ADVP *T*-1)
			      (IP-SUB-2 (NP-SBJ (D the#the_adj) (CODE <font>) (N stock#stock_n1))
					(CODE <$$font>)
					(PUNC ,)
					(BEP is#be_v)
					(ADJP-PRD (ADJR bigger#big_adj)))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB=2 (NP-SBJ (D the#the_adj) (N bark#bark_n1))
					       (ADJP-PRD (ADJR thicker#thick_adj)
							 (PP (P than#than_conj)
							     (NP (D that#that_pron1)
								 (PP (P on#on_prep)
								     (NP (D the#the_adj) (N Scion#scion_n)))))))))))
	  (PUNC ,)
	  (ADVP (ADV so#so_adv))
	  (NP-SBJ (D the#the_adj) (CODE <font>) (N chip#chip_n2))
	  (CODE <$$font>)
	  (MD must#must_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJR longer#long_adj1) (PUNC ,) (CONJ and#and_conj1) (ADJR broader#broad_adj1))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,41.142))

( (IP-MAT (CONJ or#or_conj1)
	  (ELSE else#else_adv)
	  (NP-SBJ (D the#the_adj)
		  (N passage#passage_n)
		  (PP (P for#for_prep)
		      (NP (D the#the_adj) (CODE <font>) (N sap#sap_n1)))
		  (CODE <$$font>)
		  (PP (P in#in_prep)
		      (NP (D the#the_adj)
			  (CODE <font>)
			  (N stock#stock_n1)
			  (CODE <$$font>)
			  (CONJP (CONJ and#and_conj1)
				 (NX (N Scion#scion_n)))))
		  (PUNC ,)
		  (PUNC <paren>)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP is#be_v)
				  (ADVP (ADV chiefly#chiefly_adv))
				  (PP (P betwixt#betwixt_prep)
				      (NP (NP (D the#the_adj) (CODE <font>) (N bark#bark_n1))
					  (CODE <$$font>)
					  (CONJP (CONJ and#and_conj1)
						 (NP (D the#the_adj) (CODE <font>) (N wood#wood_n1))))))))
	  (CODE <$$font>)
	  (PUNC <$$paren>)
	  (MD will#will_v1)
	  (NEG not#not_adv)
	  (VB meet#meet_v)
	  (ADVP (ADV together#together_adv))
	  (PUNC <paren>)
	  (PP-PRN (P as#as_adv)
		  (CP-ADV (WNP-2 0)
			  (C 0)
			  (IP-SUB (NP-OB1 *T*-2)
				  (PP (P in#in_prep)
				      (NP (D the#the_adj) (N work#work_n)))
				  (NP-SBJ (PRO you#you_pron))
				  (MD will#will_v1)
				  (ADVP (ADV easily#easily_adv))
				  (VB see#see_v))))
	  (PUNC <$$paren>)
	  (CP-CAR (WNP-3 (WPRO which#which_adj))
		  (C 0)
		  (IP-SUB (NP-SBJ *T*-3)
			  (MD should#shall_v)
			  (BE be#be_v)
			  (VAN aimed#aim_v)
			  (PP (P at#at_prep)
			      (NP *T*-3))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,41.143))

( (IP-IMP (ADVP-TMP (ADV Then#then_adv))
	  (VBI lay#lay_v1)
	  (NP-OB1 (D the#the_adj)
		  (ADJ cut#cut_adj)
		  (N part#part_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (N Scion#scion_n))))
	  (PP (P on#on_prep)
	      (NP (D the#the_adj)
		  (ADJ cut#cut_adj)
		  (N part#part_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (N Stock#stock_n1)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,41.144))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI bind#bind_v)
	  (NP-OB1 (PRO it#it_pron))
	  (RP on#on_adv)
	  (PP (P with#with_prep)
	      (NP (NP (ADJ course#coarse_adj) (CODE <font>) (N Woollen-yarn#SEE_woollen_adj))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CODE <font>)
		  (CONJP (NP (NS Basses#bass_n2)))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (NP (D the#the_adj)
			     (ADJ inward#inward_adj)
			     (N peeling#peeling_n1)
			     (PP (P of#of_prep)
				 (NP (D the#the_adj) (CODE <font>) (N Witch-tree#SEE_wych_n)))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-H,41.145))

( (IP-IMP (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP bind#bind_v)
			      (PP (P with#with_prep)
				  (NP (SUCH such#such_adj) (D a#a_adj) (N material#material_adj)))
			      (PP (P as#as_adv)
				  (CP-CMP (WNP-1 0)
					  (C 0)
					  (IP-SUB (NP-SBJ *T*-1)
						  (MD will#will_v1)
						  (NEG not#not_adv)
						  (BE be#be_v)
						  (ADJP-PRD (ADJ loose#loose_adj) (PUNC ,) (CONJ or#or_conj1) (ADJ rotten#rotten_adj))
						  (PP (P by#by_prep)
						      (NP (N Midsummer#midsummer_n)))))))))
	  (PUNC ,)
	  (NP-TMP (ADV about#about_adv) (D that#that_pron1) (N time#time_n))
	  (VBI give#give_v)
	  (NP-OB2 (PRO it#it_pron))
	  (NP-OB1 (D a#a_adj)
		  (N cut#cut_n2)
		  (NP-ADV (N cross-wise#crosswise_adv)))
	  (PP (P with#with_prep)
	      (NP (D a#a_adj) (N Knife#knife_n)))
	  (IP-INF-PRP (TO to#to_prep)
		      (VB set#set_v1)
		      (NP-OB1 (D the#the_adj) (NS Prisoners#prisoner_n2))
		      (PP (P at#at_prep)
			  (NP (N liberty#liberty_n1))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,41.146))

( (IP-IMP (HVI Have#have_v)
	  (PP (P in#in_prep)
	      (NP (N readiness#readiness_n)))
	  (NP-OB1 (ADJ good#good_adj)
		  (CODE <font>)
		  (N Clay#clay_n)
		  (CODE <$$font>)
		  (PUNC ,)
		  (ADJP (ADJ free#free_adj)
			(PP (P from#from_prep)
			    (NP (NS Stones#stone_n))))
		  (PUNC ,)
		  (RRC (VAN mixt#mix_v)
		       (PP (P with#with_prep)
			   (NP (ADJ long#long_adj1) (N Hay#hay_n1)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,41.147))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI daub#daub_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P about#about_adv)
	      (NP (D the#the_adj)
		  (N Stock#stock_n1)
		  (CONJP (CONJ and#and_conj1)
			 (NX (N Scion#scion_n)))))
	  (PUNC ,)
	  (PP (NP-MSR (D a#a_adj) (ADJ full#full_adj) (N inch#inch_n1))
	      (P (P above#above_adv) (CONJ and#and_conj1) (P below#below_adv))
	      (NP (D the#the_adj)
		  (N head#head_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (N Stock#stock_n1)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,41.148))

( (IP-IMP (VBI work#work_v)
	  (NP-OB1 (PRO it#it_pron))
	  (RP up#up_adv1)
	  (PP (P round#round_adv)
	      (NP (D the#the_adj) (N Scion#scion_n)))
	  (PP (P till#till_prep)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (BEP be#be_v)
			      (ADJP-PRD (ADJ sharp#sharp_adj))
			      (PP (P at#at_prep)
				  (NP (D the#the_adj) (N top#top_n1))))))
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (D the#the_adj) (N rain#rain_n1) (N water#water_n))
			  (MD may#may_v1)
			  (VB run#run_v)
			  (CODE <P_42>)
			  (PP (P down#down_prep)
			      (NP (PRO it#it_pron)))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,42.149))

( (IP-IMP (CONJ and#and_conj1)
	  (PP (P with#with_prep)
	      (NP (D a#a_adj)
		  (N Knife#knife_n)
		  (CONJP (CONJ or#or_conj1)
			 (NX (ADJ little#little_adj) (CODE <font>) (N trowel#trowel_n)))
		  (CODE <$$font>)
		  (RRC (VAN dipt#dip_v)
		       (PP (P in#in_prep)
			   (NP (N water#water_n))))))
	  (VBI smooth#smooth_v)
	  (RP over#over_adv)
	  (NP-OB1 (D the#the_adj) (N clay#clay_n))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,42.150))

( (IP-IMP (PP (P in#in_prep)
	      (IP-PPL (DAG doing#do_v)
		      (NP-OB1 (D this#this_pron))))
	  (BEI be#be_v)
	  (ADJP-PRD (ADJ sure#sure_adj)
		    (IP-INF (NEG not#not_adv)
			    (TO to#to_prep)
			    (VB displace#displace_v)
			    (NP-OB1 (D the#the_adj) (N Scion#scion_n))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,42.151))

( (IP-MAT (ADVP (ADV Thus#thus_adv))
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB Graff#graff_v1)
	  (CODE <font>)
	  (NP-OB1 (NS Pears#pear_n) (CODE <$$font>) (PUNC ,) (CODE <font>) (NS Plums#plum_n) (CODE <$$font>) (PUNC ,) (CODE <font>) (NS Cherries#cherry_n) (CODE <$$font>) (PUNC ,) (CONJ and#and_conj1) (CODE <font>) (NS Apples#apple_n))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (BEP be#be_v)
			      (PP (P before#before_adv)
				  (CP-ADV (C 0)
					  (IP-SUB (NP-SBJ (D the#the_adj)
							  (CODE <font>)
							  (N bark#bark_n1)
							  (CODE <$$font>)
							  (PP (P of#of_prep)
							      (NP (D the#the_adj) (N Stock#stock_n1))))
						  (MD will#will_v1)
						  (VB part#part_v)
						  (PP (P from#from_prep)
						      (NP (D the#the_adj)
							  (N wood#wood_n1)
							  (PP (P of#of_prep)
							      (NP (PRO them#them_pron)))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,42.152))

( (IP-MAT (CONJ for#for_prep)
	  (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (MD will#will_v1)
			      (VB *))))
	  (PUNC ,)
	  (NP-SBJ (D the#the_adj)
		  (ADJS next#next_adj)
		  (N way#way_n1)
		  (RRC (VAG following#follow_v)))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJR better#better_adj))
	  (PUNC .))
  (ID LANGF-1696-E3-H,42.153))

( (CODE <P_114>))

( (CODE <heading>))

( (NP (N CHAP.#chapter_n) (NUM XII#twelve_adj) (PUNC .))
  (ID LANGF-1696-E3-H,114.156))

( (PP (PP (P OF#of_prep)
	  (NP (D THE#the_adj)
	      (NS ANNOYANCES#annoyance_n)
	      (PP (P ABOUT#about_adv)
		  (NP (NS FRUIT-TREES#SEE_fruit_n)))))
      (PUNC ,)
      (CONJP (CONJ AND#and_conj1)
	     (PP (P OF#of_prep)
		 (NP (Q SOME#some_pron)
		     (NS MISTAKES#mistake_n)
		     (PP (P IN#in_prep)
			 (IP-PPL (VAG (VAG PLANTING#plant_v) (CONJ AND#and_conj1) (VAG ORDERING#order_v))
				 (NP-OB1 (PRO THEM#them_pron)))))))
      (PUNC .))
  (ID LANGF-1696-E3-H,114.157))

( (CODE <$$heading>))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (ONE 1#one_adj) (PUNC .))
  (ID LANGF-1696-E3-H,114.159))

( (IP-MAT (NP-SBJ (D The#the_adj)
		  (N nature#nature_n)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (N soil#soil_n1))))
	  (BEP is#be_v)
	  (NP-PRD (D the#the_adj)
		  (ADJ chief#chief_adj)
		  (N cause#cause_n)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (N Moss#moss_n1) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (N Canker#canker_n))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,114.160))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (ADV+P therefore#therefore_adv))
	  (PP (P without#without_adv)
	      (IP-PPL (VAG altering#alter_v)
		      (NP-OB1 (D the#the_adj) (CODE <font>) (ONE one#one_adj))))
	  (CODE <$$font>)
	  (NP-SBJ (PRO you#you_pron))
	  (MD can#can_v1)
	  (ADVP (ADV scarce#scarce_adj))
	  (VB prevent#prevent_v)
	  (NP-OB1 (D the#the_adj) (OTHER other#other_adj))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,114.161))

( (IP-MAT (IP-MAT-1 (ADVP (ADV However#however_adv))
		    (NP-SBJ (PRO you#you_pron))
		    (MD may#may_v1)
		    (VB scrape#scrape_v)
		    (IP-MAT-PRN=1 (CONJ or#or_conj1)
				  (PP (P with#with_prep)
				      (NP (D a#a_adj) (CODE <font>) (N hair-cloth#haircloth_n)))
				  (CODE <$$font>)
				  (VB rub#rub_v1))
		    (NP-OB1 (D the#the_adj) (CODE <font>) (N moss#moss_n1))
		    (CODE <$$font>)
		    (RP off#off_adv)
		    (PUNC ,)
		    (PP (P after#after_adv)
			(NP (N rain#rain_n1))))
	  (PUNC ,)
	  (CONJP (CONJ or#or_conj1)
		 (PUNC <paren>)
		 (IP-MAT=1 (PP-PRN (P as#as_adv)
				   (CP-ADV (WNP-2 0)
					   (C 0)
					   (IP-SUB (NP-OB1 *T*-2)
						   (NP-SBJ (Q some#some_pron))
						   (VBP say#say_v1))))
			   (PUNC <$$paren>)
			   (VB burn#burn_v1)
			   (NP-OB1 (PRO it#it_pron))
			   (PP (P with#with_prep)
			       (NP (D a#a_adj)
				   (N bottle#bottle_n4)
				   (PP (P of#of_prep)
				       (NP (N straw#straw_n1)))))
			   (PP (P under#under_prep)
			       (NP (D the#the_adj) (N Tree#tree_n)))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,114.162))

( (IP-MAT (NP-SBJ (Q All#all_adj)
		  (CODE <font>)
		  (N Canker#canker_n)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CODE <font>)
		  (CONJP (NX (N filth#filth_n)))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (CODE <font>)
			 (NX (NS worms#worm_n))))
	  (CODE <$$font>)
	  (MD must#must_v1)
	  (BE be#be_v)
	  (VAN picked#pick_v1)
	  (ADVP (ADV clean#clean_adv))
	  (RP off#off_adv)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,114.163))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI bind#bind_v)
	  (NP-OB1 (Q some#some_pron)
		  (N clay#clay_n)
		  (RRC (ADVP (ADV well#well_adv))
		       (VAN mixt#mix_v)
		       (PP (P with#with_prep)
			   (CODE <font>)
			   (NP (N hay#hay_n1)))))
	  (CODE <$$font>)
	  (PP (P about#about_adv)
	      (NP (D the#the_adj) (CODE <font>) (ADJ canker'd#cankered_adj) (CODE <$$font>) (N place#place_n1)))
	  (PUNC :))
  (ID LANGF-1696-E3-H,114.164))

( (IP-IMP (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (N Tree#tree_n))
			      (VBP grow#grow_v)
			      (ADVP (FP but#but_prep) (ADV poorly#poorly_adv))
			      (PUNC ,)
			      (CP-CAR (WNP-1 (WPRO which#which_adj))
				      (C 0)
				      (IP-SUB (NP-SBJ *T*-1)
					      (BEP is#be_v)
					      (PP (P for#for_prep)
						  (NP (D the#the_adj) (QS most#most_adj) (N part#part_n1)))
					      (VAN caused#cause_v1)
					      (PP (P by#by_prep)
						  (NP (D the#the_adj)
						      (ADJ ill#ill_adj)
						      (N temper#temper_n)
						      (PP (P of#of_prep)
							  (NP (D the#the_adj) (CODE <font>) (N soil#soil_n1))))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (VBI open#open_v)
	  (NP-OB1 (D the#the_adj)
		  (N ground#ground_n)
		  (PP (P about#about_adv)
		      (PUNC ,)
		      (NP (D the#the_adj) (CODE <font>) (NS roots#root_n1))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,114.165))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI put#put_v)
	  (RP in#in_adv)
	  (NP-OB1 (Q some#some_pron)
		  (CODE <font>)
		  (N manure#manure_n)
		  (CODE <$$font>)
		  (ADJP (ADJ proper#proper_adj)
			(IP-INF (TO to#to_prep)
				(VB cure#cure_v1)
				(NP-OB1 (PRO it#it_pron)))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,114.166))

( (IP-MAT (CODE <font>)
	  (IP-PPL-SBJ (VAG Slitting#slit_v)
		      (CODE <$$font>)
		      (NP-OB1 (D the#the_adj) (CODE <font>) (N bark#bark_n1)))
	  (CODE <$$font>)
	  (BEP is#be_v)
	  (NP-PRD (D an#a_adj)
		  (ADJ excellent#excellent_adj)
		  (ADJ additional#additional_adj)
		  (N help#help_n)
		  (PP (P to#to_prep)
		      (NP (QS most#most_adj)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj) (ADJ foresaid#foresaid_adj) (NS evils#evil_adj))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,114.167))

( (IP-MAT (CONJ and#and_conj1)
	  (ALSO also#also_adv)
	  (PP (P for#for_prep)
	      (CODE <font>)
	      (NP (N bark-binding#SEE_bark_n1)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (Q some#some_pron))
	  (VBP advice#advise_v)
	  (CP-THT (C that#that_conj)
		  (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N bark#bark_n1))
			  (CODE <$$font>)
			  (BEP be#be_v)
			  (VAN cut#cut_v)
			  (IP-PPL (VAG according#accord_v)
				  (PP (P to#to_prep)
				      (NP (D the#the_adj)
					  (CODE <font>)
					  (N grain#grain_n1)
					  (CODE <$$font>)
					  (PP (P of#of_prep)
					      (NP (PRO it#it_pron))))))
			  (PUNC ,)
			  (FRAG (FRAG (PP (P as#as_adv)
					  (PP (P in#in_prep)
					      (CODE <font>)
					      (NP (NS Apple-trees#apple-tree_n) (CODE <$$font>) (PUNC ,) (CODE <font>) (NS Pear-trees#pear-tree_n) (CODE <$$font>) (PUNC ,) (X &c.#et-cetera_n))))
				      (CODE <font>)
				      (ADVP (ADV straight#straight_adj) (CODE <$$font>) (RP down#down_adv)))
				(PUNC ;)
				(CONJP (FRAG (PP (P in#in_prep)
						 (CODE <font>)
						 (NP (NS Cherries#cherry_n) (CODE <$$font>) (PUNC ,) (X &c.#et-cetera_n)))
					     (CODE <font>)
					     (ADVP (ADV round#round_adv)
						   (CODE <$$font>)
						   (P about#about_adv)
						   (NP (D the#the_adj) (NS Trees#tree_n))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,114.168))

( (CODE <P_115>))

( (IP-MAT (CONJ But#but_prep)
	  (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (VBN found#find_v)
	  (PP (P in#in_prep)
	      (NP (D the#the_adj) (ADJ same#same_adj) (N land#land_n1)))
	  (PUNC ,)
	  (IP-SMC (IP-SMC (NP-SBJ (Q some#some_pron)
				  (NS kinds#kind_n)
				  (PP (P of#of_prep)
				      (CODE <font>)
				      (NP (NS Fruit-trees#SEE_fruit_n))))
			  (CODE <$$font>)
			  (ADJP-PRD (ADV very#very_adj)
				    (ADJ subject#subject_adj)
				    (PP (P to#to_prep)
					(NP (Q some#some_pron)
					    (PP (P of#of_prep)
						(NP (D these#these_pron) (CODE <font>) (NS evils#evil_adj)))))))
		  (CODE <$$font>)
		  (PUNC ;)
		  (CONJP (CONJ and#and_conj1)
			 (IP-INF (NP-SBJ (OTHERS others#other_adj))
				 (VB prosper#prosper_v)
				 (ADVP (ADV very#very_adj) (ADV well#well_adv)))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,115.170))

( (IP-MAT (IP-MAT-1 (PP (P when#when_adv)
			(CP-ADV (C 0)
				(IP-SUB (ADVP-TMP (ADV once#once_adv))
					(NP-SBJ (PRO you#you_pron))
					(VBP discover#discover_v)
					(NP-OB1 (D this#this_pron)))))
		    (PUNC ,)
		    (PUNC <paren>)
		    (PP-PRN (P because#because_adv)
			    (CP-ADV (C 0)
				    (IP-SUB (NP-SBJ-2 (PRO it@#it_pron))
					    (BEP @'s#be_v)
					    (PP (ADV utterly#utterly_adv)
						(P in#in_prep)
						(ADJP (ADJ vain#vain_adj)))
					    (IP-INF-2 (TO to#to_prep)
						      (VB make#make_v1)
						      (IP-INF (NP-SBJ (N ground#ground_n)
								      (CONJ and#and_conj1)
								      (NS trees#tree_n)
								      (PUNC ,)
								      (PP (P of#of_prep)
									  (NP (ADJ different#different_adj) (CODE <font>) (N genius#genius_n))))
							      (CODE <$$font>)
							      (VB agree#agree_v)
							      (ADVP (ADV together#together_adv)))))))
		    (PUNC <$$paren>)
		    (NP-SBJ (PRO you#you_pron))
		    (MD must#must_v1)
		    (VB make#make_v1)
		    (IP-SMC (NP-SBJ-3 (PRO it#it_pron))
			    (NP-PRD (PRO$ your#your_pron) (N business#business_n))
			    (IP-INF-3 (PP (P by#by_prep)
					  (NP (NS degrees#degree_n)))
				      (PUNC ,)
				      (TO to#to_prep)
				      (VB change#change_v)
				      (NP-OB1 (PRO$ your#your_pron) (NS Trees#tree_n))
				      (PUNC ,)
				      (PP (P till#till_prep)
					  (CP-ADV (C 0)
						  (IP-SUB (NP-SBJ (PRO you#you_pron))
							  (HVP have#have_v)
							  (VBN left#leave_v1)
							  (NP-OB1 (Q none#none_pron)
								  (CP-REL (WPP-4 (P against#against_prep)
										 (WNP (WPRO which#which_adj)))
									  (C 0)
									  (IP-SUB (NP-SBJ (PRO$ your#your_pron) (CODE <font>) (N soil#soil_n1))
										  (CODE <$$font>)
										  (VBP beareth#bear_v1)
										  (NP-OB1 (SUCH such#such_adj)
											  (D an#a_adj)
											  (ADJ implacable#implacable_adj)
											  (N hatred#hatred_n)
											  (PP *T*-4)))))))))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (VB furnish#furnish_v)
			   (NP-OB1 (PRO it#it_pron))
			   (PP (P with#with_prep)
			       (NP (SUCH such#such_adj)
				   (PP (P as#as_adv)
				       (CP-CMP (WNP-5 0)
					       (C 0)
					       (IP-SUB (IP-SUB-6 (NP-SBJ *T*-5)
								 (MD will#will_v1)
								 (VB flourish#flourish_v))
						       (PUNC ,)
						       (CONJP (CONJ and#and_conj1)
							      (IP-SUB=6 (BE be#be_v)
									(ADJP-PRD (ADJ fruitful#fruitful_adj)))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,115.171))

( (IP-IMP (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (Q any#any_adj)
				      (PP (P of#of_prep)
					  (NP (PRO$ your#your_pron) (NS Trees#tree_n))))
			      (BEP are#be_v)
			      (CODE <font>)
			      (ADJP-PRD (ADJ galled#galled_adj2))
			      (CODE <$$font>)
			      (PUNC ,)
			      (PP (PP (P by#by_prep)
				      (IP-PPL (BAG being#be_v)
					      (VAN bound#bind_v)
					      (PP (P to#to_prep)
						  (CODE <font>)
						  (NP (NS stakes#stake_n1)))))
				  (CODE <$$font>)
				  (PUNC ,)
				  (CONJP (CONJ or#or_conj1)
					 (PP (P by#by_prep)
					     (CODE <font>)
					     (NP (NS thorns#thorn_n))))
				  (CODE <$$font>)
				  (PUNC ,)
				  (CONJP (CONJ or#or_conj1)
					 (NP-ADV (OTHER+N otherwise#otherwise_n)))))))
	  (PUNC ,)
	  (VBI lay#lay_v1)
	  (NP-OB1 (Q some#some_pron) (CODE <font>) (N clay#clay_n))
	  (CODE <$$font>)
	  (PP (P upon#upon_prep)
	      (NP (D the#the_adj) (ADJ gall'd#galled_adj2) (N place#place_n1))))
  (ID LANGF-1696-E3-H,115.172))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI wrap#wrap_v)
	  (CODE <font>)
	  (NP-OB1 (NS hay-bands#hay-band_n))
	  (CODE <$$font>)
	  (PP (P about#about_adv)
	      (NP (PRO them#them_pron)))
	  (PUNC .))
  (ID LANGF-1696-E3-H,115.173))

( (IP-MAT (NP-SBJ (ADJ Big#big_adj)
		  (CODE <font>)
		  (NS Plants#plant_n1)
		  (CODE <$$font>)
		  (ALSO also#also_adv)
		  (PUNC ,)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (PP (P upon#upon_prep)
				      (NP (PRO$ their#their_adj) (N removal#removal_n)))
				  (HVP have#have_v)
				  (HVN had#have_v)
				  (IP-SMC (NP-SBJ (PRO$ their#their_adj) (NS tops#top_n1))
					  (VAN cut#cut_v)
					  (RP off#off_adv)))))
	  (PUNC ,)
	  (BEP are#be_v)
	  (ADJP-PRD (ADJ apt#apt_adj)
		    (IP-INF (TO to#to_prep)
			    (VB die#die_v1)
			    (PP (P from#from_prep)
				(NP (D the#the_adj)
				    (N place#place_n1)
				    (CP-REL (WNP-2 0)
					    (C 0)
					    (IP-SUB (NP-SBJ (PRO they#they_pron))
						    (BED were#be_v)
						    (VAN cut#cut_v)
						    (RP off#off_adv)
						    (PP (P at#at_prep)
							(NP *T*-2))))))
			    (PUNC ,)
			    (PP (P to#to_prep)
				(NP (D the#the_adj)
				    (ADJS next#next_adj)
				    (CODE <font>)
				    (N sprig#sprig_n2)
				    (CODE <$$font>)
				    (PUNC ,)
				    (CONJP (CONJ or#or_conj1)
					   (CODE <font>)
					   (NX (N branch#branch_n)))
				    (CODE <$$font>)
				    (PP (P upon#upon_prep)
					(NP (PRO them#them_pron)))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,115.174))

( (IP-MAT-1 (NP-SBJ (D these#these_pron) (ADJ dead#dead_adj) (NS parts#part_n1))
	    (MD ought#ought_v)
	    (TO to#to_prep)
	    (BE be#be_v)
	    (VAN cut#cut_v)
	    (RP off#off_adv)
	    (ADJP-LOC (ADJ close#close_adj)
		      (PP (P to#to_prep)
			  (NP (D the#the_adj)
			      (ADJS next#next_adj)
			      (ADJ good#good_adj)
			      (CODE <font>)
			      (N twig#twig_n1)
			      (CODE <$$font>)
			      (CONJP (CONJ or#or_conj1)
				     (CODE <font>)
				     (NX (N shoot#shoot_n1))))))
	    (CODE <$$font>)
	    (PUNC ,)
	    (IP-MAT-PRN=1 (CONJ and#and_conj1)
			  (VAN covered#cover_v1)
			  (PP (P with#with_prep)
			      (CODE <font>)
			      (NP (N clay#clay_n))))
	    (CODE <$$font>)
	    (PUNC ,)
	    (PP (P as#as_adv)
		(PP (P in#in_prep)
		    (CODE <font>)
		    (NP (N graffing#graffing_n))))
	    (CODE <$$font>)
	    (PUNC ,)
	    (CP-ADV (C that#that_conj)
		    (IP-SUB (IP-SUB-2 (NP-SBJ (D the#the_adj) (N head#head_n1))
				      (MD may#may_v1)
				      (BE be#be_v)
				      (ADVP (ADV well#well_adv))
				      (VBN grown#grow_v)
				      (RP over#over_adv)
				      (PUNC ,)
				      (PP (P by#by_prep)
					  (NP (SUCH such#such_adj)
					      (CODE <font>)
					      (N twig#twig_n1)
					      (CODE <$$font>)
					      (CONJP (CONJ or#or_conj1)
						     (CODE <font>)
						     (NX (N shoot#shoot_n1))))))
			    (CODE <$$font>)
			    (PUNC ,)
			    (CONJP (CONJ and#and_conj1)
				   (IP-SUB=2 (NP-SBJ (D the#the_adj) (N wet#wet_n1))
					     (VAN prevented#prevent_v)
					     (PP (P of#of_prep)
						 (IP-PPL (VAG getting#get_v)
							 (PP (P into#into_prep)
							     (NP (D the#the_adj) (CODE <font>) (N pith#pith_n)))
							 (CODE <$$font>)
							 (PUNC ,)
							 (IP-INF-PRP (TO to#to_prep)
								     (VB damage#damage_v)
								     (NP-OB1 (D the#the_adj) (N Tree#tree_n)))))))))
	    (PUNC .))
  (ID LANGF-1696-E3-H,115.175))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 2#two_adj) (PUNC .))
  (ID LANGF-1696-E3-H,115.176))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Hares#hare_n) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Rabbets#rabbit_n1))
	  (CODE <$$font>)
	  (BEP are#be_v)
	  (ADJP-PRD (ADV very#very_adj)
		    (ADJ mischievous#mischievous_adj)
		    (PP (P to#to_prep)
			(CODE <font>)
			(NP (NP (NS Nurseries#nursery_n))
			    (CODE <$$font>)
			    (PUNC ,)
			    (CONJP (CONJ and#and_conj1)
				   (NP (ADJ young#young_adj) (CODE <font>) (NS Orchards#orchard_n))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P by#by_prep)
	      (CODE <font>)
	      (IP-PPL (VAG peeling#peel_v1)
		      (CODE <$$font>)
		      (RP off#off_adv)
		      (NP-OB1 (D the#the_adj)
			      (CODE <font>)
			      (N bark#bark_n1)
			      (CODE <$$font>)
			      (PP (P of#of_prep)
				  (NP (D the#the_adj) (CODE <font>) (NS Plants#plant_n1))))))
	  (CODE <$$font>)
	  (PUNC :))
  (ID LANGF-1696-E3-H,115.177))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO$ your#your_pron) (N fence#fence_n))
			      (BEP be#be_v)
			      (NP-PRD (D a#a_adj)
				      (N wall#wall_n1)
				      (PUNC ,)
				      (CONJP (CONJ or#or_conj1)
					     (NX (ADJ close#close_adj) (CODE <P_116>) (N pale#pale_n1)))
				      (PUNC ,)
				      (CONJP (CONJ or#or_conj1)
					     (NX (N water#water_n)))))))
	  (PUNC ,)
	  (NP-SBJ-1 (EX there@#there_adv))
	  (BEP @'s#be_v)
	  (NP-1 (Q little#little_adj)
		(N danger#danger_n)
		(PP (P of#of_prep)
		    (NP (PRO them#them_pron))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,116.178))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (NP-SBJ (SUCH such#such_adj)
					      (NS fences#fence_n)
					      (PP (P about#about_adv)
						  (CODE <font>)
						  (NP (NS Orchards#orchard_n))))
				      (CODE <$$font>)
				      (BEP are#be_v)
				      (ADJP-PRD (ADJ rare#rare_adj1)))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB (NP-SBJ (Q no#no_adj) (OTHER other#other_adj))
					     (MD can#can_v1)
					     (VB keep#keep_v)
					     (NP-OB1 (PRO them#them_pron))
					     (RP out#out_adv))))))
	  (PUNC ,)
	  (NP-SBJ-1 (Q some#some_pron) (N expedient#expedient_adj))
	  (MD must#must_v1)
	  (BE be#be_v)
	  (VAN made#make_v1)
	  (NP-OB1 (N use#use_n))
	  (PP (P of#of_prep)
	      (NP *-1))
	  (PUNC .))
  (ID LANGF-1696-E3-H,116.179))

( (IP-MAT (NP-SBJ (Q Some#some_pron))
	  (HVP have#have_v)
	  (VBN used#use_v)
	  (CODE <font>)
	  (NP-OB1 (NS Hay-ropes#SEE_hay_n1)
		  (CODE <$$font>)
		  (PUNC ,)
		  (RRC (VAN bound#bind_v)
		       (PP (P about#about_adv)
			   (NP (D the#the_adj) (N Tree#tree_n)))
		       (PUNC ,)
		       (NP-MSR (PP (P from#from_prep)
				   (NP (D the#the_adj) (N ground#ground_n)))
			       (PP (P to#to_prep)
				   (NP (D a#a_adj) (ADJ sufficient#sufficient_adj) (N height#height_n))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,116.180))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (D this#this_pron))
	  (BED were#be_v)
	  (ADJP-PRD (ADJ endless#endless_adj))
	  (PP (P in#in_prep)
	      (NP (D a#a_adj) (CODE <font>) (N Nursery#nursery_n)))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,116.181))

( (IP-MAT (NP-SBJ (PRO it#it_pron))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (DAN done#do_v)
	  (PP (P in#in_prep)
	      (NP (D an#a_adj) (CODE <font>) (N Orchard#orchard_n)))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-H,116.182))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ-1 (EX there#there_adv))
	  (BEP are#be_v)
	  (NP-1 (OTHER other#other_adj)
		(NS ways#way_n1)
		(CP-EOP (WNP-2 0)
			(IP-INF (NP-ADV *T*-2)
				(TO to#to_prep)
				(BE be#be_v)
				(VAN preferred#prefer_v)
				(PP (P before#before_adv)
				    (NP (PRO it#it_pron))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,116.183))

( (IP-MAT (NP-SBJ (OTHERS Others#other_adj))
	  (PP (ADV+P therefore#therefore_adv))
	  (CODE <font>)
	  (VBP dawb#daub_v)
	  (CODE <$$font>)
	  (NP-OB1 (D the#the_adj)
		  (NS bodies#body_n)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (NS trees#tree_n))))
	  (RP over#over_adv)
	  (PP (P with#with_prep)
	      (CODE <font>)
	      (NP (N Tar#tar_n1)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (IP-SUB (NP-SBJ *T*-1)
					  (IP-PPL (BAG being#be_v)
						  (VAN used#use_v)
						  (ADJP-SPR (ADJ alone#alone_adj)))
					  (PUNC ,)
					  (VBP endangers#endanger_v)
					  (NP-OB1 (D the#the_adj)
						  (N life#life_n)
						  (PP (P of#of_prep)
						      (NP (ADJP (ADV very#very_adj) (ADJ young#young_adj))
							  (CODE <font>)
							  (NS Plants#plant_n1)))))
				  (CODE <$$font>)
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (IP-SUB (NP-SBJ *con*)
						 (ADVP (ADV extreamly#extremely_adv))
						 (VBP hardens#harden_v)
						 (NP-OB1 (D the#the_adj) (CODE <font>) (N bark#bark_n1))))
				  (CODE <$$font>)
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (IP-SUB (NP-SBJ *con*)
						 (NP-ADV (OTHER+N otherwise#otherwise_n))
						 (VBP hurts#hurt_v)
						 (NP-OB1 (PRO them#them_pron))))))))
	  (PUNC ,)
	  (CP-CAR (WNP-2 (WD which#which_adj) (N evil#evil_adj))
		  (C 0)
		  (IP-SUB (NP-SBJ *T*-2)
			  (BEP is#be_v)
			  (VAN prevented#prevent_v)
			  (PP (P by#by_prep)
			      (IP-PPL (IP-PPL (VAG mixing#mix_v)
					      (NP-OB1 (D the#the_adj) (CODE <font>) (N Tar#tar_n1))
					      (CODE <$$font>)
					      (PP (P with#with_prep)
						  (NP (Q any#any_adj)
						      (N kind#kind_n)
						      (PP (P of#of_prep)
							  (NP (N Grease#grease_n))))))
				      (PUNC ,)
				      (CONJP (CONJ and#and_conj1)
					     (IP-PPL (VAG boiling#boil_v)
						     (NP-OB1 (PRO them#them_pron))
						     (PP (P on#on_prep)
							 (NP (D a#a_adj) (N fire#fire_n)))
						     (PUNC ,)
						     (PP (P so#so_adv)
							 (PP (P as#as_adv)
							     (CP-ADV (C 0)
								     (IP-SUB (NP-SBJ (Q both#both_pron))
									     (MD may#may_v1)
									     (VB incorporate#incorporate_v)))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,116.184))

( (IP-IMP (IP-IMP (ADVP-TMP (ADV then#then_adv))
		  (PP (P with#with_prep)
		      (NP (D a#a_adj)
			  (N brush#brush_n2)
			  (PUNC ,)
			  (CONJP (CONJ or#or_conj1)
				 (NX (ADJ little#little_adj) (N broom#broom_n)))))
		  (PUNC ,)
		  (VBI daub#daub_v)
		  (RP over#over_adv)
		  (NP-OB1 (D the#the_adj)
			  (N body#body_n)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj) (N Tree#tree_n))))
		  (PUNC ,)
		  (ADVP (ADVR as#as_adv)
			(ADV high#high_adv)
			(PP (P as#as_adv)
			    (CP-CMP (WNP-1 0)
				    (C 0)
				    (IP-SUB (NP-MSR *T*-1)
					    (CODE <font>)
					    (NP-SBJ (N Hare#hare_n) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (N Rabbet#rabbit_n1))
					    (CODE <$$font>)
					    (MD can#can_v1)
					    (VB reach#reach_v1))))))
	  (PUNC ;)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT (PP (P if#if_conj)
			     (CP-ADV (C 0)
				     (IP-SUB (NP-SBJ (D this#this_pron))
					     (BEP be#be_v)
					     (DAN done#do_v)
					     (PP (P in#in_prep)
						 (CODE <font>)
						 (NP (NPR November#NA))))))
			 (CODE <$$font>)
			 (PUNC ,)
			 (NP-SBJ (PRO it#it_pron))
			 (MD will#will_v1)
			 (VB preserve#preserve_v)
			 (NP-OB1 (D the#the_adj) (CODE <font>) (NS Trees#tree_n))
			 (CODE <$$font>)
			 (PP (P for#for_prep)
			     (NP (D that#that_pron1) (ADJ whole#whole_adj) (N year#year_n)))
			 (PUNC ,)
			 (PP (P with#with_prep)
			     (NP (D that#that_pron1)
				 (IP-PPL (NP-TMP (NUM once#once_adv))
					 (DAG doing#do_v))))
			 (PUNC ,)
			 (IP-PPL-ABS (NP-SBJ (PRO it#it_pron))
				     (BAG being#be_v)
				     (NP-PRD (D the#the_adj) (CODE <font>) (N winter#winter_n1) (N time#time_n) (CODE <$$font>) (FP only#only_adj))
				     (CP-CLF (WNP-2 0)
					     (C that#that_conj)
					     (IP-SUB (NP-TMP *T*-2)
						     (NP-SBJ (PRO they#they_pron))
						     (MD will#will_v1)
						     (VB feed#feed_v)
						     (PP (P upon#upon_prep)
							 (NP (D the#the_adj) (CODE <font>) (N bark#bark_n1))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-H,116.185))

( (IP-MAT (NP-SBJ (Q Some#some_pron))
	  (VBP use#use_v)
	  (NP-OB1 (N Grease#grease_n) (FP alone#alone_adj))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,116.186))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP-TMP (ADV then#then_adv))
	  (NP-SBJ (PRO it#it_pron))
	  (MD may#may_v1)
	  (VB require#require_v)
	  (IP-INF (TO to#to_prep)
		  (BE be#be_v)
		  (VAN laid#lay_v1)
		  (RP on#on_adv)
		  (CODE <font>)
		  (NP-TMP (NUM twice#twice_adv)
			  (CODE <$$font>)
			  (PP (P in#in_prep)
			      (NP (D a#a_adj) (N Winter#winter_n1)))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,116.187))

( (CODE <P_117>))

( (IP-MAT (NP-SBJ (NP (Q Some#some_pron)
		      (ADJ thin#thin_adj)
		      (N stuff#stuff_n1)
		      (PP (RP out#out_adv)
			  (P of#of_prep)
			  (NP (D a#a_adj)
			      (CODE <font>)
			      (N House#house_n1)
			      (PP (P of#of_prep)
				  (NP (N Office#office_n))))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (NP (D the#the_adj)
			     (ADJ thick#thick_adj)
			     (RRC (RRC (VAN tempered#temper_v)
				       (PP (P with#with_prep)
					   (NP (N Water#water_n))))
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (RRC (VAN brush'd#brush_v2)
					      (RP on#on_adv)
					      (NP-TMP (NUM once#once_adv))
					      (PP (P in#in_prep)
						  (NP (D a#a_adj) (N Winter#winter_n1)))))))))
	  (HVP hath#have_v)
	  (BEN been#be_v)
	  (ADVP-TMP (ADV often#often_adv))
	  (VAN used#use_v)
	  (PP (P with#with_prep)
	      (NP (ADJ good#good_adj) (N success#success_n)))
	  (PUNC .))
  (ID LANGF-1696-E3-H,117.189))

( (IP-MAT (CONJ Or#or_conj1)
	  (NP-SBJ (D the#the_adj)
		  (CODE <font>)
		  (N White-wash#whitewash_n)
		  (CODE <$$font>)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ (NS Plasterers#plasterer_n))
				  (VBP white#white_v1)
				  (NP-OB1 (NS Houses#house_n1))
				  (PP (P with#with_prep)
				      (NP *T*-1))))
		  (PUNC ,)
		  (RRC (DAN done#do_v)
		       (NP-TMP (NUM once#once_adv)
			       (NP-MSR (D a#a_adj) (N Year#year_n)))
		       (PP (P over#over_prep)
			   (NP (D the#the_adj) (NS Trees#tree_n)))
		       (PP (P with#with_prep)
			   (NP (D a#a_adj) (N Brush#brush_n2)))))
	  (PUNC ,)
	  (VBP preserves#preserve_v)
	  (NP-OB1 (PRO them#them_pron))
	  (PP (P from#from_prep)
	      (CODE <font>)
	      (NP (NS Hares#hare_n) (CODE <$$font>) (PUNC ,) (CODE <font>) (NS Rabbits#rabbit_n1) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (NS Deer#deer_n)))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-H,117.190))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 3#three_adj) (PUNC .))
  (ID LANGF-1696-E3-H,117.191))

( (IP-IMP (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP find#find_v)
			      (CP-THT (C 0)
				      (CODE <font>)
				      (IP-SUB (NP-SBJ (NS Pismires#pismire_n) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NS Ants#ant_n1))
					      (CODE <$$font>)
					      (VBP breed#breed_v)
					      (PP (P (P about#about_adv) (PUNC ,) (CONJ or#or_conj1) (ADJ near#near_adj))
						  (NP (D the#the_adj)
						      (CODE <font>)
						      (NS roots#root_n1)
						      (CODE <$$font>)
						      (PP (P of#of_prep)
							  (NP (Q any#any_adj)
							      (PP (P of#of_prep)
								  (NP (PRO$ your#your_pron) (NS Trees#tree_n))))))))))))
	  (PUNC ,)
	  (VBI cast#cast_v)
	  (ADVP-DIR (ADV away#away_adv))
	  (NP-OB1 (D the#the_adj)
		  (N Earth#earth_n1)
		  (CP-REL (WNP-1 0)
			  (C 0)
			  (IP-SUB (NP-SBJ (PRO they#they_pron))
				  (VBP lodge#lodge_v)
				  (PP (P in#in_prep)
				      (NP *T*-1)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,117.192))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI supply#supply_v1)
	  (NP-OB1 (PRO$ its#its_adj) (N place#place_n1))
	  (PP (P with#with_prep)
	      (NP (Q some#some_pron) (CODE <font>) (ADJ stiff#stiff_adj) (N clay#clay_n)))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-H,117.193))

( (IP-MAT (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (VBP breed#breed_v)
			      (ADVP (ADV distant#distantly_adv))
			      (PP (P in#in_prep)
				  (NP (ADJ several#several_adj) (NS places#place_n1))))))
	  (PUNC ,)
	  (NP-SBJ (Q some#some_pron))
	  (VBP direct#direct_v)
	  (IP-INF (TO to#to_prep)
		  (VB daub#daub_v)
		  (NP-OB1 (D the#the_adj) (N Tree#tree_n))
		  (ADVP (ADV about#about_adv))
		  (PP (P with#with_prep)
		      (CODE <font>)
		      (NP (N Tar#tar_n1))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (PRO$ their#their_adj) (NS Feet#foot_n))
			  (MD may#may_v1)
			  (BE be#be_v)
			  (VAN taken#take_v)
			  (PP (P in#in_prep)
			      (NP (PRO it#it_pron)))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,117.194))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (PRO you#you_pron))
	  (VBD heard#hear_v)
	  (ADVP-TMP (ADV already#already_adj))
	  (CP-THT (C 0)
		  (IP-SUB (NP-SBJ (D that@#that_pron1))
			  (BEP @'s#be_v)
			  (ADJP-PRD (ADJ prejudicial#prejudicial_adj1)
				    (PP (P to#to_prep)
					(NP (ADJ young#young_adj) (NS Trees#tree_n))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,117.195))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (NP-SBJ (PRO they#they_pron))
				      (VBP pester#pester_v1)
				      (NP-OB1 (PRO you#you_pron))
				      (ADVP (ADV extreamly#extremely_adv)))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB (NP-SBJ (PRO$ your#your_pron) (N Tree#tree_n))
					     (BEP be#be_v)
					     (ADJP-PRD (ADJ young#young_adj)))))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB bind#bind_v)
	  (NP-OB1 (D a#a_adj)
		  (ADJ single#single_adj)
		  (CODE <font>)
		  (N list#list_n3)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NX (N shread#shred_n)
			     (CODE <$$font>)
			     (PP (P of#of_prep)
				 (CODE <font>)
				 (NP (N Cloth#cloth_n))))))
	  (CODE <$$font>)
	  (PP (P about#about_adv)
	      (NP (PRO it#it_pron)))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,117.196))

( (IP-IMP (CONJ and#and_conj1)
	  (NP-TMP (NUM once#once_adv)
		  (NP-MSR (D a#a_adj) (N week#week_n)))
	  (PUNC <paren>)
	  (PP-PRN (P when#when_adv)
		  (CODE <font>)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (NS Buds#bud_n1) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Blossoms#blossom_n))
				  (CODE <$$font>)
				  (BEP are#be_v)
				  (VAG putting#put_v)
				  (ADVP (ADV forth#forth_adv)))))
	  (PUNC ,)
	  (IP-MAT-PRN (CONJ for#for_prep)
		      (NP-SBJ (D that#that_pron1))
		      (BEP is#be_v)
		      (NP-PRD (D the#the_adj)
			      (ADJ chief#chief_adj)
			      (N time#time_n)
			      (CP-REL (WNP-1 0)
				      (C 0)
				      (IP-SUB (NP-TMP *T*-1)
					      (NP-SBJ (PRO they#they_pron))
					      (VBP prejudice#prejudice_v)
					      (NP-OB1 (PRO them#them_pron))))))
	  (PUNC <$$paren>)
	  (CODE <font>)
	  (VBI daub#daub_v)
	  (CODE <$$font>)
	  (NP-OB1 (D the#the_adj) (CODE <font>) (N Cloth#cloth_n))
	  (CODE <$$font>)
	  (RP over#over_adv)
	  (PP (P with#with_prep)
	      (CODE <font>)
	      (NP (N Tar#tar_n1)))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-H,117.197))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 4#four_adj) (PUNC .))
  (ID LANGF-1696-E3-H,117.198))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Moles#mole_n3))
	  (CODE <$$font>)
	  (BEP are#be_v)
	  (IP-INF (TO to#to_prep) (BE be#be_v) (VAN kill'd#kill_v))
	  (PUNC ,)
	  (PP (ADV especially#especially_adv)
	      (P in#in_prep)
	      (NP (NS Seed-plots#seed-plot_n) (CONJ and#and_conj1) (NS Nurseries#nursery_n)))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,117.199))

( (IP-MAT (NP-SBJ (NS Spring-traps#SEE_spring_n1)
		  (PUNC ;)
		  (CONJ or#or_conj1)
		  (NS Box-traps#SEE_box_n2)
		  (RRC *ICH*-1))
	  (BEP are#be_v)
	  (NP-PRD (ADJS best#best_adj)
		  (IP-INF-PRP (TO to#to_prep)
			      (VB destroy#destroy_v)
			      (NP-OB1 (PRO them#them_pron))))
	  (PUNC ,)
	  (RRC-1 (ADVP (NEG not#not_adv) (ADV easily#easily_adv))
		 (VAN describ'd#describe_v))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,117.200))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ *con*)
	  (BEP are#be_v)
	  (ADVP-TMP (ADV now#now_adv))
	  (VAN known#know_v)
	  (ADVP (ADV almost#almost_adv) (ADV generally#generally_adv))
	  (PUNC .))
  (ID LANGF-1696-E3-H,117.201))

( (CODE <P_118>))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (VBN heard#hear_v)
	  (CP-THT (C that#that_conj)
		  (CODE <font>)
		  (IP-SUB (NP-SBJ (N Water#water_n) (NS Rats#rat_n1))
			  (CODE <$$font>)
			  (MD will#will_v1)
			  (VB spoil#spoil_v1)
			  (NP-OB1 (D a#a_adj) (ADJ whole#whole_adj) (CODE <font>) (N Nursery#nursery_n))
			  (CODE <$$font>)
			  (PUNC ,)
			  (IP-PPL (IP-PPL (VAG getting#get_v)
					  (PP (P through#through_prep)
					      (CODE <font>)
					      (NP (NS Moleholes#mole-hole_n))))
				  (CODE <$$font>)
				  (PUNC ;)
				  (CONJP (CONJ and#and_conj1)
					 (IP-PPL (VAG (VAG barking#bark_v2) (CONJ or#or_conj1) (VAG eating#eat_v))
						 (NP-OB1 (D the#the_adj) (ADJ young#young_adj) (CODE <font>) (NS Roots#root_n1)))))))
	  (CODE <$$font>)
	  (PUNC :))
  (ID LANGF-1696-E3-H,118.203))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (VBD found#find_v)
	  (IP-SMC (NP-SBJ (ADJ several#several_adj) (NS Roots#root_n1))
		  (ADVP (ADV so#so_adv))
		  (VAN served#serve_v1))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,118.204))

( (IP-MAT (CONJ and#and_conj1)
	  (IP-PPL-ABS (NP-SBJ (PRO it#it_pron))
		      (BAG being#be_v)
		      (ADJP-LOC (ADJ near#near_adj)
				(NP (D a#a_adj) (CODE <font>) (N Fish-pond#fish-pond_n))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (PRO I#i_pron))
	  (VBD suspected#suspect_v)
	  (CP-THT (C 0)
		  (IP-SUB (NP-SBJ (PRO it#it_pron))
			  (BED was#be_v)
			  (DAN done#do_v)
			  (PP (P by#by_prep)
			      (NP (PRO them#them_pron)))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,118.205))

( (IP-MAT (CONJ but#but_prep)
	  (IP-PPL (VAG finding#find_v)
		  (ALSO also#also_adv)
		  (NP-OB1 (D a#a_adj) (CODE <font>) (N Snake#snake_n))
		  (CODE <$$font>)
		  (PP (P in#in_prep)
		      (NP (D a#a_adj)
			  (N hole#hole_n)
			  (PP (P among#among_prep)
			      (NP (D the#the_adj) (NS Roots#root_n1))))))
	  (PUNC ,)
	  (NP-SBJ (PRO I#i_pron))
	  (VBD knew#know_v)
	  (NEG not#not_adv)
	  (CP-QUE-SUB (WQ whether#whether_pron)
		      (C 0)
		      (IP-SUB (NP-SBJ (D that#that_pron1))
			      (MD might#may_v1)
			      (NEG not#not_adv)
			      (BE be#be_v)
			      (NP-PRD (D the#the_adj) (N Enemy#enemy_n1))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,118.206))

( (IP-MAT (CODE <font>)
	  (NP-SBJ-1 (NS Efts#eft_n1)
		    (CODE <$$font>)
		    (CODE {HELSINKI:Ests})
		    (PUNC ,)
		    (CONJ or#or_conj1)
		    (PUNC <paren>)
		    (PP-PRN (P as#as_adv)
			    (CP-ADV (WNP-2 0)
				    (C 0)
				    (IP-SUB (NP-SBJ (Q some#some_pron))
					    (VBP call#call_v)
					    (IP-SMC (NP-PRD *T*-2)
						    (NP-SBJ (PRO them#them_pron))))))
		    (PUNC <$$paren>)
		    (CODE <font>)
		    (NS Askers#eschar_n))
	  (CODE <$$font>)
	  (PUNC ,)
	  (BEP are#be_v)
	  (ALSO also#also_adv)
	  (VAN said#say_v1)
	  (IP-INF (NP-SBJ *-1)
		  (TO to#to_prep)
		  (BE be#be_v)
		  (ADJP-PRD (ADJ pernicious#pernicious_adj1)
			    (PP (P to#to_prep)
				(NP (NS Trees#tree_n)))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,118.207))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (D these#these_pron) (NUM three#three_adj) (ADJ last#last_adv) (NS accidents#accident_n))
	  (BEP are#be_v)
	  (ADJP-PRD (ADVR so#so_adv)
		    (ADJ rare#rare_adj1)
		    (CONJP (CONJ and#and_conj1)
			   (ADJX (ADJ inconsiderable#inconsiderable_adj)))
		    (PUNC ,)
		    (CP-DEG (C that#that_conj)
			    (IP-SUB (NP-SBJ-1 (PRO it@#it_pron))
				    (BEP @'s#be_v)
				    (ADJP-PRD (ADJ needless#needless_adv))
				    (IP-INF-1 (IP-INF (TO to#to_prep)
						      (VB labour#labour_v)
						      (NP-MSR (Q much#much_adj))
						      (PP (P about#about_adv)
							  (NP (NS Remedies#remedy_n)
							      (PP (P against#against_prep)
								  (NP (PRO them#them_pron))))))
					      (PUNC ,)
					      (CONJP (IP-INF (FP only#only_adj)
							     (PP (P as#as_adv)
								 (CP-ADV (C 0)
									 (IP-SUB (NP-SBJ (NS men#man_n1))
										 (VBP find#find_v)
										 (NP-OB1 (PRO them#them_pron)))))
							     (TO to#to_prep)
							     (VB destroy#destroy_v)
							     (NP-OB1 (PRO them#them_pron))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,118.208))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 5#five_v) (PUNC .))
  (ID LANGF-1696-E3-H,118.209))

( (IP-MAT (NP-SBJ (D The#the_adj)
		  (ADJS greatest#great_adj)
		  (N prejudice#prejudice_n)
		  (PP (P to#to_prep)
		      (CODE <font>)
		      (NP (N fruit#fruit_n))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (BEP is#be_v)
	  (PP (P by#by_prep)
	      (CODE <font>)
	      (NP (NP (NS blastings#blasting_n))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CODE <font>)
		  (NP (NS frosts#frost_n)
		      (CODE <$$font>)
		      (RRC (ADVP (ADV immediately#immediately_adv))
			   (VAG succeeding#succeed_v)
			   (NP-OB1 (N rain#rain_n1))))
		  (PUNC ,)
		  (CODE <font>)
		  (NP (NS Caterpillars#caterpillar_n))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NP (ADJ black#black_adj)
			     (NS Flies#fly_n1)
			     (CODE <$$font>)
			     (PUNC ,)
			     (CP-REL (WNP-1 0)
				     (C that#that_conj)
				     (IP-SUB (NP-SBJ *T*-1)
					     (VBP eat#eat_v)
					     (RP up#up_adv1)
					     (CODE <font>)
					     (NP-OB1 (NS buds#bud_n1) (CODE <$$font>) (PUNC ,) (CODE <font>) (NS leaves#leaf_n1) (CODE <$$font>) (PUNC ,) (CONJ and#and_conj1) (CODE <font>) (NS blossoms#blossom_n))))))))
	  (CODE <$$font>)
	  (PUNC :))
  (ID LANGF-1696-E3-H,118.210))

( (IP-MAT (NP-SBJ-1 (EX There@#there_adv))
	  (BEP @'s#be_v)
	  (NP-1 (ONE one#one_adj) (N way#way_n1))
	  (VAN used#use_v)
	  (IP-INF-PRP (TO to#to_prep)
		      (VB help#help_v)
		      (PP (P in#in_prep)
			  (NP (Q all#all_adj) (D these#these_pron) (NS cases#case_n1)))
		      (PUNC ,)
		      (PP (P for#for_prep)
			  (CODE <font>)
			  (NP (N Orchard-fruit#SEE_orchard_n))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-H,118.211))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (PRO I#i_pron))
	  (VBP know#know_v)
	  (NEG not#not_adv)
	  (CP-QUE-SUB (WADVP-1 (WADV how#how_adv))
		      (C 0)
		      (IP-SUB (ADVP *T*-1)
			      (NP-SBJ (PRO it#it_pron))
			      (MD should#shall_v)
			      (BE be#be_v)
			      (ADJP-PRD (ADJ useful#useful_adj)
					(PP (P for#for_prep)
					    (NP (Q any#any_adj)
						(PP (P but#but_prep)
						    (NP (D the#the_adj) (ADJ last#last_adv) (NUM two#two_adj)))
						(PUNC ,)
						(CP-REL (WPP-2 (P for#for_prep)
							       (WNP (WPRO which#which_adj)))
							(C 0)
							(IP-SUB (PP *T*-2)
								(NP-SBJ (PRO I#i_pron))
								(MD dare#dare_v1)
								(VB commend#commend_v)
								(NP-OB1 (PRO it#it_pron)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,118.212))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-SBJ (D that#that_pron1))
	  (BEP is#be_v)
	  (PUNC ,)
	  (CP-THT (C that#that_conj)
		  (IP-IMP (PP (P when#when_adv)
			      (CP-ADV (C 0)
				      (IP-SUB (PP (P in#in_prep)
						  (NP (D the#the_adj) (N Spring#spring_n1)))
					      (NP-SBJ (PRO you#you_pron))
					      (VBP perceive#perceive_v)
					      (IP-INF (NP-SBJ (D these#these_pron)
							      (CODE <font>)
							      (NS Caterpillars#caterpillar_n)
							      (CODE <$$font>)
							      (PUNC ,)
							      (CONJP (CONJ or#or_conj1)
								     (CODE <font>)
								     (NX (NS Flies#fly_n1))))
						      (CODE <$$font>)
						      (VB appear#appear_v)))))
			  (PUNC ,)
			  (VBI make#make_v1)
			  (NP-OB1 (NS fires#fire_n))
			  (PP (P of#of_prep)
			      (NP (Q+N something#something_n)
				  (CP-REL (WNP-1 0)
					  (C that#that_conj)
					  (IP-SUB (NP-SBJ *T*-1)
						  (MD will#will_v1)
						  (VB smoak#smoke_v)))))
			  (PUNC ,)
			  (ADJP-LOC (ADJP (ADVR so#so_adv)
					  (ADJ near#near_adj)
					  (NP (D the#the_adj) (CODE <font>) (N Orchard#orchard_n)))
				    (CODE <$$font>)
				    (PUNC ,)
				    (CONJP (CONJ and#and_conj1)
					   (PP (P in#in_prep)
					       (NP (SUCH such#such_adj) (NS places#place_n1))))
				    (CP-DEG (C that#that_conj)
					    (IP-SUB (NP-SBJ (D the#the_adj) (N wind#wind_n1))
						    (MD may#may_v1)
						    (VB carry#carry_v)
						    (NP-OB1 (D the#the_adj) (CODE <font>) (N smoak#smoke_n))
						    (CODE <$$font>)
						    (NP-MSR (QP (ADVR as#as_adv) (Q much#much_adj))
							    (PP *ICH*-2))
						    (PP (P through#through_prep)
							(NP (D the#the_adj) (NS Trees#tree_n)))
						    (PP-2 (P as#as_adv)
							  (CP-CMP (WNP-3 0)
								  (C 0)
								  (IP-SUB (NP-MSR *T*-3)
									  (NP-SBJ *exp*)
									  (MD may#may_v1)
									  (BE be#be_v)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,118.213))

( (IP-MAT (NP-SBJ (D A#a_adj)
		  (N thing#thing_n1)
		  (RRC (ADVP (ADV frequently#frequently_adv))
		       (VAN used#use_v)))
	  (BEP is#be_v)
	  (CODE <font>)
	  (NP-PRD (NS Hempsheaves#SEE_hemp_n))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CODE <P_119>)
	  (PUNC <paren>)
	  (PP-PRN (P as#as_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (PRO it@#it_pron))
				  (BEP @'s#be_v)
				  (VAN called#call_v))))
	  (PUNC <$$paren>)
	  (IP-PPL (BAG being#be_v)
		  (NP-PRD (D the#the_adj)
			  (N stalk#stalk_n1)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj) (CODE <font>) (N Hemp#hemp_n))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (PP (P when#when_adv)
		      (CP-ADV (C 0)
			      (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N tow#tow_n1))
				      (CODE <$$font>)
				      (BEP is#be_v)
				      (VAN separated#separate_v)
				      (PP (P from#from_prep)
					  (NP (PRO it#it_pron)))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,119.214))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO it@#it_pron))
	  (BEP @s#be_v)
	  (ADVP (ADV certainly#certainly_adv))
	  (ADJP-PRD (ADV very#very_adj) (ADJ good#good_adj))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,119.215))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (NP (ADJ bad#bad_adj) (CODE <font>) (N Chaff#chaff_n1))
		  (CODE <$$font>)
		  (PUNC ;)
		  (CODE <font>)
		  (CONJP (NP (ADJ wet#wet_adj) (N straw#straw_n1)))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NP (ADJ moldy#mouldy_adj1) (N Hay#hay_n1)))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (NP (Q any#any_adj)
			     (N thing#thing_n1)
			     (PP (P of#of_prep)
				 (NP (D that#that_pron1) (N nature#nature_n))))))
	  (MD may#may_v1)
	  (VB serve#serve_v1)
	  (NP-OB1 (N turn#turn_n))
	  (PUNC .))
  (ID LANGF-1696-E3-H,119.216))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Snails#snail_n1))
	  (CODE <$$font>)
	  (BEP are#be_v)
	  (ADJP-PRD (ADJ pernicious#pernicious_adj1)
		    (PP (P to#to_prep)
			(CODE <font>)
			(NP (N Wall-fruit#SEE_wall_n1))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,119.217))

( (IP-IMP (PP (ADV+P therefore#therefore_adv))
	  (VBI destroy#destroy_v)
	  (NP-OB1 (QP (ADVR as#as_adv)
		      (Q many#many_adj)
		      (PP (P of#of_prep)
			  (NP (PRO them#them_pron))))
		  (PP (P as#as_adv)
		      (CP-CMP (WNP-1 0)
			      (C 0)
			      (IP-SUB (NP-OB1 *T*-1)
				      (NP-SBJ (PRO you#you_pron))
				      (MD can#can_v1)
				      (VB *)))))
	  (PUNC ,)
	  (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (IP-INF (ADVP (ADVS best#best_adj))
				      (TO to#to_prep)
				      (BE be#be_v)
				      (VAN discovered#discover_v))
			      (PUNC ,)
			      (CP-CAR (WNP-2 (WPRO which#which_adj))
				      (C 0)
				      (IP-SUB (NP-SBJ *T*-2)
					      (BEP is#be_v)
					      (ADVP-TMP (ADV early#early_adv)
							(PP (P in#in_prep)
							    (NP (D the#the_adj) (N morning#morning_n)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,119.218))

( (IP-MAT (CONJ And#and_conj1)
	  (IP-INF-PRP (TO to#to_prep)
		      (VB preserve#preserve_v)
		      (NP-OB1 (PRO$ your#your_pron) (CODE <font>) (N Wall-fruit#SEE_wall_n1))
		      (CODE <$$font>)
		      (PP (P from#from_prep)
			  (CODE <font>)
			  (NP (ADJ blasting#blasting_adj)
			      (NS winds#wind_n1)
			      (CODE <$$font>)
			      (CONJP (CONJ and#and_conj1)
				     (CODE <font>)
				     (NX (NS Frosts#frost_n))))))
	  (CODE <$$font>)
	  (PUNC ;)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ necessary#necessary_adj))
	  (IP-INF-1 (TO to#to_prep)
		    (VB cover#cover_v1)
		    (NP-OB1 (PRO them#them_pron))
		    (PP (P in#in_prep)
			(NP (D the#the_adj)
			    (NS nights#night_n)
			    (PUNC ,)
			    (CONJP (CONJ and#and_conj1)
				   (NX (ADJ cold#cold_adj) (NS days#day_n)))))
		    (PP (P by#by_prep)
			(IP-PPL (VAG hanging#hang_v)
				(PP (P before#before_adv)
				    (NP (PRO them#them_pron)))
				(CODE <font>)
				(NP-OB1 (NS Matts#mat_n1) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NS Blankets#blanket_n)))))
	  (CODE <$$font>)
	  (PUNC :))
  (ID LANGF-1696-E3-H,119.219))

( (IP-MAT (NP-SBJ (Q some#some_pron))
	  (VBP stick#stick_v1)
	  (CODE <font>)
	  (NP-OB1 (NS branches#branch_n)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (N broom#broom_n))))
	  (CODE <$$font>)
	  (PP (P before#before_adv)
	      (NP (D the#the_adj)
		  (CODE <font>)
		  (NS blossoms#blossom_n)
		  (CODE <$$font>)
		  (CONJP (CONJ and#and_conj1)
			 (NX (ADJ young#young_adj) (ADJ tender#tender_adj) (CODE <font>) (N fruit#fruit_n)))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-H,119.220))

( (IP-IMP (IP-INF-PRP (TO To#to_prep)
		      (VB preserve#preserve_v)
		      (CODE <font>)
		      (NP-OB1 (ADJ ripe#ripe_adj) (N fruit#fruit_n))
		      (CODE <$$font>)
		      (PP (P from#from_prep)
			  (CODE <font>)
			  (NP (NS birds#bird_n))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (VBI spread#spread_v)
	  (NP-OB1 (D an#a_adj) (ADJ old#old_adj) (CODE <font>) (N Net#net_n1))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (PP (P before#before_adv)
		  (NP (D the#the_adj) (CODE <font>) (N Wall-fruit#SEE_wall_n1)))
	      (CODE <$$font>)
	      (PUNC ,)
	      (CONJP (CONJ or#or_conj1)
		     (PP (P upon#upon_prep)
			 (NP (D the#the_adj) (CODE <font>) (NS Dwarf-trees#cNA)))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-H,119.221))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 6#six_adj) (PUNC .))
  (ID LANGF-1696-E3-H,119.222))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (VBN endeavour'd#endeavour_v)
	  (IP-INF (TO to#to_prep)
		  (VB direct#direct_v)
		  (NP-OB1 (D the#the_adj) (N Reader#reader_n))
		  (PP (P by#by_prep)
		      (NP (ADJ true#true_adj)
			  (NS Rules#rule_n1)
			  (PUNC ,)
			  (CP-REL (WNP-1 (WPRO which#which_adj))
				  (C 0)
				  (IP-SUB (PP (P if#if_conj)
					      (IP-SMC (NP-SBJ *T*-1)
						      (VAN observed#observe_v)))
					  (PUNC ,)
					  (NP-SBJ (PRO he#he_pron))
					  (MD would#will_v1)
					  (NEG not#not_adv)
					  (VB fall#fall_v)
					  (PP (P into#into_prep)
					      (NP (D those#those_pron)
						  (ADJ vulgar#vulgar_adj)
						  (NS Errors#error_n)
						  (CP-REL (WNP-2 (WPRO which#which_adj))
							  (C 0)
							  (IP-SUB (NP-SBJ *T*-2)
								  (BEP are#be_v)
								  (ADJP-PRD (ADJ frequent#frequent_adj))
								  (PP (P in#in_prep)
								      (NP (N practice#practice_n))))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,119.223))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (PP (P for#for_prep)
				  (NP (N want#want_adj)
				      (PP (P of#of_prep)
					  (NP (N warning#warning_n1)))))
			      (PUNC ,)
			      (NP-SBJ (Q some#some_pron) (NS people#perry_n2))
			      (MD may#may_v1)
			      (VB continue#continue_v)
			      (PP (P in#in_prep)
				  (NP (PRO them#them_pron)))
			      (PUNC ,)
			      (IP-PPL (VAG thinking#think_v2)
				      (CP-THT (C 0)
					      (IP-SUB (NP-SBJ (PRO they#they_pron))
						      (HVP have#have_v)
						      (NP-OB1 (D a#a_adj)
							      (ADJR further#further_adj)
							      (N knowledge#knowledge_n)
							      (CONJP (CONJ or#or_conj1)
								     (NX (ADJR better#better_adj) (N Judgment#judgement_n))))))))))
	  (PUNC ,)
	  (NP-SBJ (PRO I#i_pron))
	  (MD shall#shall_v)
	  (VB endeavour#endeavour_v)
	  (IP-INF (TO to#to_prep)
		  (VB refute#refute_v)
		  (NP-OB1 (D those#those_pron)
			  (CP-REL (WNP-1 0)
				  (C 0)
				  (IP-SUB (NP-SBJ (PRO I#i_pron))
					  (HVP have#have_v)
					  (NP-MSR (QS most#most_adj))
					  (VBN taken#take_v)
					  (NP-OB1 (N notice#notice_n))
					  (PP (P off#of_prep)
					      (NP *T*-1))
					  (PP (P in#in_prep)
					      (NP (N use#use_n)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,119.224))

( (CODE <P_120>))

( (IP-MAT (LS 1#NA)
	  (PUNC .)
	  (NP-SBJ (Q Some#some_pron))
	  (VBP set#set_v1)
	  (CODE <font>)
	  (NP-OB1 (NS Trees#tree_n))
	  (CODE <$$font>)
	  (ADVP (ADVR too#too_adv) (ADV deep#deep_adv))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,120.226))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (VBP plead#plead_v)
	  (PP (P for#for_prep)
	      (NP (PRO it#it_pron)))
	  (PUNC ,)
	  (CP-THT (C that#that_conj)
		  (IP-SUB (NP-ADV (OTHER+N otherwise#otherwise_n))
			  (NP-SBJ (D the#the_adj) (N Tree#tree_n))
			  (MD may#may_v1)
			  (BE be#be_v)
			  (PP (P in#in_prep)
			      (NP (N danger#danger_n)
				  (PP (P of#of_prep)
				      (NP (N dying#dying_n1)))))
			  (PUNC ,)
			  (PP (P if#if_conj)
			      (CP-ADV (C 0)
				      (IP-SUB (NP-SBJ (D the#the_adj) (ADJS next#next_adj) (N Summer#summer_n1))
					      (VBP prove#prove_v)
					      (ADJP-PRD (ADV very#very_adj) (ADJ hot#hot_adj)))))))
	  (PUNC :))
  (ID LANGF-1696-E3-H,120.227))

( (IP-MAT (CONJ But#but_prep)
	  (IP-INF-PRP (TO to#to_prep)
		      (VB prevent#prevent_v)
		      (NP-OB1 (D that#that_pron1) (N hazard#hazard_n)))
	  (NP-SBJ-1 (PRO it@#it_pron))
	  (BEP @'s#be_v)
	  (ADJP-PRD (ADJR better#better_adj))
	  (IP-INF-1 (IP-INF (TO to#to_prep)
			    (VB raise#raise_v1)
			    (NP-OB1 (N Earth#earth_n1))
			    (PP (P about#about_adv)
				(NP (PRO it#it_pron))))
		    (PUNC ,)
		    (CONJP (CONJ and#and_conj1)
			   (IP-INF (IP-INF-2 (TO *)
					     (VB cover#cover_v1)
					     (NP-OB1 (PRO it#it_pron))
					     (PP (P with#with_prep)
						 (NP (N Dung#dung_n1) (PUNC ,) (N Fearn#fern_n1) (PUNC ,) (CONJ or#or_conj1) (N Straw#straw_n1))))
				   (PUNC ,)
				   (CONJP (CONJ and#and_conj1)
					  (IP-INF=2 (PP (P in#in_prep)
							(NP (D the#the_adj) (N Summer#summer_n1)))
						    (PP (P with#with_prep)
							(NP (D the#the_adj)
							    (N Grass#grass_n1)
							    (RRC (VAN mowed#mow_v1)
								 (PP (P from#from_prep)
								     (NP (NS Grass-plots#grass-plot_n))))))))))
		    (PUNC ,)
		    (CONJP (CONJ and#and_conj1)
			   (IP-INF (TO *)
				   (VB set#set_v1)
				   (NP-OB1 (PRO it#it_pron))
				   (ADVP (NEG not#not_adv) (ADVR too#too_adv) (ADV deep#deep_adv))))
		    (CP-CAR (WPP-3 (WADV+P whereby#whereby_adv))
			    (C 0)
			    (IP-SUB (PP *T*-3)
				    (NP-SBJ (D the#the_adj) (N Tree#tree_n))
				    (MD may#may_v1)
				    (VB put#put_v)
				    (ADVP (ADV forth#forth_adv))
				    (NP-OB1 (PRO$ its#its_adj) (NS Roots#root_n1))
				    (PP (P in#in_prep)
					(NP (D the#the_adj)
					    (ADJ upper#upper_adj)
					    (N Turf#turf_n1)
					    (PUNC ,)
					    (CP-REL (WNP-4 (WPRO which#which_adj))
						    (C 0)
						    (IP-SUB (NP-SBJ *T*-4)
							    (BEP is#be_v)
							    (ADVP (ADV generally#generally_adv))
							    (NP-PRD (D the#the_adj)
								    (ADJS best#best_adj)
								    (N Land#land_n1)
								    (PP (P in#in_prep)
									(NP (Q all#all_adj) (N Ground#ground_n)))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,120.228))

( (IP-MAT (CONJ For#for_prep)
	  (PP (P in#in_prep)
	      (NP (Q some#some_pron) (N Land#land_n1)))
	  (NP-SBJ (D a#a_adj) (ADJ deep#deep_adj) (N hole#hole_n))
	  (MD will#will_v1)
	  (VB draw#draw_v)
	  (RP in#in_adv)
	  (NP-OB1 (N Water#water_n))
	  (PP (P in#in_prep)
	      (NP (D the#the_adj)
		  (N Winter#winter_n1)
		  (PUNC ,)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (IP-PPL (VAG standing#stand_v)
					  (PP (P (P under#under_prep) (CONJ and#and_conj1) (P about#about_adv))
					      (NP (D the#the_adj) (NS Roots#root_n1))))
				  (PUNC ,)
				  (MD may#may_v1)
				  (VB (VB chill#chill_v) (CONJ and#and_conj1) (VB starve#starve_v))
				  (NP-OB1 (PRO them#them_pron))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,120.229))

( (IP-MAT (NP-SBJ (OTHER other#other_adj) (NS Lands#land_n1))
	  (PP (P in#in_prep)
	      (NP (D the#the_adj) (N bottom#bottom_n)))
	  (BEP are#be_v)
	  (CODE <font>)
	  (ADJP-PRD (ADJ Rocky#rocky_adj1))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,120.230))

( (IP-MAT (NP-SBJ *con*)
	  (HVP have#have_v)
	  (NP-OB1 (NP (D a#a_adj)
		      (CODE <font>)
		      (N Fox-bent#cNA)
		      (CODE <$$font>)
		      (PUNC ,)
		      (CODE <font>)
		      (CONJP (NX (N Cat-brain#SEE_cat_n1))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NP (NP (ADJ stiff#stiff_adj) (N Clay#clay_n))
			     (CODE <$$font>)
			     (PUNC ,)
			     (CONJP (CONJ and#and_conj1)
				    (CODE <font>)
				    (NP (ADJ binding#binding_adj) (N Gravel#gravel_n)))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (ADJP (ADJ unfit#unfit_adj)
			(CP-TMC (WNP-1 0)
				(IP-INF (FOR for#for_prep)
					(NP-SBJ (NS Trees#tree_n))
					(TO to#to_prep)
					(VB root#root_v1)
					(PP (P in#in_prep)
					    (NP *T*-1))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,120.231))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (ADVP (ADV yet#yet_adv))
	  (MD may#may_v1)
	  (HV have#have_v)
	  (NP-OB1 (D that#that_pron1)
		  (N depth#depth_n)
		  (PP (P of#of_prep)
		      (NP (N Earth#earth_n1)))
		  (PP (P above#above_adv)
		      (NP (PRO it#it_pron))))
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (Q some#some_pron)
				  (CODE <font>)
				  (NS Fruit-trees#SEE_fruit_n)
				  (CODE <$$font>)
				  (RRC (BAG being#be_v)
				       (VAN set#set_v1)
				       (ADJP-SPR (ADJ light#light_adj1))))
			  (PUNC ,)
			  (MD may#may_v1)
			  (VB prosper#prosper_v)
			  (ADVP (ADV reasonably#reasonably_adv) (ADV well#well_adv))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,120.232))

( (IP-MAT (LS 2#NA)
	  (PUNC .)
	  (NP-SBJ (OTHERS Others#other_adj))
	  (PP (P for#for_prep)
	      (NP (N curiosity#curiosity_n)))
	  (VBP use#use_v)
	  (IP-PPL-OB1 (VAG graffing#graff_v1)
		      (NP-OB1 (ADJ several#several_adj)
			      (NS kinds#kind_n)
			      (PP (P of#of_prep)
				  (NP (N Fruit#fruit_n))))
		      (PP (P on#on_prep)
			  (NP (ONE one#one_adj) (N Stock#stock_n1)))
		      (PUNC ,)
		      (CP-CAR (WNP-1 (WPRO which#which_adj))
			      (C 0)
			      (IP-SUB (NP-SBJ *T*-1)
				      (HVP hath#have_v)
				      (ADVP-TMP (ADV often#often_adv))
				      (NP-OB1 (D this#this_pron)
					      (N Evil#evil_adj)
					      (PUNC ,)
					      (CP-THT-PRN (C that#that_conj)
							  (IP-SUB-2 (NP-SBJ (D the#the_adj) (ONE one#one_adj) (N kind#kind_n))
								    (PUNC <paren>)
								    (IP-PPL (BAG being#be_v)
									    (PP (P of#of_prep)
										(NP (ADJ swifter#swifter_n)
										    (N growth#growth_n1)
										    (PP (P than#than_conj)
											(NP (D the#the_adj) (OTHER other#other_adj))))))
								    (PUNC <$$paren>)
								    (VBP overtops#overtop_v)
								    (IP-SUB-PRN=2 (CONJ and#and_conj1)
										  (VBP keeps#keep_v)
										  (ADVP (ADV under#under_adv)))
								    (NP-OB1 (PRO$ its#its_adj) (N fellow#fellow_n))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,120.233))

( (IP-MAT (CONJ But#but_prep)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D a#a_adj) (N Man#man_n1))
			      (HVP have#have_v)
			      (NP-OB1 (QP (D a#a_adj) (Q few#few_adj))
				      (NS Trees#tree_n))
			      (PP (P in#in_prep)
				  (NP (D a#a_adj) (ADJ secure#secure_adj) (N place#place_n1))))))
	  (PUNC ,)
	  (NP-SBJ (PRO he#he_pron))
	  (MD may#may_v1)
	  (VB graff#graff_v1)
	  (NP-OB1 (NUMP (NUM two#two_adj) (CONJ or#or_conj1) (NUM three#three_adj))
		  (NS sorts#sort_n2))
	  (PP (P on#on_prep)
	      (NP (ONE one#one_adj)
		  (N Head#head_n1)
		  (PP (P of#of_prep)
		      (NP (N choice#choice_n)
			  (N Summer#summer_n1)
			  (CODE <P_121>)
			  (N Fruit#fruit_n)
			  (PUNC ,)
			  (CP-REL (WPP-1 (WADV+P whereof#whereof_adv))
				  (C 0)
				  (IP-SUB (PP *T*-1)
					  (NP-SBJ (PRO he#he_pron))
					  (BEP is#be_v)
					  (ADJP-PRD (ADJ content#content_adj2)
						    (PP (P with#with_prep)
							(NP (NP-MSR (D a#a_adj) (ADJ little#little_adj))
							    (N Fruit#fruit_n)
							    (PP (P of#of_prep)
								(NP (Q each#each_adj) (N kind#kind_n)))
							    (PP (P of#of_prep)
								(NP (N eating#eating_n) (FP only#only_adj))))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,121.234))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P by#by_prep)
	      (NP (N pruning#pruning_n2)))
	  (NP-SBJ (PRO he#he_pron))
	  (MD may#may_v1)
	  (VB make#make_v1)
	  (IP-INF (NP-SBJ (PRO them#them_pron))
		  (VB grow#grow_v)
		  (ADJP-SPR (NP-MSR (Q somewhat#somewhat_n))
			    (ADJ equal#equal_adj)))
	  (PUNC .))
  (ID LANGF-1696-E3-H,121.235))

( (IP-MAT (LS 3#NA)
	  (PUNC .)
	  (IP-MAT-1 (NP-SBJ (Q Some#some_pron))
		    (PP (RP out#out_adv)
			(P of#of_prep)
			(NP (N curiosity#curiosity_n)))
		    (PUNC <paren>)
		    (PP-PRN (P instead#instead_adv)
			    (PP (P of#of_prep)
				(CODE <font>)
				(NP (N Clay#clay_n))))
		    (CODE <$$font>)
		    (PUNC <$$paren>)
		    (PP (P when#when_adv)
			(CP-ADV (C 0)
				(IP-SUB (NP-SBJ (PRO they#they_pron))
					(VBP graff#graff_v1)
					(CODE <font>)
					(NP-OB1 (NS Trees#tree_n)))))
		    (CODE <$$font>)
		    (PUNC ,)
		    (VBP cover#cover_v1)
		    (NP-OB1 (D the#the_adj)
			    (NS Heads#head_n1)
			    (PP (P of#of_prep)
				(NP (D the#the_adj) (NS Stocks#stock_n1))))
		    (PP (P with#with_prep)
			(CODE <font>)
			(NP (N Lime#lime_n1)
			    (CODE <$$font>)
			    (RRC (VAN mix'd#mix_v)
				 (PP (P with#with_prep)
				     (NP (N Hair#hair_n)))))))
	  (PUNC ;)
	  (CONJP (IP-MAT=1 (NP-SBJ (OTHERS others#other_adj))
			   (PP (P with#with_prep)
			       (CODE <font>)
			       (NP (NP (N Bees-wax#beeswax_n))
				   (CODE <$$font>)
				   (CONJP (CONJ or#or_conj1)
					  (NP (Q some#some_pron)
					      (SUCH such#such_adj)
					      (NS things#thing_n1)
					      (RRC (VAN compounded#compound_v))))
				   (PUNC ;)
				   (CP-REL (WNP-2 (D the#the_adj)
						  (ADJ first#first_adj)
						  (WPP (P of#of_prep)
						       (WNP (WPRO which#which_adj))))
					   (C 0)
					   (IP-SUB (NP-SBJ *T*-2)
						   (VBP groweth#grow_v)
						   (ADJP-PRD (ADVR so#so_adv)
							     (ADJ hard#hard_adj)
							     (CP-DEG (C that#that_conj)
								     (IP-SUB (IP-SUB-3 (NP-SBJ (D the#the_adj) (N Stock#stock_n1))
										       (MD can@#can_v1)
										       (NEG @not#not_adv)
										       (VB grow#grow_v)
										       (IP-INF-PRP (TO to#to_prep) (VB cover#cover_v1)))
									     (PUNC ,)
									     (CONJP (CONJ nor#nor_conj1)
										    (IP-SUB=3 (NP-SBJ (D the#the_adj) (CODE <font>) (N Scion#scion_n))
											      (CODE <$$font>)
											      (VB enlarge#enlarge_v)
											      (NP-OB1 (PRO it#it_pron)
												      (N self#self_pron)
												      (PP (P as#as_adv)
													  (CP-ADV (WADVP-4 0)
														  (C 0)
														  (IP-SUB (ADVP *T*-4)
															  (NP-SBJ (PRO it#it_pron))
															  (MD would#will_v1)
															  (VB *))))))))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,121.236))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj) (N Lime#lime_n1))
	  (VBP kills#kill_v)
	  (ADVP-TMP (ADV often#often_adv))
	  (NP-OB1 (N Stock#stock_n1) (CONJ and#and_conj1) (Q all#all_adj))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-OB1 *T*-1)
			      (MD will#will_v1)
			      (VB *)
			      (NP-SBJ (N salt#salt_n1)
				      (N Clay#clay_n)
				      (PUNC ,)
				      (ADJP (SUCH such#such_adj)
					    (PP (P as#as_adv)
						(CP-CMP (WNP-2 0)
							(C 0)
							(IP-SUB (NP-SBJ *T*-2)
								(BEP is#be_v)
								(VAN used#use_v)
								(PP (P on#on_prep)
								    (NP (NS Drinking-Vessels#SEE_drinking_n)))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,121.237))

( (IP-MAT (NP-SBJ (D the#the_adj) (ADJ latter#latter_adj))
	  (BEP is#be_v)
	  (CONJ either#either_pron)
	  (VAN melted#melt_v1)
	  (PP (P by#by_prep)
	      (NP (D the#the_adj)
		  (N heat#heat_n)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (N Sun#sun_n1)
			  (PP (P in#in_prep)
			      (NP (N Summer#summer_n1)))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,121.238))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (VBP runs#run_v)
	  (PP (P off#off_adv)
	      (NP (D the#the_adj) (N Stock#stock_n1)))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,121.239))

( (IP-MAT (CONJ and#and_conj1)
	  (IP-PPL (BAG being#be_v)
		  (ADJP-PRD (ADJ thin#thin_adj)))
	  (PUNC ,)
	  (NP-SBJ (D the#the_adj)
		  (N heat#heat_n)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (N Sun#sun_n1))))
	  (VBP hardens#harden_v)
	  (NP-OB1 (D the#the_adj)
		  (N Sap#sap_n1)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-OB1 *T*-1)
				  (NP-SBJ (D the#the_adj) (N Stock#stock_n1))
				  (VBP puts#put_v)
				  (RP up#up_adv1)
				  (PP (P to#to_prep)
				      (NP (D a#a_adj) (N Crust#crust_n)))
				  (PUNC ,)
				  (CP-ADV (C that#that_conj)
					  (IP-SUB (NP-SBJ (PRO it#it_pron))
						  (VBP groweth#grow_v)
						  (NEG not#not_adv)
						  (PP (P to#to_prep)
						      (NP (N bark#bark_n1) (CONJ or#or_conj1) (N wood#wood_n1)))
						  (PUNC ,)
						  (PP (P as#as_adv)
						      (CP-ADV (WADVP-2 0)
							      (C 0)
							      (IP-SUB (ADVP *T*-2)
								      (NP-SBJ (PRO it#it_pron))
								      (MD should#shall_v)
								      (DO do#do_v)))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,121.240))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (BEP be#be_v)
			      (ADJP-PRD (ADJ compounded#compounded_adj)
					(PP (P of#of_prep)
					    (NP (ADJP (ADVR so#so_adv) (ADJ hard#hard_adj))
						(D a#a_adj)
						(N substance#substance_n)
						(CP-DEG (C that#that_conj)
							(IP-SUB (NP-SBJ (PRO it#it_pron))
								(VBP melteth#melt_v1)
								(NEG not#not_adv)))))))))
	  (PUNC ,)
	  (NP-SBJ (PRO it#it_pron))
	  (HVP hath#have_v)
	  (NP-OB1 (D the#the_adj)
		  (ADJ like#like_adj)
		  (N effect#effect_n)
		  (PP (P as#as_adv)
		      (NP (D the#the_adj) (N Lime#lime_n1))))
	  (PUNC :)
	  (PP (P So#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (PP (P upon#upon_prep)
				  (NP (N tryal#trial_n1)))
			      (PUNC ,)
			      (NP-SBJ-1 (EX there#there_adv))
			      (BEP is#be_v)
			      (NP-1 (Q+N nothing#nothing_pron)
				    (ADJP (ADJR better#better_adj)
					  (PP (P than#than_conj)
					      (NP (ADJ good#good_adj)
						  (N Clay#clay_n)
						  (RRC (RRC (VAN mix'd#mix_v)
							    (PP (P with#with_prep)
								(NP (ADJ long#long_adj1) (N Hay#hay_n1))))
						       (PUNC ;)
						       (CONJP (CONJ and#and_conj1)
							      (RRC (VAN laid#lay_v1)
								   (RP on#on_adv)
								   (ADJP-SPR (NP-MSR (Q somewhat#somewhat_n))
									     (ADJ thick#thick_adj))))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,121.241))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (D that#that_pron1))
	  (VBP keeps#keep_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P from#from_prep)
	      (NP (NP (D the#the_adj)
		      (N heat#heat_n)
		      (PP (P of#of_prep)
			  (NP (D the#the_adj) (N Sun#sun_n1))))
		  (PUNC ,)
		  (ADVP (ADVR as#as_adv)
			(ADV well#well_adv)
			(PP (P as#as_adv)
			    (NP (QP (ADVR too#too_adv) (Q much#much_adj))
				(N wet#wet_n1))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,121.242))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P with#with_prep)
	      (NP (N Hay#hay_n1)))
	  (NP-SBJ (PRO it#it_pron))
	  (MD will#will_v1)
	  (VB keep#keep_v)
	  (RP on#on_adv)
	  (NP-MSR (ADJP (Q much#much_adj)
			(ADJR longer#long_adj1)
			(PP (P than#than_conj)
			    (NP (OTHER+N otherwise#otherwise_n)))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,121.243))

( (CODE <P_122>))

( (IP-MAT (LS 4#NA)
	  (PUNC .)
	  (NP-SBJ (Q Many#many_adj))
	  (VBP neglect#neglect_v)
	  (IP-PPL-OB1 (VAG keeping#keep_v)
		      (NP-OB1 (D the#the_adj)
			      (NS Heads#head_n1)
			      (PP (P of#of_prep)
				  (NP (NS Stocks#stock_n1))))
		      (ADJP-SPR (ADJ clay'd#clayed_adj))
		      (PP (P after#after_adv)
			  (NP (D the#the_adj)
			      (ADJ first#first_adj)
			      (N time#time_n)
			      (PP (P when#when_adv)
				  (CP-ADV (C 0)
					  (IP-SUB (NP-SBJ (PRO they#they_pron))
						  (BEP are#be_v)
						  (VAN graffed#graff_v1)))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,122.245))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ-1 (PRO it@#it_pron))
	  (BEP @'s#be_v)
	  (ADJP-PRD (ADV very#very_adj) (ADJ necessary#necessary_adj))
	  (IP-INF-1 (TO to#to_prep)
		    (DO do#do_v)
		    (NP-OB1 (PRO it#it_pron))
		    (PP (P till#till_prep)
			(CP-ADV (C 0)
				(IP-SUB (NP-SBJ (D the#the_adj) (N Stock#stock_n1))
					(BEP be#be_v)
					(NP-MSR (ADJ near#near_adj))
					(VAN covered#cover_v1)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,122.246))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (PRO it#it_pron))
	  (VBP hastens#hasten_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P in#in_prep)
	      (NP (N covering#covering_n1)))
	  (PUNC ,)
	  (CP-CAR (WPP-1 (WADV+P whereby#whereby_adv))
		  (C 0)
		  (IP-SUB (IP-SUB (PP *T*-1)
				  (NP-SBJ (D the#the_adj) (CODE <font>) (NS Scions#scion_n))
				  (CODE <$$font>)
				  (VBP grow#grow_v)
				  (ADVP (ADVR faster#fast_adv)))
			  (PUNC ,)
			  (CONJP (CONJ and#and_conj1)
				 (IP-SUB (NP-SBJ (N wet#wet_n1))
					 (BEP is#be_v)
					 (VAN prevented#prevent_v)
					 (PP (P from#from_prep)
					     (NP (D the#the_adj)
						 (IP-PPL (VAG perishing#perish_v)
							 (NP-OB1 (D the#the_adj) (N Stock#stock_n1)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,122.247))

( (IP-MAT (LS 5#NA)
	  (PUNC .)
	  (NP-SBJ (D+OTHER Another#another_pron) (N Evil#evil_adj))
	  (BEP is#be_v)
	  (PUNC ,)
	  (CP-THT (PP-1 (P when#when_adv)
			(CP-ADV (C 0)
				(IP-SUB (NP-SBJ (NS Men#man_n1))
					(VBP set#set_v1)
					(NP-OB1 (ADJP (ADV well#well_adv) (ADJ grown#grown_adj))
						(NS Trees#tree_n)))))
		  (PUNC ,)
		  (C that#that_conj)
		  (IP-SUB (PP *ICH*-1)
			  (NP-SBJ (PRO they#they_pron))
			  (MD must#must_v1)
			  (VB cut#cut_v)
			  (RP off#off_adv)
			  (NP-OB1 (D the#the_adj)
				  (N Head#head_n1)
				  (CP-REL (WADVP-2 (WADV where#where_adv))
					  (C 0)
					  (IP-SUB (ADVP-LOC *T*-2)
						  (NP-SBJ (PRO it#it_pron))
						  (MD may#may_v1)
						  (BE be#be_v)
						  (ADVP (NP-MSR (D an#a_adj) (N inch#inch_n1))
							(RP over#over_adv)))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,122.248))

( (IP-MAT (NP-SBJ (PRO they#they_pron))
	  (VBP consider#consider_v)
	  (NEG not#not_adv)
	  (IP-INF (TO to#to_prep)
		  (VB cut#cut_v)
		  (NP-OB1 (PRO it#it_pron))
		  (PP (P at#at_prep)
		      (NP (D a#a_adj) (N Branch#branch_n))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,122.249))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (NP-SBJ (D the#the_adj) (N top#top_n1))
	  (ADVP-TMP (ADV often#often_adv))
	  (VBP dieth#die_v1)
	  (NP-MSR (D a#a_adj) (ADJ little#little_adj))
	  (PP (P at#at_prep)
	      (NP (D the#the_adj) (N Head#head_n1)))
	  (PUNC ;)
	  (PP (P whereas#whereas_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB-1 (PP (P if#if_conj)
					    (CP-ADV (C 0)
						    (IP-SUB (IP-SUB-2 (NP-SBJ (PRO they#they_pron))
								      (DOD did#do_v)
								      (VB cut#cut_v)
								      (NP-OB1 (PRO it#it_pron))
								      (RP off#off_adv)
								      (NP-ADV (NP-MSR (D a#a_adj) (ADJ little#little_adj))
									      (N sloap#slope_n1))
								      (PP (P at#at_prep)
									  (NP (D a#a_adj)
									      (N Branch#branch_n)
									      (CONJP (CONJ or#or_conj1)
										     (NX (ADJ small#small_adj) (N Sprig#sprig_n2))))))
							    (PUNC ,)
							    (CONJP (CONJ and#and_conj1)
								   (IP-SUB=2 (VB put#put_v)
									     (NP-OB1 (N Clay#clay_n))
									     (PP (ADV+P thereon#thereon_adv))
									     (PUNC ,)
									     (PP (P as#as_adv)
										 (PP (P in#in_prep)
										     (NP (N graffing#graffing_n)))))))))
					(PUNC ,)
					(NP-SBJ (D that#that_pron1) (N Branch#branch_n))
					(MD would#will_v1)
					(VB cover#cover_v1)
					(NP-OB1 (D the#the_adj) (N top#top_n1)))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB=1 (VB keep#keep_v)
					       (NP-OB1 (D the#the_adj) (N Heart#heart_n))
					       (ADJP-SPR (ADJ sound#sound_adj)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,122.250))

( (IP-IMP (IP-IMP (IP-IMP (PP-LFD (P If#if_conj)
				  (CP-ADV (C 0)
					  (IP-SUB (NP-SBJ (PRO you#you_pron))
						  (DOP do#do_v)
						  (NP-OB1 (PRO it#it_pron))
						  (NEG not#not_adv)
						  (PP (P at#at_prep)
						      (NP (D the#the_adj)
							  (N setting#setting_n1)
							  (PP (P of#of_prep)
							      (NP (D the#the_adj) (N Tree#tree_n))))))))
			  (PUNC ,)
			  (ADVP-RSP (ADV then#then_adv))
			  (NP-TMP (D the#the_adj)
				  (N Year#year_n)
				  (ADVP (ADV after#after_adv))
				  (PUNC ,)
				  (PP (P when#when_adv)
				      (CP-ADV (C 0)
					      (IP-SUB (NP-SBJ (PRO it#it_pron))
						      (HVP hath#have_v)
						      (VBN put#put_v)
						      (ADVP (ADV forth#forth_adv))
						      (NP-OB1 (NS Branches#branch_n))))))
			  (PUNC ,)
			  (VBI cut#cut_v)
			  (RP off#off_adv)
			  (NP-OB1 (D the#the_adj)
				  (N top#top_n1)
				  (CP-REL *ICH*-1))
			  (NP-ADV (N sloap-wise#slopewise_adv))
			  (PUNC ,)
			  (CP-REL-1 (WADVP-2 (WADV where#where_adv))
				    (C 0)
				    (IP-SUB (ADVP-LOC *T*-2)
					    (NP-SBJ (PRO it#it_pron))
					    (BEP is#be_v)
					    (PP (P+N alive#alive_adj))
					    (PUNC ,)
					    (PP (P at#at_prep)
						(NP (D the#the_adj)
						    (ADJ uppermost#uppermost_adv)
						    (N Branch#branch_n)
						    (CP-REL (WNP-3 0)
							    (C 0)
							    (IP-SUB (NP-OB1 *T*-3)
								    (NP-SBJ (PRO you#you_pron))
								    (MD would#will_v1)
								    (VB preserve#preserve_v))))))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (IP-IMP (ADVP (ADV then#then_adv))
				 (VBI clay#clay_v)
				 (NP-OB1 (PRO it#it_pron)))))
	  (PUNC :)
	  (CONJP (IP-MAT (NP-SBJ (PRO You#you_pron))
			 (MD will#will_v1)
			 (VB find#find_v)
			 (NP-OB1 (N advantage#advantage_n)
				 (PP (P in#in_prep)
				     (NP (D the#the_adj)
					 (N growth#growth_n1)
					 (PP (P of#of_prep)
					     (NP (D the#the_adj) (N top#top_n1)))
					 (CONJP (CONJ and#and_conj1)
						(NX (N soundness#soundness_n)
						    (PP (P of#of_prep)
							(NP (D the#the_adj)
							    (N body#body_n)
							    (PP (P of#of_prep)
								(NP (D the#the_adj) (N Tree#tree_n))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,122.251))

( (IP-IMP (LS 6#NA)
	  (PUNC .)
	  (PP (P In#in_prep)
	      (IP-PPL (VAG pruning#prune_v2)
		      (NP-OB1 (ADJ big#big_adj)
			      (NS Branches#branch_n)
			      (PP (P of#of_prep)
				  (NP (Q any#any_adj) (N Tree#tree_n))))))
	  (PUNC ,)
	  (DOI do#do_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P in#in_prep)
	      (CODE <font>)
	      (NP (NPR March#NA)))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,122.252))

( (IP-IMP (IP-IMP-1 (CONJ and#and_conj1)
		    (VBI cut#cut_v)
		    (NP-OB1 (PRO it#it_pron))
		    (NEG not#not_adv)
		    (ADJP-LOC (ADVR so#so_adv)
			      (ADJ close#close_adj)
			      (PP (P to#to_prep)
				  (NP (D the#the_adj) (N Body#body_n)))
			      (PP (P as#as_adv)
				  (IP-INF (TO to#to_prep)
					  (VB hurt#hurt_v)
					  (NP-OB1 (PRO it#it_pron))))))
	  (PUNC ,)
	  (CONJP (CONJ nor#nor_conj1)
		 (IP-IMP=1 (ADVP (ADV yet#yet_adv))
			   (ADJP-PRD (ADVR so#so_adv)
				     (ADJ long#long_adj1)
				     (CP-DEG (C that#that_conj)
					     (IP-SUB (NP-SBJ (PRO it#it_pron))
						     (BEP be#be_v)
						     (NP-PRD (D a#a_adj) (N Stump#stump_n1)))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,122.253))

( (IP-IMP (CONJ but#but_prep)
	  (VBI leave#leave_v1)
	  (NP-OB1 (PRO it#it_pron))
	  (ADJP-SPR (ADJS highest#high_adj)
		    (PP (P in#in_prep)
			(NP (D the#the_adj) (N middle#middle_adj))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,122.254))

( (IP-MAT (CONJ for#for_prep)
	  (ADVP (ADV then#then_adv))
	  (NP-SBJ (PRO it#it_pron))
	  (MD will#will_v1)
	  (CODE <P_123>)
	  (NEG not#not_adv)
	  (HV have#have_v)
	  (NP-OB1 (ADJP (ADVR so#so_adv) (ADJ deep#deep_adj))
		  (D a#a_adj)
		  (N hole#hole_n)
		  (CP-EOP (WNP-1 0)
			  (IP-INF (NP-OB1 *T*-1)
				  (PP (P in#in_prep)
				      (NP (PRO$ its#its_adj) (N growing#growing_n)))
				  (TO to#to_prep)
				  (VB cover#cover_v1)))
		  (PUNC ,)
		  (CP-REL (WNP-2 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-ADV (OTHER+N otherwise#otherwise_n))
				  (NP-SBJ-RSP=2 (PRO it@#it_pron))
				  (BEP @'s#be_v)
				  (ADJP-PRD (ADJ apt#apt_adj)
					    (IP-INF-3 (TO to#to_prep)
						      (HV have#have_v)
						      (PUNC ,)
						      (IP-INF-PRN=3 (CONJ and#and_conj1) (TO to#to_prep) (VB hold#hold_v))
						      (NP-OB1 (D the#the_adj) (N wet#wet_n1)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,123.255))

( (IP-MAT (NP-SBJ (D This#this_pron) (N pruning#pruning_n2))
	  (MD can#can_v1)
	  (BE be#be_v)
	  (ADVP (Q no#no_adj) (NS ways#way_n1))
	  (ADVP (ADVR so#so_adv)
		(ADV well#well_adv)
		(PP *ICH*-1))
	  (DAN done#do_v)
	  (PP-1 (P as#as_adv)
		(PP (P with#with_prep)
		    (NP (SUCH such#such_adj)
			(D a#a_adj)
			(ADJ broad#broad_adj1)
			(N Chissel#chisel_n1)
			(PP (P as#as_adv)
			    (CP-CMP (WNP-2 0)
				    (C 0)
				    (IP-SUB (NP-OB1 *T*-2)
					    (NP-SBJ (PRO I#i_pron))
					    (HVP have#have_v)
					    (VBN described#describe_v)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,123.256))

( (IP-MAT (LS 7#NA)
	  (PUNC .)
	  (NP-TMP (D The#the_adj)
		  (ADJ first#first_adj)
		  (N Summer#summer_n1)
		  (PP (P after#after_adv)
		      (CP-ADV (C 0)
			      (IP-SUB (NP-SBJ (PRO you#you_pron))
				      (HVP have#have_v)
				      (VBN set#set_v1)
				      (NP-OB1 (D a#a_adj) (N Tree#tree_n))))))
	  (PUNC ,)
	  (NP-SBJ (Q some#some_pron))
	  (VBP let#let_v1)
	  (IP-INF (NP-SBJ (NS Shoots#shoot_n1))
		  (VB grow#grow_v)
		  (RP out#out_adv)
		  (ADJP-LOC (ADJP (ADJ near#near_adj)
				  (NP (D the#the_adj) (N Butt#butt_n6)))
			    (PUNC ,)
			    (CONJP (CONJ and#and_conj1)
				   (PP (P in#in_prep)
				       (NP (ADJ several#several_adj)
					   (NS places#place_n1)
					   (PP (P on#on_prep)
					       (NP (D the#the_adj) (N Body#body_n))))))))
	  (PUNC ,)
	  (PP (P though#though_adv)
	      (ADVP (ADVR so#so_adv)
		    (ADV low#low_adv)
		    (CP-DEG (C that#that_conj)
			    (IP-SUB (NP-SBJ (PRO they#they_pron))
				    (ADVP-TMP (ADV never#never_adv))
				    (VBP intend#intend_v)
				    (CP-THT (C 0)
					    (IP-SUB (NP-SBJ (PRO they#they_pron))
						    (MD shall#shall_v)
						    (VB continue#continue_v)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,123.257))

( (IP-MAT (NP-SBJ (D These#these_pron))
	  (HVD had#have_v)
	  (ADVP (ADVS best#best_adj))
	  (IP-INF (TO *)
		  (BE be#be_v)
		  (VAN cut#cut_v)
		  (RP off#off_adv)
		  (PP (P at#at_prep)
		      (NP (D the#the_adj) (ADJ first#first_adj) (N springing#springing_n1) (RP out#out_adv))))
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (PRO they#they_pron))
			  (VBP rob#rob_v)
			  (NEG not#not_adv)
			  (NP-OB1 (D the#the_adj) (N top#top_n1))
			  (PP (P of#of_prep)
			      (NP (N Sap#sap_n1)))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,123.258))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB-1 (NP-SBJ (PRO you#you_pron))
					(HVP have#have_v)
					(NP-OB1 (Q any#any_adj)
						(ADJ high#high_adj)
						(NS Standards#standard_n)
						(PUNC ,)
						(ADJP (SUCH such#such_adj)
						      (PP (P as#as_adv)
							  (CP-CMP (WNP-2 0)
								  (C 0)
								  (IP-SUB (NP-SBJ *T*-2)
									  (BEP are#be_v)
									  (ADJP-PRD (ADJ proper#proper_adj)
										    (IP-INF (TO to#to_prep)
											    (BE be#be_v)
											    (VAN planted#plant_v)
											    (PP (P in#in_prep)
												(NP (NS Fields#field_n1)))))))))))
			      (PUNC ,)
			      (CONJP (CONJ or#or_conj1)
				     (IP-SUB=1 (NP-OB1 (N Forest#forest_n) (NS Trees#tree_n))
					       (PP (P in#in_prep)
						   (NP (NS Avenues#avenue_n))))))))
	  (PUNC ,)
	  (NP-SBJ-3 (PRO it#it_pron))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ necessary#necessary_adj))
	  (IP-INF-3 (TO to#to_prep)
		    (HV have#have_v)
		    (NP-OB1 (SUCH such#such_adj) (D+OTHER another#another_pron) (N Chissel#chisel_n1)))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,123.259))

( (IP-IMP (CONJ but#but_prep)
	  (PP (P instead#instead_adv)
	      (PP (P of#of_prep)
		  (NP (D an#a_adj) (N Iron#iron_n1) (N handle#handle_n1))))
	  (VBI let#let_v1)
	  (IP-INF (NP-SBJ (PRO it#it_pron))
		  (BE be#be_v)
		  (VAN made#make_v1)
		  (PP (P with#with_prep)
		      (NP (D a#a_adj)
			  (N Socket#socket_n)
			  (PUNC ,)
			  (CP-REL (WNP-1 (WPRO which#which_adj))
				  (IP-IMP (NP-OB1 *T*-1)
					  (VBI fix#fix_v)
					  (PP (P on#on_prep)
					      (NP (D a#a_adj)
						  (N Staff#staff_n1)
						  (ADJP (NP-MSR (NUMP (ADV about#about_adv)
								      (NUM two#two_adj)
								      (CONJP (CONJ or#or_conj1)
									     (NUMX (NUM three#three_adj))))
								(NS yards#yard_n2))
							(ADJ long#long_adj1)))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,123.260))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI let#let_v1)
	  (IP-INF (NP-SBJ (PRO it#it_pron))
		  (HV have#have_v)
		  (NP-OB1 (NS Edges#edge_n))
		  (NP-ADV (N likewise#likewise_adv))
		  (PP (P on#on_prep)
		      (NP (D the#the_adj) (ADJ lower#lower_adj) (N part#part_n1)))
		  (PP (P on#on_prep)
		      (NP (Q each#each_adj)
			  (N side#side_n1)
			  (NP-COM (D the#the_adj) (N Socket#socket_n)))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,123.261))

( (IP-MAT (PP (P with#with_prep)
	      (NP (D this#this_pron)))
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP walk#walk_v)
			      (PP (P about#about_adv)
				  (NP (PRO$ your#your_pron) (NS Trees#tree_n))))))
	  (PUNC ,)
	  (VB cut#cut_v)
	  (RP off#off_adv)
	  (NP-OB1 (NP (SUCH such#such_adj)
		      (ADJ young#young_adj)
		      (NS Shoots#shoot_n1)
		      (PP (P as#as_adv)
			  (CP-CMP (WNP-1 0)
				  (C 0)
				  (IP-SUB (NP-SBJ *T*-1)
					  (VBP grow#grow_v)
					  (PP (RP out#out_adv)
					      (P of#of_prep)
					      (NP (NP-POS (D the#the_adj) (N$ hands#hand_n))
						  (N reach#reach_n1)))))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (ADVP (ADV yet#yet_adv))
			 (NP (SUCH such#such_adj)
			     (PP (P as#as_adv)
				 (CP-CMP (WNP-2 0)
					 (C 0)
					 (IP-SUB (NP-SBJ (PRO you#you_pron))
						 (MD would#will_v1)
						 (NEG not#not_adv)
						 (HV have#have_v)
						 (IP-INF (NP-SBJ *T*-2)
							 (VB continue#continue_v))))))))
	  (PUNC ,)
	  (IP-PPL (IP-PPL (ADVP-TMP (ADV first#first_adj))
			  (VAG cutting#cut_v)
			  (NP-OB1 (PRO them#them_pron))
			  (ADVP-DIR (ADV upwards#upwards_adv)))
		  (PUNC ,)
		  (IP-PPL (CONJ and#and_conj1)
			  (ADVP-TMP (ADV then#then_adv))
			  (PP (P with#with_prep)
			      (NP (D the#the_adj) (OTHER other#other_adj) (N Edge#edge_n)))
			  (VAG cutting#cut_v)
			  (ADVP-DIR (ADV downwards#downwards_adv))
			  (IP-ABS (NP-SBJ (D the#the_adj) (ADJ little#little_adj) (N Tippet#tippet_n))
				  (VAN left#leave_v1)
				  (PP (P on#on_prep)
				      (NP (D the#the_adj) (ADJ upper#upper_adj) (CODE <P_124>) (N side#side_n1))))
			  (PUNC ,)
			  (CP-ADV (C that#that_conj)
				  (IP-SUB (NP-SBJ (PRO it#it_pron))
					  (BEP be#be_v)
					  (ADJP-PRD (ADJP (ADJ smooth#smooth_adj))
						    (PUNC ,)
						    (CONJP (CONJ and#and_conj1)
							   (ADJP (ADJ even#even_adj1)
								 (PP (P to#to_prep)
								     (NP (D the#the_adj) (N Body#body_n))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,124.262))

( (IP-MAT (LS 8#NA)
	  (PUNC .)
	  (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (VBN known#know_v)
	  (NP-OB1 (Q some#some_pron) (N Country#country_n) (NS Gardiners#gardener_n))
	  (IP-INF (IP-INF (PP (P in#in_prep)
			      (IP-PPL (VAG pruning#prune_v2)
				      (NP-OB1 (NS Wall-Fruit-trees#SEE_wall_n1))
				      (ADVP (ADV yearly#yearly_adv))))
			  (VB cut#cut_v)
			  (RP off#off_adv)
			  (NP-OB1 (D the#the_adj)
				  (ADJ young#young_adj)
				  (NS Shoots#shoot_n1)
				  (CONJP (CONJ or#or_conj1)
					 (NX (NS Branches#branch_n)))
				  (CP-REL (WNP-1 0)
					  (C that#that_conj)
					  (IP-SUB (NP-SBJ *T*-1)
						  (VBD grew#grow_v)
						  (ADVP-DIR (ADVP (ADV side-ward#sideward_adv))
							    (PUNC ,)
							    (ADVP (ADVR as#as_adv)
								  (ADV well#well_adv)
								  (PP (P as#as_adv)
								      (ADVP (ADV outward#outward_adj))))))))
			  (PUNC ,)
			  (PP (P from#from_prep)
			      (NP (D the#the_adj) (N Elder-wood#SEE_elder_n1))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (IP-INF (VB leave#leave_v1)
				 (NP-OB1 (D the#the_adj) (N Wall#wall_n1))
				 (ADJP-SPR (ADV almost#almost_adv) (ADJ bare#bare_adj)))))
	  (PUNC ;)
	  (PP (P whereas#whereas_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO it@#it_pron))
			      (BEP @'s#be_v)
			      (NP-PRD (D those#those_pron) (ADJ young#young_adj) (NS Shoots#shoot_n1))
			      (ADVP (ADV chiefly#chiefly_adv))
			      (CP-CLF (WNP-2 0)
				      (C that#that_conj)
				      (IP-SUB (NP-SBJ *T*-2)
					      (VBP bear#bear_v1)
					      (NP-OB1 (N Fruit#fruit_n))
					      (NP-TMP (D the#the_adj)
						      (N Year#year_n)
						      (RRC (VAG following#follow_v))))))))
	  (PUNC :))
  (ID LANGF-1696-E3-H,124.263))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (ADV+P therefore#therefore_adv))
	  (IP-INF-PRP (ADVP (D the#the_adj) (ADVR better#better_adj))
		      (TO to#to_prep)
		      (VB inform#inform_v)
		      (NP-OB1 (D the#the_adj) (N Reader#reader_n))
		      (PP (P in#in_prep)
			  (NP (N Pruning#pruning_n2))))
	  (PUNC ,)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ necessary#necessary_adj))
	  (IP-INF-1 (TO to#to_prep)
		    (VB shew#show_v)
		    (NP-OB1 (CP-FRL (WNP-2 (WNP-POS (WD what#what_pron) (N$ Years#year_n))
					   (NS Branches#branch_n))
				    (C 0)
				    (IP-SUB (NP-SBJ *T*-2)
					    (VBP bear#bear_v1)
					    (NP-OB1 (N Fruit#fruit_n))
					    (PP (PP (P in#in_prep)
						    (NP (Q each#each_adj) (N kind#kind_n)))
						(PUNC ,)
						(CONJP (CONJ or#or_conj1)
						       (PP (P in#in_prep)
							   (NP (D the#the_adj)
							       (ADJP (QS most#most_adj) (ADJ common#common_adj))
							       (N sort#sort_n2)
							       (PP (P of#of_prep)
								   (NP (NS Fruit-trees#SEE_fruit_n)))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,124.264))

( (IP-MAT (LS 1#NA)
	  (PUNC .)
	  (CODE <font>)
	  (NP-SBJ (NS Vines#vine_n)
		  (CODE <$$font>)
		  (CONJ and#and_conj1)
		  (CODE <font>)
		  (NS Shrubs#shrub_n1)
		  (CODE <$$font>)
		  (PUNC ,)
		  (PP (P as#as_adv)
		      (CODE <font>)
		      (NP (NS Gooseberries#gooseberry_n) (CODE <$$font>) (PUNC ,) (CODE <font>) (NS Currans#currant_n) (CODE <$$font>) (PUNC ,) (X &c.#et-cetera_n))))
	  (VBP bear#bear_v1)
	  (NP-OB1 (N Fruit#fruit_n))
	  (PP (P for#for_prep)
	      (NP (D the#the_adj) (QS most#most_adj) (N part#part_n1)))
	  (PP (P on#on_prep)
	      (NP (D the#the_adj)
		  (NS Branches#branch_n)
		  (CP-REL (WNP-1 0)
			  (C 0)
			  (IP-SUB (NP-OB1 *T*-1)
				  (NP-SBJ (PRO they#they_pron))
				  (VBP put#put_v)
				  (ADVP (ADV forth#forth_adv))
				  (NP-TMP (D the#the_adj) (ADJ same#same_adj) (N Year#year_n))))))
	  (PUNC ,)
	  (PP (P so#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (PP (P in#in_prep)
				  (IP-PPL (VAG pruning#prune_v2)
					  (NP-OB1 (D these#these_pron))))
			      (NP-SBJ (PRO you#you_pron))
			      (MD may#may_v1)
			      (VB cut#cut_v)
			      (RP off#off_adv)
			      (NP-OB1 (Q much#much_adj)
				      (PP (P of#of_prep)
					  (NP (D the#the_adj)
					      (CODE <font>)
					      (NS Shoots#shoot_n1)
					      (CODE <$$font>)
					      (PP (P of#of_prep)
						  (NP (D the#the_adj) (ADJ foregoing#foregoing_adj) (N Year#year_n)))
					      (PUNC ,)
					      (CONJP (CONJ and#and_conj1)
						     (NX (ADJ old#old_adj) (CODE <font>) (N Wood#wood_n1))))))
			      (CODE <$$font>)
			      (PUNC ,)
			      (PP (P as#as_adv)
				  (CP-ADV (WADVP-2 0)
					  (C 0)
					  (IP-SUB (ADVP *T*-2)
						  (NP-SBJ (PRO you#you_pron))
						  (VBP see#see_v)
						  (NP-OB1 (N occasion#occasion_n1))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,124.265))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ-1 (EX there#there_adv))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (NP-1 (QP (D the#the_adj) (QR more#more_adj))
		(N Sap#sap_n1)
		(CP-EOP (WNP-2 0)
			(IP-INF (NP-SBJ *T*-2)
				(TO to#to_prep)
				(VB put#put_v)
				(ADVP (ADV forth#forth_adv))
				(NP-OB1 (ADJ fresh#fresh_adj) (ONES ones#one_adj))
				(NP-TMP (D the#the_adj)
					(N Year#year_n)
					(ADVP-TMP (ADV after#after_adv))))))
	  (PUNC ,)
	  (IP-PPL (IP-PPL (VAN provided#provide_v)
			  (CP-THT (C 0)
				  (IP-SUB (NP-SBJ (PRO you#you_pron))
					  (VBP leave#leave_v1)
					  (NP-OB1 (N plenty#plenty_n)
						  (PP (P of#of_prep)
						      (NP (NS Buds#bud_n1)
							  (CP-EOP (WNP-3 0)
								  (IP-INF (FOR for#for_prep)
									  (NP-SBJ (PRO them#them_pron))
									  (TO to#to_prep)
									  (VB put#put_v)
									  (ADVP (ADV forth#forth_adv))
									  (PP (P at#at_prep)
									      (NP *T*-3))))))))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (PP (P with#with_prep)
			     (NP (D this#this_pron)
				 (N Caution#caution_n)
				 (PUNC ,)
				 (CP-THT-PRN (C that#that_conj)
					     (IP-SUB (NP-SBJ (SUCH such#such_adj)
							     (PP (P as#as_adv)
								 (CP-CMP (WNP-4 0)
									 (C 0)
									 (IP-SUB (NP-SBJ *T*-4)
										 (VBP grow#grow_v)
										 (ADJP-PRD (ADV very#very_adj)
											   (ADJ luxurious#luxurious_adj)
											   (PP (P in#in_prep)
											       (NP (N Wood#wood_n1))))))))
						     (BEP are#be_v)
						     (NEG not#not_adv)
						     (ADJP-PRD (ADJ apt#apt_adj)
							       (IP-INF (TO to#to_prep) (VB bear#bear_v1)))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,124.266))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP-LOC (ADV there#there_adv))
	  (NP-ADT (QP (D the#the_adj) (QR more#more_adj))
		  (CP-CMP (WNP-1 0)
			  (C 0)
			  (IP-SUB (NP-OB1 *T*-1)
				  (NP-SBJ (PRO you#you_pron))
				  (VBP cut#cut_v)
				  (RP off#off_adv))))
	  (PUNC ,)
	  (NP-MSR (QP (D the#the_adj) (QR more#more_adj)))
	  (NP-SBJ (PRO they#they_pron))
	  (MD will#will_v1)
	  (VB run#run_v)
	  (PP (P into#into_prep)
	      (NP (D the#the_adj) (ADJ same#same_adj) (N Evil#evil_adj)))
	  (PUNC .))
  (ID LANGF-1696-E3-H,124.267))

( (CODE <P_125>))

( (IP-MAT (LS 2#NA)
	  (PUNC .)
	  (CODE <font>)
	  (NP-SBJ (N Stone#stone_n) (NS Fruit-trees#SEE_fruit_n))
	  (CODE <$$font>)
	  (PUNC ,)
	  (ADVP (ADV generally#generally_adv))
	  (VBP bear#bear_v1)
	  (PP (P on#on_prep)
	      (NP (D the#the_adj)
		  (CODE <font>)
		  (NS Branches#branch_n)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (ADJ foregoing#foregoing_adj) (N Year#year_n)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,125.269))

( (IP-IMP (PP (ADV+P therefore#therefore_adv))
	  (VBI leave#leave_v1)
	  (NP-OB1 (D a#a_adj)
		  (ADJ sufficient#sufficient_adj)
		  (N number#number_n)
		  (PP (P of#of_prep)
		      (NP (PRO them#them_pron))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,125.270))

( (IP-MAT (LS 3#NA)
	  (PUNC .)
	  (CODE <font>)
	  (NP-SBJ (N Apple#apple_n) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Pear-trees#pear-tree_n))
	  (CODE <$$font>)
	  (VBP bear#bear_v1)
	  (NP-OB1 (N Fruit#fruit_n))
	  (PP (P on#on_prep)
	      (NP (D the#the_adj)
		  (CODE <font>)
		  (NS Branches#branch_n)
		  (CODE <$$font>)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP are#be_v)
				  (PP (P of#of_prep)
				      (NP (NP-MSR (NUM two#two_adj) (NS years#year_n))
					  (N growth#growth_n1)
					  (PP (P before#before_adv)
					      (NP (D the#the_adj) (ADJ bearing#bearing_adj1) (N year#year_n)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,125.271))

( (IP-MAT (CONJ And#and_conj1)
	  (ADVP (ADV thus#thus_adv))
	  (NP-SBJ (PRO you#you_pron))
	  (MD shall#shall_v)
	  (VB find#find_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P for#for_prep)
	      (NP (D the#the_adj) (QS most#most_adj) (N part#part_n1)))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,125.272))

( (IP-MAT (CONJ and#and_conj1)
	  (PP-LFD (P although#although_conj)
		  (CODE <font>)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (N Fruit#fruit_n))
				  (CODE <$$font>)
				  (MD may#may_v1)
				  (ADVP-TMP (ADV often#often_adv))
				  (PP (P in#in_prep)
				      (NP (Q all#all_adj) (D these#these_pron) (NS sorts#sort_n2)))
				  (VB seem#seem_v2)
				  (IP-INF (TO to#to_prep)
					  (BE be#be_v)
					  (PP (P on#on_prep)
					      (NP (ADJR older#old_adj)
						  (N Wood#wood_n1)
						  (PP (P than#than_conj)
						      (CP-CMP (WNP-1 0)
							      (C 0)
							      (IP-SUB (NP-OB1 *T*-1)
								      (NP-SBJ (PRO I#i_pron))
								      (VBP mention#mention_v))))))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV yet#yet_adv))
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP search#search_v)
			      (PP (P into#into_prep)
				  (NP (PRO it#it_pron))))))
	  (NP-SBJ (PRO you#you_pron))
	  (MD will#will_v1)
	  (VB find#find_v)
	  (PUNC <paren>)
	  (ADVP-LOC (CP-FRL (WADVP-2 (WADV where#where_adv))
			    (C 0)
			    (IP-SUB (ADVP-LOC *T*-2)
				    (NP-SBJ (PRO it#it_pron))
				    (VBP seems#seem_v2)
				    (ADVP (ADV so#so_adv)))))
	  (PUNC <$$paren>)
	  (CP-THT (C that#that_conj)
		  (IP-SUB (NP-SBJ (PRO it#it_pron))
			  (VBP grows#grow_v)
			  (PP (P on#on_prep)
			      (NP (Q some#some_pron)
				  (N sort#sort_n2)
				  (NP-COM (ADJ short#short_adj)
					  (N Stalk#stalk_n1)
					  (RRC (VAN put#put_v)
					       (ADVP (ADV forth#forth_adv))
					       (PP (NP-MSR (ADJP (ADVR as#as_adv) (ADJ near#near_adj))
							   (PUNC <paren>)
							   (PP (P as#as_adv)
							       (CP-CMP (WNP-3 0)
								       (C 0)
								       (IP-SUB (NP-SBJ *T*-3)
									       (MD can#can_v1)
									       (BE be#be_v)
									       (VAN judged#judge_v)))))
						   (PUNC <$$paren>)
						   (P as#as_adv)
						   (CP-ADV (WADVP-4 0)
							   (C 0)
							   (IP-SUB (ADVP *T*-4)
								   (NP-SBJ (PRO I#i_pron))
								   (HVP have#have_v)
								   (VBN set#set_v1)
								   (NP-OB1 (PRO it#it_pron))
								   (RP down#down_adv))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,125.273))

( (IP-MAT (NP-SBJ (PRO You#you_pron))
	  (MD will#will_v1)
	  (PP (ADV+P therefore#therefore_adv))
	  (VB find#find_v)
	  (IP-SMC (NP-SBJ-1 (PRO it#it_pron))
		  (ADVP-TMP (ADV often#often_adv))
		  (ADJP-PRD (ADJ necessary#necessary_adj))
		  (IP-INF-1 (TO to#to_prep)
			    (VB practice#practise_v)
			    (NP-OB1 (D the#the_adj)
				    (N direction#direction_n)
				    (RRC (ADVP-TMP (ADV formerly#formerly_adv))
					 (VAN given#give_v)
					 (PP (P in#in_prep)
					     (NP (D this#this_pron) (N Book#book_n))))
				    (PP (P of#of_prep)
					(IP-PPL (VAG taking#take_v)
						(RP off#off_adv)
						(NP-OB1 (Q some#some_pron)
							(PP (P of#of_prep)
							    (NP (D the#the_adj)
								(ADJ old#old_adj)
								(N Wood#wood_n1)
								(PP (P of#of_prep)
								    (NP (NS Trees#tree_n)))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,125.274))

( (CODE <heading>))

( (NP (N CHAP.#chapter_n) (NUM 8#eight_adj) (PUNC .))
  (ID LANGF-1696-E3-H,125.276))

( (CODE <$$heading>))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 7#seven_adj) (PUNC .))
  (ID LANGF-1696-E3-H,125.278))

( (IP-IMP (IP-IMP (CONJ And#and_conj1)
		  (PP (P when#when_adv)
		      (CP-ADV (C 0)
			      (IP-SUB (NP-SBJ (PRO$ your#your_pron) (NS Trees#tree_n))
				      (BEP are#be_v)
				      (ADJP-PRD (ADJ young#young_adj)))))
		  (VBI let#let_v1)
		  (IP-INF (NP-SBJ (PRO them#them_pron))
			  (NEG not#not_adv)
			  (VB fill#fill_v)
			  (NP-OB1 (D the#the_adj) (N Wall#wall_n1))
			  (ADJP-SPR (ADVR so#so_adv)
				    (ADJ thick#thick_adj)
				    (PP (P as#as_adv)
					(CP-CMP (WNP-1 0)
						(C 0)
						(IP-SUB (NP-SBJ (Q many#many_adj) (NS Trees#tree_n))
							(BEP are#be_v)
							(ADJP-PRD (ADJ apt#apt_adj)
								  (IP-INF (NP-OB1 *T*-1)
									  (TO to#to_prep)
									  (DO do#do_v)))))))))
	  (PUNC ,)
	  (CONJP (IP-MAT (NP-ADV (OTHER+N otherwise#otherwise_n))
			 (NP-SBJ (PRO you#you_pron))
			 (MD will#will_v1)
			 (VB find#find_v)
			 (CP-THT (C 0)
				 (IP-SUB (NP-SBJ (Q many#many_adj))
					 (MD will#will_v1)
					 (NEG not#not_adv)
					 (VB bear#bear_v1)
					 (ADVP (ADV well#well_adv))
					 (ADJP-SPR (ADJ young#young_adj))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,125.279))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (VBP grow#grow_v)
			      (ADJP-PRD (ADJR bigger#big_adj)))))
	  (NP-SBJ (PRO you#you_pron))
	  (MD must#must_v1)
	  (VB cut#cut_v)
	  (NP-OB1 (PRO them#them_pron))
	  (ADJP-SPR (ADJR thinner#thin_adj))
	  (PUNC ,)
	  (CP-CAR (WNP-1 (WPRO which#which_adj))
		  (C 0)
		  (IP-SUB (NP-SBJ *T*-1)
			  (MD will#will_v1)
			  (BE be#be_v)
			  (ADJP-PRD (ADJR worse#worse_adj)
				    (PP (P for#for_prep)
					(NP (D the#the_adj) (N Tree#tree_n))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,125.280))

( (IP-MAT (NP-SBJ (D+OTHER Another#another_pron) (N Evil#evil_adj))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ common#common_adj))
	  (PP (P in#in_prep)
	      (IP-PPL (VAG suffering#suffer_v)
		      (IP-INF (NP-SBJ (QP (ADVR too#too_adv) (Q much#much_adj))
				      (N Fruit#fruit_n))
			      (TO to#to_prep)
			      (VB grow#grow_v)
			      (PP (P upon#upon_prep)
				  (NP (NS Trees#tree_n)
				      (PUNC <paren>)
				      (NP-PRN (ADV especially#especially_adv) (NS Wall-Trees#SEE_wall_n1)))))))
	  (PUNC <$$paren>)
	  (CP-CAR (WPP-1 (WADV+P wherefore#wherefore_adv))
		  (IP-IMP (PP *T*-1)
			  (PP (P if#if_conj)
			      (CP-ADV (C 0)
				      (IP-SUB (NP-SBJ (PRO it#it_pron))
					      (BEP be#be_v)
					      (ADVP (ADV so#so_adv)))))
			  (PUNC ,)
			  (VBI pluck#pluck_v)
			  (RP off#off_adv)
			  (NP-OB1 (Q some#some_pron)
				  (CP-REL (WADVP-2 (WADV where#where_adv))
					  (C 0)
					  (IP-SUB (ADVP-LOC *T*-2)
						  (NP-SBJ (PRO they#they_pron))
						  (VBP stand#stand_v)
						  (CODE <P_126>)
						  (PP (P in#in_prep)
						      (NP (NS Clusters#cluster_n))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,126.281))

( (IP-MAT (NP-SBJ (ADJ Green#green_adj) (CODE <font>) (NS Apricocks#apricot_n))
	  (CODE <$$font>)
	  (MD will#will_v1)
	  (VB serve#serve_v1)
	  (PP (P for#for_prep)
	      (NP (NS Tarts#tart_n)))
	  (PUNC .))
  (ID LANGF-1696-E3-H,126.282))

( (IP-MAT (NP-SBJ (D These#these_pron) (ADJ foregoing#foregoing_adj) (NS Observations#observation_n))
	  (MD may#may_v1)
	  (VB seem#seem_v2)
	  (ADJP-PRD (ADJP (ADJ trivial#trivial_adj))
		    (CONJP (CONJ and#and_conj1)
			   (PP (P of#of_prep)
			       (NP (ADJ small#small_adj) (N concern#concern_n)))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,126.283))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (PRO you#you_pron))
	  (MD will#will_v1)
	  (VB find#find_v)
	  (CP-THT (C 0)
		  (IP-SUB (NP-SBJ (D a#a_adj)
				  (ADJ due#due_adj)
				  (N observation#observation_n)
				  (PP (P of#of_prep)
				      (NP (PRO them#them_pron))))
			  (MD will#will_v1)
			  (VB conduce#conduce_v)
			  (NP-MSR (Q much#much_adj))
			  (PP (P to#to_prep)
			      (NP (D the#the_adj)
				  (N health#health_n)
				  (CONJP (CONJ and#and_conj1)
					 (NX (N welfare#welfare_n)))
				  (PP (P of#of_prep)
				      (NP (PRO$ your#your_pron)
					  (NS Trees#tree_n)
					  (CONJP (CONJ and#and_conj1)
						 (NX (N Fruit#fruit_n)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,126.284))

( (CODE <heading>))

( (NP (N CHAP.#chapter_n) (NUM XIII#thirteen_adj) (PUNC .))
  (ID LANGF-1696-E3-H,126.286))

( (NP (Q SOME#some_pron)
      (ADJ PARTICULAR#particular_adj)
      (NS RULES#rule_n1)
      (PP (P ABOUT#about_adv)
	  (NP (Q SOME#some_pron)
	      (NS KINDS#kind_n)
	      (PP (P OF#of_prep)
		  (NP (NS FRUIT-TREES#SEE_fruit_n)))))
      (PP (P BESIDES#besides_adv)
	  (NP (D THE#the_adj)
	      (ADJ GENERAL#general_adj)
	      (NS RULES#rule_n1)
	      (RRC (ADVP-TMP (ADV ALREADY#already_adj))
		   (VAN MENTIONED#mention_v))))
      (PUNC .))
  (ID LANGF-1696-E3-H,126.287))

( (CODE <$$heading>))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (ONE 1#one_adj) (PUNC .))
  (ID LANGF-1696-E3-H,126.289))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Grapes#grape_n1))
	  (CODE <$$font>)
	  (ADVP-TMP (ADV seldom#seldom_adv) (CONJ or#or_conj1) (ADV never#never_adv))
	  (VBP ripen#ripen_v)
	  (ADVP (ADV well#well_adv))
	  (PP (P in#in_prep)
	      (NP (D this#this_pron) (CODE <font>) (N Isle#isle_n)))
	  (PUNC .)
	  (CODE <$$font>)
	  (PP (P without#without_adv)
	      (NP (N help#help_n)
		  (PP (P of#of_prep)
		      (NP (N Art#art_n1) (CONJ and#and_conj1) (N Industry#industry_n)))))
	  (PUNC ,)
	  (CP-CAR (WPP-1 (P to#to_prep)
			 (WNP (WD which#which_adj) (N purpose#purpose_n)))
		  (IP-IMP (PP *T*-1)
			  (VBI take#take_v)
			  (NP-OB1 (D these#these_pron) (NS directions#direction_n))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,126.290))

( (IP-INF (LS 1#NA)
	  (PUNC .)
	  (TO To#to_prep)
	  (CODE <font>)
	  (VB plant#plant_v)
	  (CODE <$$font>)
	  (NP-OB1 (SUCH such#such_adj)
		  (PP (P as#as_adv)
		      (CP-CMP (WNP-1 0)
			      (C 0)
			      (IP-SUB (NP-SBJ *T*-1)
				      (VBP ripen#ripen_v)
				      (ADVP-TMP (ADVS soonest#soon_adv)
						(PP (P in#in_prep)
						    (NP (D the#the_adj) (N Year#year_n))))))))
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (PRO they#they_pron))
			  (MD may#may_v1)
			  (HV have#have_v)
			  (NP-OB1 (QP (ADVR as#as_adv) (Q much#much_adj))
				  (PP (P of#of_prep)
				      (NP (D the#the_adj) (CODE <font>) (N summer#summer_n1) (CODE <$$font>) (N heat#heat_n)))
				  (PP *ICH*-2))
			  (PP (P at#at_prep)
			      (CODE <font>)
			      (NP (N ripening#ripening_n) (N time#time_n)))
			  (CODE <$$font>)
			  (PP-2 (P as#as_adv)
				(CP-CMP (WNP-3 0)
					(C 0)
					(IP-SUB (NP-4 *T*-3)
						(NP-SBJ-4 *exp*)
						(MD may#may_v1)
						(BE be#be_v))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,126.291))

( (IP-IMP (LS 2#NA)
	  (PUNC .)
	  (VBI Let#let_v1)
	  (IP-INF (NP-SBJ (D the#the_adj)
			  (N Wall#wall_n1)
			  (CP-REL (WNP-1 0)
				  (C 0)
				  (IP-SUB (NP-SBJ (PRO you#you_pron))
					  (VBP plant#plant_v)
					  (NP-OB1 (PRO them#them_pron))
					  (PP (P against#against_prep)
					      (NP *T*-1)))))
		  (BE be#be_v)
		  (NP-PRD (NP (D a#a_adj) (ADJ full#full_adj) (CODE <font>) (N South#south_adv))
			  (CODE <$$font>)
			  (PUNC ,)
			  (CONJP (CONJ or#or_conj1)
				 (IP-PPL (NP-MSR (FP but#but_prep) (D a#a_adj) (ADJ little#little_adj))
					 (VAG inclining#incline_v)
					 (PP (P to#to_prep)
					     (NP (D the#the_adj) (CODE <font>) (N East#east_adv)))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-H,126.292))

( (IP-IMP (CONJ or#or_conj1)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (HVP have#have_v)
			      (NP-OB1 (NP (D a#a_adj)
					  (CODE <font>)
					  (N half-round#half-round_adj)
					  (CODE <$$font>)
					  (PUNC ,)
					  (CONJP (CONJ or#or_conj1)
						 (NX (N corner#corner_n1)
						     (PP (P in#in_prep)
							 (NP (D a#a_adj) (N Wall#wall_n1))))))
				      (PUNC ,)
				      (CONJP (CONJ or#or_conj1)
					     (NP (D the#the_adj)
						 (N back#back_n1)
						 (PP (P of#of_prep)
						     (CODE <P_127>)
						     (NP (D a#a_adj) (N brick#brick_n1) (N Chimney#chimney_n)))))))))
	  (PUNC ,)
	  (VBI make#make_v1)
	  (NP-OB1 (N use#use_n)
		  (PP (P of#of_prep)
		      (NP (SUCH such#such_adj) (NS places#place_n1))))
	  (PP (P for#for_prep)
	      (NP (PRO them#them_pron)))
	  (PUNC .))
  (ID LANGF-1696-E3-H,127.293))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Vines#vine_n))
	  (CODE <$$font>)
	  (MD will#will_v1)
	  (VB prosper#prosper_v)
	  (ADVP (ADV well#well_adv)
		(PP (P against#against_prep)
		    (NP (D a#a_adj) (ADJ high#high_adj) (N Wall#wall_n1))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,127.294))

( (IP-MAT (ADVP (ADV yet#yet_adv))
	  (NP-SBJ (D that#that_pron1))
	  (BEP is#be_v)
	  (NEG not#not_adv)
	  (ADJP-PRD (ADV altogether#altogether_adj)
		    (ADVR so#so_adv)
		    (ADJ necessary#necessary_adj)
		    (CP-DEG (FP but#but_prep)
			    (C that#that_conj)
			    (IP-SUB (NP-SBJ (ADJ low#low_adj) (NS Walls#wall_n1))
				    (MD may#may_v1)
				    (VB serve#serve_v1)
				    (NP-OB1 (N turn#turn_n)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,127.295))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj) (ADJR higher#high_adj))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (VAN reserved#reserve_v1)
	  (PP (P for#for_prep)
	      (NP (SUCH such#such_adj)
		  (CODE <font>)
		  (NS Fruit-trees#SEE_fruit_n)
		  (CODE <$$font>)
		  (PP (P as#as_adv)
		      (CP-CMP (WNP-1 0)
			      (C 0)
			      (IP-SUB (NP-SBJ *T*-1)
				      (MD will#will_v1)
				      (NEG not#not_adv)
				      (DO do#do_v)
				      (ADVP (ADV well#well_adv))
				      (PP (P without#without_adv)
					  (NP (PRO them#them_pron))))))))
	  (PUNC :))
  (ID LANGF-1696-E3-H,127.296))

( (IP-MAT (NP-SBJ (D That#that_pron1)
		  (PP (P of#of_prep)
		      (NP (D a#a_adj) (CODE <font>) (N Tarras-walk#SEE_terrace_n))))
	  (CODE <$$font>)
	  (MD may#may_v1)
	  (DO do#do_v)
	  (ADVP (ADV well#well_adv))
	  (PP (P for#for_prep)
	      (CODE <font>)
	      (NP (NS Vines#vine_n)))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-H,127.297))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj)
		  (CODE <font>)
		  (N Gravel-walk#gravel-walk_n)
		  (CODE <$$font>)
		  (PP (P under#under_prep)
		      (NP (D the#the_adj) (CODE <font>) (N Wall#wall_n1))))
	  (CODE <$$font>)
	  (MD will#will_v1)
	  (ADVP (ADV mightily#mightily_adv))
	  (VB encrease#increase_v)
	  (NP-OB1 (D the#the_adj) (N heat#heat_n))
	  (PP (P about#about_adv)
	      (NP (PRO them#them_pron)))
	  (PUNC .))
  (ID LANGF-1696-E3-H,127.298))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP plant#plant_v)
			      (NP-OB1 (Q any#any_adj) (CODE <font>) (NS Trees#tree_n))
			      (CODE <$$font>)
			      (PP (P against#against_prep)
				  (NP (PRO$ your#your_pron) (CODE <font>) (N Dwelling-house#dwelling-house_n) (N wall#wall_n1))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ-1 (EX there#there_adv))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (NP-1 (NP (Q some#some_pron)
		    (ADJ narrow#narrow_adj)
		    (NS places#place_n1)
		    (PP (P between#between_prep)
			(NP (NUM two#two_adj) (NS Windows#window_n))))
		(PUNC ,)
		(CONJP (CONJ or#or_conj1)
		       (NP (D the#the_adj) (ADJ like#like_adj)))
		(PUNC ,)
		(CP-REL (WADVP-2 (WADV where#where_adv))
			(C 0)
			(IP-SUB (ADVP-LOC *T*-2)
				(NP-SBJ (OTHER other#other_adj) (CODE <font>) (NS Fruit-trees#SEE_fruit_n))
				(CODE <$$font>)
				(HVP have#have_v)
				(NEG not#not_adv)
				(NP-OB1 (N room#room_n1)
					(IP-INF (TO to#to_prep) (VB spread#spread_v))))))
	  (PUNC :))
  (ID LANGF-1696-E3-H,127.299))

( (IP-MAT (IP-MAT-1 (NP-SBJ (D A#a_adj) (N Vine#vine_n))
		    (MD may#may_v1)
		    (VB grow#grow_v)
		    (RP up#up_adv1)
		    (ADVP-LOC (ADV there#there_adv)))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (PP (P above#above_adv)
			       (NP (D those#those_pron) (ADJ narrow#narrow_adj) (NS places#place_n1)))
			   (VB enlarge#enlarge_v)
			   (NP-OB1 (PRO it#it_pron)
				   (N self#self_pron)
				   (CP-REL (WADVP-2 (WADV where#where_adv) (ADV ever#ever_adv))
					   (C 0)
					   (IP-SUB (ADVP-LOC *T*-2)
						   (NP-SBJ (PRO it#it_pron))
						   (VBP meets#meet_v)
						   (PP (P with#with_prep)
						       (NP (N room#room_n1))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,127.300))

( (IP-MAT (IP-MAT-1 (NP-SBJ (PRO You#you_pron))
		    (MD may#may_v1)
		    (ALSO also#also_adv)
		    (VB plant#plant_v)
		    (NP-OB1 (D a#a_adj)
			    (CODE <font>)
			    (N Vine#vine_n)
			    (CODE <$$font>)
			    (PP (P betwixt#betwixt_prep)
				(NP (Q every#every_adj)
				    (CODE <font>)
				    (N fruit-tree#SEE_fruit_n)
				    (CODE <$$font>)
				    (CP-REL (WNP-2 0)
					    (C that#that_conj)
					    (IP-SUB (NP-SBJ *T*-2)
						    (VBP groweth#grow_v)
						    (PP (P against#against_prep)
							(NP (PRO$ your#your_pron) (CODE <font>) (ADJS hottest#hot_adj) (NS walls#wall_n1)))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (VB let#let_v1)
			   (IP-INF (NP-SBJ (PRO it#it_pron))
				   (VB spread#spread_v)
				   (NP-MSR (D a#a_adj) (ADJ little#little_adj))
				   (PP (P in#in_prep)
				       (NP (D the#the_adj) (CODE <font>) (N Summer#summer_n1) (CODE <$$font>) (N time#time_n)))
				   (PP (P into#into_prep)
				       (NP (D the#the_adj)
					   (CODE <font>)
					   (NS Fruit-trees#SEE_fruit_n)
					   (CODE <$$font>)
					   (PP (P on#on_prep)
					       (NP (Q either#either_pron) (N side#side_n1)))))
				   (PP (ADV especially#especially_adv)
				       (P if#if_conj)
				       (CP-ADV (CP-ADV (C 0)
						       (IP-SUB (NP-SBJ (D the#the_adj)
								       (CODE <font>)
								       (N fruit#fruit_n)
								       (CODE <$$font>)
								       (PP (P of#of_prep)
									   (NP (SUCH such#such_adj) (NS Trees#tree_n))))
							       (VBP use#use_v)
							       (IP-INF (TO to#to_prep)
								       (BE be#be_v)
								       (ADVP-TMP (ADV early#early_adv))
								       (ADJP-PRD (ADJ ripe#ripe_adj)))))
					       (PUNC ,)
					       (CONJP (CONJ or#or_conj1)
						      (CP-ADV (C that#that_conj)
							      (IP-SUB (IP-SUB (NP-SBJ (PRO they#they_pron))
									      (VBP bear#bear_v1)
									      (NP-OB1 (Q little#little_adj) (N Fruit#fruit_n)))
								      (PUNC ,)
								      (CONJP (CONJ or#or_conj1)
									     (IP-SUB (NP-SBJ *con*)
										     (HVP have#have_v)
										     (NEG not#not_adv)
										     (BEN been#be_v)
										     (NP-MSR (ADJP (ADVR so#so_adv) (ADJ long#long_adj1))
											     (PP *ICH*-3))
										     (ADJP-PRD (ADJ set#set_adj1))
										     (PP-3 (P as#as_adv)
											   (IP-INF (TO to#to_prep)
												   (HV have#have_v)
												   (VBN covered#cover_v1)
												   (NP-OB1 (D the#the_adj) (N Wall#wall_n1))))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,127.301))

( (IP-MAT (CONJ And#and_conj1)
	  (PP-LFD (P though#though_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (SUCH such#such_adj) (CODE <font>) (NS Vines#vine_n))
				  (CODE <$$font>)
				  (MD can@#can_v1)
				  (NEG @not#not_adv)
				  (VB extend#extend_v)
				  (NP-OB1 (PRO themselves#themselves_pron))
				  (PP (P to#to_prep)
				      (NP (D that#that_pron1)
					  (N bigness#bigness_n)
					  (PUNC ,)
					  (PP (P as#as_adv)
					      (NP (D those#those_pron)
						  (RRC (VAN planted#plant_v)
						       (ADVP-LOC (CP-FRL (WADVP-1 (WADV where#where_adv))
									 (C 0)
									 (IP-SUB (ADVP-LOC *T*-1)
										 (NP-SBJ (PRO they#they_pron))
										 (HVP have#have_v)
										 (NP-OB1 (QR more#more_adj) (N room#room_n1)))))))))))))
	  (PUNC ;)
	  (CODE <P_128>)
	  (ADVP-RSP (ADV yet#yet_adv))
	  (PP (P by#by_prep)
	      (NP (D this#this_pron) (NS means#mean_n3)))
	  (NP-SBJ (PRO you#you_pron))
	  (MD will#will_v1)
	  (VB make#make_v1)
	  (NP-OB1 (N advantage#advantage_n)
		  (PP (P of#of_prep)
		      (NP (SUCH such#such_adj)
			  (NS portions#portion_n)
			  (PP (P of#of_prep)
			      (NP (PRO$ your#your_pron) (N Wall#wall_n1)))
			  (PUNC ,)
			  (PP (P as#as_adv)
			      (CP-CMP (WNP-2 0)
				      (C 0)
				      (IP-SUB (NP-ADV (OTHER+N otherwise#otherwise_n))
					      (NP-SBJ (PRO you#you_pron))
					      (MD could#can_v1)
					      (HV have#have_v)
					      (HVN had#have_v)
					      (NP-OB1 (Q little#little_adj)
						      (N benefit#benefit_n)
						      (PP (P from#from_prep)
							  (NP *T*-2)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,128.302))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 2#two_adj) (PUNC .))
  (ID LANGF-1696-E3-H,128.303))

( (IP-MAT (NP-SBJ (D The#the_adj)
		  (ADJS best#best_adj)
		  (N ground#ground_n)
		  (PP (P for#for_prep)
		      (NP (PRO them#them_pron))))
	  (BEP is#be_v)
	  (NP-PRD (D that#that_pron1)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP is#be_v)
				  (CODE <font>)
				  (ADJP-PRD (ADJP (ADJ rich#rich_adj) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (ADJ dry#dry_adj))
					    (CODE <$$font>)
					    (PUNC ,)
					    (CONJP (ADJP (ADJ inclinable#inclinable_adj)
							 (PP (P to#to_prep)
							     (CODE <font>)
							     (ADJP (ADJP (ADJ stony#stony_adj))
								   (CODE <$$font>)
								   (CONJP (CONJ or#or_conj1)
									  (CODE <font>)
									  (NP (N gravel#gravel_n))))))))
				  (CODE <$$font>)
				  (PUNC ,)
				  (PP (P so#so_adv)
				      (CP-ADV (C 0)
					      (IP-SUB (NP-SBJ (PRO it#it_pron))
						      (VBP bind#bind_v)
						      (NEG not#not_adv)))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,128.304))

( (IP-MAT (NP-SBJ (D the#the_adj)
		  (ADJS best#best_adj)
		  (N Dung#dung_n1)
		  (CP-EOP (WNP-1 0)
			  (IP-INF (NP-SBJ *T*-1)
				  (TO to#to_prep)
				  (VB fatten#fatten_v)
				  (NP-OB1 (D the#the_adj)
					  (N Earth#earth_n1)
					  (CP-REL (WNP-2 0)
						  (C 0)
						  (IP-SUB (NP-SBJ (PRO they#they_pron))
							  (VBP grow#grow_v)
							  (PP (P in#in_prep)
							      (NP *T*-2))))))))
	  (BEP is#be_v)
	  (NP-PRD (N Horse#horse_n) (CONJ or#or_conj1) (N Sheeps-dung#SEE_sheep_n))
	  (PUNC :))
  (ID LANGF-1696-E3-H,128.305))

( (IP-IMP (VBI Make#make_v1)
	  (IP-SMC (ADJP-PRD (ADJ bare#bare_adj))
		  (NP-SBJ (D the#the_adj) (CODE <font>) (NS Roots#root_n1)))
	  (CODE <$$font>)
	  (PP (P in#in_prep)
	      (NP (D the#the_adj)
		  (N beginning#beginning_n)
		  (PP (P of#of_prep)
		      (NP (N Winter#winter_n1)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,128.306))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI throw#throw_v1)
	  (RP in#in_adv)
	  (NP-OB1 (N plenty#plenty_n)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (ADJ same#same_adj) (N Dung#dung_n1))))
	  (NP-TMP (QS most#most_adj) (NS Winters#winter_n1))
	  (PUNC .))
  (ID LANGF-1696-E3-H,128.307))

( (IP-MAT (NP-SBJ (D The#the_adj)
		  (ADJS best#best_adj)
		  (N way#way_n1)
		  (PP (P of#of_prep)
		      (NP (N propagating#propagating_n)
			  (PP (P of#of_prep)
			      (NP (PRO them#them_pron))))))
	  (BEP is#be_v)
	  (PUNC ,)
	  (IP-INF (PP (P in#in_prep)
		      (CODE <font>)
		      (NP (NPR November#NA)))
		  (CODE <$$font>)
		  (TO to#to_prep)
		  (VB lay#lay_v1)
		  (NP-OB1 (D a#a_adj)
			  (N Branch#branch_n)
			  (PP (P of#of_prep)
			      (NP (NP-POS (D that#that_pron1) (N$ Years#year_n))
				  (N growth#growth_n1))))
		  (PP (P into#into_prep)
		      (NP (D the#the_adj) (N Earth#earth_n1)))
		  (PUNC ,)
		  (PP (P under#under_prep)
		      (NP (D the#the_adj) (ADJ old#old_adj) (N Tree#tree_n)))
		  (PUNC ,)
		  (PP (P without#without_adv)
		      (IP-PPL (VAG cutting#cut_v)
			      (NP-OB1 (PRO it#it_pron))
			      (RP off#off_adv))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,128.308))

( (IP-IMP (VBI lay#lay_v1)
	  (NP-OB1 (QP (ADVR as#as_adv) (Q many#many_adj))
		  (CODE <font>)
		  (NS joynts#joint_n1)
		  (CODE <$$font>)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NX (NS buds#bud_n1)))
		  (CODE <$$font>)
		  (PP *ICH*-1))
	  (PP (P in#in_prep)
	      (NP (D the#the_adj) (N Earth#earth_n1)))
	  (CODE {SIC:Farth})
	  (PP-1 (P as#as_adv)
		(CP-CMP (WNP-2 0)
			(C 0)
			(IP-SUB (NP-OB1 *T*-2)
				(NP-SBJ (PRO you#you_pron))
				(MD can#can_v1)
				(VB *))))
	  (PUNC ,)
	  (IP-PPL (VAG leaving#leave_v1)
		  (NP-OB1 (FP but#but_prep) (ONE one#one_adj) (CONJ or#or_conj1) (NUM two#two_adj))
		  (RP out#out_adv))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,128.309))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (PRO it#it_pron))
	  (VBP puts#put_v)
	  (ADVP (ADV forth#forth_adv))
	  (NP-OB1 (PRO$ its#its_adj) (CODE <font>) (NS roots#root_n1))
	  (CODE <$$font>)
	  (PP (ADV chiefly#chiefly_adv)
	      (P at#at_prep)
	      (NP (D the#the_adj) (CODE <font>) (NS joynts#joint_n1)))
	  (CODE <$$font>)
	  (PP (P at#at_prep)
	      (NP (NP-POS (D a#a_adj) (N$ Years#year_n))
		  (N end#end_n)))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,128.310))

( (IP-IMP (CONJ or#or_conj1)
	  (PP (P in#in_prep)
	      (NP (D the#the_adj) (CODE <font>) (NPR February#NA))
	      (CP-ADV (IP-SUB (VBP come#come_v)
			      (NP-SBJ (NUM twelve#twelve_adj) (N month#month_n1)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (VBI cut#cut_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (RP off#off_adv)
	      (P from#from_prep)
	      (NP (D the#the_adj) (ADJ old#old_adj) (ONE one#one_adj)))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,128.311))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI plant#plant_v)
	  (NP-OB1 (PRO it#it_pron))
	  (ADVP-LOC (CP-FRL (WADVP-1 (WADV where#where_adv))
			    (C 0)
			    (IP-SUB (NP-SBJ (PRO you#you_pron))
				    (VBP design#design_v)
				    (CP-THT (C 0)
					    (IP-SUB (ADVP-LOC *T*-1)
						    (NP-SBJ (PRO it#it_pron))
						    (MD should#shall_v)
						    (VB grow#grow_v))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,128.312))

( (IP-IMP (VBI lay#lay_v1)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P in#in_prep)
	      (NP (D the#the_adj) (N Earth#earth_n1)))
	  (PP (P in#in_prep)
	      (NP (D the#the_adj)
		  (ADJ same#same_adj)
		  (N posture#posture_n)
		  (CP-REL (WNP-1 0)
			  (C 0)
			  (IP-SUB (NP-SBJ (PRO it#it_pron))
				  (VBD lay#lie_v1)
				  (PP (P in#in_prep)
				      (NP *T*-1))
				  (ADVP-TMP (ADV before#before_adv))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,128.313))

( (IP-IMP (CONJ and#and_conj1)
	  (ALSO also#also_adv)
	  (VBI lay#lay_v1)
	  (NP-OB1 (Q some#some_pron)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (CODE <font>)
			  (NS Buds#bud_n1)
			  (CODE <$$font>)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj)
				  (CODE <font>)
				  (ADJ new#new_adj)
				  (N wood#wood_n1)
				  (CODE <$$font>)
				  (PUNC ,)
				  (CP-REL (WNP-1 0)
					  (C that#that_conj)
					  (IP-SUB (NP-SBJ *T*-1)
						  (VBD grew#grow_v)
						  (RP out#out_adv)
						  (PP (P since#since_adv)
						      (CP-ADV (C 0)
							      (IP-SUB (NP-SBJ (PRO it#it_pron))
								      (BED was#be_v)
								      (ADVP-TMP (ADV first#first_adj))
								      (VAN laid#lay_v1)
								      (RP down#down_adv)))))))))))
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (PRO it#it_pron))
			  (MD may#may_v1)
			  (VB gain#gain_v2)
			  (NP-OB1 (QP (D the#the_adj) (QR more#more_adj))
				  (CODE <font>)
				  (NS Roots#root_n1))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (IP-PPL (VAG leaving#leave_v1)
		  (PP (RP out#out_adv)
		      (P of#of_prep)
		      (NP (D the#the_adj) (N ground#ground_n)))
		  (ADVP (ADV again#again_adv))
		  (NP-OB1 (NUMP (NEG not#not_adv) (ADV above#above_adv) (ONE one#one_adj) (CONJ or#or_conj1) (CODE <font>) (NUM two#two_adj))
			  (NS buds#bud_n1)))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-H,128.314))

( (CODE <P_129>))

( (IP-MAT (NP-SBJ (PRO You#you_pron))
	  (MD may#may_v1)
	  (VB chance#chance_v)
	  (IP-INF (TO to#to_prep)
		  (HV have#have_v)
		  (NP-OB1 (NS Suckers#sucker_n)
			  (PP (P of#of_prep)
			      (NP (D an#a_adj)
				  (ADJ old#old_adj)
				  (N Vine#vine_n)
				  (CP-REL (WNP-1 (WPRO which#which_adj))
					  (C 0)
					  (IP-SUB (NP-SBJ *T*-1)
						  (MD will#will_v1)
						  (BE be#be_v)
						  (ADJP-PRD (ADJ sure#sure_adj)
							    (IP-INF (TO to#to_prep) (VB grow#grow_v)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,129.316))

( (IP-MAT (IP-MAT-1 (CONJ Or#or_conj1)
		    (NP-SBJ (PRO you#you_pron))
		    (MD may#may_v1)
		    (VB take#take_v)
		    (CODE <font>)
		    (NP-OB1 (NS Cuttings#cutting_n)
			    (CODE <$$font>)
			    (PP (P of#of_prep)
				(CODE <font>)
				(NP (NS Vine-branches#vine-branch_n)
				    (CODE <$$font>)
				    (PP (P of#of_prep)
					(NP (NP-POS (D that#that_pron1) (N$ Years#year_n))
					    (N growth#growth_n1)))))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (VB set#set_v1)
			   (NP-OB1 (PRO them#them_pron))
			   (PP (P in#in_prep)
			       (NP (ADJ good#good_adj) (CODE <font>) (ADJ warm#warm_adj) (ADJ loose#loose_adj) (CODE <$$font>) (N Land#land_n1)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,129.317))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (Q many#many_adj))
	  (MD will#will_v1)
	  (VB grow#grow_v)
	  (PUNC ;))
  (ID LANGF-1696-E3-H,129.318))

( (IP-IMP (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (BEP be#be_v)
			      (PP (P in#in_prep)
				  (NP (D the#the_adj)
				      (N place#place_n1)
				      (CP-REL (WNP-1 0)
					      (C 0)
					      (IP-SUB (NP-SBJ (PRO you#you_pron))
						      (VBP intend#intend_v)
						      (CP-THT (C 0)
							      (IP-SUB (NP-SBJ (PRO they#they_pron))
								      (MD shall#shall_v)
								      (ADVP-TMP (ADV always#always_adv))
								      (VB stand#stand_v)
								      (PP (P in#in_prep)
									  (NP *T*-1)))))))))))
	  (PUNC ,)
	  (NP-TMP (ADJS next#next_adj) (CODE <font>) (N year#year_n))
	  (CODE <$$font>)
	  (VBI lay#lay_v1)
	  (RP down#down_adv)
	  (NP-OB1 (D a#a_adj)
		  (N part#part_n1)
		  (PP (P of#of_prep)
		      (NP (D that#that_pron1)
			  (CP-REL (WNP-2 (WPRO which#which_adj))
				  (C 0)
				  (IP-SUB (NP-SBJ *T*-2)
					  (HVP hath#have_v)
					  (VBN grown#grow_v)
					  (RP out#out_adv))))))
	  (PUNC ,)
	  (IP-INF-PRP (TO to#to_prep) (VB root#root_v1) (ALSO also#also_adv))
	  (PUNC ,))
  (ID LANGF-1696-E3-H,129.319))

( (IP-IMP (CONJ or#or_conj1)
	  (ELSE else#else_adv)
	  (PP (P upon#upon_prep)
	      (NP (N removal#removal_n)))
	  (VBI lay#lay_v1)
	  (RP in#in_adv)
	  (NP-OB1 (D the#the_adj)
		  (ADJ new#new_adj)
		  (N growth#growth_n1)
		  (NP-PRN (Q all#all_adj)
			  (PP (P but#but_prep)
			      (NP (NP (D a#a_adj) (CODE <font>) (N bud#bud_n1))
				  (CODE <$$font>)
				  (CONJP (CONJ or#or_conj1)
					 (NP (NUM two#two_adj)))))))
	  (PUNC ,)
	  (PP (P with#with_prep)
	      (NP (D that#that_pron1)
		  (N part#part_n1)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP is#be_v)
				  (ADVP-TMP (ADV already#already_adj))
				  (VAN rooted#root_v1)))))
	  (PUNC :))
  (ID LANGF-1696-E3-H,129.320))

( (IP-IMP (IP-IMP (PP (P If#if_conj)
		      (CP-ADV (C 0)
			      (IP-SUB (NP-SBJ (PRO it#it_pron))
				      (HVP have#have_v)
				      (VBN made#make_v1)
				      (NP-OB1 (FP but#but_prep) (ADJ small#small_adj) (N growth#growth_n1))
				      (NP-TMP (D the#the_adj) (ADJ first#first_adj) (CODE <font>) (N year#year_n)))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (VBI lay#lay_v1)
		  (NP-OB1 (N part#part_n1)
			  (PP (P of#of_prep)
			      (NP (NP-POS (D the#the_adj) (ADJ second#second_adj) (CODE <font>) (N$ years#year_n))
				  (CODE <$$font>)
				  (N growth#growth_n1))))
		  (PP (P in#in_prep)
		      (NP (D the#the_adj) (N ground#ground_n))))
	  (PUNC ,)
	  (CONJP (IP-MAT (NP-SBJ (PRO it#it_pron))
			 (MD will#will_v1)
			 (NP-MSR (QR more#more_adj)
				 (PP *ICH*-1))
			 (VB advantage#advantage_v)
			 (NP-OB1 (PRO them#them_pron))
			 (PP (P by#by_prep)
			     (IP-PPL (VAG helping#help_v)
				     (NP-OB2 (PRO them#them_pron))
				     (PP (P to#to_prep)
					 (NP (ADJ good#good_adj) (CODE <font>) (NS roots#root_n1)))))
			 (CODE <$$font>)
			 (PUNC ,)
			 (PP-1 (P than#than_conj)
			       (CP-CMP (WNP-2 0)
				       (C 0)
				       (IP-SUB (NP-SBJ (D the#the_adj)
						       (N loss#loss_n1)
						       (PP (P of#of_prep)
							   (NP (NP-MSR (NP (D a#a_adj) (CODE <font>) (N year#year_n))
								       (CODE <$$font>)
								       (CONJP (CONJ or#or_conj1)
									      (NP (NUM two@#two_adj)))
								       ($ @'s#NA))
							       (N growth#growth_n1))
							   (PP (P in#in_prep)
							       (NP (D the#the_adj) (N top#top_n1)))))
					       (MD will#will_v1)
					       (VB amount#amount_v)
					       (PP (P to#to_prep)
						   (NP *T*-2)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-H,129.321))

( (IP-IMP (IP-IMP (PP (P If#if_conj)
		      (CP-ADV (C 0)
			      (IP-SUB (NP-SBJ (PRO you#you_pron))
				      (HVP have#have_v)
				      (NP-OB1 (D an#a_adj)
					      (ADJ old#old_adj)
					      (CODE <font>)
					      (N Vine#vine_n)
					      (CODE <$$font>)
					      (PUNC ,)
					      (CP-REL (WNP-1 0)
						      (C that#that_conj)
						      (IP-SUB (NP-SBJ *T*-1)
							      (VBP beareth#bear_v1)
							      (NEG not#not_adv)
							      (ADVP (ADV well#well_adv))))))))
		  (PUNC ,)
		  (VBI lay#lay_v1)
		  (RP down#down_adv)
		  (PP (P in#in_prep)
		      (CODE <font>)
		      (NP (NPR February#NA) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (NPR March#NA)))
		  (CODE <$$font>)
		  (NP-OB1 (Q some#some_pron)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj)
				  (ADJS strongest#strong_adj)
				  (CODE <font>)
				  (NS branches#branch_n)
				  (CODE <$$font>)
				  (PP (P of#of_prep)
				      (NP (D the#the_adj) (ADJ foregoing#foregoing_adj) (CODE <font>) (N year#year_n)))))
			  (CODE <$$font>)
			  (PUNC ,)
			  (PUNC <paren>)
			  (CP-REL (WNP-2 0)
				  (C that#that_conj)
				  (IP-SUB (NP-SBJ *T*-2)
					  (VBP grow#grow_v)
					  (ADJP-SPR (ADJ low#low_adv)))))
		  (PUNC <$$paren>)
		  (PP (P in#in_prep)
		      (NP (D the#the_adj)
			  (CODE <font>)
			  (N mold#mould_n1)
			  (CODE <$$font>)
			  (PP (P under#under_prep)
			      (NP (D the#the_adj) (ADJ old#old_adj) (N Tree#tree_n)))))
		  (PUNC ,)
		  (PP (P without#without_adv)
		      (IP-PPL (VAG cutting#cut_v)
			      (NP-OB1 (PRO them#them_pron))
			      (RP off#off_adv)))
		  (PUNC ,)
		  (IP-PPL (VAG leaving#leave_v1)
			  (PP (RP out#out_adv)
			      (P of#of_prep)
			      (NP (D the#the_adj) (N ground#ground_n)))
			  (NP-OB1 (NP (D a#a_adj) (CODE <font>) (N bud#bud_n1))
				  (CODE <$$font>)
				  (CONJP (CONJ or#or_conj1)
					 (NP (NUM two#two_adj)))
				  (CP-EOP (WNP-3 0)
					  (IP-INF (NP-SBJ *T*-3)
						  (TO to#to_prep)
						  (VB grow#grow_v))))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT (NP-SBJ (PRO$ your#your_pron) (CODE <font>) (N wall#wall_n1))
			 (CODE <$$font>)
			 (MD will#will_v1)
			 (ADVP (ADV quickly#quickly_adv))
			 (BE be#be_v)
			 (VAN furnished#furnish_v)
			 (PP (P with#with_prep)
			     (NP (ADJP (ADJ new#new_adj) (PUNC ,) (CONJ and#and_conj1) (ADJ fresh#fresh_adj))
				 (CODE <font>)
				 (NS branches#branch_n)))
			 (CODE <$$font>)
			 (PUNC ;)
			 (PP (P so#so_adv)
			     (CP-ADV (C that#that_conj)
				     (IP-SUB (PP (P by#by_prep)
						 (NP (NS degrees#degree_n)))
					     (NP-SBJ (PRO you#you_pron))
					     (MD may#may_v1)
					     (VB cut#cut_v)
					     (RP off#off_adv)
					     (NP-OB1 (Q many#many_adj)
						     (PP (P of#of_prep)
							 (NP (D the#the_adj)
							     (ADJ old#old_adj)
							     (CODE <font>)
							     (NS branches#branch_n)
							     (CODE <$$font>)
							     (PP (P of#of_prep)
								 (NP (D the#the_adj) (N Vine#vine_n)))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-H,129.322))

( (IP-MAT (CONJ for#for_prep)
	  (PP-LFD (P though#though_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (ONE one#one_adj) (N Vine#vine_n))
				  (MD may#may_v1)
				  (CODE <P_130>)
				  (VB cover#cover_v1)
				  (NP-OB1 (N abundance#abundance_n)
					  (PP (P of#of_prep)
					      (NP (N walling#walling_n2)))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV yet#yet_adv))
	  (NP-SBJ (NUMP (NUM three#three_adj) (CONJ or#or_conj1) (NUM four#four_adj))
		  (CODE <font>)
		  (NS roots#root_n1)
		  (CODE <$$font>)
		  (PP (P in#in_prep)
		      (NP (D that#that_pron1) (N compass#compass_n1))))
	  (MD will#will_v1)
	  (VB strengthen#strengthen_v)
	  (NP-OB1 (PRO it#it_pron))
	  (NP-MSR (QP (D the#the_adj) (QR more#more_adj)))
	  (IP-INF-PRP (TO to#to_prep) (VB bear#bear_v1))
	  (PUNC .))
  (ID LANGF-1696-E3-H,130.323))
