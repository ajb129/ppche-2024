( (CODE <BEGIN_langf-1696-e3-p1>))

( (CODE <P_1>))

( (CODE <heading>))

( (NP (D THE#the_adj) (N INTRODUCTION#introduction_n))
  (ID LANGF-1696-E3-P1,1.4))

( (CODE <$$heading>))

( (IP-MAT (IP-PPL (HAG Having#have_v)
		  (VBN undertaken#undertake_v)
		  (PP (P in#in_prep)
		      (NP (D this#this_pron) (CODE <font>) (N Book#book_n)))
		  (CODE <$$font>)
		  (IP-INF (TO to#to_prep)
			  (VB publish#publish_v)
			  (NP-OB1 (Q all#all_adj)
				  (ADJ necessary#necessary_adj)
				  (NS Directions#direction_n)
				  (PP (P concerning#concerning_prep)
				      (CODE <font>)
				      (NP (N Planting#planting_n))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (D the#the_adj)
		  (ADJ first#first_adj)
		  (N step#step_n1)
		  (CP-REL (WNP-1 0)
			  (C 0)
			  (IP-SUB (NP-SBJ (PRO I#i_pron))
				  (BEP am#be_v)
				  (IP-INF (NP-OB1 *T*-1)
					  (TO to#to_prep)
					  (VB take#take_v)
					  (PUNC ,)
					  (PUNC <paren>)
					  (IP-INF-PRP (TO to#to_prep)
						      (VB proceed#proceed_v)
						      (PP (P in#in_prep)
							  (NP (ADJ due#due_adj) (CODE <font>) (N order#order_n))))))))
	  (CODE <$$font>)
	  (PUNC <$$paren>)
	  (BEP is#be_v)
	  (IP-INF-PRD (TO to#to_prep)
		      (VB give#give_v)
		      (NP-OB1 (NS instructions#instruction_n)
			      (PP (P about#about_adv)
				  (CODE <font>)
				  (NP (NS Seminaries#seminary_n1)
				      (CODE <$$font>)
				      (PUNC ,)
				      (CONJ and#and_conj1)
				      (CODE <font>)
				      (NS Nurseries#nursery_n)
				      (CODE <$$font>)
				      (PUNC ,)
				      (CP-REL (WPP-2 (WADV+P wherein#wherein_adv))
					      (C 0)
					      (IP-SUB (PP *T*-2)
						      (NP-SBJ (ADJ young#young_adj) (CODE <font>) (NS Plants#plant_n1))
						      (CODE <$$font>)
						      (BEP are#be_v)
						      (IP-INF (TO to#to_prep)
							      (BE be#be_v)
							      (VAN (VAN raised#raise_v1) (CONJ and#and_conj1) (VAN cherished#cherish_v))
							      (PP (P in#in_prep)
								  (NP (PRO$ their#their_adj) (N Infancy#infancy_n))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,1.6))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (NS men#man_n1))
			      (BEP are#be_v)
			      (ADVP (ADV generally#generally_adv))
			      (PUNC <paren>)
			      (PP-PRN (P through#through_prep)
				      (NP (N ignorance#ignorance_n)))
			      (PUNC <$$paren>)
			      (ADJP-PRD (ADVR so#so_adv)
					(ADJ indifferent#indifferent_adj1)
					(CP-QUE-SUB (WQ whether#whether_pron)
						    (C 0)
						    (IP-SUB (IP-SUB-1 (NP-SBJ (PRO they#they_pron))
								      (HVP have#have_v)
								      (NP-OB1 (D these#these_pron))
								      (PP (P of#of_prep)
									  (NP (PRO$ their#their_adj) (ADJ own#own_adj))))
							    (CONJP (CONJ or#or_conj1)
								   (IP-SUB=1 (NEG no#no_adv1))))))
			      (PUNC ;)
			      (PP (P because#because_adv)
				  (CP-ADV (C 0)
					  (IP-SUB (PP (P for#for_prep)
						      (NP (NP-MSR (D a#a_adj) (ADJ little#little_adj))
							  (N Money#money_n)))
						  (NP-SBJ (PRO they#they_pron))
						  (MD can#can_v1)
						  (HV have#have_v)
						  (CODE <font>)
						  (NP-OB1 (NS Plants#plant_n1)
							  (RRC *ICH*-2))
						  (CODE <$$font>)
						  (PP (P from#from_prep)
						      (NP (OTHERS others#other_adj)))
						  (RRC-2 (ADVP (ADV ready#ready_adj))
							 (VAN brought#bring_v)
							 (PP (RP up#up_adv1)
							     (P to#to_prep)
							     (NP (PRO$ their#their_adj) (NS hands#hand_n))))))))))
	  (PUNC ;)
	  (PP (ADV+P therefore#therefore_adv))
	  (NP-SBJ (PRO I#i_pron))
	  (MD shall#shall_v)
	  (ADVP-LOC (ADV here#here_adv))
	  (PP (P in#in_prep)
	      (NP (D the#the_adj) (ADJ first#first_adj) (N place#place_n1)))
	  (VB present#present_v)
	  (NP-OB1 (SUCH such#such_adj))
	  (PP (P with#with_prep)
	      (NP (NS reasons#reason_n1)
		  (PUNC ,)
		  (CP-REL (WNP-3 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ (PRO I#i_pron))
				  (VBP suppose#suppose_v)
				  (CP-THT (C 0)
					  (IP-SUB (NP-SBJ *T*-3)
						  (MD can@#can_v1)
						  (NEG @not#not_adv)
						  (FP but#but_prep)
						  (VB make#make_v1)
						  (NP-OB1 (PRO them#them_pron))
						  (PP (P of#of_prep)
						      (NP (D the#the_adj)
							  (ADJ same#same_adj)
							  (N mind#mind_n1)
							  (PUNC ,)
							  (CP-REL (WPP-4 0)
								  (C that#that_conj)
								  (IP-SUB (PP *T*-4)
									  (NP-SBJ (PRO I#i_pron)
										  (NP-PRN *ICH*-5))
									  (BEP am#be_v)
									  (NP-5 (PRO$ my#my_adj) (N self#self_pron))))
							  (PUNC ,)
							  (CP-THT (C That#that_conj)
								  (IP-SUB (NP-SBJ-6 (PRO it@#it_pron))
									  (BEP @'s#be_v)
									  (ADJP-PRD (NP-MSR (ADJ far#far_adj))
										    (ADJR better#better_adj))
									  (IP-INF-6 (IP-INF (TO to#to_prep)
											    (HV have#have_v)
											    (NP-OB1 (PRO them#them_pron))
											    (PP (P of#of_prep)
												(NP (PRO$ their#their_adj) (ADJ own#own_adj) (N bringing#bringing_n) (RP up#up_adv1))))
										    (PUNC ,)
										    (CONJP (CONJ and#and_conj1)
											   (IP-INF (TO to#to_prep)
												   (HV have#have_v)
												   (CODE <font>)
												   (NP-OB1 (NS Seminaries#seminary_n1)
													   (CODE <$$font>)
													   (CONJ and#and_conj1)
													   (CODE <font>)
													   (NS Nurseries#nursery_n)
													   (CODE <$$font>)
													   (PP (P of#of_prep)
													       (NP (PRO$ their#their_adj) (ADJ own#own_adj))))
												   (PP (P for#for_prep)
												       (NP (D this#this_pron) (N purpose#purpose_n))))))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,1.7))

( (PP (LS 1#one_adj)
      (PUNC .)
      (P Because#because_adv)
      (CP-ADV (C 0)
	      (IP-SUB (NP-ADV (D this#this_pron) (N way#way_n1))
		      (NP-SBJ (D a#a_adj) (N Man#man_n1))
		      (MD shall#shall_v)
		      (BE be#be_v)
		      (ADJP-PRD (ADJ sure#sure_adj)
				(IP-INF (TO to#to_prep)
					(VB meet#meet_v)
					(PP (P with#with_prep)
					    (NP (Q no#no_adj)
						(N failure#failure_n)
						(PUNC ,)
						(CONJ-1 either#NA)
						(PP (P in#in_prep)
						    (NP (CONJ *ICH*-1)
							(D the#the_adj)
							(N kind#kind_n)
							(CONJP (CONJ or#or_conj1)
							       (NX (N goodness#goodness_n)))
							(PP (P of#of_prep)
							    (NP (PRO$ his#his_adj)
								(CODE <font>)
								(NS Trees#tree_n)
								(CODE <$$font>)
								(PUNC ,)
								(CONJP (CONJ and#and_conj1)
								       (CODE <font>)
								       (NX (N Fruit#fruit_n)))
								(CODE <$$font>)
								(PUNC ;)
								(CP-REL (WPP-2 (P in#in_prep)
									       (WNP (Q both#both_pron) (WPRO which#which_adj)))
									(C 0)
									(IP-SUB (PP *T*-2)
										(NP-SBJ (PRO he#he_pron))
										(MD shall#shall_v)
										(BE be#be_v)
										(ADVP-TMP (ADV often#often_adv))
										(CODE <P_2>)
										(VAN disappointed#disappoint_v)
										(PUNC ,)
										(PP (P if#if_conj)
										    (CP-ADV (C 0)
											    (IP-SUB (NP-SBJ (PRO he#he_pron))
												    (HVP have#have_v)
												    (NP-OB1 (PRO$ his#his_adj) (CODE <font>) (NS Trees#tree_n))
												    (CODE <$$font>)
												    (PP (P upon#upon_prep)
													(CODE <font>)
													(NP (N trust#trust_n)
													    (CODE <$$font>)
													    (PP (P from#from_prep)
														(NP (OTHERS others#other_adj)
														    (PUNC ,)
														    (CP-REL (WNP-3 (WPRO who#who_pron))
															    (C 0)
															    (IP-SUB (IP-SUB (NP-SBJ *T*-3)
																	    (VBP make#make_v1)
																	    (NP-OB1 (D a#a_adj)
																		    (CODE <font>)
																		    (N Trade#trade_n)
																		    (CODE <$$font>)
																		    (PP (P of#of_prep)
																			(IP-PPL (VAG selling#sell_v)
																				(NP-OB1 (PRO them#them_pron))))))
																    (PUNC ,)
																    (CONJP (CONJ and#and_conj1)
																	   (IP-SUB (NP-SBJ *T*-3)
																		   (BEP are#be_v)
																		   (PP (ADV+P therefore#therefore_adv))
																		   (NP-TMP (Q many#many_adj) (NS times#time_n))
																		   (ADJP-PRD (ADJ incurious#incurious_adj))
																		   (PP (P in#in_prep)
																		       (CODE <font>)
																		       (IP-PPL (VAG raising#raise_v1)
																			       (CODE <$$font>)
																			       (NP-OB1 (PRO them#them_pron))))))
																    (PUNC ,)
																    (CONJP (CONJ and#and_conj1)
																	   (IP-SUB (NP-SBJ *T*-3)
																		   (PP (P instead#instead_adv)
																		       (PP (P of#of_prep)
																			   (NP (D the#the_adj) (CODE <font>) (ADJ right#right_adj) (CODE <$$font>) (N kind#kind_n))))
																		   (PUNC <paren>)
																		   (PP-PRN (P if#if_conj)
																			   (CP-ADV (C 0)
																				   (IP-SUB (NP-SBJ (PRO they#they_pron))
																					   (MD can#can_v1)
																					   (VB get#get_v)
																					   (NP-OB1 (Q any#any_adj) (N thing#thing_n1))
																					   (PP (P by#by_prep)
																					       (NP (PRO it#it_pron))))))
																		   (PUNC <$$paren>)
																		   (MD will#will_v1)
																		   (NEG not#not_adv)
																		   (VB stick#stick_v1)
																		   (IP-INF (TO to#to_prep)
																			   (VB put#put_v)
																			   (NP-OB1 (PRO him#him_pron))
																			   (RP off#off_adv)
																			   (PP (P with#with_prep)
																			       (NP (D+OTHER another#another_pron)))))))))))))))))))))))))))
      (PUNC .))
  (ID LANGF-1696-E3-P1,2.8))

( (IP-MAT (LS 2#two_adj)
	  (PUNC .)
	  (NP-SBJ (NP (D The#the_adj)
		      (CODE <font>)
		      (N trouble#trouble_n)
		      (CODE <$$font>)
		      (CONJP (CONJ and#and_conj1)
			     (CODE <font>)
			     (NX (N expence#expense_n)))
		      (CODE <$$font>)
		      (PP (P of#of_prep)
			  (IP-PPL (IP-PPL (VAG buying#buy_v)
					  (NP-OB1 (ADJ young#young_adj) (NS Plants#plant_n1)))
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (IP-PPL (VAG getting#get_v)
						 (NP-OB1 (PRO them#them_pron))
						 (NP-DIR (N home#home_n1))
						 (PUNC ,)
						 (PUNC <paren>)
						 (NP-TMP (Q many#many_adj) (NS times#time_n))
						 (PP (P from#from_prep)
						     (NP (NS places#place_n1)
							 (ADJP (ADV very#very_adj) (CODE <font>) (ADJ remote#remote_adj)))))))))
		  (CODE <$$font>)
		  (PUNC <$$paren>)
		  (CONJP (CONJ and#and_conj1)
			 (NP (D the#the_adj)
			     (CODE <font>)
			     (N prejudice#prejudice_n)
			     (CODE <$$font>)
			     (CP-REL (WNP-1 0)
				     (C 0)
				     (IP-SUB (NP-OB1 *T*-1)
					     (NP-SBJ (PRO they#they_pron))
					     (ADVP-TMP (ADV often#often_adv))
					     (VBP receive#receive_v)
					     (PP (P in#in_prep)
						 (NP (D the#the_adj) (CODE <font>) (N carriage#carriage_n))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADVP (ADV wholly#wholly_adv))
	  (VAN prevented#prevent_v)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,2.9))

( (IP-MAT (LS 3#three_adj)
	  (PUNC .)
	  (IP-MAT-1 (NP-ADV (D This#this_pron) (N way#way_n1))
		    (NP-SBJ (D a#a_adj) (N Man#man_n1))
		    (MD shall#shall_v)
		    (PP (P with#with_prep)
			(NP (ADV almost#almost_adv)
			    (D the#the_adj)
			    (ADJ same#same_adj)
			    (N labour#labour_n)
			    (CONJP (CONJ and#and_conj1)
				   (NX (N charge#charge_n1)))))
		    (PUNC ,)
		    (CONJ both#both_pron)
		    (VB furnish#furnish_v)
		    (NP-OB1 (PRO himself#himself_pron))
		    (ADVP (ADV sufficiently#sufficiently_adv)))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (HV have#have_v)
			   (NP-OB1 (QP (QP (ADVR so#so_adv) (Q many#many_adj))
				       (QR more#more_adj))
				   (PP (P as#as_adv)
				       (IP-INF (IP-INF (TO to#to_prep)
						       (VB defray#defray_v1)
						       (NP-OB1 (D the#the_adj)
							       (N charge#charge_n1)
							       (CP-REL (WNP-2 0)
								       (C 0)
								       (IP-SUB (NP-SBJ (PRO he#he_pron))
									       (MD may#may_v1)
									       (BE be#be_v)
									       (PP (P at#at_prep)
										   (NP *T*-2))
									       (PP (P about#about_adv)
										   (NP (PRO it#it_pron))))))
						       (PUNC ,)
						       (PP (P if#if_conj)
							   (CP-ADV (C 0)
								   (IP-SUB (NP-SBJ (PRO he#he_pron))
									   (MD will#will_v1)
									   (VB sell#sell_v)
									   (NP-OB1 (PRO them#them_pron))))))
					       (PUNC ,)
					       (CONJP (CONJ or#or_conj1)
						      (IP-INF (TO to#to_prep)
							      (VB gratify#gratify_v)
							      (NP-OB1 (PRO$ his#his_adj) (NS Friends#friend_n))
							      (PP (P if#if_conj)
								  (CP-ADV (C 0)
									  (IP-SUB (NP-SBJ (PRO he#he_pron))
										  (HVD had#have_v)
										  (ADVP (ADVR rather#rather_adv))
										  (VB bestow#bestow_v)
										  (NP-OB1 (PRO them#them_pron))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,2.10))

( (IP-MAT (LS 4#four_adj)
	  (PUNC .)
	  (NP-SBJ (PRO He#he_pron))
	  (MD will#will_v1)
	  (NP-ADV (D this#this_pron) (N way#way_n1))
	  (BE be#be_v)
	  (VAN provided#provide_v)
	  (PP (P with#with_prep)
	      (CODE <font>)
	      (NP (NS Stocks#stock_n1)))
	  (CODE <$$font>)
	  (PP (P for#for_prep)
	      (CODE <font>)
	      (NP (CONJP (NP (NS Apples#apple_n)))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CODE <font>)
		  (CONJP (NP (NS Pears#pear_n)))
		  (PUNC ,)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CODE <font>)
		  (CONJP (NP (NS Plums#plum_n)))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CODE <font>)
		  (CONJP (NP (NS Cherries#cherry_n)))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (NP (Q all#all_adj) (ADJ choice#choice_adj) (CODE <font>) (N Wall-fruit#SEE_wall_n1)))
		  (CODE <$$font>)
		  (RRC (VAN raised#raise_v1)
		       (PP (P from#from_prep)
			   (CODE <font>)
			   (NP (NS Kernels#kernel_n1)
			       (CODE <$$font>)
			       (CONJ and#and_conj1)
			       (CODE <font>)
			       (NS Stones#stone_n)
			       (CODE <$$font>)
			       (PP (P of#of_prep)
				   (CODE <font>)
				   (NP (N Fruit#fruit_n))))))
		  (CODE <$$font>)
		  (PUNC :)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP are#be_v)
				  (ADJP-PRD (ADV incomparably#incomparably_adv)
					    (ADJR better#better_adj)
					    (PP (P than#than_conj)
						(NP (NS Stocks#stock_n1)
						    (RRC (VAN procured#procure_v)
							 (NP-ADV (Q any#any_adj) (OTHER other#other_adj) (N way#way_n1))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,2.11))

( (IP-MAT (NP-SBJ (D The#the_adj)
		  (NS means#mean_n3)
		  (CP-REL (WNP-1 0)
			  (C 0)
			  (IP-SUB (NP-OB1 *T*-1)
				  (NP-SBJ (Q some#some_pron))
				  (VBP use#use_v)
				  (IP-INF (TO to#to_prep)
					  (VB furnish#furnish_v)
					  (NP-OB2 (PRO themselves#themselves_pron))
					  (PP (P with#with_prep)
					      (CODE <font>)
					      (NP (NS Stocks#stock_n1)
						  (CODE <$$font>)
						  (PP (P for#for_prep)
						      (CODE <font>)
						      (NP (NS Apple-trees#apple-tree_n)))))))))
	  (CODE <$$font>)
	  (BEP is#be_v)
	  (PUNC ,)
	  (PP (P by#by_prep)
	      (IP-PPL (VAG getting#get_v)
		      (NP-OB1 (ADJ young#young_adj) (CODE <font>) (NS Crab-trees#crab-tree_n))
		      (CODE <$$font>)
		      (PP (RP out#out_adv)
			  (P of#of_prep)
			  (CODE <font>)
			  (NP (NP (NS Hedges#hedge_n))
			      (CODE <$$font>)
			      (PUNC ,)
			      (CODE <font>)
			      (CONJP (NP (ADJ rough#rough_adj) (NS Grounds#ground_n)))
			      (CODE <$$font>)
			      (CONJP (CONJ and#and_conj1)
				     (CODE <font>)
				     (NP (NS Woods#wood_n1)))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,2.12))

( (FRAG (CONJ and#and_conj1)
	(PP (P with#with_prep)
	    (CODE <font>)
	    (NP (NS Stocks#stock_n1)
		(CODE <$$font>)
		(PP (P for#for_prep)
		    (CODE <font>)
		    (NP (NS Pears#pear_n) (CODE <$$font>) (PUNC ,) (CONJ and#and_conj1) (CODE <font>) (NS Cherries#cherry_n)))))
	(CODE <$$font>)
	(PP (P by#by_prep)
	    (CODE <P_3>)
	    (CODE <font>)
	    (NP (NS Suckers#sucker_n)
		(CODE <$$font>)
		(RRC (VAG springing#spring_v1)
		     (PP (P from#from_prep)
			 (NP (D the#the_adj)
			     (NS Roots#root_n1)
			     (PP (P of#of_prep)
				 (NP (ADJ old#old_adj)
				     (CODE <font>)
				     (NS Trees#tree_n)
				     (CODE <$$font>)
				     (PP (P of#of_prep)
					 (NP (D those#those_pron) (NS kinds#kind_n))))))))))
	(PUNC ;))
  (ID LANGF-1696-E3-P1,3.13))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ-1 (EX there#there_adv))
	  (BEP is#be_v)
	  (NP-1 (Q much#much_adj))
	  (IP-INF (TO to#to_prep)
		  (BE be#be_v)
		  (VAN said#say_v1)
		  (PP (P against#against_prep)
		      (NP (Q both#both_pron) (NS courses#course_n1))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,3.14))

( (IP-MAT (PP-1 (P Against#against_prep)
		(IP-PPL (VAG using#use_v)
			(NP-OB1 (D those#those_pron)
				(CODE <font>)
				(NS Crab-trees#crab-tree_n)
				(CODE <$$font>)
				(RRC (VAN got#get_v)
				     (PP (RP out#out_adv)
					 (P of#of_prep)
					 (CODE <font>)
					 (NP (NS Woods#wood_n1) (CODE <$$font>) (PUNC ,) (CODE <font>) (X &c.#et-cetera_n)))))))
	  (CODE <$$font>)
	  (NP-SBJ-2 (EX there#there_adv))
	  (VBP lie#lie_v1)
	  (NP-2 (D these#these_pron)
		(NS Objections#objection_n)
		(PP *ICH*-1))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,3.15))

( (IP-MAT (LS 1#one_adj)
	  (PUNC .)
	  (NP-SBJ (D The#the_adj) (NS workmen#workman_n))
	  (PP (P in#in_prep)
	      (IP-PPL (VAG getting#get_v)
		      (NP-OB1 (PRO them#them_pron))))
	  (VBP break#break_v)
	  (NP-OB1 (Q some#some_pron))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,3.16))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (VBP hurt#hurt_v)
	  (NP-OB1 (OTHERS others#other_adj))
	  (PP (P of#of_prep)
	      (NP (D the#the_adj) (ADJ principal#principal_adj) (NS Roots#root_n1)))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,3.17))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (NP-TMP (Q+NS sometimes#sometimes_adv))
	  (VBP falls#fall_v)
	  (RP out#out_adv)
	  (CP-THT-1 (C that#that_conj)
		    (IP-SUB (IP-SUB-2 (NP-SBJ (PRO they#they_pron))
				      (HVP have#have_v)
				      (BEN been#be_v)
				      (VAN cut#cut_v)
				      (RP down#down_adv))
			    (PUNC ,)
			    (CONJP (CONJ and#and_conj1)
				   (IP-SUB=2 (VBN sprung#spring_v1)
					     (RP up#up_adv1)
					     (ADVP (ADV again#again_adv))
					     (PP (RP out#out_adv)
						 (P of#of_prep)
						 (NP (D the#the_adj) (ADJ remaining#remaining_adj) (N stump#stump_n1)))))
			    (PUNC ,)
			    (CONJP (CONJ or#or_conj1)
				   (IP-SUB=2 (NP-ADV (OTHER+N otherwise#otherwise_n))
					     (VAN hurt#hurt_v)))
			    (PUNC ,)
			    (CP-CAR (WNP-3 (WPRO which#which_adj))
				    (C 0)
				    (IP-SUB (NP-SBJ *T*-3)
					    (PP (P though#though_adv)
						(IP-PPL (NEG not#not_adv)
							(ADVP (ADV easily#easily_adv))
							(VAN discerned#discern_v)
							(PP (P because#because_adv)
							    (IP-PPL (VAN skinned#skin_v) (RP over#over_adv)))))
					    (PUNC ,)
					    (ADVP (ADV yet#yet_adv))
					    (MD will#will_v1)
					    (BE be#be_v)
					    (NP-PRD (D a#a_adj)
						    (N prejudice#prejudice_n)
						    (PP (P to#to_prep)
							(NP (PRO them#them_pron)))
						    (PP (P for#for_prep)
							(ADVP (ADV ever#ever_adv))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,3.18))

( (IP-MAT (LS 2#two_adj)
	  (PUNC .)
	  (NP-SBJ (Q Many#many_adj)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (CODE <font>)
			  (NS Stocks#stock_n1)
			  (CODE <$$font>)
			  (RRC (ADVP (ADV so#so_adv))
			       (VAN got#get_v)
			       (PP (RP out#out_adv)
				   (P of#of_prep)
				   (CODE <font>)
				   (NP (NS Woods#wood_n1) (CODE <$$font>) (PUNC ,) (CONJ and#and_conj1) (CODE <font>) (NS Hedges#hedge_n)))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (HVP have#have_v)
	  (PP (PP (P for#for_prep)
		  (NP (N want#want_adj)
		      (PP (P of#of_prep)
			  (NP (N room#room_n1)))))
	      (PUNC ,)
	      (CONJP (CONJ and#and_conj1)
		     (PP (P by#by_prep)
			 (NP (N reason#reason_n1)
			     (PP (P of#of_prep)
				 (NP (NP (NS shades#shade_n))
				     (PUNC ,)
				     (CONJP (CONJ and#and_conj1)
					    (NP (D the#the_adj)
						(N droping#dropping_n)
						(PP (P of#of_prep)
						    (NP (OTHER other#other_adj)
							(NS trees#tree_n)
							(PP (P about#about_adv)
							    (NP (PRO them#them_pron)))))))))))))
	  (PUNC ,)
	  (BEN been#be_v)
	  (VAN (VAN check't#check_v1) (CONJ and#and_conj1) (VAN baffled#baffle_v))
	  (PP (P in#in_prep)
	      (NP (PRO$ their#their_adj) (N growth#growth_n1)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,3.19))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (ADVP (ADV so#so_adv))
	  (VBP become#become_v)
	  (ADJP-PRD (ADJP (ADJ crooked#crooked_adj))
		    (PUNC ,)
		    (CONJP (ADJP (ADJ scabby#scabby_adj)))
		    (PUNC ,)
		    (CONJP (ADJP (ADJ ill_grown#SEE_ill_combform)))
		    (PUNC ,)
		    (CONJP (ADJP (ADJ rough#rough_adj)))
		    (PUNC ,)
		    (CONJP (CONJ and#and_conj1)
			   (ADJP (ADJ unkindly#unkindly_adj)))
		    (PUNC ,)
		    (CONJP (CONJ and#and_conj1)
			   (ADJP (ADV never#never_adv)
				 (ADJ like#like_adj)
				 (IP-INF (TO to#to_prep)
					 (VB make#make_v1)
					 (NP-OB1 (ADJ good#good_adj) (NS Trees#tree_n))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,3.20))

( (IP-MAT (LS 3#three_adj)
	  (PUNC .)
	  (NP-SBJ (Q Some#some_pron)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (VBP furnish#furnish_v)
				  (NP-OB1 (PRO themselves#themselves_pron))
				  (NP-ADV (D this#this_pron) (N way#way_n1))
				  (PP (P with#with_prep)
				      (NP (NS Stocks#stock_n1))))))
	  (PUNC ,)
	  (VBP chooose#choose_v)
	  (NP-OB1 (SUCH such#such_adj)
		  (PP (P as#as_adv)
		      (CP-CMP (WNP-2 0)
			      (C 0)
			      (IP-SUB (NP-SBJ *T*-2)
				      (BEP are#be_v)
				      (NP-PRD (ADJS largest#large_adj))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,3.21))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D those#those_pron))
	  (IP-PPL (HAG having#have_v)
		  (PP (P for#for_prep)
		      (NP (D the#the_adj) (QS most#most_adj) (N part#part_n1)))
		  (NP-OB1 (NP (ADJP (ADJ thick#thick_adj) (CONJ and#and_conj1) (ADJ hard#hard_adj))
			      (CODE <font>)
			      (N bark#bark_n1))
			  (CODE <$$font>)
			  (PUNC ,)
			  (CONJP (CONJ and#and_conj1)
				 (NP (ADJ old#old_adj) (CODE <font>) (NS roots#root_n1)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (VBP come#come_v)
	  (RP on#on_adv)
	  (ADVP (FP but#but_prep) (ADV slowly#slowly_adv))
	  (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (VAN removed#remove_v)
			      (IP-INF-PRP (TO to#to_prep)
					  (VB make#make_v1)
					  (CODE <font>)
					  (NP-OB1 (NS Apple-trees#apple-tree_n))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,3.22))

( (IP-MAT (LS 4#four_adj)
	  (PUNC .)
	  (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D these#these_pron) (CODE <font>) (NS Stocks#stock_n1))
			      (CODE <$$font>)
			      (BEP be#be_v)
			      (NEG not#not_adv)
			      (CODE <font>)
			      (VAN graffed#graff_v1)
			      (CODE <$$font>)
			      (ADVP-LOC (ADV very#very_adj) (ADV low#low_adv)))))
	  (PUNC <paren>)
	  (IP-MAT-PRN (CONJ and#and_conj1)
		      (PP (P if#if_conj)
			  (CP-ADV (C 0)
				  (IP-SUB (NP-SBJ (PRO they#they_pron))
					  (BEP are#be_v))))
		      (PUNC ,)
		      (NP-SBJ (NP-MSR (NP (D a#a_adj) (N$ years#year_n))
				      (CONJP *ICH*-1))
			      (N growth#growth_n1)
			      (CONJP-1 (CONJ or#or_conj1)
				       (CODE <P_4>)
				       (NP (NUM two#two_adj))))
		      (MD will#will_v1)
		      (BE be#be_v)
		      (VAN lost#lose_v1))
	  (PUNC <$$paren>)
	  (NP-SBJ (PRO they#they_pron))
	  (MD will#will_v1)
	  (VB put#put_v)
	  (ADVP (ADV forth#forth_adv))
	  (NP-OB1 (NS branches#branch_n)
		  (PP (P of#of_prep)
		      (NP (PRO$ their#their_adj) (ADJ own#own_adj))))
	  (NP-TMP (Q every#every_adj) (N year#year_n))
	  (PP (P in#in_prep)
	      (NP (SUCH such#such_adj)
		  (N abundance#abundance_n)
		  (PUNC ,)
		  (CP-DEG (C that#that_conj)
			  (IP-SUB (PP (P without#without_adv)
				      (NP (ADJ constant#constant_adj)
					  (N pruning#pruning_n2)
					  (PP (P of#of_prep)
					      (NP (PRO them#them_pron)))
					  (RP off#off_adv)))
				  (PUNC ,)
				  (NP-SBJ (D the#the_adj) (CODE <font>) (NS graffs#graff_n1))
				  (CODE <$$font>)
				  (MD will#will_v1)
				  (BE be#be_v)
				  (PP (P in#in_prep)
				      (NP (N danger#danger_n)
					  (PP (P of#of_prep)
					      (IP-PPL (BAG being#be_v) (VAN starved#starve_v)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,4.23))

( (IP-MAT (LS 5#five_v)
	  (PUNC .)
	  (NP-SBJ (D A#a_adj) (ADJR better#better_adj) (N advantage#advantage_n))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (VAN made#make_v1)
	  (PP (P of#of_prep)
	      (CODE <font>)
	      (NP (NS Crab-trees#crab-tree_n)))
	  (CODE <$$font>)
	  (PP (P in#in_prep)
	      (NP (NP (NS Hedge-rows#hedgerow_n))
		  (CONJP (CONJ and#and_conj1)
			 (NP (ADJ rough#rough_adj) (NS grounds#ground_n)))))
	  (PUNC ,)
	  (PP (P by#by_prep)
	      (IP-PPL (VAG graffing#graff_v1)
		      (NP-OB1 (PRO them#them_pron))
		      (ADVP-LOC (CP-FRL (WADVP-1 (WADV where#where_adv))
					(C 0)
					(IP-SUB (ADVP-LOC *T*-1)
						(NP-SBJ (PRO they#they_pron))
						(BEP are#be_v)))
				(PUNC ,)
				(PUNC <paren>)
				(PP (P as#as_adv)
				    (CP-ADV (WADVP-2 0)
					    (C 0)
					    (IP-SUB (ADVP *T*-2)
						    (NP-SBJ (PRO you#you_pron))
						    (MD shall#shall_v)
						    (BE be#be_v)
						    (PP (ADV+P hereafter#hereafter_adv))
						    (VAN directed#direct_v))))
				(PUNC <$$paren>)
				(CP-FRL (WADVP-3 (WADV where#where_adv))
					(C 0)
					(IP-SUB (ADVP-LOC *T*-3)
						(NP-SBJ (PRO they#they_pron))
						(MD will#will_v1)
						(VB thrive#thrive_v)
						(ADVP (ADVR better#better_adj)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,4.24))

( (IP-MAT (NP-SBJ-1 (EX There#there_adv))
	  (BEP is#be_v)
	  (NP-1 (FP but#but_prep)
		(ONE one#one_adj)
		(N scruple#scruple_n2)
		(PUNC <paren>)
		(CP-REL (WNP-2 0)
			(C that#that_conj)
			(IP-SUB (NP-OB1 *T*-2)
				(NP-SBJ (PRO I#i_pron))
				(MD can#can_v1)
				(VB foresee#foresee_v)))
		(PUNC <$$paren>)
		(CP-REL (WNP-3 0)
			(C that#that_conj)
			(IP-SUB (NP-SBJ *T*-3)
				(MD can#can_v1)
				(ADVP-LOC (ADV here#here_adv))
				(BE be#be_v)
				(VAN started#start_v))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,4.25))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D that#that_pron1))
	  (BEP is#be_v)
	  (PUNC ,)
	  (CP-THT (C that#that_conj)
		  (IP-SUB (NP-SBJ (D a#a_adj) (N man#man_n1))
			  (MD can@#can_v1)
			  (NEG @not#not_adv)
			  (BE be#be_v)
			  (VAN furnished#furnish_v)
			  (PP (P with#with_prep)
			      (CODE <font>)
			      (NP (NS Trees#tree_n)
				  (CODE <$$font>)
				  (PP (P of#of_prep)
				      (NP (D a#a_adj) (ADJ good#good_adj) (N largeness#largeness_n)))
				  (CP-EOP (WNP-1 0)
					  (IP-INF (NP-SBJ *T*-1)
						  (TO to#to_prep)
						  (VB bear#bear_v1)
						  (ADVP-TMP (ADVR so#so_adv)
							    (ADV soon#soon_adv)
							    (PP *ICH*-2))
						  (PP (P by#by_prep)
						      (CODE <font>)
						      (NP (NS stocks#stock_n1)
							  (CODE <$$font>)
							  (RRC (VAN raised#raise_v1)
							       (PP (P by#by_prep)
								   (CODE <font>)
								   (NP (NS Kernels#kernel_n1) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Stones#stone_n))))))
						  (CODE <$$font>)
						  (PUNC ,)
						  (PP-2 (P as#as_adv)
							(PP (P by#by_prep)
							    (NP (CONJ either#either_pron)
								(NP (D those#those_pron)
								    (RRC (VAN gotten#get_v)
									 (PP (RP out#out_adv)
									     (P of#of_prep)
									     (NP (NS Woods#wood_n1) (PUNC ,) (CODE <font>) (X &c.#et-cetera_n)))))
								(CODE <$$font>)
								(CONJP (CONJ or#or_conj1)
								       (NP (D those#those_pron)
									   (RRC (VAN raised#raise_v1)
										(PP (P by#by_prep)
										    (CODE <font>)
										    (NP (NS Suckers#sucker_n)
											(CODE <$$font>)
											(PUNC ,)
											(CP-REL (WNP-3 0)
												(C that#that_conj)
												(IP-SUB (NP-SBJ *T*-3)
													(MD may#may_v1)
													(BE be#be_v)
													(PP (P of#of_prep)
													    (NP (NP-MSR (ADJ several#several_adj) (NS years#year_n))
														(N growth#growth_n1)))
													(PP (P before#before_adv)
													    (CP-ADV (WNP-4 0)
														    (C 0)
														    (IP-SUB (NP-SBJ (PRO they#they_pron))
															    (BEP are#be_v)
															    (VAN made#make_v1)
															    (NP-OB1 (N use#use_n))
															    (PP (P of#of_prep)
																(NP *T*-4)))))))))))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,4.26))

( (IP-MAT (PP (P To#to_prep)
	      (NP (D this#this_pron)))
	  (NP-SBJ (PRO I#i_pron))
	  (VBP answer#answer_v)
	  (PUNC ,)
	  (CP-THT (C That#that_conj)
		  (IP-SUB (PP (P if#if_conj)
			      (CP-ADV (C 0)
				      (IP-SUB (PP (P at#at_prep)
						  (NP (D the#the_adj)
						      (ADJ same#same_adj)
						      (N time#time_n)
						      (CP-REL (WNP-1 0)
							      (C that#that_conj)
							      (IP-SUB (IP-SUB (NP-TMP *T*-1)
									      (NP-SBJ (PRO you#you_pron))
									      (VBP get#get_v)
									      (CODE <font>)
									      (NP-OB1 (NS Crab-tree-stocks#cNA)
										      (CODE <$$font>)
										      (PUNC ,)
										      (PUNC <paren>)
										      (PP (P of#of_prep)
											  (NP (NP-MSR (NUMP (NUM six#six_adj) (CONJ or#or_conj1) (NUM seven#seven_adj))
												      (NS years#year_n))
											      (N growth#growth_n1))))
									      (PUNC <$$paren>)
									      (PP (RP out#out_adv)
										  (P of#of_prep)
										  (NP (D the#the_adj)
										      (CODE <font>)
										      (N Wood#wood_n1)
										      (CODE <$$font>)
										      (PUNC ,)
										      (CONJP (CONJ or#or_conj1)
											     (CODE <font>)
											     (NX (NS Suckers#sucker_n))))))
								      (CODE <$$font>)
								      (PUNC ,)
								      (CONJP (CONJ and#and_conj1)
									     (IP-SUB (NP-SBJ *con*)
										     (VBP set#set_v1)
										     (NP-OB1 (PRO them#them_pron))
										     (PP (P in#in_prep)
											 (NP (N order#order_n)
											     (IP-INF (TO to#to_prep) (BE be#be_v) (CODE <font>) (VAN graffed#graff_v1))))))))))
					      (CODE <$$font>)
					      (PUNC ,)
					      (NP-SBJ (PRO you#you_pron))
					      (VBP sow#sow_v1)
					      (CODE <font>)
					      (NP-OB1 (NS Kernels#kernel_n1) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Stones#stone_n)))))
			  (CODE <$$font>)
			  (PUNC ,)
			  (NP-SBJ (D the#the_adj)
				  (NS Stocks#stock_n1)
				  (CONJP (CONJ and#and_conj1)
					 (NX (NS Suckers#sucker_n)))
				  (CP-REL (WNP-2 0)
					  (C 0)
					  (IP-SUB (NP-OB1 *T*-2)
						  (NP-SBJ (PRO you#you_pron))
						  (ADVP (ADV so#so_adv))
						  (VBP graff#graff_v1))))
			  (PUNC ,)
			  (PP (P for#for_prep)
			      (NP (NUMP (NUM six#six_adj) (CONJ or#or_conj1) (NUM eight#eight_adj))
				  (NS years#year_n)))
			  (MD may#may_v1)
			  (VB continue#continue_v)
			  (ADJP-PRD (ADJR larger#large_adj)
				    (CONJ and#and_conj1)
				    (ADJR bigger#big_adj)
				    (PP (P than#than_conj)
					(NP (D the#the_adj)
					    (CODE <font>)
					    (NS Trees#tree_n)
					    (CODE <$$font>)
					    (CP-REL (WNP-3 0)
						    (C that#that_conj)
						    (IP-SUB (NP-SBJ *T*-3)
							    (VBP come#come_v)
							    (PP (P of#of_prep)
								(CODE <font>)
								(NP (NS Kernels#kernel_n1) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Stones#stone_n))))))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,4.27))

( (IP-MAT (CONJ but#but_prep)
	  (ADVP (ADV yet#yet_adv))
	  (NP-SBJ (D these#these_pron) (ADJR lesser#lesser_adj) (CODE <font>) (NS Trees#tree_n))
	  (CODE <$$font>)
	  (MD shall#shall_v)
	  (ADVP (ADVR so#so_adv)
		(CP-DEG *ICH*-1))
	  (VB get#get_v)
	  (NP-OB1 (N ground#ground_n)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (OTHER other#other_adj))))
	  (PUNC ,)
	  (CP-DEG-1 (C that#that_conj)
		    (IP-SUB-2 (PP (P by#by_prep)
				  (NP (D the#the_adj)
				      (CODE <font>)
				      (ADJP (ADJ tenth#NA) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (ADJ twelfth#NA))
				      (CODE <$$font>)
				      (CODE <P_5>)
				      (N year#year_n)))
			      (NP-SBJ (D the#the_adj)
				      (CODE <font>)
				      (NS Apple-trees#apple-tree_n)
				      (CODE <$$font>)
				      (CONJP (CONJ and#and_conj1)
					     (CODE <font>)
					     (NX (NS Pear-trees#pear-tree_n))))
			      (CODE <$$font>)
			      (PUNC ,)
			      (IP-SUB-PRN=2 (CONJ and#and_conj1)
					    (ADVP-TMP (Q much#much_adj) (ADVR sooner#soon_adv))
					    (CODE <font>)
					    (NP-SBJ (NS Stone-fruit-trees#cNA)))
			      (CODE <$$font>)
			      (MD shall#shall_v)
			      (HV have#have_v)
			      (VBN overtaken#overtake_v)
			      (NP-OB1 (PRO them#them_pron))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,5.28))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (P as#as_adv)
	      (PP (P to#to_prep)
		  (NP (D the#the_adj)
		      (N way#way_n1)
		      (PP (P of#of_prep)
			  (IP-PPL (VAG raising#raise_v1)
				  (CODE <font>)
				  (NP-OB1 (NS Stocks#stock_n1)
					  (CODE <$$font>)
					  (PP (P for#for_prep)
					      (CODE <font>)
					      (NP (NS Pears#pear_n) (CODE <$$font>) (PUNC ,) (CODE <font>) (NS Plums#plum_n) (CODE <$$font>) (PUNC ,) (CONJ and#and_conj1) (CODE <font>) (NS Cherries#cherry_n))))
				  (CODE <$$font>)
				  (PP (P by#by_prep)
				      (CODE <font>)
				      (NP (NS Suckers#sucker_n))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (BEP is#be_v)
	  (IP-INF (TO to#to_prep) (BE be#be_v) (VAN noted#note_v2))
	  (PUNC ,)
	  (CP-THT-1 (C that#that_conj)
		    (IP-SUB (NP-SBJ (NS Trees#tree_n)
				    (RRC (ADVP (ADV so#so_adv))
					 (VAN raised#raise_v1)))
			    (MD will#will_v1)
			    (BE be#be_v)
			    (ADVP-TMP (ADV ever#ever_adv))
			    (ADJP-PRD (ADJ apt#apt_adj)
				      (IP-INF (TO to#to_prep)
					      (VB cast#cast_v)
					      (RP up#up_adv1)
					      (CODE <font>)
					      (NP-OB1 (NS Suckers#sucker_n))
					      (CODE <$$font>)
					      (NP-PRN (PRO themselves#themselves_pron))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,5.29))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ-1 (SUCH such#such_adj)
		    (PP (P as#as_adv)
			(CP-CMP (WNP-2 0)
				(C 0)
				(IP-SUB (NP-SBJ *T*-2)
					(DOP do#do_v)
					(VB *)))))
	  (PUNC ,)
	  (BEP are#be_v)
	  (ADVP-TMP (ADV seldom#seldom_adv))
	  (VAN found#find_v)
	  (IP-INF (NP-SBJ *-1)
		  (TO to#to_prep)
		  (BE be#be_v)
		  (NP-PRD (ADJ good#good_adj) (ADJ bearing#bearing_adj1) (CODE <font>) (NS Trees#tree_n)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P by#by_prep)
	      (NP (N reason#reason_n1)
		  (CP-THT (C 0)
			  (IP-SUB (NP-SBJ (PRO they#they_pron))
				  (VBP expend#expend_v)
				  (NP-OB1 (PRO$ their#their_adj) (CODE <font>) (N Sap#sap_n1))
				  (CODE <$$font>)
				  (NP-MSR (QP (ADVR so#so_adv) (Q much#much_adj)))
				  (NP-ADV (D that#that_pron1) (N way#way_n1))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,5.30))

( (IP-MAT (ADVP (ADV Nevertheless#nevertheless_adv))
	  (NP-SBJ (PRO they#they_pron))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ useful#useful_adj)
		    (PP (P for#for_prep)
			(CODE <font>)
			(NP (N Wall-fruit#SEE_wall_n1) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Dwarf-trees#cNA))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP-PRN (P as#as_adv)
		  (CP-ADV (WNP-1 0)
			  (C 0)
			  (IP-SUB (NP-OB1 *T*-1)
				  (NP-SBJ (PRO you#you_pron))
				  (MD will#will_v1)
				  (VB see#see_v)
				  (PP (ADV+P hereafter#hereafter_adv))
				  (PP (P in#in_prep)
				      (NP (D a#a_adj) (ADJ peculiar#peculiar_adj) (N Chapter#chapter_n))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,5.31))

( (IP-MAT (CONJ And#and_conj1)
	  (ADVP (ADV lastly#lastly_adv))
	  (PP (P against#against_prep)
	      (NP (Q both#both_pron)
		  (D these#these_pron)
		  (NS ways#way_n1)
		  (PP (P of#of_prep)
		      (IP-PPL (VAG furnishing#furnish_v)
			      (NP-OB1 (NP-POS (D a#a_adj) (N$ mans#man_n1))
				      (N self#self_pron))
			      (PP (P with#with_prep)
				  (NP (D the#the_adj) (ADJ aforemention'd#aforementioned_adj) (CODE <font>) (NS Stocks#stock_n1)))))))
	  (CODE <$$font>)
	  (NP-SBJ-1 (EX there#there_adv))
	  (BEP is#be_v)
	  (NP-1 (D this#this_pron)
		(CP-THT-PRN *ICH*-2))
	  (IP-INF (TO to#to_prep) (BE be#be_v) (VAN said#say_v1))
	  (PUNC ,)
	  (CP-THT-PRN-2 (C That#that_conj)
			(IP-SUB (NP-SBJ (D a#a_adj) (N man#man_n1))
				(MD shall#shall_v)
				(NEG not#not_adv)
				(PP (P without#without_adv)
				    (NP (ADJ great#great_adj)
					(N charge#charge_n1)
					(CONJP (CONJ and#and_conj1)
					       (NX (N difficulty#difficulty_n)))))
				(VB store#store_v)
				(NP-OB1 (PRO himself#himself_pron))
				(PP (P with#with_prep)
				    (NP (QP (ADVR as#as_adv) (Q many#many_adj))
					(PP (P as#as_adv)
					    (CP-CMP (WNP-3 0)
						    (C 0)
						    (IP-SUB (NP-OB1 *T*-3)
							    (NP-SBJ (PRO he#he_pron))
							    (MD may#may_v1)
							    (VB desire#desire_v))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,5.32))

( (IP-MAT (CONJ and#and_conj1)
	  (IP-MAT-1 (NP-SBJ (Q many#many_adj)
			    (PP (P of#of_prep)
				(NP (PRO them#them_pron))))
		    (MD will#will_v1)
		    (VB prove#prove_v)
		    (ADJP-PRD (ADJ bad#bad_adj)))
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (VB miscarry#miscarry_v)))
	  (PUNC ,)
	  (PP (P whereas#whereas_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (PP (P from#from_prep)
					  (CODE <font>)
					  (NP (NS Kernels#kernel_n1)))
				      (CODE <$$font>)
				      (NP-SBJ (D the#the_adj) (N charge#charge_n1))
				      (BEP is#be_v)
				      (ADJP-PRD (ADJ inconsiderable#inconsiderable_adj)))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB (NP-SBJ (N plenty#plenty_n)
						     (CP-REL *ICH*-2))
					     (MD may#may_v1)
					     (BE be#be_v)
					     (HAN had#have_v)
					     (PUNC ,)
					     (CP-REL-2 (WNP-3 0)
						       (C that#that_conj)
						       (IP-SUB (NP-SBJ *T*-3)
							       (MD will#will_v1)
							       (QP (ADV almost#almost_adv) (Q all#all_adj))
							       (BE be#be_v)
							       (ADJP-PRD (ADJ fit#fit_adj)
									 (PP (P for#for_prep)
									     (NP (N use#use_n)))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,5.33))

( (IP-MAT (ADVP (ADV Yet#yet_adv))
	  (NP-OB1 (D this#this_pron))
	  (NP-SBJ (PRO I#i_pron))
	  (MD ought#ought_v)
	  (TO to#to_prep)
	  (VB say#say_v1)
	  (PP (P in#in_prep)
	      (NP (N favour#favour_n)
		  (PP (P of#of_prep)
		      (IP-PPL (VAG buying#buy_v)
			      (PP (RP out#out_adv)
				  (P of#of_prep)
				  (CODE <font>)
				  (NP (NS Nurseries#nursery_n)))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,5.34))

( (IP-MAT (LS 1#one_adj)
	  (PUNC .)
	  (PP (ADV+P Thereby#thereby_adv))
	  (NP-SBJ (D a#a_adj)
		  (ADJ great#great_adj)
		  (N deal#deal_n1)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (N time#time_n)))
		  (NP-PRN *ICH*-1))
	  (CODE <$$font>)
	  (BEP is#be_v)
	  (VAN gain'd#gain_v2)
	  (PP (P by#by_prep)
	      (NP (D the#the_adj) (N Planter#planter_n)))
	  (PUNC <paren>)
	  (CODE <font>)
	  (NP-1 (NP (FW viz.#NA)
		    (CODE <$$font>)
		    (NUMP (NUM seven#seven_adj) (CONJ or#or_conj1) (NUM eight#eight_adj))
		    (NS years#year_n)
		    (PP (P in#in_prep)
			(CODE <font>)
			(NP (ADJ Standard-@#standard_n) (NS @trees#tree_n))))
		(CODE <$$font>)
		(PUNC ,)
		(CONJP (CONJ and#and_conj1)
		       (NP (NUMP (NUM four#four_adj) (CONJ or#or_conj1) (NUM five#five_v))
			   (PP (P in#in_prep)
			       (CODE <font>)
			       (NP (N Wall#wall_n1) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Dwarf-trees#cNA)))))
		(CODE <$$font>)
		(PUNC ;)
		(CP-REL (WNP-2 (WPRO which#which_adj))
			(C 0)
			(IP-SUB (NP-SBJ *T*-2)
				(BEP is#be_v)
				(ADJP-PRD (ADV very#very_adj) (ADJ considerable#considerable_adj)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,5.35))

( (CODE <P_6>))

( (IP-MAT (LS 2#two_adj)
	  (PUNC .)
	  (NP-SBJ-1 (PRO It#it_pron))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADV very#very_adj) (ADJ difficult#difficult_adj))
	  (IP-INF-1 (FOR for#for_prep)
		    (NP-SBJ (D a#a_adj) (N Planter#planter_n))
		    (TO to#to_prep)
		    (BE be#be_v)
		    (VAN furnisht#furnish_v)
		    (PP (P with#with_prep)
			(NP (Q many#many_adj)
			    (ADJ good#good_adj)
			    (NS sorts#sort_n2)
			    (PP (PP (P of#of_prep)
				    (CODE <font>)
				    (NP (N Fruit#fruit_n)))
				(CODE <$$font>)
				(PUNC ,)
				(CONJP (CONJ and#and_conj1)
				       (PP (P of#of_prep)
					   (NP (CP-FRL (WNP-2 (WD what#what_pron) (N kind#kind_n))
						       (C 0)
						       (IP-SUB (NP-OB1 *T*-2)
							       (NP-SBJ (PRO he#he_pron))
							       (MD may#may_v1)
							       (VB desire#desire_v)
							       (ADVP-LOC (Q any#any_adj)
									 (WADV where#where_adv)
									 (ADVP (ADV else#else_adv)))
							       (PUNC ,)
							       (ADVP (ADVR so#so_adv)
								     (ADV easie#easy_adj)
								     (CONJP (CONJ and#and_conj1)
									    (ADVX (ADV fully#fully_adv)))
								     (PP (P as#as_adv)
									 (ADVP (ADV there#there_adv)))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,6.37))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-SBJ (PRO I#i_pron))
	  (VBP think#think_v2)
	  (CP-THT (C 0)
		  (IP-SUB (NP-SBJ (Q no#no_adj) (ONE one#one_adj))
			  (MD can#can_v1)
			  (BE be#be_v)
			  (ADVP (ADVR better#better_adj)
				(PP *ICH*-1))
			  (VAN furnish'd#furnish_v)
			  (PP-1 (P than#than_conj)
				(CP-CMP (WADVP-2 0)
					(C 0)
					(IP-SUB (ADVP *T*-2)
						(NP-SBJ (PRO they#they_pron))
						(MD may#may_v1)
						(BE *)
						(VAN *)
						(PP (P by#by_prep)
						    (NP (NP (NP-POS (PRO$ their#their_adj) (NS$ Majesties#majesty_n))
							    (N Gard'ner#gardener_n))
							(CONJP (CONJ and#and_conj1)
							       (NP (NPR Mr.#NA) (CODE <font>) (NPR Wise#NA)))
							(CODE <$$font>)
							(PUNC ,)
							(CP-REL (WNP-3 (WPRO who#who_pron))
								(C 0)
								(IP-SUB (NP-SBJ *T*-3)
									(HVP have#have_v)
									(NP-OB1 (D a#a_adj)
										(N Nursery#nursery_n)
										(CP-REL *ICH*-4)
										(RRC *ICH*-6))
									(PP (P at#at_prep)
									    (CODE <font>)
									    (NP (NPR Brampton#NA)
										(NPR Park#NA)
										(CODE <$$font>)
										(ADJP-LOC (ADJ near#near_adj)
											  (CODE <font>)
											  (NP (NPR Kensington#NA)))))
									(CODE <$$font>)
									(PUNC ,)
									(CP-REL-4 (WNP-5 (D the#the_adj)
											 (N Soil#soil_n1)
											 (WPP (WADV+P whereof#whereof_adv)))
										  (C 0)
										  (IP-SUB (NP-SBJ *T*-5)
											  (BEP is#be_v)
											  (NEG not#not_adv)
											  (CODE <font>)
											  (VAN over_enricht#SEE_over_prefix)
											  (CODE {COM:font_change_only_around_"enricht"})
											  (CODE <$$font>)
											  (PP (P with#with_prep)
											      (NP (D the#the_adj)
												  (N Fat#fat_adj)
												  (PP (P of#of_prep)
												      (CODE <font>)
												      (NP (NPR London#NA)))))))
									(CODE <$$font>)
									(PUNC ,)
									(RRC-6 (VAN situate#single-track_n)
									       (PP (P in#in_prep)
										   (NP (D a#a_adj) (CODE <font>) (ADJ Sharp#sharp_adj) (N Air#air_n1)))))))))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,6.38))

( (IP-MAT (NP-SBJ (PRO they#they_pron))
	  (BEP are#be_v)
	  (ADJP-PRD (ADJ careful#careful_adj))
	  (PP (P in#in_prep)
	      (IP-PPL (VAG furnishing#furnish_v)
		      (NP-OB1 (D the#the_adj) (NS Buyers#buyer_n))
		      (PP (P with#with_prep)
			  (CODE <font>)
			  (NP (ADJ true#true_adj) (NS Kinds#kind_n)))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,6.39))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (IP-MAT-PRN (NP-SBJ (PRO I#i_pron))
		      (ADVP (ADV verily#verily_adv))
		      (VBP believe#believe_v))
	  (HVP have#have_v)
	  (ADVP-TMP (ADV already#already_adj))
	  (NP-OB1 (D the#the_adj)
		  (ADJS best#best_adj)
		  (CODE <font>)
		  (N collection#collection_n)
		  (CODE <$$font>)
		  (PP (P in#in_prep)
		      (CODE <font>)
		      (NP (NPR England#NA))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,6.40))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO it#it_pron))
	  (MD will#will_v1)
	  (ADVP-TMP (ADV still#still_adv))
	  (BE be#be_v)
	  (VAN improv'd#improve_v2)
	  (PP (P by#by_prep)
	      (NP (ADJP (ADJ new#new_adj) (CONJ and#and_conj1) (CODE <font>) (ADJ unknown#unknown_adj))
		  (NS Plants#plant_n1)
		  (CODE <$$font>)
		  (PUNC ,)
		  (X &c.#et-cetera_n)))
	  (PP (P as#as_adv)
	      (PP (P to#to_prep)
		  (NP (PRO us#us_pron))))
	  (PUNC ,)
	  (PP (P from#from_prep)
	      (NP (D that#that_pron1)
		  (ADJ famous#famous_adj)
		  (CODE <font>)
		  (N Garden#garden_n)
		  (CODE <$$font>)
		  (PUNC <paren>)
		  (PP (P for#for_prep)
		      (NP (N variety#variety_n)
			  (PP (P of#of_prep)
			      (CODE <font>)
			      (NP (NS Kinds#kind_n)
				  (CODE <$$font>)
				  (PP (P in#in_prep)
				      (NP (D the#the_adj) (ADJ known#known_adj) (N World#world_n)))))))))
	  (PUNC <$$paren>)
	  (PP (P at#at_prep)
	      (NP (D the#the_adj)
		  (CODE <font>)
		  (NPR Cape#NA)
		  (PP (P of#of_prep)
		      (NP (NPR Good#NA) (NPR hope#NA)))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,6.41))

( (CODE <P_7>))

( (CODE <heading>))

( (NP (N CHAP.#chapter_n) (ONE I#one_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,7.44))

( (PP (CODE <font>)
      (P OF#of_prep)
      (NP (D THE#the_adj) (N SEMINARY#seminary_n1))
      (PUNC .))
  (ID LANGF-1696-E3-P1,7.45))

( (CODE <$$heading>))

( (NP (N Sect.#section_n) (CODE <$$font>) (ONE 1#one_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,7.47))

( (IP-IMP (PP (P Against#against_prep)
	      (NP (D the#the_adj)
		  (N beginning#beginning_n)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (NPR October#NA)))))
	  (CODE <$$font>)
	  (VBI prepare#prepare_v)
	  (NP-OB1 (N Ground#ground_n))
	  (PP (P by#by_prep)
	      (IP-PPL (IP-PPL (VAG digging#dig_v))
		      (CONJP (CONJ and#and_conj1)
			     (IP-PPL (VAG cleansing#cleanse_v)
				     (NP-OB1 (PRO it#it_pron))
				     (PP (P from#from_prep)
					 (CODE <font>)
					 (NP (NS weeds#weed_n1) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS roots#root_n1)))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (IP-PPL (VAG making#make_v1)
		  (IP-SMC (NP-SBJ (D the#the_adj) (CODE <font>) (N mold#mould_n1))
			  (CODE <$$font>)
			  (ADJP-PRD (ADV very#very_adj) (ADJ fine#fine_adj))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,7.48))

( (IP-IMP (VBI choose#choose_v)
	  (NP-OB1 (NP (NP (NEG not#not_adv)
			  (D a#a_adj)
			  (CODE <font>)
			  (ADJP (ADJP (ADJ wet#wet_adj))
				(CODE <$$font>)
				(CONJP (CONJ or#or_conj1)
				       (ADJP (ADV very#very_adj) (CODE <font>) (ADJ stiff#stiff_adj)))
				(CONJP *ICH*-1))
			  (N Clay-land#SEE_clay_n))
		      (CODE <$$font>)
		      (PUNC ,)
		      (CONJP (CONJ nor#nor_conj1)
			     (CODE <font>)
			     (ADJP (ADJ over_rich#overrich_adj)
				   (CODE {COM:font_change_only_around_"rich"})
				   (CODE <$$font>)
				   (PP (P with#with_prep)
				       (CODE <font>)
				       (NP (N Dung#dung_n1))))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ but#but_prep)
			 (NP (SUCH such#such_adj)
			     (PP (P as#as_adv)
				 (CP-CMP (WNP-1 0)
					 (C 0)
					 (IP-SUB (IP-PPL (BAG being#be_v)
							 (ADJP-PRD (PP (P of#of_prep)
								       (NP (PRO it#it_pron) (N self#self_pron)))
								   (ADJ good#good_adj)))
						 (PUNC ,)
						 (NP-SBJ (PRO you#you_pron))
						 (MD may#may_v1)
						 (VB make#make_v1)
						 (IP-SMC (NP-SBJ *T*-1)
							 (ADJP-PRD (ADJR better#better_adj)))
						 (PP (FP only#only_adj)
						     (P with#with_prep)
						     (NP (NP-MSR (D a#a_adj) (ADJ little#little_adj))
							 (N mixture#mixture_n)
							 (PP (P of#of_prep)
							     (NP (ADJP (ADV very#very_adj) (CODE <font>) (ADJ rotten#rotten_adj))
								 (N dung#dung_n1)))))))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,7.49))

( (IP-IMP (VBI let#let_v1)
	  (IP-INF (NP-SBJ (PRO it#it_pron))
		  (BE be#be_v)
		  (VAN fenced#fence_v)
		  (PP (P from#from_prep)
		      (NP (D the#the_adj) (N cold#cold_n)))
		  (PUNC ,)
		  (ADVP (ADVR as#as_adv)
			(ADV well#well_adv)
			(PP (P as#as_adv)
			    (CP-CMP (WADVP-1 0)
				    (C 0)
				    (IP-SUB (ADVP *T*-1)
					    (NP-SBJ (PRO you#you_pron))
					    (MD can#can_v1)
					    (VB *))))))
	  (PUNC ,)
	  (PP (P so#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (BEP be#be_v)
			      (ADJP-PRD (ADJ free#free_adj)
					(PP (P from#from_prep)
					    (NP (NP (N shade#shade_n))
						(PUNC ,)
						(CONJP (CONJ and#and_conj1)
						       (NP (NS dropings#dropping_n)
							   (PP (P of#of_prep)
							       (NP (NS Trees#tree_n)))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,7.50))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 2#two_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,7.51))

( (IP-IMP (PP (P When#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBD set#set_v1)
			      (CODE <font>)
			      (NP-OB1 (NS Stones#stone_n)
				      (CODE <$$font>)
				      (PUNC ,)
				      (PUNC <paren>)
				      (CP-REL (WNP-1 (WPRO which#which_adj))
					      (C 0)
					      (IP-SUB (NP-OB1 *T*-1)
						      (PP (P if#if_conj)
							  (CP-ADV (C 0)
								  (IP-SUB (NP-SBJ (PRO they#they_pron))
									  (BEP be#be_v)
									  (CODE <font>)
									  (NP-PRD (NS Stones#stone_n)
										  (CODE <$$font>)
										  (PP (P of#of_prep)
										      (NP (N Fruit#fruit_n)
											  (RRC (ADVP-TMP (ADV soon#soon_adv))
											       (ADJP-PRD (ADJ ripe#ripe_adj)))))))))
						      (PUNC ,)
						      (NP-SBJ (PRO you#you_pron))
						      (MD must#must_v1)
						      (VB keep#keep_v)
						      (PP (P in#in_prep)
							  (NP (N sand#sand_n2)))
						      (PP (P till#till_prep)
							  (CODE <font>)
							  (NP (NPR October#NA)))))))))
	  (CODE <$$font>)
	  (DOI do#do_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P by#by_prep)
	      (NP (D a#a_adj) (N Line#line_n2)))
	  (PUNC ,)
	  (IP-PPL (VAG pricking#prick_v)
		  (NP-OB1 (NS holes#hole_n))
		  (NP-ADV (NP-MSR (NP-MSR (ADV about#about_adv)
					  (NP-POS (D a#a_adj) (N$ hands#hand_n))
					  (N breadth#breadth_n))
				  (N distance#distance_n))
			  (ONE one#one_adj)
			  (PP (P from#from_prep)
			      (NP (D+OTHER another#another_pron)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,7.52))

( (IP-IMP (CONJ and#and_conj1)
	  (ADVP-TMP (ADV then#then_adv))
	  (VBI put#put_v)
	  (RP in#in_adv)
	  (NP-OB1 (D the#the_adj) (CODE <font>) (NS Stones#stone_n))
	  (CODE <$$font>)
	  (PUNC ,)
	  (ADVP (NP-MSR (NUMP (ADV about#about_adv) (NUM three#three_adj))
			(NS inches#inch_n1))
		(ADV deep#deep_adv))
	  (PP (P with#with_prep)
	      (IP-SMC (NP-SBJ (D the#the_adj) (ADJ sharp#sharp_adj) (N end#end_n))
		      (ADVP-LOC (ADV uppermost#uppermost_adv))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,7.53))

( (IP-IMP (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (ONE one#one_adj) (CODE <font>) (N row#row_n1))
			      (CODE <$$font>)
			      (BEP is#be_v)
			      (VAN finished#finish_v))))
	  (VBI remove#remove_v)
	  (NP-OB1 (PRO$ your#your_pron) (N Line#line_n2))
	  (NP-MSR (ADJP (NP-MSR (D a#a_adj) (CODE <font>) (N foot#foot_n))
			(CODE <$$font>)
			(ADJR further#further_adj)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,7.54))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI set#set_v1)
	  (NP-OB1 (D+OTHER another#another_pron) (CODE <font>) (N row#row_n1))
	  (CODE <$$font>)
	  (PP (P in#in_prep)
	      (NP (D the#the_adj) (ADJ same#same_adj) (N manner#manner_n)))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,7.55))

( (IP-IMP (CONJ but#but_prep)
	  (VBI let#let_v1)
	  (IP-INF (NP-SBJ (PRO$ your#your_pron) (ADJ third#third_adj) (CODE <font>) (N row#row_n1))
		  (CODE <$$font>)
		  (BE be#be_v)
		  (ADJP-PRD (NP-MSR (NUMP (ADV about#about_adv) (CODE <font>) (NUM two#two_adj))
				    (NS foot#foot_n))
			    (CODE <$$font>)
			    (ADJ distant#distant_adj)
			    (PP (P from#from_prep)
				(NP (D the#the_adj) (CODE <font>) (ADJ second#second_adj))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CP-ADV (C that#that_conj)
			  (IP-SUB (NP-SBJ (PRO you#you_pron))
				  (MD may#may_v1)
				  (HV have#have_v)
				  (NP-OB1 (N liberty#liberty_n1)
					  (IP-INF (TO to#to_prep)
						  (VB go#go_v)
						  (PP (P betwixt#betwixt_prep)
						      (NP (Q every#every_adj) (CODE <font>) (NUM two#two_adj) (NS rows#row_n1)))
						  (CODE <$$font>)
						  (IP-INF-PRP (TO to#to_prep) (VB weed#weed_v)))))))
	  (PUNC ,)
	  (CODE <font>)
	  (X &c.#et-cetera_n)
	  (CODE <$$font>))
  (ID LANGF-1696-E3-P1,7.56))

( (IP-IMP (CONJ and#and_conj1)
	  (CODE <P_8>)
	  (ADVP (ADV so#so_adv))
	  (VBI proceed#proceed_v)
	  (IP-INF (TO to#to_prep)
		  (VB set#set_v1)
		  (NP-OB1 (QP (ADVR as#as_adv) (Q many#many_adj))
			  (PP (P as#as_adv)
			      (CP-CMP (WNP-1 0)
				      (C 0)
				      (IP-SUB (NP-MSR *T*-1)
					      (NP-SBJ (PRO you#you_pron))
					      (HVP have#have_v)
					      (NP-OB1 (D a#a_adj) (N mind#mind_n1)))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,8.57))

( (IP-MAT (ADVP (ADV possibly#possibly_adv))
	  (NP-SBJ (Q some#some_pron)
		  (PP (P of#of_prep)
		      (NP (D these#these_pron) (NS Stones#stone_n))))
	  (MD may#may_v1)
	  (NEG not#not_adv)
	  (VB come#come_v)
	  (RP up#up_adv1)
	  (PP (P till#till_prep)
	      (NP (D the#the_adj) (ADJ second#second_adj) (N spring#spring_n1)))
	  (PP (P after#after_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (VAN set#set_v1))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,8.58))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (MD may#may_v1)
	  (NEG not#not_adv)
	  (VB deceive#deceive_v)
	  (NP-OB1 (PRO you#you_pron))
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (ADVP-TMP (ADV then#then_adv))
			      (VBP expect#expect_v)
			      (NP-OB1 (PRO them#them_pron)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,8.59))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 3#three_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,8.60))

( (IP-MAT (PP (P After#after_adv)
	      (NP (D the#the_adj) (ADJ same#same_adj) (N manner#manner_n)))
	  (NP-SBJ (PRO you#you_pron))
	  (BEP are#be_v)
	  (IP-INF (TO to#to_prep)
		  (VB set#set_v1)
		  (NP-OB1 (Q all#all_adj)
			  (N kind#kind_n)
			  (PP (P of#of_prep)
			      (CODE <font>)
			      (NP (NS Nuts#nut_n1)))))
	  (CODE <$$font>)
	  (PUNC :))
  (ID LANGF-1696-E3-P1,8.61))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ-1 (PRO it@#it_pron))
			      (BEP @'s#be_v)
			      (ADJP-PRD (ADJ necessary#necessary_adj))
			      (CP-THT-1 (C that#that_conj)
					(IP-SUB (NP-SBJ (PRO$ your#your_pron)
							(ADJ young#young_adj)
							(CODE <font>)
							(NS Walnut-trees#walnut-tree_n)
							(CODE <$$font>)
							(CONJP (CONJ and#and_conj1)
							       (CODE <font>)
							       (NX (NS Chesnut-trees#SEE_chestnut_n))))
						(CODE <$$font>)
						(MD should#shall_v)
						(VB grow#grow_v)
						(NP-MSR (ADJR longer#long_adj1)
							(PP *ICH*-2))
						(PP (P in#in_prep)
						    (NP (PRO$ your#your_pron) (N Seed-plot#seed-plot_n)))
						(PP-2 (P than#than_conj)
						      (CODE <font>)
						      (NP (N Stone-fruit#stone-fruit_n)))
						(CODE <$$font>)
						(PUNC ,)
						(PP (P before#before_adv)
						    (CP-ADV (C 0)
							    (IP-SUB (NP-SBJ (PRO they#they_pron))
								    (MD will#will_v1)
								    (BE be#be_v)
								    (ADJP-PRD (ADJ fit#fit_adj)
									      (IP-INF (TO to#to_prep)
										      (BE be#be_v)
										      (VAN removed#remove_v)
										      (PP (P to#to_prep)
											  (NP (D the#the_adj)
											      (N place#place_n1)
											      (CP-REL (WNP-3 0)
												      (C 0)
												      (IP-SUB (NP-SBJ (PRO they#they_pron))
													      (BEP are#be_v)
													      (IP-INF (TO to#to_prep)
														      (VB spend#spend_v1)
														      (NP-OB1 (PRO$ their#their_adj) (NS lives#life_n))
														      (PP (P in#in_prep)
															  (NP *T*-3)))))))))))))))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD must#must_v1)
	  (VB set#set_v1)
	  (NP-OB1 (PRO them#them_pron))
	  (PP (P at#at_prep)
	      (NP (ADJP (Q much#much_adj) (ADJR further#further_adj))
		  (N distance#distance_n)))
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (PRO they#they_pron))
			  (MD may#may_v1)
			  (HV have#have_v)
			  (NP-OB1 (QR more#more_adj)
				  (N room#room_n1)
				  (IP-INF (TO to#to_prep)
					  (VB grow#grow_v)
					  (ADJP-PRD (ADJ big#big_adj))
					  (PP (P without#without_adv)
					      (IP-PPL (VAG hurting#hurt_v)
						      (NP-OB1 (ONE one#one_adj) (D+OTHER another#another_pron))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,8.62))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 4#four_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,8.63))

( (IP-MAT (IP-INF-PRP (TO To#to_prep)
		      (VB raise#raise_v1)
		      (CODE <font>)
		      (NP-OB1 (NS Stocks#stock_n1)
			      (CODE <$$font>)
			      (PP (P from#from_prep)
				  (CODE <font>)
				  (NP (NS Seeds#seed_n)
				      (CODE <$$font>)
				      (CONJ or#or_conj1)
				      (CODE <font>)
				      (NS kernels#kernel_n1)
				      (CODE <$$font>)
				      (PP (P of#of_prep)
					  (CODE <font>)
					  (NP (NS Apples#apple_n)
					      (CODE <$$font>)
					      (PUNC ,)
					      (CODE <font>)
					      (NS Crabs#crab_n2)
					      (CODE <$$font>)
					      (PUNC ,)
					      (CONJ or#or_conj1)
					      (CODE <font>)
					      (NS Pears#pear_n)
					      (CODE <$$font>)
					      (PUNC <paren>)
					      (CP-REL (WNP-1 (Q each#each_adj)
							     (WPP (P of#of_prep)
								  (WNP (WD which#which_adj) (NS sorts#sort_n2))))
						      (C 0)
						      (IP-SUB (NP-SBJ *T*-1)
							      (BEP are#be_v)
							      (IP-INF (TO to#to_prep)
								      (BE be#be_v)
								      (VAN sowed#sow_v1)
								      (PP (P by#by_prep)
									  (NP (PRO themselves#themselves_pron))))))))))))
	  (PUNC <$$paren>)
	  (NP-SBJ (PRO you#you_pron))
	  (MD must#must_v1)
	  (ADVP (ADV thus#thus_adv))
	  (VB go#go_v)
	  (PP (P to#to_prep)
	      (NP (N work#work_n)))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,8.64))

( (IP-IMP (PP (P When#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (CONJ either#either_pron)
				      (NP (PRO you#you_pron))
				      (PUNC ,)
				      (CONJP (CONJ or#or_conj1)
					     (NP (Q any#any_adj) (N Neighbour#neighbour_n))))
			      (HVP hath#have_v)
			      (VBN made#make_v1)
			      (CODE <font>)
			      (NP-OB1 (N Syder#cider_n) (CODE <$$font>) (PUNC ,) (CODE <font>) (N Verjuice#verjuice_n) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (N Perry#perry_n3)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (VBI take#take_v)
	  (NP-OB1 (NP (D the#the_adj) (CODE <font>) (N Must#must_n1))
		  (CODE <$$font>)
		  (PUNC <paren>)
		  (CONJP (CONJ or#or_conj1)
			 (PP (P as#as_adv)
			     (CP-ADV (WNP-1 0)
				     (C 0)
				     (IP-SUB (NP-SBJ (Q some#some_pron))
					     (VBP call#call_v)
					     (IP-SMC (NP-PRD *T*-1)
						     (NP-SBJ (PRO it#it_pron))))))
			 (NP (D the#the_adj) (CODE <font>) (N Pouz#pouse_n)))
		  (CODE <$$font>)
		  (PUNC <$$paren>)
		  (CP-REL (WNP-2 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-2)
				  (BEP is#be_v)
				  (NP-PRD (D the#the_adj)
					  (N substance#substance_n)
					  (PP (P of#of_prep)
					      (NP (D the#the_adj) (CODE <font>) (N Fruit#fruit_n))))
				  (CODE <$$font>)
				  (PP (P after#after_adv)
				      (CP-ADV (C 0)
					      (IP-SUB (NP-SBJ (D the#the_adj) (N juice#juice_n))
						      (BEP is#be_v)
						      (VAN pressed#press_v1)
						      (RP out#out_adv)))))))
	  (PUNC ,)
	  (NP-TMP (NP (D the#the_adj) (ADJ same#same_adj) (N day#day_n))
		  (CONJP (CONJ or#or_conj1)
			 (NP (D the#the_adj)
			     (ADJS next#next_adj)
			     (N day#day_n)
			     (ADVP-TMP (ADV after#after_adv)))))
	  (PUNC ,)
	  (PP (P before#before_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (VBP heats#heat_v))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,8.65))

( (IP-IMP (CONJ and#and_conj1)
	  (PP (P with#with_prep)
	      (NP (D a#a_adj) (CODE <font>) (N riddle#riddle_n1)))
	  (CODE <$$font>)
	  (VBI sift#sift_v)
	  (RP out#out_adv)
	  (NP-OB1 (D the#the_adj) (NS Seeds#seed_n))
	  (PP (P on#on_prep)
	      (NP (D a#a_adj)
		  (ADJ clean#clean_adj)
		  (N floor#floor_n1)
		  (CONJP (CONJ or#or_conj1)
			 (NX (N cloth#cloth_n)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,8.66))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-OB1 (D these#these_pron))
	  (NP-SBJ (PRO you#you_pron))
	  (MD must#must_v1)
	  (VB sow#sow_v1)
	  (PUNC <paren>)
	  (ADVP-TMP (ADVR as#as_adv)
		    (ADV soon#soon_adv)
		    (PP (P as#as_adv)
			(CP-CMP (WADVP-1 0)
				(C 0)
				(IP-SUB (ADVP-TMP *T*-1)
					(NP-SBJ (PRO you#you_pron))
					(MD can#can_v1)
					(VB *)
					(ADVP (ADV conveniently#conveniently_adv))))))
	  (PUNC <$$paren>)
	  (PP (P upon#upon_prep)
	      (NP (NS beds#bed_n)
		  (PP (P of#of_prep)
		      (NP (ADJP (ADV very#very_adj) (ADJ fine#fine_adj))
			  (N Earth#earth_n1)))))
	  (PUNC ,)
	  (ADVP (ADV very#very_adj) (ADV thick#thick_adv))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,8.67))

( (IP-MAT (CONJ for#for_prep)
	  (CODE <P_9>)
	  (IP-PPL-ABS (IP-PPL (NP-SBJ (Q some#some_pron))
			      (BAG being#be_v)
			      (VAN bruised#bruise_v)
			      (PP (P in#in_prep)
				  (NP (D the#the_adj)
				      (IP-PPL (VAG (VAG grinding#grind_v1) (PUNC ,) (CONJ or#or_conj1) (VAG pounding#pound_v1))
					      (NP-OB1 (D the#the_adj) (CODE <font>) (N Fruit#fruit_n))))))
		      (CODE <$$font>)
		      (PUNC ;)
		      (CONJP (CONJ and#and_conj1)
			     (IP-PPL (NP-SBJ (OTHERS others#other_adj))
				     (PUNC ,)
				     (NEG not#not_adv)
				     (BAG being#be_v)
				     (ADJP-PRD (ADJ ripe#ripe_adj)))))
	  (PUNC ,)
	  (NP-SBJ (Q many#many_adj))
	  (ADVP-TMP (ADV never#never_adv))
	  (VBP come#come_v)
	  (RP up#up_adv1)
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,9.68))

( (IP-IMP (ADVP-TMP (ADV then#then_adv))
	  (VBI sift#sift_v)
	  (CODE <font>)
	  (NP-OB1 (N mold#mould_n1))
	  (CODE <$$font>)
	  (PP (P upon#upon_prep)
	      (NP (PRO them#them_pron)))
	  (NP-MSR (NP-MSR (NUMP (ADV about#about_adv) (CODE <font>) (NUM two#two_adj))
			  (CODE <$$font>)
			  (NS fingers#finger_n))
		  (N breadth#breadth_n)
		  (PP (P in#in_prep)
		      (NP (N thickness#thickness_n))))
	  (PUNC :))
  (ID LANGF-1696-E3-P1,9.69))

( (IP-MAT (NP-SBJ (D this#this_pron) (N way#way_n1))
	  (BEP is#be_v)
	  (ADJP-PRD (Q much#much_adj)
		    (ADJR better#better_adj)
		    (PP (P than#than_conj)
			(IP-INF (TO to#to_prep)
				(VB sow#sow_v1)
				(NP-OB1 (D the#the_adj) (NS seeds#seed_n))
				(PP (P with#with_prep)
				    (NP (D the#the_adj)
					(CODE <font>)
					(N Must#must_n1)
					(CODE <$$font>)
					(CONJP (CONJ or#or_conj1)
					       (CODE <font>)
					       (NX (N Pouz#pouse_n)))))
				(CODE <$$font>)
				(ADVP (ADV together#together_adv))
				(PUNC ,)
				(PUNC <paren>)
				(PP-PRN (P as#as_adv)
					(CP-ADV (WNP-1 0)
						(C 0)
						(IP-SUB (NP-OB1 *T*-1)
							(NP-SBJ (Q some#some_pron))
							(DOP do#do_v)))))))
	  (PUNC <$$paren>)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N Must#must_n1))
				      (CODE <$$font>)
				      (MD will#will_v1)
				      (VB heat#heat_v)
				      (NP-OB1 (PRO them#them_pron)))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB (NP-SBJ (Q many#many_adj)
						     (PP (P of#of_prep)
							 (NP (D the#the_adj) (NS Seeds#seed_n))))
					     (MD will#will_v1)
					     (CODE <font>)
					     (VB putrefie#putrefy_v))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,9.70))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (OTHERS others#other_adj))
	  (MD will#will_v1)
	  (NEG not#not_adv)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ able#able_adj)
		    (IP-INF (IP-INF (TO to#to_prep) (CODE <font>) (VB root#root_v1))
			    (CODE <$$font>)
			    (PUNC ,)
			    (CONJP (CONJ or#or_conj1)
				   (CODE <font>)
				   (IP-INF (TO *)
					   (VB shoot#shoot_v)
					   (RP up#up_adv1)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (ADVP (ADVR so#so_adv))
			      (VAN imprisoned#imprison_v)
			      (PP (P in#in_prep)
				  (NP (D that#that_pron1)
				      (ADJP (ADJ dry#dry_adj) (CONJ and#and_conj1) (ADJ tough#tough_adj))
				      (N stuff#stuff_n1)
				      (RRC (VAG clinging#cling_v1)
					   (PP (P about#about_adv)
					       (NP (PRO them#them_pron)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,9.71))

( (IP-MAT (NP-SBJ (D The#the_adj)
		  (CODE <font>)
		  (NS Beds#bed_n)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (NP (N Earth#earth_n1)))
		  (CP-REL (WNP-1 0)
			  (C 0)
			  (IP-SUB (NP-SBJ (PRO you#you_pron))
				  (VBP sow#sow_v1)
				  (NP-OB1 (PRO them#them_pron))
				  (PP (P on#on_prep)
				      (NP *T*-1)))))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (VAN made#make_v1)
	  (NP-MSR (NUMP (ADV about#about_adv) (CODE <font>) (NUM two#two_adj))
		  (NS foot#foot_n)
		  (CODE <$$font>)
		  (PP (P in#in_prep)
		      (NP (N breadth#breadth_n))))
	  (PUNC ,)
	  (PP (P with#with_prep)
	      (IP-SMC (NP-SBJ (D a#a_adj) (ADJ good#good_adj) (N distance#distance_n))
		      (PP (P between#between_prep)
			  (NP (D the#the_adj) (NS beds#bed_n)))))
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (PRO you#you_pron))
			  (MD may#may_v1)
			  (ADVP (D the#the_adj) (ADVR better#better_adj))
			  (VB come#come_v)
			  (PP (P at#at_prep)
			      (NP (PRO them#them_pron)))
			  (CODE {COM:preceding_word_"them"_emended})
			  (IP-INF-PRP (IP-INF (TO to#to_prep)
					      (CODE <font>)
					      (VB weed#weed_v)
					      (CODE <$$font>)
					      (NP-OB1 (PRO them#them_pron)))
				      (PUNC ,)
				      (CONJP (CONJ and#and_conj1)
					     (IP-INF (TO *)
						     (VB draw#draw_v)
						     (NP-OB1 (PRO them#them_pron))
						     (RP up#up_adv1)))
				      (PP (P as#as_adv)
					  (CP-ADV (WADVP-2 0)
						  (C 0)
						  (IP-SUB (ADVP *T*-2)
							  (NP-SBJ (PRO you#you_pron))
							  (HVP have#have_v)
							  (NP-OB1 (N occasion#occasion_n1))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,9.72))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 5#five_v) (PUNC .))
  (ID LANGF-1696-E3-P1,9.73))

( (IP-IMP (IP-INF-PRP (TO To#to_prep)
		      (VB keep#keep_v)
		      (CODE <font>)
		      (NP-OB1 (NS Fowls#fowl_n)
			      (CODE <$$font>)
			      (CONJP (CONJ or#or_conj1)
				     (CODE <font>)
				     (NP (NS Birds#bird_n))))
		      (CODE <$$font>)
		      (PP (P from#from_prep)
			  (IP-PPL (VAG scraping#scrape_v)
				  (NP-OB1 (PRO them#them_pron))
				  (RP up#up_adv1))))
	  (PUNC ,)
	  (VBI lay#lay_v1)
	  (NP-OB1 (Q some#some_pron) (CODE <font>) (N white-thorn#whitethorn_n))
	  (CODE <$$font>)
	  (PP (P on#on_prep)
	      (NP (D the#the_adj) (NS beds#bed_n)))
	  (PP (P till#till_prep)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (N Ground#ground_n))
			      (BEP be#be_v)
			      (ADVP (ADV well#well_adv))
			      (VAN setled#settle_v))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,9.74))

( (IP-MAT (NP-SBJ (Q Some#some_pron))
	  (VBP cover#cover_v1)
	  (NP-OB1 (D the#the_adj) (NS beds#bed_n))
	  (PP (P with#with_prep)
	      (CODE <font>)
	      (NP (N Fern#fern_n1) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (N Straw#straw_n1)))
	  (CODE <$$font>)
	  (IP-INF-PRP (TO to#to_prep)
		      (VB keep#keep_v)
		      (NP-OB1 (PRO them#them_pron))
		      (ADJP-SPR (ADJ warm#warm_adj))
		      (PP (P in#in_prep)
			  (NP (D the#the_adj) (N winter#winter_n1))))
	  (PUNC ,)
	  (CP-CAR (WNP-1 (WPRO which#which_adj))
		  (C 0)
		  (IP-SUB (NP-SBJ *T*-1)
			  (MD may#may_v1)
			  (NEG not#not_adv)
			  (DO do#do_v)
			  (ADVP (ADV amiss#amiss_adv))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,9.75))

( (IP-MAT (CONJ but#but_prep)
	  (ADVP-TMP (ADV then#then_adv))
	  (NP-SBJ (PRO it#it_pron))
	  (MD ought#ought_v)
	  (TO to#to_prep)
	  (BE be#be_v)
	  (VAN take#take_v)
	  (CODE {COM:sic})
	  (RP off#off_adv)
	  (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (N Spring#spring_n1))
			      (VBP approacheth#approach_v))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,9.76))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (CODE <font>)
		      (IP-SUB (NP-SBJ (NS Moles#mole_n3)
				      (CODE <$$font>)
				      (CONJP (CONJ or#or_conj1)
					     (CODE <font>)
					     (NX (NS Mice#mouse_n))))
			      (CODE <$$font>)
			      (VBP get#get_v)
			      (RP in#in_adv)
			      (PUNC ,)
			      (PUNC <paren>)
			      (CP-CAR (WNP-1 (WPRO which#which_adj))
				      (C 0)
				      (IP-SUB (NP-OB1 *T*-1)
					      (NP-SBJ (PRO you#you_pron))
					      (MD will#will_v1)
					      (VB discover#discover_v)
					      (ADVP (ADV easily#easily_adv))
					      (PUNC ,)
					      (PUNC <paren>)
					      (IP-PPL-ABS (NP-SBJ (D the#the_adj) (NS Mice#mouse_n))
							  (VAG leaving#leave_v1)
							  (NP-OB1 (NS shells#shell_n)
								  (PP (P of#of_prep)
								      (NP (D the#the_adj) (NS Seeds#seed_n))))
							  (PP (P on#on_prep)
							      (NP (D the#the_adj)
								  (N top#top_n1)
								  (PP (P of#of_prep)
								      (NP (D the#the_adj) (CODE <P_10>) (NS beds#bed_n)))))))))))
	  (PUNC <$$paren>)
	  (NP-SBJ (PRO they#they_pron))
	  (MD must#must_v1)
	  (BE be#be_v)
	  (VAN destroyed#destroy_v)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,10.77))

( (IP-IMP (PP (P For#for_prep)
	      (CODE <font>)
	      (NP (NS Mice#mouse_n)))
	  (CODE <$$font>)
	  (PP (ADV+P therefore#therefore_adv))
	  (VBI lay#lay_v1)
	  (NP-OB1 (NP (N Poyson#poison_n)
		      (PUNC ,)
		      (CONJP (CONJ or#or_conj1)
			     (NP (N Oatmeal#oatmeal_n)
				 (RRC (VAN mixt#mix_v)
				      (PP (P with#with_prep)
					  (NP (ADJ pounded#pounded_adj1) (N Glass#glass_n1)))))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (NP (N Butter#butter_n1))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,10.78))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI cast#cast_v)
	  (NP-OB1 (NS bits#bit_n2)
		  (PP (P of#of_prep)
		      (NP (PRO it#it_pron))))
	  (PP (P upon#upon_prep)
	      (NP (D the#the_adj) (NS beds#bed_n)))
	  (PUNC :))
  (ID LANGF-1696-E3-P1,10.79))

( (IP-IMP (CONJ or#or_conj1)
	  (VBI set#set_v1)
	  (NP-OB1 (NS traps#trap_n1)
		  (RRC *ICH*-1))
	  (PP (P for#for_prep)
	      (NP (D the#the_adj)
		  (CODE <font>)
		  (NS Mice#mouse_n)
		  (CODE <$$font>)
		  (CONJP (CONJ and#and_conj1)
			 (CODE <font>)
			 (NX (NS Moles#mole_n3)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (RRC-1 (ADVP (ADVR better#better_adj))
		 (VAN known#know_v)
		 (PP (P than#than_conj)
		     (IP-PPL (VAN described#describe_v))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,10.80))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 6#six_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,10.81))

( (IP-MAT (NP-TMP (D The#the_adj) (ADJS next#next_adj) (N spring#spring_n1))
	  (NP-SBJ (PRO you#you_pron))
	  (MD will#will_v1)
	  (VB see#see_v)
	  (CP-THT (C 0)
		  (IP-SUB (NP-SBJ (D these#these_pron)
				  (NS Stones#stone_n)
				  (CONJP (CONJ and#and_conj1)
					 (NX (NS Seeds#seed_n))))
			  (VBP come#come_v)
			  (RP up#up_adv1)
			  (ADVP (ADV plentifully#plentifully_adv))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,10.82))

( (FRAG (ADVP-TMP (ADV first#first_adj))
	(NP-SBJ (D the#the_adj) (ADJ dissimilar#dissimilar_adj) (NS leaves#leaf_n1))
	(PUNC ,)
	(PP (ADV almost#almost_adv)
	    (P of#of_prep)
	    (NP (D the#the_adj)
		(N shape#shape_n1)
		(PP (P of#of_prep)
		    (NP (D the#the_adj)
			(N Kernel#kernel_n1)
			(RRC (VAN split#split_v)
			     (PP (P in#in_prep)
				 (NP (NUM two#two_adj))))))))
	(PUNC ,))
  (ID LANGF-1696-E3-P1,10.83))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P from#from_prep)
	      (PP (P betwixt#betwixt_prep)
		  (NP (PRO them#them_pron))))
	  (MD will#will_v1)
	  (NP-SBJ (D the#the_adj) (N stem#stem_n1))
	  (VB put#put_v)
	  (ADVP (ADV forth#forth_adv))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,10.84))

( (IP-IMP (VBI keep#keep_v)
	  (NP-OB1 (PRO them#them_pron))
	  (ADJP-SPR (ADJ clean#clean_adj)
		    (PP (P from#from_prep)
			(NP (NS weeds#weed_n1)
			    (CP-REL *ICH*-1))))
	  (NP-MSR (Q all#all_adj) (D the#the_adj) (N year#year_n))
	  (PUNC ,)
	  (CP-REL-1 (WNP-2 (WPRO which#which_adj))
		    (C 0)
		    (IP-SUB (NP-SBJ *T*-2)
			    (MD must#must_v1)
			    (BE be#be_v)
			    (VAN plucked#pluck_v)
			    (RP up#up_adv1)
			    (PP (P while#while_adv)
				(CP-ADV (C 0)
					(IP-SUB (NP-SBJ (PRO they#they_pron))
						(BEP are#be_v)
						(ADJP-PRD (ADJ young#young_adj)))))
			    (PUNC ,)
			    (PP (P lest#lest_conj)
				(CP-ADV (C 0)
					(IP-SUB (PP (P if#if_conj)
						    (CP-ADV (C 0)
							    (IP-SUB (NP-SBJ (PRO they#they_pron))
								    (VBP get#get_v)
								    (NP-OB1 (N root#root_n1)))))
						(PUNC ,)
						(PP (P in#in_prep)
						    (IP-PPL (VAG drawing#draw_v)
							    (NP-OB1 (PRO them#them_pron))
							    (RP up#up_adv1)))
						(NP-SBJ (PRO you#you_pron))
						(VBP root#root_v1)
						(RP up#up_adv1)
						(NP-OB1 (D the#the_adj) (NS seedlings#seedling_n))
						(PP (P with#with_prep)
						    (NP (PRO them#them_pron))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,10.85))

( (IP-MAT (IP-MAT-1 (NP-SBJ (NP (D These#these_pron) (NS weeds#weed_n1))
			    (CONJP (CONJ and#and_conj1)
				   (NP (SUCH such#such_adj)
				       (PP (P as#as_adv)
					   (CP-CMP (WNP-2 0)
						   (C 0)
						   (IP-SUB (NP-SBJ *T*-2)
							   (BEP are#be_v)
							   (VAN pluckt#pluck_v)
							   (RP up#up_adv1)
							   (ADVP-LOC (Q any#any_adj)
								     (WADV where#where_adv)
								     (ADVP (ADV else#else_adv))))))))
			    (PUNC ,)
			    (RRC (VAN thrown#throw_v1)
				 (RP up#up_adv1)
				 (PP (P into#into_prep)
				     (NP (D a#a_adj) (N heap#heap_n)))))
		    (MD will#will_v1)
		    (VB rot#rot_v))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (VB become#become_v)
			   (NP-PRD (ADJP (ADV very#very_adj) (ADJ good#good_adj))
				   (N Manure#manure_n))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,10.86))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (D this#this_pron))
	  (MD should#shall_v)
	  (BE be#be_v)
	  (PP (P before#before_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (VAN seeded#seed_v))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,10.87))

( (IP-MAT (CONJ for#for_prep)
	  (ADVP-TMP (ADV then#then_adv))
	  (NP-SBJ (D the#the_adj)
		  (N Manure#manure_n)
		  (RRC (VAN made#make_v1)
		       (PP (P of#of_prep)
			   (NP (PRO them#them_pron)))))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ apt#apt_adj)
		    (IP-INF (TO to#to_prep)
			    (VB make#make_v1)
			    (IP-SMC (NP-SBJ (D the#the_adj)
					    (N ground#ground_n)
					    (CP-REL (WNP-1 0)
						    (C 0)
						    (IP-SUB (NP-SBJ (PRO it#it_pron))
							    (BEP is#be_v)
							    (VAN cast#cast_v)
							    (PP (P upon#upon_prep)
								(NP *T*-1)))))
				    (ADJP-PRD (QR more#more_adj)
					      (ADJ subject#subject_adj)
					      (PP (P to#to_prep)
						  (NP (NS weeds#weed_n1)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,10.88))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D a#a_adj) (CODE <font>) (ADJ dry#dry_adj) (N time#time_n))
			      (CODE <$$font>)
			      (VBP happen#happen_v))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (NP-TMP (Q+NS sometimes#sometimes_adv))
	  (PP (P in#in_prep)
	      (NP (D the#the_adj) (N summer#summer_n1)))
	  (VB water#water_v)
	  (NP-OB1 (D the#the_adj) (NS beds#bed_n))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,10.89))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 7#seven_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,10.90))

( (IP-MAT (IP-INF-PRP (TO To#to_prep)
		      (VB furnish#furnish_v)
		      (NP-OB1 (PRO$ your#your_pron) (N self#self_pron))
		      (PP (P with#with_prep)
			  (NP (D a#a_adj)
			      (ADJ competent#competent_adj)
			      (N variety#variety_n)
			      (PP (P of#of_prep)
				  (NP (NS Stocks#stock_n1)))))
		      (PP (P for#for_prep)
			  (NP (D the#the_adj)
			      (ADJ several#several_adj)
			      (NS sorts#sort_n2)
			      (PP (P of#of_prep)
				  (NP (NS Fruit-trees#SEE_fruit_n))))))
	  (PUNC ,)
	  (NP-SBJ (PRO$ your#your_pron) (CODE <font>) (N Seminary#seminary_n1))
	  (CODE <$$font>)
	  (BEP is#be_v)
	  (IP-INF (TO to#to_prep)
		  (BE be#be_v)
		  (VAN stored#store_v)
		  (PP (P with#with_prep)
		      (NP (D these#these_pron)
			  (ADJ following#following_adj)
			  (PUNC ;)
			  (ADJP (SUCH such#such_adj)
				(PP (P as#as_adv)
				    (CP-CMP (WNP-1 0)
					    (C 0)
					    (IP-SUB (NP-SBJ *T*-1)
						    (VBP come#come_v)
						    (PP (P of#of_prep)
							(CODE <font>)
							(NP (NS Peach-stones#SEE_peach_n1) (CODE <$$font>) (PUNC ,) (CODE <font>) (NS Plum-stones#SEE_plum_n) (CODE <$$font>) (PUNC ,) (CODE <P_11>) (CODE <font>) (NS Cherry-stones#cherry-stone_n) (CODE <$$font>) (PUNC ,) (CODE <font>) (NS Apple-kernels#cNA) (CODE <$$font>) (PUNC ,) (CODE <font>) (NS Crab-kernels#SEE_crab_n2) (CODE <$$font>) (PUNC ,) (CONJ and#and_conj1) (CODE <font>) (NS Pear-kernels#SEE_pear_n))))))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,11.91))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P from#from_prep)
	      (CODE <font>)
	      (NP (NS Nuts#nut_n1)))
	  (CODE <$$font>)
	  (NP-SBJ (PRO you#you_pron))
	  (VBP raise#raise_v1)
	  (NP-OB1 (PRO$ your#your_pron) (CODE <font>) (NS Nut-trees#nut-tree_n))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,11.92))

( (IP-MAT (CODE <font>)
	  (IP-MAT-1 (NP-SBJ (NS Peach-stones#SEE_peach_n1))
		    (CODE <$$font>)
		    (BEP are#be_v)
		    (IP-INF (TO to#to_prep)
			    (VB yield#yield_v)
			    (NP-OB2 (PRO you#you_pron))
			    (NP-OB1 (NS Stocks#stock_n1)
				    (PP (P for#for_prep)
					(CODE <font>)
					(NP (NS Peaches#peach_n1) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Nectarines#nectarine_n1))))))
	  (CODE <$$font>)
	  (PUNC ;)
	  (CODE <font>)
	  (CONJP (IP-MAT=1 (NP-SBJ (NS Plum-stones#SEE_plum_n))
			   (CODE <$$font>)
			   (PUNC ,)
			   (CODE <font>)
			   (NP-OB1 (NS Stocks#stock_n1)
				   (CODE <$$font>)
				   (PP (P for#for_prep)
				       (CODE <font>)
				       (NP (NS Peaches#peach_n1) (NS Nectarines#nectarine_n1) (CODE <$$font>) (PUNC ,) (CODE <font>) (NS Apricocks#apricot_n) (CODE <$$font>) (PUNC ,) (CONJ and#and_conj1) (CODE <font>) (NS Plums#plum_n))))))
	  (CODE <$$font>)
	  (PUNC ;)
	  (CODE <font>)
	  (CONJP (IP-MAT=1 (NP-SBJ (NS Cherry-stones#cherry-stone_n))
			   (CODE <$$font>)
			   (PUNC ,)
			   (CODE <font>)
			   (NP-OB1 (NS Stocks#stock_n1)
				   (CODE <$$font>)
				   (PP (P for#for_prep)
				       (CODE <font>)
				       (NP (NS Cherries#cherry_n))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,11.93))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Seeds#seed_n)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (NS Apples#apple_n) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Crabs#crab_n2))))
	  (CODE <$$font>)
	  (VBP produce#produce_v)
	  (CODE <font>)
	  (NP-OB1 (NS Stocks#stock_n1)
		  (CODE <$$font>)
		  (PP (P for#for_prep)
		      (CODE <font>)
		      (NP (NS Apple-trees#apple-tree_n))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,11.94))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV lastly#lastly_adv))
	  (NP-SBJ (D the#the_adj)
		  (CODE <font>)
		  (NS Seeds#seed_n)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (NS Pears#pear_n))))
	  (CODE <$$font>)
	  (VBP yield#yield_v)
	  (CODE <font>)
	  (NP-OB1 (NS Stocks#stock_n1)
		  (CODE <$$font>)
		  (PP (P for#for_prep)
		      (CODE <font>)
		      (NP (NS Pear-trees#pear-tree_n))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,11.95))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 8#eight_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,11.96))

( (IP-MAT (NP-SBJ-1 (EX There#there_adv))
	  (BEP are#be_v)
	  (NP-ADV (N likewise#likewise_adv))
	  (NP-1 (Q some#some_pron)
		(OTHER other#other_adj)
		(NS ways#way_n1)
		(IP-INF (IP-INF (TO to#to_prep)
				(BE be#be_v)
				(VAN furnished#furnish_v)
				(PP (P with#with_prep)
				    (NP (NS Stocks#stock_n1))))
			(PUNC ,)
			(CONJP (CONJ and#and_conj1)
			       (CP-REL (WNP-2 (WPRO which#which_adj))
				       (C 0)
				       (IP-SUB (NP-SBJ (PRO you#you_pron))
					       (MD shall#shall_v)
					       (VB find#find_v)
					       (PP (ADV+P hereafter#hereafter_adv))
					       (CP-THT (C 0)
						       (IP-SUB (NP-SBJ *T*-2)
							       (BEP are#be_v)
							       (PP (P in#in_prep)
								   (NP (Q some#some_pron) (NS cases#case_n1)))
							       (IP-INF (TO to#to_prep)
								       (BE be#be_v)
								       (VAN made#make_v1)
								       (NP-OB1 (N use#use_n))
								       (PP (P of#of_prep)
									   (NP *T*-2))))))))))
	  (PUNC ,)
	  (IP-MAT-PRN (IP-MAT-3 (NP-SBJ (D that#that_pron1))
				(BEP is#be_v)
				(PP (P for#for_prep)
				    (CODE <font>)
				    (NP (NS Pears#pear_n)
					(CODE <$$font>)
					(PUNC ,)
					(CODE <font>)
					(NS Plums#plum_n)
					(CODE <$$font>)
					(PUNC ,)
					(CONJP (CONJ and#and_conj1)
					       (CODE <font>)
					       (NP (NS Cherries#cherry_n)))))
				(CODE <$$font>)
				(PP (P by#by_prep)
				    (NP (NS Suckers#sucker_n)
					(RRC (VAG springing#spring_v1)
					     (PP (RP out#out_adv)
						 (P of#of_prep)
						 (NP (D the#the_adj)
						     (NS roots#root_n1)
						     (PP (P of#of_prep)
							 (NP (NS Trees#tree_n)
							     (PP (P of#of_prep)
								 (NP (D the#the_adj) (ADJ same#same_adj) (N kind#kind_n)))))))))))
		      (PUNC ,)
		      (CONJP (CONJ and#and_conj1)
			     (IP-MAT=3 (PP (P for#for_prep)
					   (NP (ADJ several#several_adj)
					       (NS sorts#sort_n2)
					       (PP (P of#of_prep)
						   (NP (NS Apples#apple_n) (CONJ and#and_conj1) (NS Pears#pear_n)))))
				       (PP (P by#by_prep)
					   (NP (NS Cuttings#cutting_n)
					       (PP (P of#of_prep)
						   (NP (NS Apple-trees#apple-tree_n) (CONJ and#and_conj1) (NS Quince-treees#quince-tree_n)))))))
		      (PUNC :)
		      (CP-CAR (WNP-4 (WPRO which#which_adj))
			      (C 0)
			      (IP-SUB (NP-OB1 *T*-4)
				      (NP-SBJ (PRO I#i_pron))
				      (ADVP-LOC (ADV here#here_adv))
				      (VBP intimate#intimate_v)
				      (PUNC ,)
				      (PP (P because#because_adv)
					  (CP-ADV (C 0)
						  (IP-SUB (NP-SBJ (NS Stocks#stock_n1)
								  (RRC (ADVP (ADV thus#thus_adv))
								       (VAN raised#raise_v1)))
							  (BEP are#be_v)
							  (NP-TMP (Q+NS sometimes#sometimes_adv))
							  (VAN brought#bring_v)
							  (RP up#up_adv1)
							  (PP (P in#in_prep)
							      (NP (NS Nurseries#nursery_n)))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,11.97))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (D the#the_adj)
		  (ADJ full#full_adj)
		  (NS directions#direction_n)
		  (PP (P about#about_adv)
		      (NP (PRO them#them_pron))))
	  (BEP are#be_v)
	  (VAN given#give_v)
	  (PP (P in#in_prep)
	      (NP (D the#the_adj)
		  (N Chapter#chapter_n)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (NS Dwarf-trees#cNA)))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,11.98))

( (IP-MAT (NP-SBJ (NPR Mr.#NA) (CODE <font>) (NPR Evelyn#NA))
	  (CODE <$$font>)
	  (VBP saith#say_v1)
	  (PUNC ,)
	  (CP-THT (C 0)
		  (IP-SUB (IP-SUB-1 (NP-SBJ (D the#the_adj)
					    (N end#end_n)
					    (PP (P of#of_prep)
						(NP (NS roots#root_n1)
						    (CP-REL (WNP-2 0)
							    (C that#that_conj)
							    (IP-SUB (NP-SBJ *T*-2)
								    (BEP are#be_v)
								    (VAN cut#cut_v)
								    (RP off#off_adv)
								    (PP (P from#from_prep)
									(NP (ADJ young#young_adj) (NS trees#tree_n)))))))
					    (PUNC ,)
					    (RRC (RRC (VAN taken#take_v)
						      (RP up#up_adv1)
						      (IP-INF-PRP (TO to#to_prep) (BE be#be_v) (VAN Trasplanted#transplant_v)))
						 (PUNC ,)
						 (CONJP (CONJ and#and_conj1)
							(RRC (VAN set#set_v1)
							     (PP (P in#in_prep)
								 (NP (NS beds#bed_n)
								     (PP (P of#of_prep)
									 (NP (ADJ good#good_adj) (N Earth#earth_n1)))))))))
				    (PUNC ,)
				    (MD will#will_v1)
				    (VB shoot#shoot_v)
				    (ADVP (ADV forth#forth_adv))
				    (NP-OB1 (NS tops#top_n1)))
			  (PUNC ,)
			  (CONJP (CONJ and#and_conj1)
				 (IP-SUB=1 (VB become#become_v)
					   (NP-PRD (ADJ good#good_adj) (CODE <font>) (NS Stocks#stock_n1))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,11.99))

( (IP-MAT (NP-SBJ (SUCH Such#such_adj))
	  (MD may#may_v1)
	  (VB serve#serve_v1)
	  (PP (PP (P for#for_prep)
		  (NP (NS Dwarf-trees#cNA)))
	      (PUNC ,)
	      (CONJP (CONJ or#or_conj1)
		     (PP (P for#for_prep)
			 (NP (NS Walls#wall_n1)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,11.100))

( (CODE <P_12>))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (VBN heard#hear_v)
	  (IP-INF (NP-SBJ (D an#a_adj) (ADJ Ingenious#ingenious_adj) (N person#person_n))
		  (VB speak#speak_v)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (IP-PPL (IP-PPL (VAG inoculating#inoculate_v)
				      (NP-OB1 (NS Buds#bud_n1))
				      (CODE <$$font>)
				      (PP (P on#on_prep)
					  (NP (D the#the_adj)
					      (ADJ small#small_adj)
					      (CODE <font>)
					      (NS roots#root_n1)
					      (CODE <$$font>)
					      (PP (P of#of_prep)
						  (NP (ADJ great#great_adj)
						      (CODE <font>)
						      (NS trees#tree_n)
						      (CODE <$$font>)
						      (CP-REL (WNP-1 0)
							      (C that#that_conj)
							      (IP-SUB (NP-SBJ *T*-1)
								      (VBP grow#grow_v)
								      (PP (P at#at_prep)
									  (NP (ADJS farthest#farthest_adj)
									      (N distance#distance_n)
									      (PP (P from#from_prep)
										  (NP (D the#the_adj) (NS Bodies#body_n))))))))))))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-INF (IP-INF (PP (P after#after_adv)
							 (NP (NP-MSR (D a#a_adj) (N$ years#year_n))
							     (N growth#growth_n1)))
						     (TO to#to_prep)
						     (VB cut#cut_v)
						     (RP off#off_adv)
						     (NP-OB1 (D the#the_adj) (CODE <font>) (N root#root_n1))
						     (CODE <$$font>)
						     (PUNC ,)
						     (NP-MSR (ADV about#about_adv)
							     (D a#a_adj)
							     (N foot#foot_n)
							     (PP (P in#in_prep)
								 (NP (N length#length_n))))
						     (PUNC ,)
						     (PP (P with#with_prep)
							 (IP-PPL (NP-SBJ (D the#the_adj) (ADJ new#new_adj) (CODE <font>) (N shoot#shoot_n1))
								 (CODE <$$font>)
								 (VAG growing#grow_v)
								 (PP (P upon#upon_prep)
								     (NP (PRO it#it_pron))))))
					     (PUNC ,)
					     (CONJP (CONJ and#and_conj1)
						    (IP-INF (TO *)
							    (VB transplant#transplant_v)
							    (NP-OB1 (PRO it#it_pron))))
					     (PUNC ;)
					     (PP (P because#because_adv)
						 (CP-ADV (C 0)
							 (IP-SUB (NP-SBJ (D a#a_adj) (N Tree#tree_n))
								 (MD will#will_v1)
								 (BE be#be_v)
								 (ADVP (ADVR sooner#soon_adv)
								       (PP *ICH*-2))
								 (VAN raised#raise_v1)
								 (ADVP (ADV thus#thus_adv))
								 (PP-2 (P than#than_conj)
								       (PP (P from#from_prep)
									   (NP (D a#a_adj)
									       (CODE <font>)
									       (N Seed#seed_n)
									       (CODE <$$font>)
									       (CONJP (CONJ or#or_conj1)
										      (CODE <font>)
										      (NX (N Stone#stone_n))))))))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,12.102))

( (IP-MAT (PP (P In#in_prep)
	      (NP (N case#case_n1)
		  (PP (P of#of_prep)
		      (NP (D an#a_adj)
			  (N exigent#exigent_n1)
			  (PP (P for#for_prep)
			      (NP (NP (D a#a_adj) (CODE <font>) (N Stock#stock_n1))
				  (CODE <$$font>)
				  (CONJP (CONJ or#or_conj1)
					 (NP (NUM two#two_adj)))))))))
	  (PUNC ,)
	  (NP-SBJ (D this#this_pron) (N way#way_n1))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (VAN practised#practise_v)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,12.103))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (MD would#will_v1)
	  (BE be#be_v)
	  (VAN found#find_v)
	  (IP-SMC (NP-SBJ *-1)
		  (ADJP-PRD (ADVR too#too_adv)
			    (ADJ troublesome#troublesome_adj)
			    (PP (P for#for_prep)
				(NP (ADJ general#general_adj) (N use#use_n)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,12.104))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 9#nine_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,12.105))

( (IP-MAT (CONJ But#but_prep)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (NP-SBJ (PRO you#you_pron))
				      (VBP desire#desire_v)
				      (IP-INF (TO to#to_prep)
					      (VB raise#raise_v1)
					      (NP-OB1 (Q some#some_pron) (CODE <font>) (NS Wall-fruit-trees#SEE_wall_n1))
					      (CODE <$$font>)
					      (ADVP (ADV speedily#speedily_adv)))
				      (PUNC ,)
				      (PP (P for#for_prep)
					  (IP-PPL (VAG furnishing#furnish_v)
						  (NP-OB1 (Q some#some_pron) (NS vacancies#vacancy_n))
						  (PP (P in#in_prep)
						      (NP (D the#the_adj) (N Wall#wall_n1))))))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB (NP-SBJ *con*)
					     (MD would#will_v1)
					     (BE be#be_v)
					     (ADJP-PRD (ADVR so#so_adv)
						       (ADJ sure#sure_adj)
						       (PP (P of#of_prep)
							   (NP (D the#the_adj)
							       (N kind#kind_n)
							       (PP (P of#of_prep)
								   (CODE <font>)
								   (NP (N Fruit#fruit_n)))))
						       (CODE <$$font>)
						       (PUNC ,)
						       (CP-DEG (C that#that_conj)
							       (IP-SUB (NP-SBJ (PRO you#you_pron))
								       (MD will#will_v1)
								       (NEG not#not_adv)
								       (VB trust#trust_v)
								       (PP (P to#to_prep)
									   (NP (NP-POS (D a#a_adj) (N Nursery#nursery_n) (N$ Mans#man_n1))
									       (N selling#selling_n)))))))))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB set#set_v1)
	  (NP-OB1 (Q some#some_pron) (CODE <font>) (NS Peach-stones#SEE_peach_n1))
	  (CODE <$$font>)
	  (PP (P in#in_prep)
	      (NP (Q some#some_pron)
		  (ADJ old#old_adj)
		  (N basket#basket_n)
		  (RRC (VAN fill'd#fill_v)
		       (PP (P with#with_prep)
			   (NP (N Earth#earth_n1))))))
	  (IP-ABS (NP-SBJ (NUMP (NUM 4#four_adj) (CONJ or#or_conj1) (NUM 5#five_v)))
		  (PP (P in#in_prep)
		      (NP (D a#a_adj) (N basket#basket_n))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,12.106))

( (IP-IMP (CONJ and#and_conj1)
	  (ADVP-LOC (CP-FRL (WADVP-1 (WADV where#where_adv))
			    (C 0)
			    (IP-SUB (ADVP-LOC *T*-1)
				    (NP-SBJ (ADJ several#several_adj))
				    (VBP come#come_v)
				    (RP up#up_adv1)
				    (PUNC <paren>)
				    (PP-PRN (P when#when_adv)
					    (ADJP (ADV very#very_adj) (ADJ young#young_adj))))))
	  (PUNC <$$paren>)
	  (VBI draw#draw_v)
	  (RP up#up_adv1)
	  (NP-OB1 (Q all#all_adj)
		  (PP (P but#but_prep)
		      (NP (ONE one#one_adj)
			  (CP-REL (WNP-2 0)
				  (C that#that_conj)
				  (IP-SUB (NP-SBJ *T*-2)
					  (BEP is#be_v)
					  (ADJP-PRD (ADJ likely#likely_adj)
						    (IP-INF (TO to#to_prep)
							    (VB grow#grow_v)
							    (ADVP (ADVS best#best_adj)))))))))
	  (PUNC :))
  (ID LANGF-1696-E3-P1,12.107))

( (IP-MAT (IP-MAT-1 (NP-OB1 (Q Some#some_pron)
			    (PP (P of#of_prep)
				(NP (D these#these_pron))))
		    (NP-SBJ (PRO you#you_pron))
		    (MD may#may_v1)
		    (ADVP (ADV possibly#possibly_adv))
		    (CODE <font>)
		    (VB Inoculate#inoculate_v)
		    (CODE <$$font>)
		    (NP-TMP (D the#the_adj) (ADJ same#same_adj) (N year#year_n)))
	  (PUNC ,)
	  (CONJP (CONJ or#or_conj1)
		 (IP-MAT=1 (PP (P at#at_prep)
			       (ADJP (ADJS farthest#farthest_adj)))
			   (NP-TMP (D the#the_adj)
				   (N year#year_n)
				   (ADVP (ADV after#after_adv)))
			   (NP-OB1 (Q all#all_adj)
				   (PP (P of#of_prep)
				       (NP (PRO them#them_pron))))))
	  (PUNC :))
  (ID LANGF-1696-E3-P1,12.108))

( (IP-IMP (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP see#see_v)
			      (IP-SMC (NP-SBJ (D the#the_adj) (CODE <font>) (N bud#bud_n1))
				      (CODE <$$font>)
				      (VAN taken#take_v)))))
	  (PUNC ,)
	  (PP (P in#in_prep)
	      (NP (D the#the_adj)
		  (N winter#winter_n1)
		  (RRC (VAG following#follow_v))))
	  (VBI cut#cut_v)
	  (RP off#off_adv)
	  (NP-OB1 (D the#the_adj) (N head#head_n1))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,12.109))

( (IP-IMP (IP-IMP (CONJ and#and_conj1)
		  (VBI set#set_v1)
		  (NP-OB1 (D the#the_adj)
			  (N basket#basket_n)
			  (PP (P with#with_prep)
			      (IP-SMC (NP-SBJ (D the#the_adj) (N tree#tree_n))
				      (PP (P in#in_prep)
					  (NP (PRO it#it_pron))))))
		  (PUNC ,)
		  (PP (P in#in_prep)
		      (NP (D the#the_adj) (ADJ vacant#vacant_adj) (NS places#place_n1)))
		  (PUNC ,)
		  (PP (P by#by_prep)
		      (IP-PPL (IP-PPL (VAG opening#open_v)
				      (NP-OB1 (D the#the_adj) (N ground#ground_n)))
			      (CONJP (CONJ and#and_conj1)
				     (IP-PPL (VAG letting#let_v1)
					     (RP in#in_adv)
					     (NP-OB1 (D the#the_adj) (N basket#basket_n))))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (CODE <P_13>)
				     (IP-PPL (VAG setting#set_v1)
					     (RP in#in_adv)
					     (NP-OB1 (N Earth#earth_n1))
					     (PP (P about#about_adv)
						 (NP (PRO it#it_pron))))))))
	  (PUNC ;)
	  (CONJP (IP-MAT (IP-MAT-1 (NP-SBJ (D The#the_adj) (N basket#basket_n))
				   (MD will#will_v1)
				   (VB rot#rot_v))
			 (PUNC ,)
			 (CONJP (CONJ and#and_conj1)
				(IP-MAT=1 (NP-SBJ (NS roots#root_n1))
					  (VBP get#get_v)
					  (PP (P through#through_prep)
					      (NP (PRO it#it_pron)))))
			 (PUNC ,)
			 (PP (P so#so_adv)
			     (CP-ADV (C that#that_conj)
				     (IP-SUB (NP-SBJ (PRO it#it_pron))
					     (MD will#will_v1)
					     (BE be#be_v)
					     (NP-PRD (Q no#no_adj)
						     (N hindrance#hindrance_n)
						     (PP (P to#to_prep)
							 (NP (NP-POS (D the#the_adj) (CODE <font>) (N Tree#tree_n) (CODE <$$font>) ($ 's#NA))
							     (N growth#growth_n1)))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,13.110))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj) (ADJ chief#chief_adj) (N advantage#advantage_n))
	  (BEP is#be_v)
	  (CP-THT (C that#that_conj)
		  (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N Tree#tree_n))
			  (CODE <$$font>)
			  (HVP hath#have_v)
			  (NEG not#not_adv)
			  (NP-OB1 (D the#the_adj)
				  (N lett#let_n1)
				  (CONJP (CONJ and#and_conj1)
					 (NX (N hindrance#hindrance_n)))
				  (PP (P as#as_adv)
				      (CP-ADV (WNP-1 0)
					      (C 0)
					      (IP-SUB (NP-OB1 *T*-1)
						      (NP-SBJ (OTHERS others#other_adj))
						      (HVP have#have_v))))
				  (PP (P by#by_prep)
				      (NP (N removing#removing_n))))
			  (PUNC ,)
			  (IP-PPL (ADVP-TMP (ADV never#never_adv))
				  (BAG being#be_v)
				  (VAN taken#take_v)
				  (PP (RP out#out_adv)
				      (P of#of_prep)
				      (NP (D the#the_adj)
					  (N Earth#earth_n1)
					  (CP-REL (WNP-2 0)
						  (C 0)
						  (IP-SUB (NP-SBJ (PRO it#it_pron))
							  (BED was#be_v)
							  (VAN set#set_v1)
							  (PP (P in#in_prep)
							      (NP *T*-2)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,13.111))

( (IP-MAT (PP (P Lest#lest_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (Q any#any_adj) (N casualty#casualty_n))
			      (VBP hit#hit_v)
			      (RP off#off_adv)
			      (NP-OB1 (D the#the_adj) (N Bud#bud_n1))
			      (PP (PP (P in#in_prep)
				      (NP (N removing#removing_n)))
				  (PUNC ,)
				  (CONJP (CONJ or#or_conj1)
					 (PP (P against#against_prep)
					     (NP (D the#the_adj) (N Wall#wall_n1))))))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (PP-PRN (P if#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (PRO you#you_pron))
				  (VBP please#please_v))))
	  (NEG not#not_adv)
	  (VB set#set_v1)
	  (NP-OB1 (D the#the_adj) (N basket#basket_n))
	  (PP (P till#till_prep)
	      (NP (D the#the_adj)
		  (N year#year_n)
		  (PP (P after#after_adv)
		      (CP-ADV (C 0)
			      (IP-SUB (NP-SBJ (D the#the_adj)
					      (CODE <font>)
					      (N Bud#bud_n1)
					      (CODE <$$font>)
					      (CP-REL (WNP-1 0)
						      (C that#that_conj)
						      (IP-SUB (NP-SBJ *T*-1)
							      (BED was#be_v)
							      (CODE <font>)
							      (VAN inoculated#inoculate_v))))
				      (CODE <$$font>)
				      (BEP is#be_v)
				      (VBN shot#shoot_v)
				      (ADVP (ADV forth#forth_adv)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,13.112))

( (IP-MAT (IP-MAT-1 (CONJ Or#or_conj1)
		    (IP-INF-PRP (TO to#to_prep)
				(VB hasten#hasten_v)
				(NP-OB1 (D the#the_adj)
					(IP-PPL (VAG furnishing#furnish_v)
						(NP-OB1 (D the#the_adj) (N Wall#wall_n1))))
				(PUNC <paren>)
				(PP-PRN (PP (P if#if_conj)
					    (CP-ADV (C 0)
						    (IP-SUB (IP-SUB (NP-SBJ (PRO you#you_pron))
								    (HVP have#have_v)
								    (NP-OB1 (Q none#none_pron)
									    (IP-PPL (ADVP (ADV ready#ready_adj))
										    (VAN grown#grow_v)
										    (PP (P in#in_prep)
											(NP (D a#a_adj) (N Nursery#nursery_n))))))
							    (CONJP (CONJ nor#nor_conj1)
								   (IP-SUB (NP-SBJ *con*)
									   (BEP are#be_v)
									   (ADJP-PRD (ADJ willing#willing_adj)
										     (IP-INF (TO to#to_prep) (VB buy#buy_v))))))))
					(PUNC ,)
					(CONJP (CONJ and#and_conj1)
					       (CP-ADV (C that#that_conj)
						       (IP-SUB (NP-SBJ (Q no#no_adj) (N impediment#impediment_n))
							       (VBP hinder#hinder_v))))))
		    (PUNC <$$paren>)
		    (NP-SBJ (PRO you#you_pron))
		    (MD may#may_v1)
		    (VB set#set_v1)
		    (CODE <font>)
		    (NP-OB1 (NS Stones#stone_n))
		    (CODE <$$font>)
		    (PP (P by#by_prep)
			(NP (D the#the_adj) (N Wall#wall_n1) (N side#side_n1)))
		    (PP (P in#in_prep)
			(NP (D the#the_adj) (NS Borders#border_n))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (ADVP-LOC (ADV there#there_adv))
			   (VB inoculate#inoculate_v)
			   (NP-OB1 (PRO them#them_pron))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,13.113))

( (IP-IMP (CONJ and#and_conj1)
	  (ADVP-TMP (ADV after#after_adv))
	  (VBI let#let_v1)
	  (IP-INF (VB stand#stand_v)
		  (NP-SBJ (CP-FRL (WNP-1 (WPRO what#what_pron))
				  (C 0)
				  (IP-SUB (IP-INF (NP-OB1 *T*-1))
					  (NP-SBJ (PRO you#you_pron))
					  (VBP please#please_v)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,13.114))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI remove#remove_v)
	  (NP-OB1 (D the#the_adj) (N rest#rest_n3))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,13.115))

( (IP-MAT (PP (P In#in_prep)
	      (NP (Q both#both_pron) (D those#those_pron)))
	  (NP-SBJ (PRO you#you_pron))
	  (MD will#will_v1)
	  (VB find#find_v)
	  (NP-OB1 (NS directions#direction_n)
		  (PP (P of#of_prep)
		      (IP-PPL (IP-PPL (VAG inoculating#inoculate_v))
			      (CONJP (CONJ and#and_conj1)
				     (IP-PPL (ADVP (QR more#more_adj) (ADV fully#fully_adv))
					     (VAG ordering#order_v)
					     (NP-OB1 (PRO them#them_pron)))))))
	  (PP (P in#in_prep)
	      (NP (D the#the_adj)
		  (ADJP (ADJ 4th#NA) (CONJ and#and_conj1) (ADJ fifth#NA))
		  (NS Chapters#chapter_n)))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,13.116))

( (CODE <P_14>))

( (CODE <heading>))

( (NP (N CHAP.#chapter_n) (NUM II#two_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,14.119))

( (NP (CODE <font>)
      (NS OBSERVATIONS#observation_n)
      (PP (P CONCERNING#concerning_prep)
	  (NP (D THE#the_adj)
	      (N RAISING#raising_n2)
	      (PP (P OF#of_prep)
		  (NP (NS STOCKS#stock_n1)))
	      (PP (PP (P IN#in_prep)
		      (NP (D THE#the_adj) (N SEMINARY#seminary_n1)))
		  (PUNC ,)
		  (CONJP (CONJ OR#or_conj1)
			 (ADVP (ADV ELSEWHERE#elsewhere_adv))))))
      (PUNC .))
  (ID LANGF-1696-E3-P1,14.120))

( (CODE <$$heading>))

( (NP (N Sect.#section_n) (CODE <$$font>) (ONE 1#one_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,14.122))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Seeds#seed_n)
		  (CODE <$$font>)
		  (CONJ or#or_conj1)
		  (CODE <font>)
		  (NS Stones#stone_n)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (NS Fruits#fruit_n)
			  (CODE <$$font>)
			  (RRC (VAN gathered#gather_v)
			       (PP (P from#from_prep)
				   (CODE <font>)
				   (NP (NS Trees#tree_n)
				       (CODE <$$font>)
				       (CP-REL (WNP-1 0)
					       (C that#that_conj)
					       (IP-SUB (NP-SBJ *T*-1)
						       (HVP have#have_v)
						       (BEN been#be_v)
						       (CODE <font>)
						       (VAN (VAN graffed#graff_v1) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (VAN inoculated#inoculate_v))
						       (CODE <$$font>)
						       (PP (P on#on_prep)
							   (CODE <font>)
							   (NP (NS Stocks#stock_n1)
							       (CODE <$$font>)
							       (PP (P of#of_prep)
								   (NP (ADJ different#different_adj)
								       (NS kinds#kind_n)
								       (PP (P from#from_prep)
									   (NP (D the#the_adj) (NS Scions#scion_n)))))))))))))))
	  (PUNC ,)
	  (VBP produce#produce_v)
	  (PP (P of#of_prep)
	      (NP (PRO themselves#themselves_pron)))
	  (PUNC ,)
	  (PUNC <paren>)
	  (IP-PPL (NEG not#not_adv)
		  (BAG being#be_v)
		  (CODE <font>)
		  (VAN (VAN graffed#graff_v1) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (VAN inoculated#inoculate_v)))
	  (CODE <$$font>)
	  (PUNC <$$paren>)
	  (NP-OB1 (NP (NEG not#not_adv)
		      (D the#the_adj)
		      (ADJ same#same_adj)
		      (CODE <font>)
		      (N Fruit#fruit_n)
		      (CODE <$$font>)
		      (PP (P as#as_adv)
			  (CP-CMP (WNP-2 0)
				  (C 0)
				  (IP-SUB (NP-SBJ (D that#that_pron1))
					  (BED was#be_v)
					  (PP (P from#from_prep)
					      (NP *T*-2))
					  (PP (P when#when_adv)
					      (CP-ADV (C 0)
						      (IP-SUB (NP-SBJ (D the#the_adj)
								      (CODE <font>)
								      (N Seed#seed_n)
								      (CODE <$$font>)
								      (CONJP (CONJ or#or_conj1)
									     (CODE <font>)
									     (NX (N Stone#stone_n))))
							      (CODE <$$font>)
							      (VBD came#come_v))))))))
		  (PUNC ,)
		  (CONJP (CONJ but#but_prep)
			 (NP (D a#a_adj) (ADJ different#different_adj)))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (ADVP (QS most#most_adj) (ADV commonly#commonly_adv))
			 (NP (D a#a_adj) (ADJR worse#worse_adj))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,14.123))

( (IP-MAT (NP-SBJ (D The#the_adj)
		  (CODE <font>)
		  (NS Stones#stone_n)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (NS Peaches#peach_n1))))
	  (CODE <$$font>)
	  (VBP produce#produce_v)
	  (CODE <font>)
	  (NP-OB1 (NS Trees#tree_n)
		  (CODE <$$font>)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (MD will#will_v1)
				  (VB bear#bear_v1)
				  (CODE <font>)
				  (NP-OB1 (NS Peaches#peach_n1)
					  (CODE <$$font>)
					  (PUNC ,)
					  (RRC (NP-TMP (Q+NS sometimes#sometimes_adv))
					       (ADJP-PRD (ADJR better#better_adj)
							 (PP (P than#than_conj)
							     (NP (D the#the_adj)
								 (NS Peaches#peach_n1)
								 (CP-REL (WPP-2 (RP out#out_adv)
										(P of#of_prep)
										(WNP (WPRO which#which_adj)))
									 (C 0)
									 (IP-SUB (PP *T*-2)
										 (NP-SBJ (D the#the_adj) (NS Stones#stone_n))
										 (BED were#be_v)
										 (VAN taken#take_v))))))
					       (PUNC ,)
					       (PP (P although#although_conj)
						   (CP-ADV (C 0)
							   (IP-SUB (NP-SBJ (D those#those_pron) (NS Peaches#peach_n1))
								   (VBD grew#grow_v)
								   (PP (P upon#upon_prep)
								       (NP (D a#a_adj)
									   (N Tree#tree_n)
									   (CP-REL (WNP-3 0)
										   (C that#that_conj)
										   (IP-SUB (NP-SBJ *T*-3)
											   (BED was#be_v)
											   (CODE <font>)
											   (VAN inoculated#inoculate_v)
											   (CODE <$$font>)
											   (PP (P on#on_prep)
											       (NP (D a#a_adj) (CODE <font>) (N Plum#plum_n)))))))))))))))
	  (PUNC :)
	  (CODE <$$font>))
  (ID LANGF-1696-E3-P1,14.124))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-SBJ-1 (EX there#there_adv))
	  (BEP are#be_v)
	  (NP-1 (Q some#some_pron)
		(NS Gardiners#gardener_n)
		(CP-REL (WNP-2 0)
			(C 0)
			(IP-SUB (IP-SUB (NP-SBJ *T*-2)
					(PP (P by#by_prep)
					    (IP-PPL (VAG setting#set_v1)
						    (NP-OB1 (Q many#many_adj)
							    (NS Stones#stone_n)
							    (PP (P of#of_prep)
								(NP (D the#the_adj) (CODE <font>) (NPR Nerington#NA) (N Peach#peach_n1))))))
					(CODE <$$font>)
					(PUNC ,)
					(HVP have#have_v)
					(VBN found#find_v)
					(IP-INF (NP-SBJ (Q some#some_pron)
							(PP (P among#among_prep)
							    (NP (D the#the_adj)
								(NS Trees#tree_n)
								(RRC (VBN come#come_v)
								     (RP up#up_adv1)
								     (PP (P from#from_prep)
									 (NP (PRO them#them_pron)))))))
						(PUNC ,)
						(TO to#to_prep)
						(VB bear#bear_v1)
						(NP-OB1 (D a#a_adj)
							(CODE <font>)
							(N Fruit#fruit_n)
							(CODE <$$font>)
							(RRC (ADVP (ADVR rather#rather_adv))
							     (VAN improved#improve_v2)
							     (PP (P than#than_conj)
								 (ADJP (ADJR worse#worse_adj)))))))
				(PUNC ;)
				(CONJP (CONJ and#and_conj1)
				       (IP-SUB (NP-SBJ *T*-2)
					       (PP (P by#by_prep)
						   (IP-PPL (IP-PPL (VAG giving#give_v)
								   (NP-OB2 (PRO it#it_pron))
								   (NP-OB1 (D a#a_adj) (ADJ new#new_adj) (N Name#name_n)))
							   (PUNC ,)
							   (CONJP (CONJ and#and_conj1)
								  (CODE <font>)
								  (IP-PPL (VAG inoculating#inoculate_v)
									  (CODE <$$font>)
									  (PP (P from#from_prep)
									      (NP (PRO it#it_pron)))))))
					       (PUNC ,)
					       (HVP have#have_v)
					       (VBN made#make_v1)
					       (NP-OB1 (ADJ good#good_adj)
						       (N gain#gain_n2)
						       (PP (P of#of_prep)
							   (NP (PRO it#it_pron)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,14.125))

( (IP-MAT (CONJ But#but_prep)
	  (NP-SBJ (D this#this_pron))
	  (BEP is#be_v)
	  (NEG not#not_adv)
	  (NP-PRD (D a#a_adj)
		  (N practice#practice_n)
		  (PP (P for#for_prep)
		      (NP (Q every#every_adj) (ADJ private#private_adj1) (CODE <P_15>) (N person#person_n))))
	  (PUNC ;)
	  (PP (PP (P because#because_adv)
		  (CODE <font>)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (NS Peach-trees#peach-tree_n)
					  (CODE <$$font>)
					  (RRC (ADVP (ADV so#so_adv))
					       (VAN raised#raise_v1)))
				  (PUNC ,)
				  (MD will#will_v1)
				  (BE be#be_v)
				  (ADJP-PRD (ADJR longer#long_adj1))
				  (PP (P before#before_adv)
				      (CP-ADV (C 0)
					      (IP-SUB (NP-SBJ (PRO they#they_pron))
						      (VBP bear#bear_v1)
						      (NP-OB1 (N fruit#fruit_n))
						      (PUNC ,)
						      (PP (P than#than_conj)
							  (NP (D those#those_pron)
							      (CP-REL (WNP-1 (WPRO which#which_adj))
								      (C 0)
								      (IP-SUB (NP-SBJ *T*-1)
									      (BEP are#be_v)
									      (CODE <font>)
									      (VAN inoculated#inoculate_v)))))))))))
	      (CODE <$$font>)
	      (PUNC ;)
	      (CONJP (CONJ and#and_conj1)
		     (PP (P because#because_adv)
			 (CP-ADV (C 0)
				 (IP-SUB (IP-SUB (NP-SBJ (PRO he#he_pron))
						 (MD must#must_v1)
						 (VB run#run_v)
						 (NP-OB1 (D the#the_adj)
							 (N hazard#hazard_n)
							 (PP (P of#of_prep)
							     (IP-PPL (VAG filling#fill_v)
								     (NP-OB1 (ADJ great#great_adj)
									     (N part#part_n1)
									     (PP (P of#of_prep)
										 (NP (PRO$ his#his_adj) (CODE <font>) (N wall#wall_n1))))
								     (CODE <$$font>)
								     (PP (P with#with_prep)
									 (NP (D these#these_pron)
									     (CODE <font>)
									     (NS Peach-trees#peach-tree_n)
									     (CODE <$$font>)
									     (RRC (ADVP (ADV thus#thus_adv))
										  (VAN raised#raise_v1)
										  (PP (P from#from_prep)
										      (CODE <font>)
										      (NP (NS Stones#stone_n))))))))))
					 (CODE <$$font>)
					 (PUNC ,)
					 (CONJP (CONJ and#and_conj1)
						(IP-SUB (IP-SUB-2 (NP-SBJ (NEG not#not_adv)
									  (ONE one#one_adj)
									  (IP-MAT-PRN (NP-SBJ (PRO it#it_pron))
										      (MD may#may_v1)
										      (BE be#be_v))
									  (PP (P in#in_prep)
									      (NP (Q many#many_adj))))
								  (VBP prove#prove_v)
								  (NP-PRD (Q any#any_adj)
									  (N thing#thing_n1)
									  (ADJP (ADJ extraordinary#extraordinary_adj))))
							(PUNC ,)
							(CONJP (CONJ and#and_conj1)
							       (IP-SUB=2 (NP-SBJ (D the#the_adj) (N rest#rest_n3))
									 (PP (P of#of_prep)
									     (NP (Q no#no_adj) (N use#use_n)))
									 (PP (P unless#unless_adv)
									     (PP (P for#for_prep)
										 (NP (NS Stocks#stock_n1))))))
							(PUNC ,)
							(PP (P after#after_adv)
							    (CP-ADV (C 0)
								    (IP-SUB (NP-SBJ (PRO he#he_pron))
									    (HVP hath#have_v)
									    (VBN waited#wait_v1)
									    (NP-MSR (ADJ several#several_adj) (NS years#year_n))
									    (IP-INF-PRP (TO to#to_prep)
											(VB see#see_v)
											(CP-QUE-SUB (WNP-3 (WD what#what_pron) (N Fruit#fruit_n))
												    (C 0)
												    (IP-SUB (NP-OB1 *T*-3)
													    (NP-SBJ (PRO they#they_pron))
													    (MD will#will_v1)
													    (VB bear#bear_v1))))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,15.126))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 2#two_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,15.127))

( (IP-MAT (NP-SBJ-1 (PRO It#it_pron))
	  (BEP is#be_v)
	  (VAN controverted#controvert_v)
	  (PP (P amongst#amongst_prep)
	      (NP (NS men#man_n1)
		  (PP (P of#of_prep)
		      (NP (D this#this_pron) (CODE <font>) (N Profession#profession_n)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CP-QUE-SUB-1 (WQ whether#whether_pron)
			(C 0)
			(CODE <font>)
			(IP-SUB (NP-SBJ (NS Stocks#stock_n1)
					(CODE <$$font>)
					(PP (P from#from_prep)
					    (CODE <font>)
					    (NP (NS Peach-stones#SEE_peach_n1))))
				(CODE <$$font>)
				(BEP are#be_v)
				(ADJP-PRD (ADJS best#best_adj)
					  (CP-TMC (WNP-2 0)
						  (IP-INF (TO to#to_prep)
							  (CODE <font>)
							  (VB inoculate#inoculate_v)
							  (NP-OB1 (NS Peaches#peach_n1))
							  (CODE <$$font>)
							  (PP (P upon#upon_prep)
							      (CODE <font>)
							      (PUNC :)
							      (CODE <$$font>)
							      (NP *T*-2))))))))
  (ID LANGF-1696-E3-P1,15.128))

( (IP-MAT (NP-SBJ (Q both#both_pron) (NS sides#side_n1))
	  (HVP have#have_v)
	  (NP-OB1 (PRO$ their#their_adj)
		  (ADJ peculiar#peculiar_adj)
		  (NS advantages#advantage_n)
		  (PUNC ,)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (IP-SUB-2 (NP-OB1 *T*-1)
					    (NP-SBJ (PRO I#i_pron))
					    (MD shall#shall_v)
					    (ADVP-LOC (ADV here#here_adv))
					    (VB set#set_v1)
					    (RP down#down_adv))
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (IP-SUB=2 (VB leave#leave_v1)
						   (NP-OB1 (Q every#every_adj) (N man#man_n1))
						   (PP (P to#to_prep)
						       (NP (PRO$ his#his_adj) (N choice#choice_n))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,15.129))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Stocks#stock_n1)
		  (CODE <$$font>)
		  (PP (P from#from_prep)
		      (CODE <font>)
		      (NP (NS Peach-stones#SEE_peach_n1))))
	  (CODE <$$font>)
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADVP (ADVR sooner#soon_adv))
	  (ADJP-PRD (ADJ ready#ready_adj)
		    (CP-TMC (WNP-1 0)
			    (IP-INF (NP-OB1 *T*-1)
				    (TO to#to_prep)
				    (CODE <font>)
				    (VB inoculate#inoculate_v))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,15.130))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj)
		  (NS buds#bud_n1)
		  (CP-REL *ICH*-1))
	  (MD will#will_v1)
	  (VB take#take_v)
	  (ADVP (ADV very#very_adj) (ADV sure#sure_adj))
	  (PUNC ,)
	  (CP-REL-1 (WNP-2 0)
		    (C that#that_conj)
		    (IP-SUB (NP-SBJ *T*-2)
			    (BEP are#be_v)
			    (CODE <font>)
			    (VAN inoculated#inoculate_v)
			    (CODE <$$font>)
			    (PP (P into#into_prep)
				(NP (PRO them#them_pron)))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,15.131))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (PRO they#they_pron))
	  (MD must#must_v1)
	  (BE be#be_v)
	  (ADVP (ADV carefully#carefully_adv) (CONJ and#and_conj1) (ADV tenderly#tenderly_adv))
	  (VAN used#use_v)
	  (PP (P in#in_prep)
	      (NP (D the#the_adj) (N removal#removal_n)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,15.132))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ-1 *con*)
	  (MD must#must_v1)
	  (NEG not#not_adv)
	  (BE be#be_v)
	  (VAN expected#expect_v)
	  (IP-INF (NP-SBJ *-1)
		  (TO to#to_prep)
		  (VB make#make_v1)
		  (NP-OB1 (ADJ long_lasting#long-lasting_adj) (NS Trees#tree_n)))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,15.133))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Stocks#stock_n1)
		  (CODE <$$font>)
		  (PP (PP (P from#from_prep)
			  (CODE <font>)
			  (NP (NS Plum-stones#SEE_plum_n)))
		      (CODE <$$font>)
		      (CONJP (CONJ and#and_conj1)
			     (CODE <font>)
			     (IP-PPL (VAN budded#bud_v1)
				     (CODE <$$font>)
				     (PP (P with#with_prep)
					 (NP (D a#a_adj) (CODE <font>) (N Peach#peach_n1)))))))
	  (CODE <$$font>)
	  (MD will#will_v1)
	  (VB make#make_v1)
	  (NP-OB1 (NP (D a#a_adj)
		      (ADJP (QR more#more_adj)
			    (ADJ firm#firm_adj)
			    (CONJP (CONJ and#and_conj1)
				   (ADJX (ADJ lasting#lasting_adj))))
		      (CODE <font>)
		      (N Peach-tree#peach-tree_n))
		  (CODE <$$font>)
		  (PUNC ;)
		  (CONJP (CONJ and#and_conj1)
			 (NP (SUCH such#such_adj)
			     (PP (P as#as_adv)
				 (CP-CMP (WNP-1 0)
					 (C 0)
					 (IP-SUB (NP-SBJ *T*-1)
						 (MD will#will_v1)
						 (VB bear#bear_v1)
						 (NP-OB1 (N Fruit#fruit_n))
						 (ADVP (ADV well#well_adv))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,15.134))

( (CODE <P_16>))

( (IP-IMP (IP-IMP-1 (PP (ADV+P Therefore#therefore_adv))
		    (ADVP (ADVR rather#rather_adv))
		    (VBI raise#raise_v1)
		    (CODE <font>)
		    (NP-OB1 (NS Stocks#stock_n1)
			    (CODE <$$font>)
			    (PP (P for#for_prep)
				(CODE <font>)
				(NP (NS Peaches#peach_n1)
				    (CODE <$$font>)
				    (PUNC ,)
				    (CODE <font>)
				    (NS Nectarines#nectarine_n1)
				    (CODE <$$font>)
				    (PUNC ,)
				    (CODE <font>)
				    (NS Apricocks#apricot_n)
				    (CODE <$$font>)
				    (PUNC ,)
				    (CONJP (CONJ and#and_conj1)
					   (CODE <font>)
					   (NP (NS Plums#plum_n))))))
		    (CODE <$$font>)
		    (PP (P from#from_prep)
			(CODE <font>)
			(NP (NS Stones#stone_n)
			    (CODE <$$font>)
			    (PP (P of#of_prep)
				(NP (D the#the_adj)
				    (CODE <font>)
				    (N Wheat#wheat_n)
				    (N plum#plum_n)
				    (CODE <$$font>)
				    (PUNC ,)
				    (CP-REL (WNP-2 (WPRO which#which_adj))
					    (C 0)
					    (IP-SUB (NP-SBJ *T*-2)
						    (BEP is#be_v)
						    (NP-PRD (D a#a_adj)
							    (CODE <font>)
							    (N White-plum#wheat-plum_n)
							    (CODE <$$font>)
							    (ADJP (ADJ ripe#ripe_adj)
								  (PP (P in#in_prep)
								      (CODE <font>)
								      (NP (NPR August#NA)))))))))))
		    (CODE <$$font>)
		    (PUNC <paren>)
		    (PP-PRN (P if#if_conj)
			    (CP-ADV (C 0)
				    (IP-SUB (NP-SBJ (PRO you#you_pron))
					    (MD can#can_v1)
					    (HV have#have_v)
					    (NP-OB1 (PRO them#them_pron))))))
	  (PUNC ,)
	  (PUNC <$$paren>)
	  (CONJP (CONJ or#or_conj1)
		 (IP-IMP=1 (PP (P in#in_prep)
			       (NP (N want#want_adj)
				   (PP (P of#of_prep)
				       (NP (PRO them#them_pron)))))
			   (PP (P from#from_prep)
			       (NP (D the#the_adj)
				   (CODE <font>)
				   (NS Stones#stone_n)
				   (CODE <$$font>)
				   (PP (PP (P of#of_prep)
					   (NP (D the#the_adj)
					       (CODE <font>)
					       (N White-pear-plum#cNA)
					       (CODE <$$font>)
					       (PUNC ,)
					       (CP-REL (WNP-3 (WPRO which#which_adj))
						       (C 0)
						       (IP-SUB (NP-SBJ *T*-3)
							       (BEP is#be_v)
							       (ADVP (ADV generally#generally_adv))
							       (VAN (VAN commended#commend_v) (CONJ and#and_conj1) (VAN used#use_v))))))
				       (PUNC ,)
				       (CONJP (CONJ or#or_conj1)
					      (PP (P of#of_prep)
						  (NP (OTHER other#other_adj)
						      (ADJ good#good_adj)
						      (CODE <font>)
						      (N White-plum#wheat-plum_n)
						      (CODE <$$font>)
						      (PUNC ,)
						      (CP-REL (WNP-4 (WPRO$ whose#whose_pron) (N Tree#tree_n))
							      (C 0)
							      (IP-SUB (NP-SBJ *T*-4)
								      (VBP puts#put_v)
								      (ADVP (ADV forth#forth_adv))
								      (NP-OB1 (ADJ large#large_adj)
									      (CODE <font>)
									      (NS shoots#shoot_n1)
									      (CODE <$$font>)
									      (PUNC ,)
									      (CONJP (CONJ or#or_conj1)
										     (CODE <font>)
										     (NX (NS branches#branch_n))))))))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,16.136))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (BEP are#be_v)
			      (NEG not#not_adv)
			      (ADVP (ADV sufficiently#sufficiently_adv))
			      (VAN furnished#furnish_v)
			      (PP (P with#with_prep)
				  (CODE <font>)
				  (NP (NS Stones#stone_n)
				      (CODE <$$font>)
				      (PP (P of#of_prep)
					  (NP (D these#these_pron) (CODE <font>) (NS White-plums#wheat-plum_n))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (PP (P for#for_prep)
	      (CODE <font>)
	      (NP (NS Apricocks#apricot_n) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Plums#plum_n)))
	  (CODE <$$font>)
	  (VB raise#raise_v1)
	  (CODE <font>)
	  (NP-OB1 (NS Stocks#stock_n1))
	  (CODE <$$font>)
	  (PP (P from#from_prep)
	      (NP (D the#the_adj)
		  (CODE <font>)
		  (NS Stones#stone_n)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (NP (NP (D the#the_adj) (CODE <font>) (N Muscle-plum#mussel-plum_n))
			  (CODE <$$font>)
			  (PUNC ,)
			  (CONJP (NP (D the#the_adj)
				     (CODE <font>)
				     (N Black-pear-plum#SEE_black_adj)
				     (CODE <$$font>)
				     (PUNC ,)
				     (CODE <font>)
				     (CONJP (NX (N Primordian#primordian_n)))))
			  (CODE <$$font>)
			  (PUNC ,)
			  (CONJP (CONJ or#or_conj1)
				 (NP (Q any#any_adj)
				     (OTHER other#other_adj)
				     (CODE <font>)
				     (ADJ Black#black_adj)
				     (CODE <$$font>)
				     (CONJP (CONJ or#or_conj1)
					    (CODE <font>)
					    (NX (N Red-plum#SEE_red_adj)))))
			  (CODE <$$font>)
			  (PP (P of#of_prep)
			      (NP (ADJ free#free_adj) (N growth#growth_n1)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,16.137))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-SBJ-1 (PRO it@#it_pron))
	  (BEP @'s#be_v)
	  (NP-PRD (D a#a_adj)
		  (N way#way_n1)
		  (RRC (NP-MSR (Q much#much_adj))
		       (VAN commended#commend_v)))
	  (PUNC ,)
	  (IP-INF-1 (IP-INF (ADVP-TMP (ADV first#first_adj))
			    (TO to#to_prep)
			    (CODE <font>)
			    (VB inoculate#inoculate_v)
			    (CODE <$$font>)
			    (NP-OB1 (D an#a_adj) (CODE <font>) (N Apricock#apricot_n))
			    (CODE <$$font>)
			    (ADVP-LOC (ADV very#very_adj) (ADV low#low_adv))
			    (PP (P on#on_prep)
				(NP (SUCH such#such_adj) (CODE <font>) (N Plum#plum_n) (NS stocks#stock_n1))))
		    (CODE <$$font>)
		    (PUNC ,)
		    (CONJP (CONJ and#and_conj1)
			   (IP-INF (ADVP-TMP (ADV then#then_adv))
				   (PP (P after#after_adv)
				       (NP (NP-MSR (D a#a_adj) (N$ years#year_n))
					   (N growth#growth_n1)))
				   (PUNC ,)
				   (TO *)
				   (CODE <font>)
				   (VB inoculate#inoculate_v)
				   (CODE <$$font>)
				   (NP-OB1 (NP (D a#a_adj) (CODE <font>) (N Peach#peach_n1))
					   (CODE <$$font>)
					   (CONJP (CONJ or#or_conj1)
						  (NP (D a#a_adj) (CODE <font>) (N Nectarine#nectarine_n1))))
				   (CODE <$$font>)
				   (PP (P on#on_prep)
				       (NP (PRO it#it_pron))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,16.138))

( (IP-MAT (FP only#only_adj)
	  (NP-ADV (D this#this_pron) (N way#way_n1))
	  (NP-SBJ-1 (EX there#there_adv))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (NP-1 (NP-MSR (NUM two#two_adj) (NS years#year_n))
		(N loss#loss_n1)
		(PP (P of#of_prep)
		    (NP (N time#time_n))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,16.139))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI take#take_v)
	  (NP-OB1 (N notice#notice_n))
	  (CP-THT (C that#that_conj)
		  (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (ADJ Red-Roman#SEE_roman_n3) (N Nectarine#nectarine_n1))
			  (CODE <$$font>)
			  (MD will#will_v1)
			  (ADVP (ADV hardly#hardly_adv))
			  (VB take#take_v)
			  (PP (P on#on_prep)
			      (NP (D a#a_adj) (CODE <font>) (N Plum-stock#SEE_plum_n)))
			  (CODE <$$font>)
			  (NP-ADV (Q any#any_adj) (OTHER other#other_adj) (N way#way_n1))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,16.140))

( (IP-MAT (NP-SBJ (D The#the_adj) (NS Suckers#sucker_n))
	  (NP-ADV (N likewise#likewise_adv))
	  (PP (P from#from_prep)
	      (NP (D the#the_adj)
		  (CODE <font>)
		  (NS roots#root_n1)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (CODE <font>)
			  (N White-plum#wheat-plum_n)
			  (CODE <$$font>)
			  (RRC (ADVP-TMP (ADV before#before_adv))
			       (VAN mentioned#mention_v))))))
	  (VBP make#make_v1)
	  (CODE <font>)
	  (NP-OB1 (NS Stocks#stock_n1)
		  (CODE <$$font>)
		  (PP (P for#for_prep)
		      (NP (D the#the_adj)
			  (CODE <font>)
			  (N Fruit#fruit_n)
			  (CODE <$$font>)
			  (RRC (VAN spoken#speak_v)
			       (PP (P of#of_prep)
				   (NP *))
			       (PP (P in#in_prep)
				   (NP (D this#this_pron) (CODE <font>) (N Section#section_n)))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,16.141))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 3#three_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,16.142))

( (IP-MAT (NP-SBJ (NS Stocks#stock_n1)
		  (PP (P for#for_prep)
		      (CODE <font>)
		      (NP (NS Cherry-trees#cherry-tree_n))))
	  (CODE <$$font>)
	  (BEP are#be_v)
	  (VAN raised#raise_v1)
	  (PP (P from#from_prep)
	      (CODE <font>)
	      (NP (NP (NS Cherry-stones#cherry-stone_n)
		      (CODE <$$font>)
		      (PUNC ,)
		      (RRC (VAN (VAN set#set_v1) (CONJ or#or_conj1) (VAN sowed#sow_v1))))
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (NP (ADJ young#young_adj)
			     (ADJ wild#wild_adj)
			     (CODE <font>)
			     (N Cherry#cherry_n)
			     (NS trees#tree_n)
			     (CODE <$$font>)
			     (RRC (VAN got#get_v)
				  (PP (RP out#out_adv)
				      (P of#of_prep)
				      (CODE <P_17>)
				      (CODE <font>)
				      (NP (NS Woods#wood_n1) (CODE <$$font>) (PUNC ,) (CODE <font>) (X &c.#et-cetera_n))))))
		  (CODE <$$font>)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NP (NS Suckers#sucker_n)
			     (CODE <$$font>)
			     (PP (P from#from_prep)
				 (NP (D the#the_adj) (ADJ common#common_adj) (ADJ harsh#harsh_adj) (ADJ red#red_adj) (CODE <font>) (N Cherry#cherry_n)))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,17.143))

( (IP-IMP (NP-SBJ (D The#the_adj) (ADJ wild#wild_adj) (CODE <font>) (NS Stocks#stock_n1))
	  (CODE <$$font>)
	  (VBI make#make_v1)
	  (NP-OB1 (ADJ large#large_adj) (ADJ handsome#handsome_adj) (CODE <font>) (ADJ Standard-@#standard_n) (NS @trees#tree_n))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,17.144))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ *con*)
	  (PP (P though#though_adv)
	      (CODE <font>)
	      (IP-PPL (VAN graffed#graff_v1)
		      (CODE <$$font>)
		      (PP (P with#with_prep)
			  (NP (D a#a_adj) (ADJ good#good_adj) (N kind#kind_n)))))
	  (PUNC ,)
	  (DOP do#do_v)
	  (NEG not#not_adv)
	  (VB bear#bear_v1)
	  (CODE <font>)
	  (NP-OB1 (N Fruit#fruit_n))
	  (CODE <$$font>)
	  (ADVP (ADVR so#so_adv)
		(ADV plentifully#plentifully_adv)
		(PP *ICH*-1))
	  (PP (P in#in_prep)
	      (NP (Q many#many_adj) (NS Countries#country_n)))
	  (PUNC ,)
	  (PP-1 (P as#as_adv)
		(CP-ADV (WADVP-2 0)
			(C 0)
			(IP-SUB (ADVP *T*-2)
				(NP-SBJ (D the#the_adj)
					(NS Suckers#sucker_n)
					(PP (P of#of_prep)
					    (NP (D the#the_adj) (CODE <font>) (ADJ red#red_adj)))
					(CODE <$$font>)
					(RRC (BAG being#be_v) (CODE <font>) (VAN graffed#graff_v1)))
				(CODE <$$font>)
				(DOP do#do_v)
				(VB *))))
	  (PUNC ,)
	  (CP-CAR (WNP-3 (WD which#which_adj) (ADJ last#last_adv))
		  (C 0)
		  (IP-SUB (NP-SBJ *T*-3)
			  (ALSO also#also_adv)
			  (BEP are#be_v)
			  (ADJP-PRD (ADJS fittest#fit_adj)
				    (CP-TMC (WNP-4 0)
					    (IP-INF (TO to#to_prep)
						    (CODE <font>)
						    (VB graff#graff_v1)
						    (NP-OB1 (NS Cherries#cherry_n))
						    (CODE <$$font>)
						    (PP (P on#on_prep)
							(NP *T*-4))
						    (PP (P for#for_prep)
							(CODE <font>)
							(NP (N Wall#wall_n1) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NS Dwarf-trees#cNA)))
						    (CODE <$$font>)
						    (IP-PPL (BAG being#be_v)
							    (PP (P of#of_prep)
								(NP (ADJP (Q much#much_adj) (ADJR smaller#small_adj))
								    (N growth#growth_n1)
								    (PP (P than#than_conj)
									(CP-CMP (WADJP-5 0)
										(C 0)
										(IP-SUB (ADJP-PRD *T*-5)
											(NP-SBJ (D those#those_pron)
												(PP (P of#of_prep)
												    (NP (D the#the_adj) (ADJ wild#wild_adj) (N kind#kind_n))))
											(BEP are#be_v))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,17.145))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 4#four_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,17.146))

( (IP-MAT (NP-SBJ-1 (PRO It@#it_pron))
	  (BEP @'s#be_v)
	  (ADJP-PRD (ADJ plain#plain_adj2))
	  (CP-THT-1 (C 0)
		    (IP-SUB (NP-SBJ (Q all#all_adj)
				    (NS Stocks#stock_n1)
				    (CONJP (CONJ and#and_conj1)
					   (NX (NS Scions#scion_n)))
				    (PUNC <paren>)
				    (CP-REL (WNP-2 0)
					    (C that#that_conj)
					    (IP-SUB (NP-SBJ *T*-2)
						    (MD will#will_v1)
						    (VB prosper#prosper_v)
						    (PP (P when#when_adv)
							(CP-ADV (C 0)
								(IP-SUB (NP-SBJ (PRO they#they_pron))
									(BEP are#be_v)
									(VAN joyned#join_v1)
									(ADVP (ADV together#together_adv))))))))
			    (PUNC <$$paren>)
			    (BEP are#be_v)
			    (CODE <font>)
			    (ADJP-PRD (ADJP (ADJ congenerous#congenerous_adj))
				      (CODE <$$font>)
				      (PUNC ,)
				      (CONJP (CONJ and#and_conj1)
					     (ADJP (ADJ related#related_adj)
						   (PP (P in#in_prep)
						       (NP (Q some#some_pron)
							   (N degree#degree_n)
							   (PP (P of#of_prep)
							       (NP (N affinity#affinity_n))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,17.147))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (VBN tryed#try_v)
	  (NP-OB1 (D a#a_adj) (CODE <font>) (N Nectarine#nectarine_n1))
	  (CODE <$$font>)
	  (PP (P on#on_prep)
	      (NP (D a#a_adj) (CODE <font>) (N Horse-Plum#horse-plum_n)))
	  (CODE <$$font>))
  (ID LANGF-1696-E3-P1,17.148))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO it#it_pron))
	  (VBD failed#fail_v)
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,17.149))

( (IP-MAT (PP (P on#on_prep)
	      (NP (D the#the_adj)
		  (ADJP (ADV very#very_adj) (ADJ same#same_adj))
		  (N Stock#stock_n1)))
	  (NP-SBJ (D an#a_adj) (CODE <font>) (N Apricock#apricot_n))
	  (CODE <$$font>)
	  (VBD grew#grow_v)
	  (ADVP (ADV very#very_adj) (ADV fast#fast_adv))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,17.150))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (ALSO also#also_adv)
	  (CODE <font>)
	  (VBN inoculated#inoculate_v)
	  (CODE <$$font>)
	  (NP-OB1 (D a#a_adj) (CODE <font>) (N Apricock#apricot_n))
	  (CODE <$$font>)
	  (PP (P on#on_prep)
	      (NP (D a#a_adj)
		  (ADJ course#coarse_adj)
		  (CODE <font>)
		  (N Black-plum#SEE_black_adj)
		  (CODE <$$font>)
		  (PUNC <paren>)
		  (RRC (VAN known#know_v)
		       (PP (P in#in_prep)
			   (NP (Q some#some_pron) (NS Countries#country_n)))
		       (PP (P by#by_prep)
			   (NP (D the#the_adj)
			       (N name#name_n)
			       (PP (P of#of_prep)
				   (NP (D the#the_adj) (CODE <font>) (N Lammas-plum#NA))))))))
	  (CODE <$$font>))
  (ID LANGF-1696-E3-P1,17.151))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO it#it_pron))
	  (VBD took#take_v)
	  (ADVP (ADV well#well_adv))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,17.152))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (VBD bore#bear_v1)
	  (NP-OB1 (D a#a_adj) (ADJ good#good_adj) (N Fruit#fruit_n))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,17.153))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (CODE <font>)
	  (VBN inoculated#inoculate_v)
	  (NP-OB1 (NS Pears#pear_n))
	  (CODE <$$font>)
	  (PP (P upon#upon_prep)
	      (NP (D a#a_adj)
		  (CODE <font>)
		  (N Hawthorn#hawthorn_n)
		  (CODE <$$font>)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NX (N White-thorn#whitethorn_n)))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,17.154))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO it#it_pron))
	  (HVP hath#have_v)
	  (VBN taken#take_v)
	  (ADVP (ADV very#very_adj) (ADV well#well_adv))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,17.155))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (D the#the_adj) (N growth#growth_n1))
	  (BED was#be_v)
	  (ADJP-PRD (ADVR so#so_adv) (ADJ small#small_adj))
	  (PUNC ,)
	  (IP-MAT-PRN (NP-SBJ (PRO it@#it_pron))
		      (BEP @'s#be_v)
		      (NEG not#not_adv)
		      (ADJP-PRD (ADJ worth#worth_adj)
				(NP (D the#the_adj) (N practice#practice_n))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,17.156))

( (IP-MAT (NP-SBJ (D A#a_adj)
		  (CODE <font>)
		  (N Pear#pear_n)
		  (RRC (VAN graffed#graff_v1)
		       (CODE <$$font>)
		       (PP (P on#on_prep)
			   (NP (D a#a_adj) (CODE <font>) (N Wicky-berry-tree#cNA)))))
	  (CODE <$$font>)
	  (VBD grew#grow_v)
	  (ADVP (ADV very#very_adj) (ADV well#well_adv))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,17.157))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P on#on_prep)
	      (NP (D the#the_adj)
		  (CODE <font>)
		  (N Hazel#hazel_n)
		  (CODE <$$font>)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NX (N Nut-tree#nut-tree_n)))))
	  (CODE <$$font>)
	  (NP-SBJ (PRO it#it_pron))
	  (VBD fail'd#fail_v)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,17.158))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (VBN tryed#try_v)
	  (NP-OB1 (D the#the_adj)
		  (CODE <font>)
		  (IP-PPL (VAG inoculating#inoculate_v)
			  (NP-OB1 (NS buds#bud_n1)
				  (CODE <$$font>)
				  (PP (P of#of_prep)
				      (CODE <font>)
				      (NP (NS Walnut-trees#walnut-tree_n))))
			  (CODE <$$font>)
			  (PP (P upon#upon_prep)
			      (CODE <font>)
			      (NP (NS Ash-trees#SEE_ash_n1)))))
	  (CODE <$$font>)
	  (IP-INF-PRP (TO to#to_prep)
		      (VB hasten#hasten_v)
		      (NP-OB1 (D the#the_adj)
			      (IP-PPL (VAG raising#raise_v1)
				      (NP-OB1 (NS Trees#tree_n)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,17.159))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (NEG not#not_adv)
		  (ONE one#one_adj)
		  (PP (P of#of_prep)
		      (NP (Q many#many_adj)))
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-OB1 *T*-1)
				  (NP-SBJ (PRO I#i_pron))
				  (VBD tryed#try_v))))
	  (PUNC ,)
	  (VBD came#come_v)
	  (PP (P to#to_prep)
	      (NP (Q any#any_adj) (N thing#thing_n1)))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,17.160))

( (CODE <P_18>))

( (IP-MAT (NP-SBJ (NPR Mr.#NA) (CODE <font>) (NPR Evelyn#NA))
	  (CODE <$$font>)
	  (VBP reports#report_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P from#from_prep)
	      (NP (ONE one#one_adj)
		  (PUNC ,)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (VBD said#say_v1)
				  (PUNC ,)
				  (CP-THT (C 0)
					  (IP-SUB (NP-SBJ (PRO he#he_pron))
						  (HVD had#have_v)
						  (NP-OB1=2 (PRO it#it_pron))
						  (IP-INF (TO to#to_prep)
							  (VB shew#show_v)
							  (PUNC ,)
							  (CP-THT-2 (C that#that_conj)
								    (IP-SUB (IP-SUB-3 (NP-SBJ (D a#a_adj)
											      (CODE <font>)
											      (ADJ white#white_adj)
											      (N Apple#apple_n)
											      (RRC (VAN graffed#graff_v1)
												   (CODE <$$font>)
												   (PP (P upon#upon_prep)
												       (NP (D an#a_adj) (CODE <font>) (N Elm#elm_n)))))
										      (CODE <$$font>)
										      (DOD did#do_v)
										      (VB grow#grow_v))
									    (CONJP (CONJ and#and_conj1)
										   (IP-SUB=3 (VB bear#bear_v1)
											     (NP-OB1 (D a#a_adj) (CODE <font>) (ADJ read#red_adj) (N Apple#apple_n)))))))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,18.162))

( (IP-MAT (CODE <font>)
	  (IP-MAT-1 (NP-SBJ (NS Cherries#cherry_n)
			    (RRC (VAN graffed#graff_v1)
				 (CODE <$$font>)
				 (PP (P on#on_prep)
				     (CODE <font>)
				     (NP (NS Plum-trees#plum-tree_n)))))
		    (CODE <$$font>)
		    (MD will#will_v1)
		    (NEG not#not_adv)
		    (VB prosper#prosper_v)
		    (NP-MSR (ADJ long#long_adj1)))
	  (PUNC ,)
	  (CONJP (CONJ nor#nor_conj1)
		 (CODE <font>)
		 (IP-MAT=1 (NP-SBJ (NS Plums#plum_n))
			   (CODE <$$font>)
			   (PP (P on#on_prep)
			       (CODE <font>)
			       (NP (NS Cherries#cherry_n)))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,18.163))

( (IP-MAT (IP-MAT-1 (CONJ neither#neither_adv)
		    (DOP do#do_v)
		    (CODE <font>)
		    (NP-SBJ (NS Apples#apple_n))
		    (CODE <$$font>)
		    (PP (P on#on_prep)
			(CODE <font>)
			(NP (NS Pears#pear_n)))
		    (CODE <$$font>)
		    (VB *))
	  (PUNC ,)
	  (CONJP (CONJ nor#nor_conj1)
		 (CODE <font>)
		 (IP-MAT=1 (NP-SBJ (NS Pears#pear_n))
			   (CODE <$$font>)
			   (PP (P upon#upon_prep)
			       (CODE <font>)
			       (NP (NS Apples#apple_n)))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,18.164))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 5#five_v) (PUNC .))
  (ID LANGF-1696-E3-P1,18.165))

( (IP-MAT (NP-SBJ (PRO It#it_pron))
	  (BEP is#be_v)
	  (NP-PRD (D an#a_adj)
		  (N Assertion#assertion_n)
		  (PP (P of#of_prep)
		      (NP (PRO$ my#my_adj)
			  (N Lord#lord_n)
			  (CODE <font>)
			  (NP-PRN (NPR Bacon#NA))))
		  (CODE <$$font>)
		  (PP (P in#in_prep)
		      (NP (PRO$ his#his_adj)
			  (CODE <font>)
			  (ADJ Natural#natural_adj)
			  (N History#history_n)
			  (CODE <$$font>)
			  (PUNC ,)
			  (CODE <font>)
			  (REF (LATIN (FW cent.#NA) (CODE <$$font>) (NUM 5.#five_v) (CODE <font>) (FW Exper.#NA) (CODE <$$font>) (NUM 452.#NA)))))
		  (CODE <font>)
		  (CP-THT (C That#that_conj)
			  (IP-SUB (NP-SBJ (N Graffing#graffing_n))
				  (DOP doth#do_v)
				  (VB meliorate#meliorate_v)
				  (NP-OB1 (N Fruit#fruit_n)))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,18.166))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (VBN heard#hear_v)
	  (CP-THT (C that#that_conj)
		  (IP-SUB (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (ADJ Golden-@#golden_adj) (N @renating#renneting_n1))
				  (CODE <$$font>)
				  (BED was#be_v)
				  (NP-PRD (D the#the_adj)
					  (CODE <font>)
					  (N Fruit#fruit_n)
					  (CODE <$$font>)
					  (PP (P of#of_prep)
					      (NP (D a#a_adj)
						  (N Scion#scion_n)
						  (PP (P of#of_prep)
						      (NP (D an#a_adj)
							  (CODE <font>)
							  (N Apple-tree#apple-tree_n)
							  (RRC (VAN graffed#graff_v1)
							       (CODE <$$font>)
							       (PP (P by#by_prep)
								   (NP (PRO$ his#his_adj) (N direction#direction_n)))
							       (PP (P on#on_prep)
								   (NP (D an#a_adj) (N Apple-tree#apple-tree_n))))))))))
			  (PUNC ,)
			  (CONJP (CONJ and#and_conj1)
				 (IP-SUB (NP-SBJ *con*)
					 (ADVP-TMP (ADV then#then_adv))
					 (HVD had#have_v)
					 (NP-OB1 (PRO$ its#its_adj) (N name#name_n))
					 (PP (P as#as_adv)
					     (IP-PPL (BAG being#be_v)
						     (PP (P in#in_prep)
							 (NP (D a#a_adj) (N manner#manner_n)))
						     (CODE <font>)
						     (VAN born#bear_v1)
						     (ADVP (ADV again#again_adv))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,18.167))

( (IP-MAT (CONJ But#but_prep)
	  (NP-SBJ (ADJ mere#mere_adj2) (CODE <font>) (N Graffing#graffing_n))
	  (CODE <$$font>)
	  (DOP doth#do_v)
	  (NEG not#not_adv)
	  (VB better#better_v1)
	  (NP-OB1 (D the#the_adj) (CODE <font>) (N Fruit#fruit_n))
	  (CODE <$$font>)
	  (PP (P at#at_prep)
	      (NP (Q all#all_adj)))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (PP (P if#if_conj)
				  (CP-ADV (C 0)
					  (IP-SUB (NP-SBJ (PRO you#you_pron))
						  (CODE <font>)
						  (VBP graff#graff_v1)
						  (CODE <$$font>)
						  (NP-OB1 (D a#a_adj) (CODE <font>) (N Scion#scion_n))
						  (CODE <$$font>)
						  (PP (P upon#upon_prep)
						      (NP (D the#the_adj)
							  (ADJ same#same_adj)
							  (N Tree#tree_n)
							  (CP-REL (WNP-1 0)
								  (C 0)
								  (IP-SUB (NP-SBJ (PRO you#you_pron))
									  (VBD took#take_v)
									  (NP-OB1 (PRO it#it_pron))
									  (PP (P from#from_prep)
									      (NP *T*-1)))))))))
			      (PUNC ,)
			      (NP-SBJ (D the#the_adj) (CODE <font>) (N Fruit#fruit_n))
			      (CODE <$$font>)
			      (MD will#will_v1)
			      (BE be#be_v)
			      (NP-PRD (D the#the_adj) (ADJ same#same_adj))
			      (PUNC ,)
			      (PP (P without#without_adv)
				  (NP (Q any#any_adj)
				      (NP-COM (D the#the_adj)
					      (QS least#least_adj)
					      (N alternation#alternation_n)
					      (PP (P from#from_prep)
						  (NP (CP-FRL (WNP-2 (WPRO what#what_pron))
							      (C 0)
							      (IP-SUB (NP-OB1 *T*-2)
								      (NP-SBJ (D the#the_adj) (N Tree#tree_n))
								      (VBD bore#bear_v1)
								      (PP (P before#before_adv)
									  (CP-ADV (C 0)
										  (IP-SUB (NP-SBJ (PRO it#it_pron))
											  (BED was#be_v)
											  (ADVP (ADV so#so_adv))
											  (VAN graffed#graff_v1))))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,18.168))

( (IP-MAT (CONJ But#but_prep)
	  (NP-SBJ (PRO it#it_pron))
	  (BEP is#be_v)
	  (NP-PRD (D a#a_adj)
		  (ADJR harder#hard_adj)
		  (N question#question_n)
		  (CP-TMC (WNP-1 0)
			  (IP-INF (NP-OB1 *T*-1)
				  (TO to#to_prep)
				  (VB resolve#resolve_v)))
		  (PUNC ,)
		  (CP-QUE-SUB (PP (P if#if_conj)
				  (CP-ADV (C 0)
					  (IP-SUB (NP-SBJ (PRO you#you_pron))
						  (VBP graff#graff_v1)
						  (NP-OB1 (D a#a_adj) (N Scion#scion_n))
						  (PP (P on#on_prep)
						      (NP (D a#a_adj)
							  (N Stock#stock_n1)
							  (RRC (VAG differing#differ_v)
							       (PP (P from#from_prep)
								   (NP (PRO it#it_pron)))
							       (PP (P in#in_prep)
								   (NP (N kind#kind_n)))))))))
			      (PUNC ,)
			      (WQ whether#whether_pron)
			      (C 0)
			      (IP-SUB (NP-SBJ (D the#the_adj)
					      (N Fruit#fruit_n)
					      (PP (P of#of_prep)
						  (NP (D this#this_pron) (CODE <font>) (ADJ new#new_adj) (N Tree#tree_n))))
				      (CODE <$$font>)
				      (MD will#will_v1)
				      (BE be#be_v)
				      (ADJP-PRD (NP-MSR (Q any#any_adj) (N thing#thing_n1))
						(ADJR better#better_adj)
						(PP (P than#than_conj)
						    (NP (D the#the_adj)
							(N Fruit#fruit_n)
							(PP (P of#of_prep)
							    (NP (D the#the_adj)
								(N Tree#tree_n)
								(CP-REL (WPP-2 (P from#from_prep)
									       (WADVP (WADV whence#whence_adv)))
									(C 0)
									(IP-SUB (PP *T*-2)
										(NP-SBJ (D the#the_adj) (N Scion#scion_n))
										(BED was#be_v)
										(VAN taken#take_v)))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,18.169))

( (CODE <P_19>))

( (IP-MAT (NP-SBJ (D This#this_pron))
	  (BEP is#be_v)
	  (PP (P by#by_prep)
	      (NP (Q many#many_adj)))
	  (VAN held#hold_v)
	  (PP (P in#in_prep)
	      (NP (D the#the_adj) (CODE <font>) (ADJ negative#negative_adj)))
	  (CODE <$$font>)
	  (PUNC ;)
	  (PP (P because#because_adv)
	      (PUNC <paren>)
	      (IP-MAT-PRN (VBP say#say_v1)
			  (NP-SBJ (PRO they#they_pron)))
	      (PUNC <$$paren>)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N Stock#stock_n1))
			      (CODE <$$font>)
			      (FP only#only_adj)
			      (VBP conveys#convey_v1)
			      (NP-OB1 (N food#food_n) (CONJ and#and_conj1) (N nourishment#nourishment_n))
			      (PP (P to#to_prep)
				  (NP (D the#the_adj) (N Scion#scion_n))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,19.171))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP-TMP (ADV then#then_adv))
	  (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (N Scion#scion_n))
			      (HVP hath#have_v)
			      (VBN received#receive_v)
			      (NP-OB1 (PRO it#it_pron)))))
	  (PUNC ,)
	  (NP-SBJ (PRO it#it_pron))
	  (VBP converts#convert_v)
	  (NP-OB1 (PRO it#it_pron))
	  (ADVP (ADV perfectly#perfectly_adv))
	  (PP (P into#into_prep)
	      (NP (PRO$ its#its_adj) (ADJ own#own_adj) (N Nature#nature_n)))
	  (PUNC ;)
	  (PP (P so#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (NP-SBJ (D the#the_adj)
				      (N Fruit#fruit_n)
				      (CP-REL (WNP-1 (WPRO which#which_adj))
					      (C 0)
					      (IP-SUB (NP-OB1 *T*-1)
						      (NP-SBJ (D this#this_pron) (N Scion#scion_n))
						      (MD shall#shall_v)
						      (VB bear#bear_v1))))
			      (PUNC ,)
			      (MD must#must_v1)
			      (BE be#be_v)
			      (NP-PRD (NP (D the#the_adj)
					  (ADJP (ADV very#very_adj)
						(ADJ same#same_adj)
						(CP-REL (WNP-2 0)
							(C that#that_conj)
							(IP-SUB (NP-OB1 *T*-2)
								(NP-SBJ (D the#the_adj)
									(N Tree#tree_n)
									(CP-REL *ICH*-3))
								(VBD bore#bear_v1)
								(CP-REL-3 (WPP-4 (P from#from_prep)
										 (WNP (WPRO which#which_adj)))
									  (C 0)
									  (IP-SUB (PP *T*-4)
										  (NP-SBJ (D the#the_adj) (N Scion#scion_n))
										  (BED was#be_v)
										  (VAN taken#take_v)))))))
				      (PUNC ,)
				      (CONJP (CONJ and#and_conj1)
					     (ADJP (CONJ neither#neither_adv) (ADJR better#better_adj) (CONJ nor#nor_conj1) (ADJR worse#worse_adj)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,19.172))

( (IP-MAT-1 (CONJ But#but_prep)
	    (CP-THT-SBJ (C that#that_conj)
			(IP-SUB (NP-SBJ (D the#the_adj) (N Scion#scion_n))
				(DOP doth#do_v)
				(ADVP (ADV thus#thus_adv) (ADV perfectly#perfectly_adv))
				(VB transmute#transmute_v)
				(NP-OB1 (D the#the_adj)
					(CODE <font>)
					(N juice#juice_n)
					(CODE <$$font>)
					(CP-REL (WNP-2 0)
						(C 0)
						(IP-SUB (NP-OB1 *T*-2)
							(NP-SBJ (PRO it#it_pron))
							(VBP receives#receive_v)
							(PP (P from#from_prep)
							    (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1)))
							(CODE <$$font>)
							(PP (P into#into_prep)
							    (NP (PRO$ its#its_adj) (ADJ own#own_adj) (N kind#kind_n))))))))
	    (BEP is#be_v)
	    (NEG not#not_adv)
	    (VAN proved#prove_v)
	    (PUNC ,)
	    (IP-MAT-PRN=1 (CONJ neither#neither_adv)
			  (PUNC <paren>)
			  (PP-PRN (P as#as_adv)
				  (CP-ADV (WNP-3 0)
					  (C 0)
					  (IP-SUB (NP-OB1 *T*-3)
						  (NP-SBJ (PRO I#i_pron))
						  (ADVP (ADV verily#verily_adv))
						  (VBP believe#believe_v))))
			  (PUNC <$$paren>)
			  (ADVP-TMP (ADV ever#ever_adv))
			  (MD will#will_v1)
			  (BE *))
	    (PUNC ;))
  (ID LANGF-1696-E3-P1,19.173))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (MD may#may_v1)
	  (PP (ADV+P therefore#therefore_adv))
	  (VB prove#prove_v)
	  (PP (P for#for_prep)
	      (NP (Q all#all_adj)
		  (CP-REL (WNP-2 0)
			  (C that@#that_conj)
			  (IP-SUB (NP-SBJ *T*-2)
				  (BEP @'s#be_v)
				  (VAN said#say_v1)
				  (PP (P to#to_prep)
				      (NP (D the#the_adj) (N contrary#contrary_adj)))))))
	  (PUNC ,)
	  (CP-THT-1 (C that#that_conj)
		    (IP-SUB (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N Fruit#fruit_n))
				    (CODE <$$font>)
				    (MD may#may_v1)
				    (VB participate#participate_v)
				    (NP-OB1 (Q+N something#something_n)
					    (PP (P of#of_prep)
						(NP (D the#the_adj)
						    (N Nature#nature_n)
						    (PP (P of#of_prep)
							(NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1)))))))
			    (CODE <$$font>)
			    (PUNC ,)
			    (CONJP (CONJ and#and_conj1)
				   (IP-SUB (NP-SBJ-3 *con*)
					   (MD may#may_v1)
					   (NP-MSR (ADJP (ADVR so#so_adv) (ADJ far#far_adj)))
					   (BE be#be_v)
					   (VAN made#make_v1)
					   (PP (P by#by_prep)
					       (NP (PRO it#it_pron)))
					   (IP-SMC (NP-SBJ *-3)
						   (ADJP-PRD (CONJ either#either_pron) (ADJR better#better_adj) (CONJ or#or_conj1) (ADJR worse#worse_adj)))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,19.174))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (SUCH such#such_adj)
		  (D an#a_adj)
		  (N union#union_n2)
		  (PP (P as#as_adv)
		      (NP (D that#that_pron1)
			  (PP (P of#of_prep)
			      (NP (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))
				  (CODE <$$font>)
				  (CONJP (CONJ and#and_conj1)
					 (NP (D the#the_adj) (N Graff#graff_n1)))))
			  (PP (P in#in_prep)
			      (NP (ADJ natural#natural_adj) (NS bodies#body_n))))))
	  (BEP is#be_v)
	  (ADJP-PRD (ADV hardly#hardly_adv) (ADJ conceivable#conceivable_adj))
	  (PP (P without#without_adv)
	      (NP (Q some#some_pron)
		  (N commixture#commixture_n)
		  (PP (P of#of_prep)
		      (NP (PRO$ their#their_adj) (NS Natures#nature_n)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,19.175))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ-1 (EX there#there_adv))
	  (BEP are#be_v)
	  (NP-1 (Q some#some_pron)
		(NS reasons#reason_n1)
		(PP (P from#from_prep)
		    (NP (N Experience#experience_n)))
		(CP-REL (WNP-2 0)
			(C that#that_conj)
			(IP-SUB (NP-SBJ *T*-2)
				(VBP make#make_v1)
				(IP-SMC (NP-SBJ (D this#this_pron))
					(ADJP-PRD (ADJ probable#probable_adj)))))
		(PUNC ;)
		(PP (P as#as_adv)
		    (PUNC ,)
		    (LS 1.#one_adj)
		    (CP-THT (C 0)
			    (IP-SUB (NP-SBJ (D The#the_adj)
					    (NS Seeds#seed_n)
					    (PP (P of#of_prep)
						(NP (D a#a_adj) (ADJ graffed#graffed_adj) (N Tree#tree_n))))
				    (VBP take#take_v)
				    (NP-MSR (Q much#much_adj))
				    (PP (P after#after_adv)
					(NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1)))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,19.176))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ hard#hard_adj))
	  (IP-INF-1 (TO to#to_prep)
		    (VB conceive#conceive_v)
		    (CP-THT (C 0)
			    (IP-SUB (IP-SUB-2 (NP-SBJ (D the#the_adj) (CODE <font>) (N Kernel#kernel_n1))
					      (CODE <$$font>)
					      (MD should#shall_v)
					      (VB participate#participate_v)
					      (NP-MSR (QP (ADVR so#so_adv) (Q much#much_adj)))
					      (PP (P of#of_prep)
						  (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))
				    (CODE <$$font>)
				    (PUNC ,)
				    (CONJP (CONJ and#and_conj1)
					   (IP-SUB=2 (NP-SBJ (D the#the_adj) (CODE <font>) (N Fruit#fruit_n))
						     (CODE <$$font>)
						     (BE be#be_v)
						     (NP-MSR (Q+N nothing#nothing_pron))
						     (VAN influenced#influence_v)
						     (PP (P by#by_prep)
							 (NP (PRO it#it_pron))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,19.177))

( (CODE <P_20>))

( (IP-MAT (LS 2#two_adj)
	  (PUNC .)
	  (NP-SBJ (D Those#those_pron)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (VBP produce#produce_v)
				  (NP-OB1 (D the#the_adj) (ADJS best#best_adj) (N Fruit#fruit_n))
				  (PP (P by#by_prep)
				      (NP (PRO$ their#their_adj)
					  (CODE <font>)
					  (NS Stones#stone_n)
					  (CODE <$$font>)
					  (CONJP (CONJ or#or_conj1)
						 (CODE <font>)
						 (NX (NS Seeds#seed_n))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (ADVP (ADV yet#yet_adv))
	  (VBP vary#vary_v)
	  (PP (P from#from_prep)
	      (NP (D the#the_adj)
		  (N Fruit#fruit_n)
		  (CP-REL (WNP-2 0)
			  (C 0)
			  (IP-SUB (NP-SBJ (D the#the_adj)
					  (CODE <font>)
					  (N seed#seed_n)
					  (CODE <$$font>)
					  (CONJP (CONJ or#or_conj1)
						 (CODE <font>)
						 (NX (N stone#stone_n)))
					  (CODE <$$font>)
					  (CP-REL *ICH*-3))
				  (BED was#be_v)
				  (VAN taken#take_v)
				  (PP (RP out#out_adv)
				      (P of#of_prep)
				      (NP *T*-2))
				  (CP-REL-3 (WNP-4 (WPRO which#which_adj))
					    (C 0)
					    (IP-SUB (NP-SBJ *T*-4)
						    (PP (P in#in_prep)
							(NP (Q al#all_adj) (N likelyhood#likelihood_n)))
						    (VBP proceeds#proceed_v)
						    (PP (P from#from_prep)
							(NP (D the#the_adj)
							    (N mixture#mixture_n)
							    (PP (P of#of_prep)
								(NP (D the#the_adj)
								    (CODE <font>)
								    (N quality#quality_n)
								    (CODE <$$font>)
								    (PP (P of#of_prep)
									(NP (D the#the_adj)
									    (CODE <font>)
									    (N stock#stock_n1)
									    (CODE <$$font>)
									    (CONJP (CONJ and#and_conj1)
										   (CODE <font>)
										   (NX (N Scion#scion_n)))))))
							    (CODE <$$font>)
							    (PP (P in#in_prep)
								(NP (D that#that_pron1)
								    (N Tree#tree_n)
								    (CP-REL (WNP-5 0)
									    (C 0)
									    (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N stone#stone_n))
										    (CODE <$$font>)
										    (VBD came#come_v)
										    (PP (P from#from_prep)
											(NP *T*-5))))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,20.179))

( (IP-MAT (LS 3#three_adj)
	  (PUNC .)
	  (NP-SBJ-1 (PRO It@#it_pron))
	  (BEP @'s#be_v)
	  (ADJP-PRD (ADJ manifest#manifest_adj))
	  (CP-THT-1 (C that#that_conj)
		    (IP-SUB (PP (P amongst#amongst_prep)
				(CODE <font>)
				(NP (NS Trees#tree_n)
				    (CODE <$$font>)
				    (PP (P of#of_prep)
					(NP (ONE one#one_adj) (N kind#kind_n)))
				    (PUNC ,)
				    (PP (P in#in_prep)
					(NP (D the#the_adj) (ADJ same#same_adj) (CODE <font>) (N Orchard#orchard_n)))))
			    (CODE <$$font>)
			    (PUNC ,)
			    (NP-SBJ (PRO you#you_pron))
			    (MD shall#shall_v)
			    (HV have#have_v)
			    (IP-INF (NP-SBJ (Q some#some_pron)
					    (ONE one#one_adj)
					    (PP (P of#of_prep)
						(NP (PRO them#them_pron))))
				    (VB bear#bear_v1)
				    (NP-OB1 (ADJR better#better_adj)
					    (N Fruit#fruit_n)
					    (PP (P than#than_conj)
						(NP (Q any#any_adj)
						    (PP (P of#of_prep)
							(NP (D the#the_adj) (N rest#rest_n3))))))
				    (NP-TMP (Q+NS sometimes#sometimes_adv)))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,20.180))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO I#i_pron))
	  (VBP know#know_v)
	  (NEG not#not_adv)
	  (CP-QUE-SUB (WNP-1 (WPRO what#what_pron))
		      (C 0)
		      (IP-INF (TO to#to_prep)
			      (VB impute#impute_v)
			      (NP-OB1 (D this#this_pron) (N excellency#excellency_n))
			      (PP (P to#to_prep)
				  (NP *T*-1))
			      (ADVP (ADVP (QR more#more_adj)
					  (ADV probably#probably_adv)
					  (PP *ICH*-3))
				    (ADV chiefly#chiefly_adv))
			      (PP (P though#though_adv)
				  (CP-ADV (C 0)
					  (IP-SUB (NP-SBJ-2 (EX there#there_adv))
						  (MD may#may_v1)
						  (BE be#be_v)
						  (NP-2 (Q some#some_pron)
							(OTHER other#other_adj)
							(NS causes#cause_n)
							(PP (P for#for_prep)
							    (NP (PRO it#it_pron)))))))
			      (PUNC ,)
			      (PP-3 (P than#than_conj)
				    (CP-ADV (C that#that_conj)
					    (IP-SUB (NP-SBJ (D the#the_adj)
							    (CODE <font>)
							    (NS stocks#stock_n1)
							    (CODE <$$font>)
							    (CP-REL (WNP-4 0)
								    (C 0)
								    (IP-SUB (NP-SBJ (PRO they#they_pron))
									    (BED were#be_v)
									    (VAN graffed#graff_v1)
									    (PP (P on#on_prep)
										(NP *T*-4)))))
						    (MD might#may_v1)
						    (BE be#be_v)
						    (CODE <font>)
						    (NP-PRD (NS Crab-trees#crab-tree_n)
							    (CODE <$$font>)
							    (CP-REL (WNP-5 0)
								    (C that#that_conj)
								    (IP-SUB (NP-SBJ *T*-5)
									    (VBD bore#bear_v1)
									    (CODE <font>)
									    (NP-OB1 (NS Crabs#crab_n2)
										    (CODE <$$font>)
										    (PP (P of#of_prep)
											(NP (ADJ several#several_adj) (NS kinds#kind_n))))
									    (PUNC ,)
									    (IP-ABS (IP-ABS (NP-SBJ (Q some#some_pron))
											    (ADJP-PRD (ADJR better#better_adj)))
										    (PUNC ,)
										    (CONJP (IP-ABS (NP-SBJ (Q some#some_pron))
												   (ADJP-PRD (ADJR worse#worse_adj)))))))))))))
	  (PUNC .)
	  (PP (P So#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (IP-INF-PRP (TO to#to_prep)
					  (VB conclude#conclude_v)
					  (NP-OB1 (D this#this_pron) (N discourse#discourse_n)))
			      (PUNC ,)
			      (NP-SBJ (PRO it#it_pron))
			      (MD can@#can_v1)
			      (NEG @not#not_adv)
			      (BE be#be_v)
			      (ADJP-PRD (ADJ amiss#amiss_adv)
					(IP-INF (TO to#to_prep)
						(BE be#be_v)
						(ADJP-PRD (NP-MSR (ADJP (ADVR so#so_adv) (ADJ far#far_adj)))
							  (ADJ curious#curious_adj)
							  (PP (P about#about_adv)
							      (NP (D the#the_adj)
								  (CODE <font>)
								  (NS stocks#stock_n1)
								  (CODE <$$font>)
								  (CP-REL (WNP-6 0)
									  (C 0)
									  (IP-SUB (NP-OB1 *T*-6)
										  (NP-SBJ (PRO you#you_pron))
										  (CODE <font>)
										  (VBP graff#graff_v1)))))
							  (CODE <$$font>)
							  (PUNC ,)
							  (PP (P as#as_adv)
							      (IP-INF (ADVP (ADVR rather#rather_adv)
									    (PP *ICH*-10))
								      (TO to#to_prep)
								      (VB choose#choose_v)
								      (NP-OB1 (SUCH such#such_adj)
									      (CODE <font>)
									      (NS seeds#seed_n)
									      (CODE <$$font>)
									      (CONJP (CONJ and#and_conj1)
										     (CODE <font>)
										     (NX (NS stones#stone_n)))
									      (CODE <$$font>)
									      (CP-EOP (WNP-7 0)
										      (IP-INF (TO to#to_prep)
											      (VB raise#raise_v1)
											      (NP-OB1 (PRO them#them_pron))
											      (PP (P from#from_prep)
												  (NP *T*-7))))
									      (PP (P as#as_adv)
										  (CP-CMP (WNP-8 0)
											  (C 0)
											  (IP-SUB (NP-SBJ *T*-8)
												  (VBP come#come_v)
												  (PP (P from#from_prep)
												      (CODE <font>)
												      (NP (NS Trees#tree_n)
													  (CODE <$$font>)
													  (CP-REL (WNP-9 0)
														  (C that#that_conj)
														  (IP-SUB (NP-SBJ *T*-9)
															  (VBP bear#bear_v1)
															  (NP-OB1 (D the#the_adj) (ADJS best#best_adj) (CODE <font>) (N fruit#fruit_n))
															  (CODE <$$font>)
															  (PP (P in#in_prep)
															      (NP (PRO$ their#their_adj) (N kind#kind_n)))))))))))
								      (PUNC <paren>)
								      (PP-PRN (P if#if_conj)
									      (CP-ADV (C 0)
										      (IP-SUB (NP-SBJ (PRO you#you_pron))
											      (MD can#can_v1)
											      (HV have#have_v)
											      (NP-OB1 (PRO them#them_pron)))))
								      (PUNC <$$paren>)
								      (PP-10 (P than#than_conj)
									     (IP-INF (TO to#to_prep)
										     (VB take#take_v)
										     (NP-OB1 (PRO them#them_pron))
										     (PP (P at#at_prep)
											 (NP (N adventure#adventure_n)))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,20.181))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 6#six_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,20.182))

( (IP-MAT (PP (P In#in_prep)
	      (IP-PPL (VAG raising#raise_v1)
		      (CODE <font>)
		      (NP-OB1 (NS Apple-trees#apple-tree_n))
		      (CODE <$$font>)
		      (PP (P for#for_prep)
			  (CODE <font>)
			  (NP (NS Orchards#orchard_n) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NS fields#field_n1)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CP-QUE-SUB-ADV (WQ whether#whether_pron)
			  (C 0)
			  (IP-SUB (PP (P for#for_prep)
				      (CODE <font>)
				      (NP (N Cyder#cider_n) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (N baking#baking_n) (CODE <$$font>) (PUNC ,) (CODE <font>) (X &c.#et-cetera_n)))))
	  (CODE <$$font>)
	  (NP-SBJ (D the#the_adj) (CODE <font>) (NS Crab-kernels#SEE_crab_n2))
	  (CODE <$$font>)
	  (BEP are#be_v)
	  (VAN preferr'd#prefer_v)
	  (PP (P before#before_adv)
	      (CODE <font>)
	      (NP (NS Apple-kernels#cNA)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (PP (P as#as_adv)
		  (IP-PPL (VAG yielding#yield_v)
			  (CODE <font>)
			  (NP-OB1 (NS stocks#stock_n1)
				  (CODE <$$font>)
				  (ADJP (ADJP (QR more#more_adj) (ADJ hardy#hardy_adj))
					(PUNC ,)
					(CONJP (CONJ and#and_conj1)
					       (RRC (ADVP (ADV so#so_adv))
						    (ADJP-PRD (ADVR better#better_adj)
							      (ADJ able#able_adj)
							      (IP-INF (TO to#to_prep)
								      (VB endure#endure_v)
								      (CODE <P_21>)
								      (NP-OB1 (NP (N cold#cold_n))
									      (CONJP (CONJ and#and_conj1)
										     (NP (ADJ course#coarse_adj) (N Land#land_n1))))))))))))
	      (PUNC ,)
	      (CONJP (CONJ and#and_conj1)
		     (PP (P because#because_adv)
			 (CP-ADV (C 0)
				 (IP-SUB (IP-SUB (NP-SBJ (PRO they#they_pron))
						 (VBP root#root_v1)
						 (ADVP (ADVR better#better_adj)))
					 (CONJP (CONJ and#and_conj1)
						(IP-SUB (NP-SBJ *con*)
							(ADVP (ADV so#so_adv))
							(MD will#will_v1)
							(VB make#make_v1)
							(NP-OB1 (ADJR larger#large_adj) (CODE <font>) (NS Trees#tree_n)))))))))
	  (PUNC :)
	  (CODE <$$font>))
  (ID LANGF-1696-E3-P1,21.183))

( (IP-MAT (CONJ Neither#neither_adv)
	  (BEP are#be_v)
	  (NP-SBJ (Q some#some_pron)
		  (NS sorts#sort_n2)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (NS Crabs#crab_n2))))
	  (CODE <$$font>)
	  (NP-PRD (ADJP (ADVR so#so_adv) (ADJ contemptible#contemptible_adj))
		  (D a#a_adj)
		  (CODE <font>)
		  (N fruit#fruit_n)
		  (CODE <$$font>)
		  (PP (P as#as_adv)
		      (CP-CMP (WNP-1 0)
			      (C 0)
			      (IP-SUB (NP-SBJ-2 (PRO they#they_pron))
				      (BEP are#be_v)
				      (ADVP (ADV generally#generally_adv))
				      (VAN accounted#account_v)
				      (IP-SMC (NP-PRD *T*-1)
					      (NP-SBJ *-2))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,21.184))

( (IP-MAT (CONJ for#for_prep)
	  (IP-PPL (IP-PPL (BAG being#be_v)
			  (VAN gathered#gather_v)
			  (ADJP-SPR (ADV very#very_adj) (ADJ ripe#ripe_adj)))
		  (CONJP (CONJ and#and_conj1)
			 (IP-PPL (VAN kept#keep_v)
				 (NP-MSR (D a#a_adj) (ADJ good#good_adj) (N while#while_n))
				 (IP-INF-PRP (TO to#to_prep) (CODE <font>) (VB mellow#mellow_v)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (Q some#some_pron)
		  (PP (P of#of_prep)
		      (NP (PRO them#them_pron))))
	  (MD will#will_v1)
	  (VB make#make_v1)
	  (NP-OB1 (ADJ good#good_adj) (CODE <font>) (N Cyder#cider_n))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,21.185))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV generally#generally_adv))
	  (NP-SBJ (PRO they#they_pron))
	  (VBP yield#yield_v)
	  (NP-OB1 (D a#a_adj) (ADJ strong#strong_adj) (N Liquor#liquor_n))
	  (PUNC :)
	  (PP (P so#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (NP-SBJ (SUCH such#such_adj)
				      (N kind#kind_n)
				      (PP (P of#of_prep)
					  (CODE <font>)
					  (NP (NS Crab-stocks#crab-stock_n))))
			      (CODE <$$font>)
			      (MD may#may_v1)
			      (ADVP (ADVR rather#rather_adv)
				    (PP *ICH*-1))
			      (VB help#help_v)
			      (IP-INF (TO to#to_prep)
				      (VB mend#mend_v)
				      (NP-OB1 (Q some#some_pron)
					      (NS Apples#apple_n)
					      (PP (P of#of_prep)
						  (NP (ADJ weak#weak_adj) (CODE <font>) (N juice#juice_n)))))
			      (CODE <$$font>)
			      (PP-1 (P than#than_conj)
				    (IP-INF (TO 0)
					    (VB make#make_v1)
					    (IP-SMC (NP-SBJ (PRO them#them_pron))
						    (ADJP-PRD (ADJR worse#worse_adj))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,21.186))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (D the#the_adj)
		  (N reason#reason_n1)
		  (RRC (ADVP-TMP (ADV before#before_adv))
		       (VAN mentioned#mention_v)))
	  (BEP is#be_v)
	  (NP-PRD (D the#the_adj)
		  (N cause#cause_n)
		  (PP (P of#of_prep)
		      (NP (PRO$ their#their_adj)
			  (N choice#choice_n)
			  (PP (P before#before_adv)
			      (NP (N Apple#apple_n) (NS Kernels#kernel_n1))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,21.187))

( (IP-MAT (ADVP (ADV Yet#yet_adv))
	  (ADVP-LOC (CP-FRL (WADVP-1 (WADV where#where_adv))
			    (C 0)
			    (IP-SUB (ADVP-LOC *T*-1)
				    (NP-SBJ (PRO you#you_pron))
				    (MD can@#can_v1)
				    (NEG @not#not_adv)
				    (ADVP (ADV conveniently#conveniently_adv))
				    (BE be#be_v)
				    (VAN stored#store_v)
				    (PP (P with#with_prep)
					(CODE <font>)
					(NP (NS Crab-kernels#SEE_crab_n2))))))
	  (CODE <$$font>)
	  (PUNC ;)
	  (CODE <font>)
	  (NP-SBJ (NS Apple-kernels#cNA))
	  (CODE <$$font>)
	  (BEP are#be_v)
	  (NEG not#not_adv)
	  (ADJP-PRD (QP (ADVR so#so_adv)
			(Q much#much_adj)
			(PP *ICH*-2))
		    (ADJ inferior#inferior_adj)
		    (PP (P to#to_prep)
			(NP (PRO them#them_pron)))
		    (PUNC ,)
		    (PP-2 (P but#but_prep)
			  (CP-DEG (C 0)
				  (IP-SUB (NP-SBJ-3 (PRO they#they_pron))
					  (MD may#may_v1)
					  (ADVP (ADV well#well_adv)
						(ADVP (ADVR enough#enough_adj)))
					  (BE be#be_v)
					  (VAN made#make_v1)
					  (NP-OB1 (N use#use_n))
					  (PP (P of#of_prep)
					      (NP *-3))
					  (PUNC ,)
					  (PUNC <paren>)
					  (PP-PRN (P as#as_adv)
						  (CP-ADV (WADVP-4 0)
							  (C 0)
							  (IP-SUB (ADVP *T*-4)
								  (NP-SBJ (PRO they#they_pron))
								  (ADVP (ADV commonly#commonly_adv))
								  (BEP are#be_v)
								  (VAN *))))
					  (PUNC <$$paren>)
					  (PP (P for#for_prep)
					      (IP-PPL (VAG raising#raise_v1)
						      (CODE <font>)
						      (NP-OB1 (NS Stocks#stock_n1)
							      (CODE <$$font>)
							      (CP-EOP (WNP-5 0)
								      (IP-INF (TO to#to_prep)
									      (VB graff#graff_v1)
									      (NP-OB1 (NS Apples#apple_n))
									      (PP (P upon#upon_prep)
										  (NP *T*-5)))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,21.188))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (P concerning#concerning_prep)
	      (NP (D the#the_adj)
		  (CODE <font>)
		  (NS seeds#seed_n)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (NS Apples#apple_n)))))
	  (CODE <$$font>)
	  (NP-SBJ-1 (PRO it@#it_pron))
	  (BEP @'s#be_v)
	  (IP-INF (TO to#to_prep) (BE be#be_v) (VAN observed#observe_v))
	  (PUNC ,)
	  (CP-THT-1 (C that#that_conj)
		    (IP-SUB (PP-LFD (P although#although_conj)
				    (CP-ADV (C 0)
					    (IP-SUB (NP-SBJ (PRO they#they_pron))
						    (VBP produce#produce_v)
						    (NEG not#not_adv)
						    (CODE <font>)
						    (NP-OB1 (NS Trees#tree_n)
							    (CODE <$$font>)
							    (RRC (VAG bearing#bear_v1)
								 (NP-OB1 (D the#the_adj)
									 (ADJ same#same_adj)
									 (N kind#kind_n)
									 (PP (P of#of_prep)
									     (NP (NS Apples#apple_n)))
									 (PP (P as#as_adv)
									     (NP (D those#those_pron)
										 (CP-REL (WNP-2 0)
											 (C 0)
											 (IP-SUB (NP-SBJ (D the#the_adj) (NS seeds#seed_n))
												 (BED were#be_v)
												 (HVN had#have_v)
												 (PP (RP out#out_adv)
												     (P of#of_prep)
												     (NP *T*-2))))))))))))
			    (PUNC ;)
			    (ADVP-RSP (ADV yet#yet_adv))
			    (PP (P without#without_adv)
				(NP (N graffing#graffing_n)))
			    (NP-SBJ (PRO they#they_pron))
			    (MD will#will_v1)
			    (VB bring#bring_v)
			    (ADVP (ADV forth#forth_adv))
			    (NP-OB1 (D a#a_adj)
				    (ADJ good#good_adj)
				    (CODE <font>)
				    (ADJ harsh#harsh_adj)
				    (N fruit#fruit_n)
				    (CODE <$$font>)
				    (CP-REL (WNP-3 0)
					    (C that#that_conj)
					    (IP-SUB (NP-SBJ *T*-3)
						    (MD may#may_v1)
						    (VB yield#yield_v)
						    (NP-OB1 (ADJ good#good_adj) (CODE <font>) (N Cyder#cider_n)))))))
	  (PUNC :)
	  (CODE <$$font>))
  (ID LANGF-1696-E3-P1,21.189))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV thus#thus_adv))
	  (PUNC <paren>)
	  (IP-MAT-PRN (NP-SBJ (PRO it@#it_pron))
		      (BEP @'s#be_v)
		      (VAN said#say_v1))
	  (PUNC <$$paren>)
	  (NP-SBJ (PRO we#we_pron))
	  (VBD came#come_v)
	  (PP (P by#by_prep)
	      (NP (Q some#some_pron)
		  (PP (P of#of_prep)
		      (NP (PRO$ our#our_pron) (ADJS best#best_adj) (CODE <font>) (NS Cyder-Apples#SEE_cider_n)))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,21.190))

( (CODE <P_22>))

( (IP-MAT (IP-MAT-1 (PP (P If#if_conj)
			(CP-ADV (C 0)
				(IP-SUB (NP-SBJ (PRO you#you_pron))
					(VBP sow#sow_v1)
					(NP-OB1 (D the#the_adj)
						(CODE <font>)
						(NS seeds#seed_n)
						(CODE <$$font>)
						(PP (P of#of_prep)
						    (NP (ADJ several#several_adj)
							(NS sorts#sort_n2)
							(PP (P of#of_prep)
							    (CODE <font>)
							    (NP (NS Apples#apple_n)))))
						(CODE <$$font>)
						(RRC (VAN mixt#mix_v)
						     (ADVP (ADV together#together_adv)))))))
		    (PUNC ,)
		    (NP-SBJ (PRO you#you_pron))
		    (MD would#will_v1)
		    (ADVP (ADV certainly#certainly_adv))
		    (HV have#have_v)
		    (NP-OB1 (N fruit#fruit_n)
			    (RRC (VAN multiply'd#multiply_v)
				 (PP (P into#into_prep)
				     (NP (ADJ various#various_adj) (NS kinds#kind_n))))))
	  (PUNC ;)
	  (CONJP (CONJ but#but_prep)
		 (IP-MAT=1 (ADVP (ADV yet#yet_adv))
			   (ADVP (ADV perhaps#perhaps_adv))
			   (VB find#find_v)
			   (IP-SMC (NP-SBJ (Q none#none_pron))
				   (ADJP-PRD (ADJP (ADJR better#better_adj)
						   (PP (P for#for_prep)
						       (CODE <font>)
						       (NP (N Cyder#cider_n)))
						   (CODE <$$font>)
						   (PP (P than#than_conj)
						       (NP (D those#those_pron)
							   (RRC (ADVP-TMP (ADV already#already_adj))
								(VAN known#know_v)))))
					     (PUNC ,)
					     (CONJP (CONJ nor#nor_conj1)
						    (ADJP (ADVR so#so_adv) (ADJ good#good_adj)))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,22.192))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (SUCH such#such_adj) (CODE <font>) (NS Trees#tree_n))
	  (CODE <$$font>)
	  (MD will#will_v1)
	  (BE be#be_v)
	  (NP-MSR (ADJR longer#long_adj1)
		  (PP *ICH*-1))
	  (PP (P before#before_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (VBP come#come_v)
			      (IP-INF (TO to#to_prep)
				      (VB bear#bear_v1)
				      (CODE <font>)
				      (NP-OB1 (N fruit#fruit_n))))))
	  (CODE <$$font>)
	  (PP-1 (P than#than_conj)
		(NP (OTHERS others#other_adj)
		    (CP-REL (WNP-2 0)
			    (C that#that_conj)
			    (IP-SUB (NP-SBJ *T*-2)
				    (BEP are#be_v)
				    (VAN graffed#graff_v1)))))
	  (CODE <font>)
	  (PUNC :)
	  (CODE <$$font>)
	  (PP (P so#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (NP-SBJ-3 (PRO it#it_pron))
			      (MD would#will_v1)
			      (BE be#be_v)
			      (NP-PRD (FP but#but_prep) (D an#a_adj) (ADJ unpleasant#unpleasant_adj) (N Experiment#experiment_n))
			      (IP-INF-3 (TO to#to_prep)
					(VB search#search_v)
					(NP-ADV (D this#this_pron) (N way#way_n1))
					(PP (P for#for_prep)
					    (NP (D a#a_adj)
						(CODE <font>)
						(N Cyder#cider_n)
						(N Apple#apple_n)
						(CODE <$$font>)
						(CP-EOP (WNP-4 0)
							(IP-INF (NP-SBJ *T*-4)
								(TO to#to_prep)
								(VB exceed#exceed_v)
								(NP-OB1 (Q all#all_adj)
									(CP-REL (WNP-5 0)
										(C that#that_conj)
										(IP-SUB (NP-SBJ *T*-5)
											(HVP have#have_v)
											(BEN been#be_v)
											(ADVP-TMP (ADV before#before_adv))))))))))
			      (PUNC ,)
			      (PP (P because#because_adv)
				  (CP-ADV (C 0)
					  (IP-SUB (IP-SUB-6 (NP-SBJ (D the#the_adj) (N trial#trial_n1))
							    (MD would#will_v1)
							    (BE be#be_v)
							    (ADJP-PRD (ADVR so#so_adv) (ADJ tedious#tedious_adj)))
						  (PUNC ,)
						  (CONJP (CONJ and#and_conj1)
							 (IP-SUB=6 (NP-SBJ (D the#the_adj) (N labour#labour_n))
								   (PP (P in#in_prep)
								       (NP (ADJS greatest#great_adj) (N likelyhood#likelihood_n)))
								   (VAN lost#lose_v1)
								   (PP (P at#at_prep)
								       (ADVP (ADV last#last_adv)))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,22.193))

( (IP-MAT (CONJ But#but_prep)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D a#a_adj) (N man#man_n1))
			      (HVD had#have_v)
			      (NP-OB1 (D a#a_adj) (N mind#mind_n1))
			      (IP-INF (TO to#to_prep)
				      (VB raise#raise_v1)
				      (NP-OB1 (D a#a_adj) (ADJ good#good_adj) (CODE <font>) (ADJ new#new_adj) (N Fence#fence_n))
				      (CODE <$$font>)
				      (PP (P about#about_adv)
					  (NP (D a#a_adj)
					      (CODE <font>)
					      (N Field#field_n1)
					      (CODE <$$font>)
					      (CP-REL (WNP-1 0)
						      (C 0)
						      (IP-SUB (NP-SBJ (PRO he#he_pron))
							      (VBP designs#design_v)
							      (IP-INF (NP-OB1 *T*-1)
								      (TO to#to_prep)
								      (VB inclose#enclose_v))))
					      (PUNC ,)
					      (CP-REL (WNP-2 (WPRO which#which_adj))
						      (C 0)
						      (IP-SUB (NP-OB1 *T*-2)
							      (NP-SBJ (PRO he#he_pron))
							      (MD can#can_v1)
							      (VB keep#keep_v)
							      (PP (P for#for_prep)
								  (NP (NUMP (NUM four#four_adj) (CONJ or#or_conj1) (NUM five#five_v))
								      (NS years#year_n)))
							      (ADVP (ADV together#together_adv))
							      (IP-INF-PRP (TO to#to_prep)
									  (VB bear#bear_v1)
									  (CODE <font>)
									  (NP-OB1 (N Corn#corn_n1)
										  (CODE <$$font>)
										  (CONJ or#or_conj1)
										  (CODE <font>)
										  (NS Clover-grass#clover-grass_n)
										  (CODE <$$font>)
										  (CP-EOP (WNP-3 0)
											  (IP-INF (NP-OB1 *T*-3)
												  (TO to#to_prep)
												  (VB mow#mow_v1)))))))))))))
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (CODE <font>)
		  (IP-SUB (NP-SBJ (NS Cattle#cattle_n))
			  (CODE <$$font>)
			  (MD may#may_v1)
			  (BE be#be_v)
			  (NP-MSR (ADJP (ADVR so#so_adv) (ADJ long#long_adj1)))
			  (VAN kept#keep_v)
			  (PP (RP out#out_adv)
			      (P of#of_prep)
			      (NP (PRO it#it_pron)))))
	  (PUNC ,)
	  (NP-SBJ (PRO he#he_pron))
	  (MD might#may_v1)
	  (DO do#do_v)
	  (NP-OB1 (PRO it#it_pron))
	  (ADVP (ADV rarely#rarely_adv) (ADV well#well_adv))
	  (PP (P by#by_prep)
	      (IP-PPL (VAG sowing#sow_v1)
		      (NP-OB1 (N Apple#apple_n)
			      (NS kernels#kernel_n1)
			      (PP (P of#of_prep)
				  (NP (QP (ADVR as#as_adv) (Q many#many_adj))
				      (NS sorts#sort_n2)
				      (PP (P as#as_adv)
					  (CP-ADV (WNP-4 0)
						  (C 0)
						  (IP-SUB (NP-OB1 *T*-4)
							  (NP-SBJ (PRO he#he_pron))
							  (MD will#will_v1)
							  (VB *)))))))
		      (PUNC ,)
		      (PP (P on#on_prep)
			  (NP (D the#the_adj)
			      (N top#top_n1)
			      (PP (P of#of_prep)
				  (NP (D a#a_adj)
				      (ADJP (ADV new#new_adv) (ADJ made#made_adj))
				      (CODE <font>)
				      (N Ditch#ditch_n1)
				      (N bank#bank_n1)))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (IP-PPL (VAG making#make_v1)
		  (IP-INF (NP-SBJ (D the#the_adj)
				  (CODE <font>)
				  (ADJ dead#dead_adj)
				  (N Hedge#hedge_n)
				  (CODE <$$font>)
				  (PUNC <paren>)
				  (CP-REL (WNP-5 0)
					  (C that#that_conj)
					  (IP-SUB (NP-SBJ *T*-5)
						  (BEP is#be_v)
						  (ADVP (ADV usually#usually_adv))
						  (PP (P on#on_prep)
						      (NP (D the#the_adj)
							  (N top#top_n1)
							  (PP (P of#of_prep)
							      (NP (D the#the_adj) (N bank#bank_n1)))))))
				  (PUNC <$$paren>)
				  (PP (P on#on_prep)
				      (NP (D the#the_adj)
					  (N out_side#outside_n)
					  (PP (P of#of_prep)
					      (NP (D the#the_adj) (N ditch#ditch_n1))))))
			  (TO to#to_prep)
			  (VB defend#defend_v)
			  (NP-OB1 (PRO them#them_pron))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,22.194))

( (IP-MAT (PP (P When#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (VAN grown#grow_v)
			      (RP up#up_adv1))))
	  (NP-SBJ (PRO he#he_pron))
	  (MD may#may_v1)
	  (VB plash#plash_v1)
	  (NP-OB1 (D this#this_pron) (N Hedg#hedge_n))
	  (PUNC ,)
	  (IP-PPL (VAG leaving#leave_v1)
		  (PP (P at#at_prep)
		      (NP (NP-MSR (Q every#every_adj)
				  (NUMP (NUM four#four_adj) (CONJ or#or_conj1) (NUM five#five_v))
				  (NS yards#yard_n2))
			  (N distance#distance_n)))
		  (PUNC ,)
		  (IP-INF (NP-SBJ (ONE one#one_adj)
				  (PP (P of#of_prep)
				      (NP (D the#the_adj) (ADJS best#best_adj) (NS Trees#tree_n)))
				  (CP-REL *ICH*-1))
			  (TO to#to_prep)
			  (VB grow#grow_v)
			  (RP up#up_adv1)
			  (PUNC ,)
			  (CP-REL-1 (WNP-2 (WPRO which#which_adj))
				    (C 0)
				    (IP-SUB (IP-SUB (NP-SBJ *T*-2)
						    (PP (P of#of_prep)
							(NP (PRO themselves#themselves_pron)))
						    (MD will#will_v1)
						    (VB bear#bear_v1)
						    (NP-OB1 (ADJ good#good_adj) (CODE <font>) (N Cyder#cider_n) (N fruit#fruit_n)))
					    (CODE <$$font>)
					    (PUNC ,)
					    (CONJP (CONJ or#or_conj1)
						   (IP-SUB (NP-SBJ *con*)
							   (MD may#may_v1)
							   (BE be#be_v)
							   (VAN graffed#graff_v1)
							   (IP-INF-PRP (TO to#to_prep)
								       (VB bear#bear_v1)
								       (NP-OB1 (CP-FRL (WNP-3 (WPRO what#what_pron))
										       (C 0)
										       (IP-SUB (NP-SBJ *T*-3)
											       (VBP pleaseth#please_v)
											       (NP-OB2 (D the#the_adj) (N owner#owner_n))))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,22.195))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P by#by_prep)
	      (NP (D this#this_pron) (CODE <P_23>) (NS means#mean_n3)))
	  (PP (PP (P in#in_prep)
		  (NP (NP-MSR (D a#a_adj) (ADJ little#little_adj))
		      (N time#time_n)))
	      (CONJP (CONJ and#and_conj1)
		     (PP (P with#with_prep)
			 (NP (ADJ small#small_adj) (N charge#charge_n1)))))
	  (NP-SBJ (PRO he#he_pron))
	  (MD shall#shall_v)
	  (HV have#have_v)
	  (NP-OB1 (D a#a_adj)
		  (CODE <font>)
		  (ADJP (ADJ fruit-bearing#SEE_fruit_n) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (ADJ impregnable#impregnable_adj))
		  (N Hedge#hedge_n))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,23.196))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 7#seven_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,23.197))

( (IP-MAT (NP-SBJ-1 (PRO It@#it_pron))
	  (BEP @'s#be_v)
	  (VAN held#hold_v)
	  (PP (P by#by_prep)
	      (NP (Q some#some_pron)))
	  (PUNC ,)
	  (CP-THT-1 (CP-THT (C that#that_conj)
			    (IP-SUB-2 (NP-SBJ (D the#the_adj)
					      (CODE <font>)
					      (N Kernel#kernel_n1)
					      (CODE <$$font>)
					      (PP (P of#of_prep)
						  (NP (D the#the_adj) (CODE <font>) (N fruit#fruit_n))))
				      (CODE <$$font>)
				      (HVP hath#have_v)
				      (NP-OB1 (D a#a_adj) (ADJ great#great_adj) (N dependence#dependence_n))
				      (PP (P upon#upon_prep)
					  (IP-SUB-PRN=2 (CONJ and#and_conj1)
							(NP (N sympathy#sympathy_n)
							    (PP (P with#with_prep))))
					  (NP (D the#the_adj)
					      (CODE <font>)
					      (N pith#pith_n)
					      (CODE <$$font>)
					      (PP (P of#of_prep)
						  (NP (D the#the_adj) (N Tree#tree_n)))))))
		    (PUNC ,)
		    (CONJP (CONJ and#and_conj1)
			   (CP-THT (C that#that_conj)
				   (CODE <font>)
				   (IP-SUB (NP-LFD-3 (ADJ hollow-@#hollow_adj) (NS @trees#tree_n))
					   (CODE <$$font>)
					   (PP (P though#though_adv)
					       (CP-ADV (C 0)
						       (IP-SUB (IP-SUB (NP-SBJ (PRO they#they_pron))
								       (VBP grow#grow_v))
							       (CONJP (CONJ and#and_conj1)
								      (IP-SUB (NP-SBJ *con*)
									      (VBP bear#bear_v1)
									      (NP-OB1 (N fruit#fruit_n)))))))
					   (PUNC ,)
					   (ADVP (ADV yet#yet_adv))
					   (NP-SBJ-RSP=3 (D that#that_pron1) (N fruit#fruit_n))
					   (HVP hath#have_v)
					   (NP-OB1 (Q few#few_adj) (NS Kernels#kernel_n1))
					   (PP (P in#in_prep)
					       (NP (PRO it#it_pron)))
					   (PUNC ,)
					   (FRAG (CONJ and#and_conj1)
						 (NP (D those#those_pron))
						 (ADJP (Q little#little_adj)
						       (ADJR better#better_adj)
						       (PP (P than#than_conj)
							   (NP (ADJ withered#withered_adj) (CODE <font>) (NS husks#husk_n1)))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,23.198))

( (IP-MAT (PP (P When#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO I#i_pron))
			      (BED was#be_v)
			      (NP-PRD (D a#a_adj) (ADJ young#young_adj) (CODE <font>) (N Planter#planter_n)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (PRO I#i_pron))
	  (BED was#be_v)
	  (ADVP-TMP (ADV once#once_adv))
	  (PP (P in#in_prep)
	      (NP (N want#want_adj)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (NS Pear-stocks#SEE_pear_n)))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,23.199))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (VBD made#make_v1)
	  (NP-OB1 (PRO$ my#my_adj) (N complaint#complaint_n))
	  (PP (P to#to_prep)
	      (NP (D an#a_adj)
		  (ADJ ancient#ancient_adj)
		  (CODE <font>)
		  (N practiser#practiser_n)
		  (CODE <$$font>)
		  (PUNC ,)
		  (NP-PRN (D a#a_adj)
			  (N man#man_n1)
			  (PP (P of#of_prep)
			      (NP (ADJP (ADV very#very_adj) (ADJ good#good_adj))
				  (N judgment#judgement_n)
				  (PP (P in#in_prep)
				      (NP (D the#the_adj)
					  (N opinion#opinion_n)
					  (PP (P of#of_prep)
					      (NP (D those#those_pron)
						  (CP-REL (WNP-1 0)
							  (C that#that_conj)
							  (IP-SUB (NP-SBJ *T*-1)
								  (VBD knew#know_v)
								  (NP-OB1 (PRO him#him_pron)))))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,23.200))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO he#he_pron))
	  (VBD told#tell_v)
	  (NP-OB2 (PRO me#me_pron1))
	  (CP-THT (C 0)
		  (IP-SUB (IP-SUB (NP-SBJ (PRO he#he_pron))
				  (HVD had#have_v)
				  (ADVP-TMP (ADV oft#oft_adv))
				  (VBN sowed#sow_v1)
				  (CODE <font>)
				  (NP-OB1 (NS kernels#kernel_n1)
					  (CODE <$$font>)
					  (PP (P of#of_prep)
					      (CODE <font>)
					      (NP (NS Pears#pear_n)))))
			  (CODE <$$font>)
			  (CONJP (CONJ and#and_conj1)
				 (IP-SUB (NP-SBJ *con*)
					 (ADVP-TMP (ADV never#never_adv))
					 (MD could#can_v1)
					 (VB get#get_v)
					 (IP-INF (NP-SBJ (Q any#any_adj))
						 (TO to#to_prep)
						 (VB grow#grow_v))))))
	  (CODE <font>)
	  (PUNC :)
	  (CODE <$$font>))
  (ID LANGF-1696-E3-P1,23.201))

( (IP-MAT (ADVP (ADV Yet#yet_adv))
	  (NP-SBJ (PRO I#i_pron))
	  (VBD procured#procure_v)
	  (NP-OB1 (Q some#some_pron)
		  (NS Seeds#seed_n)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (NS Pears#pear_n)))
		  (CODE <$$font>)
		  (CP-REL *ICH*-1))
	  (PP (P from#from_prep)
	      (NP (D the#the_adj) (CODE <font>) (N Mill#mill_n1)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CP-REL-1 (WNP-2 0)
		    (C that#that_conj)
		    (IP-SUB (NP-SBJ *T*-2)
			    (BED were#be_v)
			    (ADJP-PRD (ADV very#very_adj) (CODE <font>) (ADJ ripe#ripe_adj))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,23.202))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (HVD had#have_v)
	  (CODE <font>)
	  (NP-OB1 (NS stocks#stock_n1)
		  (CODE <$$font>)
		  (ADJP (ADJR enough#enough_adj)))
	  (PP (P from#from_prep)
	      (NP (PRO them#them_pron)))
	  (PUNC ,)
	  (CP-CAR (WNP-1 (WPRO which#which_adj))
		  (C 0)
		  (IP-SUB (NP-SBJ *T*-1)
			  (VBP makes#make_v1)
			  (IP-INF (NP-SBJ (PRO me#me_pron1))
				  (VB believe#believe_v)
				  (CP-THT (C 0)
					  (IP-SUB (NP-SBJ (PRO$ my#my_adj) (N friend#friend_n))
						  (VBD took#take_v)
						  (NP-OB1 (PRO$ his#his_adj) (NS kernels#kernel_n1))
						  (PP (P from#from_prep)
						      (NP (D a#a_adj)
							  (CODE <font>)
							  (N Tree#tree_n)
							  (CODE <$$font>)
							  (CP-REL (WNP-2 0)
								  (C that#that_conj)
								  (IP-SUB (NP-SBJ *T*-2)
									  (BED was#be_v)
									  (CODE <font>)
									  (ADJP-PRD (ADJ hollow-hearted#hollow-hearted_adj))
									  (CODE <$$font>)
									  (PUNC ,)
									  (PP (P as#as_adv)
									      (CP-ADV (WADJP-3 0)
										      (C 0)
										      (CODE <font>)
										      (IP-SUB (NP-SBJ (NS Pear-trees#pear-tree_n))
											      (CODE <$$font>)
											      (BEP are#be_v)
											      (ADJP-PRD (QR more#more_adj)
													(ADJ subject#subject_adj)
													(IP-INF (ADJP-PRD *T*-3)
														(TO to#to_prep)
														(BE be#be_v))
													(PP (P than#than_conj)
													    (NP (Q any#any_adj) (OTHER other#other_adj) (CODE <font>) (NS fruit-trees#SEE_fruit_n))))))))))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,23.203))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (VBP mention#mention_v)
	  (NP-OB1 (D this#this_pron))
	  (ADVP (D the#the_adj) (ADVR rather#rather_adv))
	  (PUNC ,)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (PP (P if#if_conj)
				  (CP-ADV (C 0)
					  (IP-SUB (IP-SUB (NP-SBJ (D a#a_adj) (CODE <font>) (N Planter#planter_n))
							  (CODE <$$font>)
							  (VBP try#try_v)
							  (NP-OB1 (Q any#any_adj) (N thing#thing_n1))
							  (NP-TMP (NUMP (FP but#but_prep) (NUM once#once_adv))))
						  (PUNC ,)
						  (CONJP (CONJ and#and_conj1)
							 (IP-SUB (NP-SBJ *con*)
								 (VBP fail#fail_v))))))
			      (PUNC ,)
			      (NP-SBJ (PRO he#he_pron))
			      (MD should#shall_v)
			      (NEG not#not_adv)
			      (BE be#be_v)
			      (CODE <font>)
			      (ADJP-PRD (ADJ discouraged#discouraged_adj))
			      (CODE <$$font>)
			      (PUNC ,)
			      (IP-SUB-PRN (CONJ and#and_conj1)
					  (ADVP (ADV particularly#particularly_adv))
					  (PP (P in#in_prep)
					      (NP (D this#this_pron)))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,23.204))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO he#he_pron))
			      (MD can#can_v1)
			      (VB get#get_v)
			      (NP-OB1 (ADJ ripe#ripe_adj)
				      (NS Seeds#seed_n)
				      (PUNC ,)
				      (PUNC <paren>)
				      (CP-REL (WNP-1 (WPRO which#which_adj))
					      (C 0)
					      (IP-SUB (NP-SBJ *T*-1)
						      (MD will#will_v1)
						      (BE be#be_v)
						      (ADVP-TMP (ADV then#then_adv))
						      (ADJP-PRD (ADV very#very_adj) (ADJ black#black_adj)))))
			      (PUNC <$$paren>)
			      (IP-SUB-PRN (CONJ and#and_conj1)
					  (PP (P of#of_prep)
					      (NP (D a#a_adj) (CODE <font>) (ADJ sound#sound_adj) (N Tree#tree_n)))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (PRO he#he_pron))
	  (MD need#need_v2)
	  (NEG not#not_adv)
	  (VB doubt#doubt_v)
	  (NP-OB1 (D the#the_adj) (N success#success_n))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,23.205))

( (CODE <P_24>))

( (IP-MAT (CONJ And#and_conj1)
	  (IP-INF-PRP (TO to#to_prep)
		      (HV have#have_v)
		      (NP-OB1 (N plenty#plenty_n)
			      (PP (P of#of_prep)
				  (CODE <font>)
				  (NP (NS stocks#stock_n1)
				      (CODE <$$font>)
				      (ADJP (SUCH such#such_adj)
					    (PP (P as#as_adv)
						(CP-CMP (WNP-1 0)
							(C 0)
							(IP-SUB (NP-SBJ *T*-1)
								(BEP are#be_v)
								(ADJP-PRD (ADJS best#best_adj)
									  (PP (P for#for_prep)
									      (NP (ADJ large#large_adj)
										  (CODE <font>)
										  (NS standards#standard_n)
										  (CODE <$$font>)
										  (PP (P for#for_prep)
										      (CODE <font>)
										      (NP (NS Orchards#orchard_n) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (NS Fields#field_n1))))))))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ-2 (EX there#there_adv))
	  (BEP is#be_v)
	  (NP-2 (Q no#no_adj)
		(ADJR better#better_adj)
		(N way#way_n1)
		(PP (P of#of_prep)
		    (IP-PPL (VAG raising#raise_v1)
			    (NP-OB1 (PRO them#them_pron))))
		(PP (P than#than_conj)
		    (PP (P by#by_prep)
			(NP (NS Kernels#kernel_n1)
			    (PUNC ;)
			    (CP-REL (WPP-3 (P with#with_prep)
					   (WNP (WPRO which#which_adj)))
				    (C 0)
				    (IP-SUB (PP *T*-3)
					    (NP-SBJ (D a#a_adj) (N man#man_n1))
					    (MD can#can_v1)
					    (NP-ADV (Q no#no_adj)
						    (N way#way_n1)
						    (PP *ICH*-4))
					    (BE be#be_v)
					    (ADVP (ADV plentifully#plentifully_adv) (CONJ and#and_conj1) (ADV easily#easily_adv))
					    (VAN provided#provide_v)
					    (PUNC ;)
					    (PP-4 (P but#but_prep)
						  (PP (P at#at_prep)
						      (NP (D the#the_adj)
							  (N time#time_n)
							  (CONJP (CONJ and#and_conj1)
								 (NX (N place#place_n1)))
							  (PP (P of#of_prep)
							      (IP-PPL (VAG making#make_v1)
								      (CODE <font>)
								      (NP-OB1 (N Perry#perry_n3)))))))
					    (CODE <$$font>)
					    (PUNC ,)
					    (PP (P though#though_adv)
						(CP-ADV (C 0)
							(IP-SUB (NP-SBJ (PRO he#he_pron))
								(DOP do#do_v)
								(VB send#send_v1)
								(NP-MSR (Q some#some_pron) (NS miles#mile_n1))
								(PP (P for#for_prep)
								    (NP (PRO them#them_pron))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,24.207))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (MD shall#shall_v)
	  (VB end#end_v1)
	  (NP-OB1 (D this#this_pron) (CODE <font>) (N Chapter#chapter_n))
	  (CODE <$$font>)
	  (PP (P with#with_prep)
	      (NP (D this#this_pron)
		  (ONE one#one_adj)
		  (CODE <font>)
		  (N Observation#observation_n)
		  (CODE <$$font>)
		  (QP (QR more#more_adj))
		  (PUNC ,)
		  (ADJP (ADJP (NEG not#not_adv)
			      (ADJ unsuitable#unsuitable_adj)
			      (PP (P to#to_prep)
				  (NP (CP-FRL (WNP-1 (WPRO what#what_pron))
					      (C 0)
					      (IP-SUB (NP-SBJ *T*-1)
						      (VBD went#go_v)
						      (ADVP-TMP (ADV before#before_adv)))))))
			(PUNC ,)
			(CONJP (CONJ and#and_conj1)
			       (CP-REL (WNP-2 (WPRO which#which_adj))
				       (C 0)
				       (IP-SUB (NP-SBJ (PRO I#i_pron))
					       (HVP have#have_v)
					       (VBN met#meet_v)
					       (PP (P with#with_prep)
						   (NP *T*-2))
					       (IP-PPL (VAN verifi'd#verify_v))
					       (NP-TMP (QR more#more_adj)
						       (PP (P than#than_conj)
							   (NP (NUMP (NUM once#once_adv) (CONJ or#or_conj1) (NUM twice#twice_adv)))))
					       (PP (P in#in_prep)
						   (NP (PRO$ my#my_adj) (ADJ own#own_adj) (N Experience#experience_n)))))))
		  (PUNC ,)
		  (CP-THT-PRN (C that#that_conj)
			      (IP-SUB (NP-SBJ-3 (EX there#there_adv))
				      (BEP are#be_v)
				      (NP-3 (Q some#some_pron)
					    (CODE <font>)
					    (ADJ hollow#hollow_adj)
					    (NS fruit-trees#SEE_fruit_n)
					    (CODE <$$font>)
					    (CP-REL (WNP-4 0)
						    (C that#that_conj)
						    (IP-SUB (NP-SBJ *T*-4)
							    (VBP bear#bear_v1)
							    (NP-OB1 (N fruit#fruit_n)
								    (ADJP (QP (QP (ADVR so#so_adv) (Q much#much_adj))
									      (QR more#more_adj))
									  (ADJ excellent#excellent_adj)
									  (PP (P than#than_conj)
									      (NP (Q any#any_adj)
										  (PP (P of#of_prep)
										      (NP (D the#the_adj)
											  (ADJ same#same_adj)
											  (N kind#kind_n)
											  (CP-REL (WNP-5 0)
												  (C 0)
												  (IP-SUB (IP-SUB (NP-OB1 *T*-5)
														  (NP-SBJ (D the#the_adj) (NS owners#owner_n))
														  (HVD had#have_v)
														  (HVN had#have_v))
													  (PUNC ,)
													  (CONJP (CONJ or#or_conj1)
														 (IP-SUB (NP-SBJ *con*)
															 (MD could#can_v1)
															 (ADVP-LOC (ADV elsewhere#elsewhere_adv))
															 (VB meet#meet_v)
															 (PP (P with#with_prep)
															     (NP *T*-5))))))))))
									  (PUNC ,)
									  (CP-DEG (C that#that_conj)
										  (IP-SUB (IP-SUB (NP-SBJ (PRO they#they_pron))
												  (HVP have#have_v)
												  (BEN been#be_v)
												  (ADJP-PRD (ADV very#very_adj)
													    (ADJ desirous#desirous_adj)
													    (IP-INF (TO to#to_prep)
														    (VB propagate#propagate_v)
														    (PP (P from#from_prep)
															(NP (PRO them#them_pron))))))
											  (PUNC ,)
											  (CONJP (CONJ but#but_prep)
												 (IP-SUB (NP-SBJ *con*)
													 (ADVP-TMP (ADV never#never_adv))
													 (MD could#can_v1)
													 (NP-ADV (Q any#any_adj)
														 (N manner#manner_n)
														 (PP (P of#of_prep)
														     (NP (N way#way_n1))))
													 (VB raise#raise_v1)
													 (NP-OB1 (ADJ young#young_adj)
														 (ONES ones#one_adj)
														 (PP (P of#of_prep)
														     (NP (D those#those_pron)
															 (ADJ old#old_adj)
															 (CODE <font>)
															 (NS Trees#tree_n)
															 (CODE <$$font>)
															 (PUNC ,)
															 (CP-REL (WNP-6 0)
																 (C that#that_conj)
																 (IP-SUB (NP-SBJ *T*-6)
																	 (MD would#will_v1)
																	 (VB bear#bear_v1)
																	 (NP-OB1 (ADJP (ADVR so#so_adv) (ADJ good#good_adj))
																		 (D a#a_adj)
																		 (CODE <font>)
																		 (N fruit#fruit_n)))))))
													 (CODE <$$font>)
													 (PUNC ;)
													 (CP-CAR (WNP-7 (WPRO which#which_adj))
														 (C 0)
														 (IP-SUB (NP-SBJ *T*-7)
															 (VBP seems#seem_v2)
															 (IP-INF (TO to#to_prep)
																 (VB infer#infer_v)
																 (CP-THT (C that#that_conj)
																	 (IP-SUB (NP-SBJ (D the#the_adj)
																			 (CODE <font>)
																			 (N fruit#fruit_n)
																			 (CODE <$$font>)
																			 (PP (P of#of_prep)
																			     (NP (D a#a_adj) (CODE <font>) (N Tree#tree_n))))
																		 (CODE <$$font>)
																		 (MD may#may_v1)
																		 (BE be#be_v)
																		 (ADJP-PRD (D the#the_adj) (CODE <font>) (ADJR better#better_adj))
																		 (CODE <$$font>)
																		 (PP (P for#for_prep)
																		     (IP-PPL (NP-SBJ (D the#the_adj) (CODE <font>) (NS piths#pith_n))
																			     (CODE <$$font>)
																			     (BAG being#be_v)
																			     (CODE <font>)
																			     (VAN consum'd#consume_v1)))))))))))))))))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,24.208))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D that#that_pron1))
			      (BEP be#be_v)
			      (ADJP-PRD (ADJ true#true_adj)))))
	  (PUNC ,)
	  (NP-SBJ (PRO it#it_pron))
	  (MD must#must_v1)
	  (BE be#be_v)
	  (ADVP (ADV so#so_adv))
	  (PUNC ,)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N pith#pith_n))
			      (CODE <$$font>)
			      (VBP conveys#convey_v1)
			      (PP (P to#to_prep)
				  (NP (D the#the_adj) (CODE <font>) (N fruit#fruit_n)))
			      (CODE <$$font>)
			      (NP-OB1 (D a#a_adj)
				      (CODE <font>)
				      (ADJR worse#worse_adj)
				      (CODE <$$font>)
				      (N sort#sort_n2)
				      (PP (P of#of_prep)
					  (CODE <font>)
					  (NP (N juice#juice_n)))
				      (CODE <$$font>)
				      (PP (P than#than_conj)
					  (CP-CMP (WNP-1 0)
						  (C 0)
						  (IP-SUB (NP-OB1 *T*-1)
							  (NP-SBJ (Q any#any_adj)
								  (OTHER other#other_adj)
								  (N part#part_n1)
								  (PP (P of#of_prep)
								      (NP (D the#the_adj) (N Tree#tree_n))))
							  (DOP doth#do_v)
							  (VB *))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,24.209))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (ADV+P therefore#therefore_adv))
	  (IP-PPL (BAG being#be_v)
		  (VAN freed#free_v)
		  (PP (P from#from_prep)
		      (NP (D that#that_pron1) (N infection#infection_n)))
		  (PP (P by#by_prep)
		      (NP (D the#the_adj)
			  (CODE <font>)
			  (N Consumption#consumption_n)
			  (CODE <$$font>)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj) (CODE <font>) (N Pith#pith_n))))))
	  (CODE <$$font>)
	  (NP-SBJ (D the#the_adj) (N Fruit#fruit_n))
	  (VBP becomes#become_v)
	  (ADJP-PRD (QR more#more_adj)
		    (CODE <font>)
		    (ADJ choice#choice_adj)
		    (CODE <$$font>)
		    (CONJP (CONJ and#and_conj1)
			   (CODE <font>)
			   (ADJX (ADJ delicate#delicate_adj))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,24.210))

( (IP-MAT (CONJ And#and_conj1)
	  (CP-THT-SBJ-1 (C that#that_conj)
			(IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N Pith#pith_n))
				(CODE <$$font>)
				(CODE <P_25>)
				(BEP is#be_v)
				(NP-PRD (D the#the_adj)
					(N conveyance#conveyance_n)
					(PP (P of#of_prep)
					    (NP (D a#a_adj)
						(CODE <font>)
						(ADJP (ADJR courser#coarse_adj) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (OTHER other#other_adj))
						(N sort#sort_n2)
						(PP (P of#of_prep)
						    (NP (N juice#juice_n))))))))
	  (PUNC ,)
	  (BEP is#be_v)
	  (VAN rendred#render_v)
	  (IP-SMC (CP-THT-SBJ *-1)
		  (ADJP-PRD (PP (P in#in_prep)
				(NP (Q some#some_pron) (N sort#sort_n2)))
			    (ADJ probable#probable_adj)))
	  (PUNC ,)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (PUNC <paren>)
		      (IP-SUB (PP-PRN (P as#as_adv)
				      (CP-ADV (WNP-2 0)
					      (C 0)
					      (IP-SUB (NP-SBJ *T*-2)
						      (HVP hath#have_v)
						      (BEN been#be_v)
						      (ADVP-TMP (ADV before#before_adv))
						      (VAN observed#observe_v))))
			      (PUNC <$$paren>)
			      (NP-SBJ (D the#the_adj)
				      (CODE <font>)
				      (NS Kernels#kernel_n1)
				      (CODE <$$font>)
				      (PP (P of#of_prep)
					  (CODE <font>)
					  (NP (N Fruit#fruit_n))))
			      (CODE <$$font>)
			      (VBP depend#depend_v1)
			      (NP-MSR (Q much#much_adj))
			      (PP (P upon#upon_prep)
				  (NP (D the#the_adj)
				      (CODE <font>)
				      (N Pith#pith_n)
				      (CODE <$$font>)
				      (PUNC ,)
				      (CP-REL (WNP-3 (WPRO which#which_adj))
					      (C 0)
					      (IP-SUB (IP-SUB-4 (NP-SBJ *T*-3)
								(ADVP-TMP (ADV almost#almost_adv) (ADV never#never_adv))
								(VBP produce#produce_v)
								(NP-OB1 (SUCH such#such_adj)
									(CODE <font>)
									(ADJ good#good_adj)
									(N fruit#fruit_n)
									(CODE <$$font>)
									(PP (P as#as_adv)
									    (CP-CMP (WNP-5 0)
										    (C 0)
										    (IP-SUB (NP-SBJ (PRO they#they_pron))
											    (VBP come#come_v)
											    (PP (RP out#out_adv)
												(P of#of_prep)
												(NP *T*-5)))))))
						      (PUNC ,)
						      (CONJP (CONJ and#and_conj1)
							     (IP-SUB=4 (ADVP (ADV generally#generally_adv))
								       (ADJP-PRD (Q much#much_adj) (ADJR worse#worse_adj)))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,25.211))

( (CODE <heading>))

( (NP (N CHAP.#chapter_n) (NUM III#three_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,25.213))

( (PP (CODE <font>)
      (P OF#of_prep)
      (IP-PPL (VAG TRANSPLANTING#transplant_v)
	      (NP-OB1 (D THE#the_adj) (NS SEEDLINGS#seedling_n)))
      (PUNC .))
  (ID LANGF-1696-E3-P1,25.214))

( (CODE <$$heading>))

( (NP (N Sect.#section_n) (CODE <$$font>) (ONE 1#one_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,25.216))

( (IP-MAT (IP-MAT-1 (PP (P In#in_prep)
			(CODE <font>)
			(NP (NPR October#NA)))
		    (CODE <$$font>)
		    (PP (P after#after_adv)
			(NP (NP-POS (ONE one#one_adj) (N$ Summers#summer_n1))
			    (N growth#growth_n1)
			    (PP (P in#in_prep)
				(NP (D the#the_adj) (CODE <font>) (NS Seed-plots#seed-plot_n)))))
		    (CODE <$$font>)
		    (PUNC ,)
		    (NP-SBJ (PRO you#you_pron))
		    (MD ought#ought_v)
		    (TO to#to_prep)
		    (VB draw#draw_v)
		    (RP up#up_adv1)
		    (PP (P with#with_prep)
			(NP (PRO$ your#your_pron) (N hand#hand_n)))
		    (PUNC ,)
		    (NP-OB1 (SUCH such#such_adj)
			    (PP (P of#of_prep)
				(NP (PRO$ your#your_pron)
				    (CODE <font>)
				    (N Crab#crab_n2)
				    (CODE <$$font>)
				    (PUNC ,)
				    (CODE <font>)
				    (CONJP (NX (N Apple#apple_n)))
				    (CODE <$$font>)
				    (PUNC ,)
				    (CONJP (CONJ or#or_conj1)
					   (CODE <font>)
					   (NX (NS Pear-seedlings#SEE_pear_n)))))
			    (CODE <$$font>)
			    (PP (P as#as_adv)
				(CP-CMP (WNP-2 0)
					(C 0)
					(IP-SUB (NP-SBJ (PRO you#you_pron))
						(VBP find#find_v)
						(IP-PPL-OB1 (NP-SBJ *T*-2)
							    (VBN grown#grow_v)
							    (NP-MSR (ADV above#above_adv) (D a#a_adj) (N foot#foot_n))
							    (PP (P in#in_prep)
								(NP (N height#height_n)))))))))
	  (CODE <font>)
	  (PUNC :)
	  (CODE <$$font>)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (VB transplant#transplant_v)
			   (NP-OB1 (PRO them#them_pron))
			   (PP (P into#into_prep)
			       (NP (PRO$ your#your_pron) (CODE <font>) (N Nursery#nursery_n)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (VB let#let_v1)
			   (IP-INF (NP-SBJ (D the#the_adj) (N rest#rest_n3))
				   (VB remain#remain_v)
				   (PP (P in#in_prep)
				       (NP (D the#the_adj) (CODE <font>) (N Seed-plot#seed-plot_n)))
				   (CODE <$$font>)
				   (PP (P till#till_prep)
				       (NP (D+OTHER another#another_pron) (N year#year_n))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,25.217))

( (IP-MAT (IP-MAT-1 (PP (P as#as_adv)
			(PP (P for#for_prep)
			    (NP (D those#those_pron)
				(PP (P from#from_prep)
				    (CODE <font>)
				    (NP (NS Stones#stone_n))))))
		    (CODE <$$font>)
		    (NP-SBJ (PRO they#they_pron))
		    (MD need#need_v2)
		    (NEG not#not_adv)
		    (BE be#be_v)
		    (CODE <font>)
		    (VAN removed#remove_v))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CONJP (CONJ but#but_prep)
		 (IP-MAT=1 (VAN inoculated#inoculate_v)
			   (PP (P in#in_prep)
			       (NP (D the#the_adj) (CODE <font>) (N Seminary#seminary_n1)))
			   (CODE <$$font>)
			   (PUNC ,)
			   (IP-PPL-ABS (NP-SBJ (D the#the_adj) (CODE <font>) (NS stones#stone_n))
				       (CODE <$$font>)
				       (BAG being#be_v)
				       (VAN set#set_v1)
				       (PP (P at#at_prep)
					   (NP (D the#the_adj)
					       (N distance#distance_n)
					       (ADJP (ADJ aforesaid#aforesaid_adj)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,25.218))

( (IP-IMP (IP-IMP-1 (PP (P When#when_adv)
			(CP-ADV (C 0)
				(IP-SUB (NP-SBJ (PRO they#they_pron))
					(BEP are#be_v)
					(VAN drawn#draw_v)
					(RP up#up_adv1))))
		    (PUNC ,)
		    (VBI cut#cut_v)
		    (RP off#off_adv)
		    (NP-OB1 (D the#the_adj) (CODE <font>) (NS side-spriggs#cNA))
		    (CODE <$$font>)
		    (PP (P from#from_prep)
			(PP (P about#about_adv)
			    (NP (D the#the_adj) (CODE <font>) (N top#top_n1)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-IMP=1 (NP-OB1 (D the#the_adj) (CODE <font>) (NS strings#string_n))
			   (CODE <$$font>)
			   (PP (P from#from_prep)
			       (PP (P about#about_adv)
				   (NP (D the#the_adj) (NS roots#root_n1))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,25.219))

( (IP-IMP (IP-IMP-1 (CONJ and#and_conj1)
		    (VBI snip#snip_v)
		    (RP off#off_adv)
		    (NP-OB1 (D the#the_adj) (CODE <font>) (NS extremities#extremity_n))
		    (CODE <$$font>)
		    (PUNC ,)
		    (CONJ both#both_pron)
		    (PP (P of#of_prep)
			(NP (D the#the_adj) (CODE <font>) (N top#top_n1)))
		    (CODE <$$font>)
		    (PUNC ,)
		    (CP-ADV (C that#that_conj)
			    (IP-SUB (IP-SUB (NP-SBJ (PRO it#it_pron))
					    (MD may#may_v1)
					    (NEG not#not_adv)
					    (VB run#run_v)
					    (ADVP (ADVR too#too_adv) (ADV fast#fast_adv))
					    (ADVP-DIR (ADV upward#upward_adv)))
				    (PUNC ,)
				    (PUNC <paren>)
				    (CONJP (CONJ but#but_prep)
					   (CODE <P_26>)
					   (IP-SUB (NP-SBJ (D the#the_adj) (N body#body_n))
						   (MD may#may_v1)
						   (VB grow#grow_v)
						   (PP (P in#in_prep)
						       (NP (N bigness#bigness_n))))))))
	  (PUNC ,)
	  (PUNC <$$paren>)
	  (CONJP (CONJ and#and_conj1)
		 (IP-IMP=1 (PP (P of#of_prep)
			       (NP (D the#the_adj)
				   (CODE <font>)
				   (N tap#tap_n1)
				   (CODE <$$font>)
				   (CONJP (CONJ or#or_conj1)
					  (CODE <font>)
					  (NX (N heart#heart_n) (N root#root_n1)))))
			   (CODE <$$font>)
			   (PUNC ,)
			   (CP-ADV (C that#that_conj)
				   (IP-SUB (IP-SUB (NP-SBJ (PRO it#it_pron))
						   (MD may#may_v1)
						   (NEG not#not_adv)
						   (VB run#run_v)
						   (ADVP (ADV directly#directly_adv))
						   (CODE <font>)
						   (ADVP-DIR (ADV downward#downward_adv))
						   (CODE <$$font>)
						   (PUNC <paren>)
						   (PP-PRN (P lest#lest_conj)
							   (CP-ADV (C 0)
								   (IP-SUB (NP-SBJ (PRO it#it_pron))
									   (VBP run#run_v)
									   (NP-MSR (ADJR further#further_adj)
										   (PP (P than#than_conj)
										       (NP (D the#the_adj) (ADJ good#good_adj) (CODE <font>) (N soil#soil_n1))))))))
					   (CODE <$$font>)
					   (PUNC <$$paren>)
					   (CONJP (CONJ but#but_prep)
						  (IP-SUB (NP-SBJ *con*)
							  (MD may#may_v1)
							  (BE be#be_v)
							  (ADJP-PRD (QR more#more_adj)
								    (ADJ apt#apt_adj)
								    (IP-INF (TO to#to_prep)
									    (VB spread#spread_v)
									    (NP-OB1 (PRO$ its#its_adj) (CODE <font>) (NS Roots#root_n1))
									    (CODE <$$font>)
									    (PP (P in#in_prep)
										(NP (N breadth#breadth_n)))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,26.220))

( (IP-IMP (HVI Have#have_v)
	  (CODE <font>)
	  (IP-SMC (NP-SBJ (NS beds#bed_n)
			  (CODE <$$font>)
			  (PP *ICH*-1))
		  (ADJP-PRD (ADV ready#ready_adj) (ADJ prepared#prepared_adj))
		  (PUNC ,)
		  (PP-1 (P of#of_prep)
			(NP (ADJ good#good_adj)
			    (CODE <font>)
			    (ADJ fertile#fertile_adj)
			    (ADJ dry#dry_adj)
			    (N Earth#earth_n1)
			    (CODE <$$font>)
			    (PUNC ,)
			    (RRC (NEG not#not_adv)
				 (CODE <font>)
				 (ADJP-PRD (ADJ over_rich#overrich_adj))
				 (CODE {COM:font_change_only_around_"rich"})
				 (CODE <$$font>)
				 (PUNC ,)
				 (PP (P lest#lest_conj)
				     (CP-ADV (C 0)
					     (IP-SUB (PP (P upon#upon_prep)
							 (NP (N removal#removal_n)
							     (ADVP-TMP (ADV afterwards#afterwards_adv))
							     (PP (P into#into_prep)
								 (NP (D a#a_adj)
								     (ADJP (Q much#much_adj) (ADJR worse#worse_adj))
								     (N Soil#soil_n1)
								     (PUNC <paren>)
								     (PP (P as#as_adv)
									 (CP-ADV (WADJP-2 0)
										 (C 0)
										 (IP-SUB (ADJP-PRD *T*-2)
											 (PP (P for#for_prep)
											     (NP (D the#the_adj) (QS most#most_adj) (N part#part_n1)))
											 (CODE <font>)
											 (NP-SBJ (N Orchard#orchard_n) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (N Field#field_n1) (CODE <$$font>) (N ground#ground_n))
											 (BEP is#be_v))))))))
						     (PUNC <$$paren>)
						     (NP-SBJ (PRO$ your#your_pron) (NS Trees#tree_n))
						     (IP-PPL (VAG coming#come_v)
							     (PP (P of#of_prep)
								 (NP (D a#a_adj) (ADJ sudden#sudden_adj)))
							     (NP-MSR (PP (P from#from_prep)
									 (NP (SUCH such#such_adj) (ADJ delicate#delicate_adj) (N food#food_n)))
								     (PUNC ,)
								     (PP (P to#to_prep)
									 (NP (SUCH such#such_adj) (ADJ course#coarse_adj) (N fare#fare_n1)))))
						     (PUNC ,)
						     (VBP pine#pine_v)
						     (ADVP-DIR (ADV away#away_adv))
						     (PP (P if#if_conj)
							 (CP-ADV (C 0)
								 (IP-SUB (NP-SBJ (PRO they#they_pron))
									 (DOP do#do_v)
									 (NEG not#not_adv)
									 (VB perish#perish_v)))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,26.221))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ-1 (D this#this_pron))
	  (BEP is#be_v)
	  (ADVP (FP but#but_prep) (ADV reasonably#reasonably_adv))
	  (VAN thought#think_v2)
	  (IP-INF (NP-SBJ *-1)
		  (TO to#to_prep)
		  (BE be#be_v)
		  (NP-PRD (D the#the_adj)
			  (N cause#cause_n)
			  (CP-REL (WADVP-2 (WADV why#why_adv))
				  (C 0)
				  (IP-SUB-3 (ADVP *T*-2)
					    (NP-SBJ (Q many#many_adj)
						    (NS Trees#tree_n)
						    (RRC (VAN bought#buy_v)
							 (PP (RP out#out_adv)
							     (P of#of_prep)
							     (CODE <font>)
							     (NP (NPR London#NA)
								 (CODE <$$font>)
								 (NS Nurseries#nursery_n)
								 (PUNC <paren>)
								 (CP-REL (WNP-4 (WPRO which#which_adj))
									 (C 0)
									 (IP-SUB (NP-SBJ *T*-4)
										 (BEP are#be_v)
										 (ADJP-PRD (ADV vastly#vastly_adv)
											   (ADJ deep#deep_adj)
											   (PP (P with#with_prep)
											       (CODE <font>)
											       (NP (ADJP (ADJ fat#fat_adj) (CODE <$$font>) (PUNC ,) (CONJ and#and_conj1) (CODE <font>) (ADJ rich#rich_adj))
												   (N manure#manure_n))))))))))
					    (CODE <$$font>)
					    (PUNC <$$paren>)
					    (VBP decay#decay_v)
					    (PUNC ,)
					    (IP-SUB-PRN=3 (CONJ or#or_conj1)
							  (VBP come#come_v)
							  (RP on#on_adv)
							  (ADVP (ADV very#very_adj) (ADV poorly#poorly_adv)))
					    (PUNC ,)
					    (PP (P when#when_adv)
						(CP-ADV (C 0)
							(IP-SUB (NP-SBJ (PRO they#they_pron))
								(BEP are#be_v)
								(VAN brought#bring_v)
								(PP (P into#into_prep)
								    (NP (D the#the_adj) (N Country#country_n))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,26.222))

( (IP-IMP (PP (ADV+P Therefore#therefore_adv))
	  (PP (P upon#upon_prep)
	      (NP (Q every#every_adj) (N removal#removal_n)))
	  (VBI endeavour#endeavour_v)
	  (IP-INF (TO to#to_prep)
		  (HV have#have_v)
		  (NP-OB1 (N Earth#earth_n1)
			  (ADJP (ADJP (ADVR as#as_adv) (ADJ good#good_adj))
				(PUNC ,)
				(CONJP (CONJ or#or_conj1)
				       (ADJP (ADJR better#better_adj))))
			  (CP-EOP (WNP-1 0)
				  (PUNC <paren>)
				  (IP-INF (NP-OB1 *T*-1)
					  (TO to#to_prep)
					  (VB place#place_v)
					  (ADJP-LOC (ADJS next#next_adj)
						    (NP (D the#the_adj) (CODE <font>) (NS roots#root_n1)))))
			  (CODE <$$font>)
			  (PUNC <$$paren>)
			  (PP (P than#than_conj)
			      (NP (D that#that_pron1)
				  (CP-REL (WPP-2 (RP out#out_adv)
						 (P of#of_prep)
						 (WNP (WPRO which#which_adj)))
					  (C 0)
					  (IP-SUB (PP *T*-2)
						  (NP-SBJ (PRO they#they_pron))
						  (BED were#be_v)
						  (VAN taken#take_v)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,26.223))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 2#two_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,26.224))

( (IP-IMP (VBI Let#let_v1)
	  (IP-INF (NP-SBJ (Q every#every_adj)
			  (CODE <font>)
			  (N bed#bed_n)
			  (CODE <$$font>)
			  (CP-REL (WNP-1 0)
				  (C 0)
				  (IP-SUB (NP-OB1 *T*-1)
					  (NP-SBJ (PRO you#you_pron))
					  (VBP make#make_v1)
					  (PUNC ,)
					  (PP (P for#for_prep)
					      (IP-PPL (VAG setting#set_v1)
						      (NP-OB1 (D these#these_pron) (CODE <font>) (NS Plants#plant_n1))
						      (CODE <$$font>)
						      (PP (P in#in_prep)
							  (NP *T*-1)))))))
		  (PUNC ,)
		  (BE be#be_v)
		  (ADJP-PRD (NP-MSR (NUMP (ADV about#about_adv) (CODE <font>) (NUM two#two_adj))
				    (N foot#foot_n))
			    (ADJ broad#broad_adj1)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (IP-PPL (VAG leaving#leave_v1)
		  (CODE <font>)
		  (NP-OB1 (N room#room_n1)
			  (CODE <$$font>)
			  (PP (P betwixt#betwixt_prep)
			      (NP (Q each#each_adj) (CODE <font>) (N bed#bed_n)))
			  (CODE <$$font>)
			  (IP-INF (TO to#to_prep)
				  (VB (VB walk#walk_v) (CONJ and#and_conj1) (VB work#work_v))
				  (PP (P about#about_adv)
				      (NP (PRO them#them_pron)))
				  (PUNC ,)
				  (PP (P without#without_adv)
				      (IP-PPL (VAG prejudicing#prejudice_v)
					      (NP-OB1 (D the#the_adj) (CODE <font>) (NS Plants#plant_n1)))))))
	  (PUNC :)
	  (CODE <$$font>))
  (ID LANGF-1696-E3-P1,26.225))

( (IP-IMP (VBI Set#set_v1)
	  (CODE <font>)
	  (NP-OB1 (NUM two#two_adj) (NS rows#row_n1))
	  (CODE <$$font>)
	  (NP-ADV (NP-MSR (NP (D a#a_adj) (CODE <font>) (N foot#foot_n))
			  (CODE <$$font>)
			  (CONJP (CONJ or#or_conj1)
				 (NP (QR more#more_adj)))
			  (N distance#distance_n))
		  (NP (Q each#each_adj))
		  (PP (P from#from_prep)
		      (NP (OTHER other#other_adj))))
	  (PP (P on#on_prep)
	      (NP (Q every#every_adj) (CODE <font>) (N bed#bed_n)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P by#by_prep)
	      (IP-PPL (IP-PPL (VAG drawing#draw_v)
			      (NP-OB1 (D a#a_adj) (CODE <font>) (N line#line_n2)))
		      (CODE <$$font>)
		      (PUNC ,)
		      (CONJP (CONJ and#and_conj1)
			     (IP-PPL (VAG pricking#prick_v)
				     (CODE <font>)
				     (NP-OB1 (NS holes#hole_n))
				     (CODE <$$font>)
				     (ADJP-LOC (NP-MSR (D a#a_adj) (ADJ full#full_adj) (CODE <font>) (N foot#foot_n))
					       (CODE <$$font>)
					       (PP (P+ADJ asunder#asunder_adv)))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,26.226))

( (IP-IMP (VBI let#let_v1)
	  (IP-INF (NP-SBJ (D the#the_adj) (CODE <P_27>) (CODE <font>) (NS holes#hole_n))
		  (CODE <$$font>)
		  (BE be#be_v)
		  (ADJP-PRD (ADVR so#so_adv)
			    (ADJ deep#deep_adj)
			    (PUNC ,)
			    (CP-DEG (C that#that_conj)
				    (IP-SUB (PP (P if#if_conj)
						(CP-ADV (C 0)
							(IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (NS roots#root_n1))
								(CODE <$$font>)
								(BEP be#be_v)
								(NEG not#not_adv)
								(ADJP-PRD (ADV very#very_adj) (ADJ long#long_adj1)))))
					    (PUNC ,)
					    (NP-SBJ (PRO you#you_pron))
					    (MD may#may_v1)
					    (VB set#set_v1)
					    (NP-OB1 (PRO$ your#your_pron) (NS Plants#plant_n1))
					    (ADVP (NP-MSR (NP-MSR (NUMP (PP (P at#at_prep)
									    (QP (QS least#least_adj)))
									(NUM two#two_adj))
								  (NS fingers#finger_n))
							  (N breadth#breadth_n))
						  (ADVR deeper#deep_adv)
						  (PP (P in#in_prep)
						      (NP (D the#the_adj)
							  (N ground#ground_n)
							  (PP (P then#than_conj)
							      (CP-CMP (WADVP-1 0)
								      (C 0)
								      (IP-SUB (ADVP *T*-1)
									      (NP-SBJ (PRO they#they_pron))
									      (VBD grew#grow_v)
									      (PP (P in#in_prep)
										  (NP (D the#the_adj) (CODE <font>) (N Seed-plot#seed-plot_n)))))))))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,27.227))

( (IP-IMP (CODE <font>)
	  (VBI close#close_v)
	  (CODE <$$font>)
	  (NP-OB1 (D the#the_adj) (CODE <font>) (N mold#mould_n1))
	  (CODE <$$font>)
	  (PP (P about#about_adv)
	      (NP (PRO them#them_pron)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,27.228))

( (IP-IMP (CONJ and#and_conj1)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (BEP be#be_v)
			      (NP-PRD (D a#a_adj)
				      (ADJP (ADV very#very_adj) (CODE <font>) (ADJ dry#dry_adj))
				      (CODE <$$font>)
				      (N time#time_n)))))
	  (PUNC ,)
	  (CODE <font>)
	  (VBI water#water_v)
	  (CODE <$$font>)
	  (NP-OB1 (PRO them#them_pron))
	  (NP-TMP (D the#the_adj) (ADJ same#same_adj) (N day#day_n))
	  (PUNC ,)
	  (IP-INF-PRP (ADVP (D the#the_adj) (ADVR better#better_adj))
		      (TO to#to_prep)
		      (VB settle#settle_v)
		      (NP-OB1 (D the#the_adj) (N Earth#earth_n1))
		      (PP (P about#about_adv)
			  (NP (PRO them#them_pron))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,27.229))

( (IP-IMP (IP-IMP (PP (P If#if_conj)
		      (CP-ADV (C 0)
			      (IP-SUB (IP-SUB-1 (NP-SBJ (PRO you#you_pron))
						(MD can#can_v1)
						(VB get#get_v)
						(NP-OB1 (ADJ old#old_adj)
							(CODE <font>)
							(N Fearn#fern_n1)
							(CODE <$$font>)
							(PUNC <paren>)
							(RRC (PP (P in#in_prep)
								 (NP (Q some#some_pron) (NS places#place_n1)))
							     (VAN called#call_v)
							     (ALSO also#also_adv)
							     (IP-SMC (NP-SBJ *)
								     (CODE <font>)
								     (NP-PRD (NS Brakes#brake_n1))))))
				      (CODE <$$font>)
				      (PUNC <$$paren>)
				      (CONJP (CONJ or#or_conj1)
					     (IP-SUB=1 (PP (P for#for_prep)
							   (NP (N want#want_adj)
							       (PP (P of#of_prep)
								   (NP (PRO it#it_pron)))))
						       (CODE <font>)
						       (NP-OB1 (NP (N Straw#straw_n1))
							       (CODE <$$font>)
							       (PUNC ,)
							       (CONJP (CONJ or#or_conj1)
								      (CODE <font>)
								      (NP (ADJ new#new_adj) (N Dung#dung_n1)))))))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (VBI cover#cover_v1)
		  (NP-OB1 (D the#the_adj) (CODE <font>) (NS Beds#bed_n))
		  (CODE <$$font>)
		  (PP (P with#with_prep)
		      (NP (PRO it#it_pron)))
		  (PUNC ,)
		  (CP-CAR (WNP-2 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (IP-SUB-3 (NP-SBJ *T*-2)
					    (MD will#will_v1)
					    (VB keep#keep_v)
					    (NP-OB1 (D the#the_adj) (CODE <font>) (NS roots#root_n1))
					    (CODE <$$font>)
					    (ADJP-SPR (ADJ warm#warm_adj))
					    (PP (P in#in_prep)
						(NP (D the#the_adj) (CODE <font>) (N Winter#winter_n1))))
				  (CODE <$$font>)
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (IP-SUB=3 (VB preserve#preserve_v)
						   (NP-OB1 (PRO them#them_pron))
						   (PP (P from#from_prep)
						       (NP (Q overmuch#overmuch_adj) (N heat#heat_n)))
						   (PP (P in#in_prep)
						       (NP (D the#the_adj) (CODE <font>) (N Summer#summer_n1))))))))
	  (CODE <$$font>)
	  (PUNC ;)
	  (CONJP (IP-MAT (IP-MAT-4 (PP (P if#if_conj)
				       (CP-ADV (C 0)
					       (IP-SUB (NP-SBJ (D the#the_adj) (N land#land_n1))
						       (BEP be#be_v)
						       (ADJP-PRD (NP-MSR (Q any#any_adj) (N whit#whit_n1))
								 (CODE <font>)
								 (ADJ stiff#stiff_adj)))))
				   (CODE <$$font>)
				   (PUNC ,)
				   (NP-SBJ (D this#this_pron) (N cover#cover_n1))
				   (MD will#will_v1)
				   (VB make#make_v1)
				   (IP-SMC (NP-SBJ (PRO it#it_pron))
					   (CODE <font>)
					   (ADJP-PRD (ADJ mellow#mellow_adj))))
			 (CODE <$$font>)
			 (PUNC ,)
			 (CONJP (CONJ and#and_conj1)
				(IP-MAT=4 (PP (P when#when_adv)
					      (CODE <font>)
					      (ADJP (ADJ rotten#rotten_adj)))
					  (CODE <$$font>)
					  (VB enrich#enrich_v)
					  (NP-OB1 (PRO it#it_pron))))
			 (PUNC ,)
			 (CONJP (CONJ and#and_conj1)
				(IP-MAT=4 (NP-MSR (QP (ADV very#very_adj) (Q much#much_adj)))
					  (VB hinder#hinder_v)
					  (NP-OB1 (D the#the_adj)
						  (N growth#growth_n1)
						  (PP (P of#of_prep)
						      (CODE <font>)
						      (NP (NS weeds#weed_n1)
							  (CODE <$$font>)
							  (PUNC ,)
							  (CP-REL (WNP-5 (WPRO which#which_adj))
								  (C 0)
								  (IP-SUB (NP-SBJ *T*-5)
									  (MD ought#ought_v)
									  (ADVP (ADV duly#duly_adv))
									  (TO to#to_prep)
									  (BE be#be_v)
									  (VAN pluck'd#pluck_v)
									  (RP up#up_adv1)))))))))))
  (ID LANGF-1696-E3-P1,27.230))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI put#put_v)
	  (NP-OB1 (ADJ new#new_adj) (CODE <font>) (N Fearn#fern_n1) (CODE <$$font>) (PUNC ,) (CODE <font>) (X &c.#et-cetera_n))
	  (CODE <$$font>)
	  (PP (P as#as_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (ADJ old#old_adj))
			      (VBP rots#rot_v))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,27.231))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 3#three_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,27.232))

( (IP-IMP (IP-IMP (PP (P If#if_conj)
		      (CP-ADV (C 0)
			      (IP-SUB (NP-SBJ (Q any#any_adj)
					      (PP (P of#of_prep)
						  (NP (D these#these_pron) (CODE <font>) (NS Plants#plant_n1))))
				      (CODE <$$font>)
				      (PUNC <paren>)
				      (PP-PRN (P in#in_prep)
					      (NP (D the#the_adj)
						  (NS years#year_n)
						  (RRC (VAG following#follow_v))))
				      (PUNC <$$paren>)
				      (VBP shoot#shoot_v)
				      (ADVP (ADV forth#forth_adv))
				      (CODE <font>)
				      (ADVP (ADV upright#upright_adv)))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (VBI top#top_v1)
		  (NP-OB1 (PRO them#them_pron))
		  (ADVP-TMP (ADV early#early_adv)
			    (PP (P in#in_prep)
				(NP (D the#the_adj) (N year#year_n)))))
	  (PUNC ,)
	  (CONJP (IP-MAT (NP-SBJ (PRO it#it_pron))
			 (MD will#will_v1)
			 (VB make#make_v1)
			 (IP-INF (IP-INF (NP-SBJ (PRO them#them_pron))
					 (VB grow#grow_v)
					 (ADJP-PRD (ADJR bigger#big_adj) (ADJ bodied#bodied_adj)))
				 (PUNC ,)
				 (CONJP (CONJ and#and_conj1)
					(IP-INF (NP-SBJ *con*)
						(ADVP (ADV so#so_adv))
						(VB become#become_v)
						(ADVP (ADVR sooner#soon_adv))
						(ADJP-PRD (ADJ ready#ready_adj)
							  (PP (P for#for_prep)
							      (CODE <font>)
							      (NP (N graffing#graffing_n)))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,27.233))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP intend#intend_v)
			      (IP-INF (TO to#to_prep)
				      (VB raise#raise_v1)
				      (IP-INF (NP-SBJ (Q any#any_adj) (CODE <font>) (NS Stocks#stock_n1))
					      (CODE <$$font>)
					      (PUNC ,)
					      (TO to#to_prep)
					      (BE be#be_v)
					      (VAN set#set_v1)
					      (RP out#out_adv)
					      (PP (P in#in_prep)
						  (CODE <font>)
						  (NP (NS Fields#field_n1)))
					      (CODE <$$font>)
					      (PP (P before#before_adv)
						  (CP-ADV (C 0)
							  (IP-SUB (NP-SBJ (PRO they#they_pron))
								  (BEP are#be_v)
								  (CODE <font>)
								  (VAN graffed#graff_v1)))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD need#need_v2)
	  (NEG not#not_adv)
	  (CODE <font>)
	  (VB top#top_v1)
	  (CODE <$$font>)
	  (NP-OB1 (PRO them#them_pron))
	  (PP (P upon#upon_prep)
	      (NP (PRO$ their#their_adj) (ADJ first#first_adj) (CODE <font>) (N removal#removal_n)))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,27.234))

( (IP-MAT (CONJ neither#neither_adv)
	  (MD need#need_v2)
	  (NP-SBJ (PRO you#you_pron))
	  (CODE <font>)
	  (VB remove#remove_v)
	  (CODE <$$font>)
	  (NP-OB1 (PRO them#them_pron))
	  (PUNC ,)
	  (PP (P till#till_prep)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (VBN grown#grow_v)
			      (CODE <font>)
			      (ADJP-SPR (ADJ high#high_adv)
					(CODE <$$font>)
					(ADVP (ADVR enough#enough_adj)
					      (CODE <P_28>)
					      (IP-INF-DEG (TO to#to_prep)
							  (VB stand#stand_v)
							  (PP (P in#in_prep)
							      (NP (D the#the_adj) (CODE <font>) (NS Fields#field_n1)))))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,28.235))

( (IP-MAT (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP find#find_v)
			      (CP-THT (C that#that_conj)
				      (IP-SUB (IP-SUB (NP-SBJ (PRO they#they_pron))
						      (CODE <font>)
						      (VBP spread#spread_v)
						      (CODE <$$font>)
						      (NP-OB1 (PRO$ their#their_adj) (CODE <font>) (NS roots#root_n1)))
					      (CODE <$$font>)
					      (PUNC ,)
					      (CONJP (CONJ and#and_conj1)
						     (IP-SUB (NP-SBJ *con*)
							     (VBP run#run_v)
							     (NEG not#not_adv)
							     (CODE <font>)
							     (ADVP-DIR (ADV downward#downward_adv))))
					      (CODE <$$font>)
					      (PUNC ,)
					      (PP (P as#as_adv)
						  (CP-ADV (WNP-1 0)
							  (C 0)
							  (IP-SUB (PP (P in#in_prep)
								      (CODE <font>)
								      (NP (ADJP (ADJ gravelly#gravelly_adj) (CODE <$$font>) (CONJ and#and_conj1) (SUCH such#such_adj))
									  (N kind#kind_n)
									  (PP (P of#of_prep)
									      (CODE <font>)
									      (NP (NS soils#soil_n1)))))
								  (CODE <$$font>)
								  (NP-SBJ (PRO they#they_pron))
								  (MD will#will_v1)
								  (NEG not#not_adv)
								  (BE be#be_v)
								  (ADJP-PRD (ADJ apt#apt_adj)
									    (IP-INF (NP-OB1 *T*-1)
										    (TO to#to_prep)
										    (DO do#do_v)))))))))))
	  (PUNC ;)
	  (PUNC <paren>)
	  (IP-MAT-PRN (CONJ and#and_conj1)
		      (PP (P by#by_prep)
			  (NP (D the#the_adj)
			      (ADJ first#first_adj)
			      (CP-REL (WNP-2 0)
				      (C 0)
				      (IP-SUB (NP-OB1 *T*-2)
					      (NP-SBJ (PRO you#you_pron))
					      (CODE <font>)
					      (VBP draw#draw_v)
					      (RP up#up_adv1)))))
		      (CODE <$$font>)
		      (NP-SBJ (PRO you#you_pron))
		      (MD may#may_v1)
		      (VB judge#judge_v)
		      (PP (P of#of_prep)
			  (NP (D the#the_adj) (CODE <font>) (N rest#rest_n3)))
		      (CODE <$$font>)
		      (PUNC ,)
		      (CP-QUE-SUB (WQ whether#whether_pron)
				  (C 0)
				  (IP-SUB (IP-SUB-3 (NP-SBJ (PRO they#they_pron))
						    (DOP do#do_v)
						    (VB *))
					  (CONJP (CONJ or#or_conj1)
						 (IP-SUB=3 (NEG no#no_adv1))))))
	  (PUNC :)
	  (PUNC <$$paren>)
	  (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (CODE <font>)
			      (VBP reserve#reserve_v1)
			      (CODE <$$font>)
			      (NP-OB1 (Q any#any_adj))
			      (PP (P for#for_prep)
				  (NP (D this#this_pron) (N use#use_n))))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (HVD had#have_v)
	  (ADVP (ADVS best#best_adj))
	  (CODE <font>)
	  (VB choose#choose_v)
	  (CODE <$$font>)
	  (NP-OB1 (SUCH such#such_adj)
		  (PP (P as#as_adv)
		      (CP-CMP (WNP-4 0)
			      (C 0)
			      (IP-SUB (NP-SBJ *T*-4)
				      (VBD grew#grow_v)
				      (CODE <font>)
				      (ADJP-SPR (ADJP (ADV straight#straight_adj))
						(CODE <$$font>)
						(PUNC ,)
						(CONJP (CONJ and#and_conj1)
						       (NP-ADV (PP (P at#at_prep)
								   (NP (ADJ convenient#convenient_adj) (CODE <font>) (N distance#distance_n)))
							       (CODE <$$font>)
							       (NP (ONE one#one_adj)
								   (PP (P from#from_prep)
								       (NP (D+OTHER another#another_pron)))))))))))
	  (PUNC ;)
	  (CP-CAR (WNP-5 (WPRO which#which_adj))
		  (C 0)
		  (IP-SUB (NP-SBJ (PRO you#you_pron))
			  (MD may#may_v1)
			  (VB contrive#contrive_v1)
			  (IP-INF (NP-OB1 *T*-5)
				  (TO to#to_prep)
				  (DO do#do_v))
			  (PUNC ,)
			  (PP (P in#in_prep)
			      (CODE <font>)
			      (IP-PPL (VAG drawing#draw_v)
				      (CODE <$$font>)
				      (RP out#out_adv)
				      (NP-TMP (D the#the_adj) (CODE <font>) (ADJ first#first_adj) (NUM two#two_adj) (CODE <$$font>) (NS years#year_n))
				      (PUNC ,)
				      (NP-OB1 (SUCH such#such_adj)
					      (PP (P as#as_adv)
						  (CP-CMP (WNP-6 0)
							  (C 0)
							  (IP-SUB (NP-SBJ *T*-6)
								  (BEP be#be_v)
								  (PP (P of#of_prep)
								      (CODE <font>)
								      (NP (N stature#stature_n)
									  (CODE <$$font>)
									  (IP-INF (TO to#to_prep)
										  (BE be#be_v)
										  (CODE <font>)
										  (VAN Transplanted#transplant_v)
										  (CODE <$$font>)
										  (PP (P from#from_prep)
										      (PP (P among#among_prep)
											  (NP (PRO them#them_pron)))))))))))))))
	  (PUNC :))
  (ID LANGF-1696-E3-P1,28.236))

( (IP-MAT (CP-QUE-SUB-ADV (WQ Whether#whether_pron)
			  (C 0)
			  (IP-SUB (IP-SUB (NP-SBJ (PRO you#you_pron))
					  (VBP remove#remove_v)
					  (NP-OB1 (D these#these_pron))
					  (PP (P into#into_prep)
					      (NP (PRO$ your#your_pron) (CODE <font>) (N Nursery#nursery_n))))
				  (CODE <$$font>)
				  (CONJP (CONJ or#or_conj1)
					 (IP-SUB (NP-SBJ *con*)
						 (VBP suffer#suffer_v)
						 (IP-INF (NP-SBJ (PRO them#them_pron))
							 (TO to#to_prep)
							 (VB remain#remain_v)
							 (PP (P in#in_prep)
							     (NP (D the#the_adj) (CODE <font>) (N Seminary#seminary_n1))))))))
	  (CODE <$$font>)
	  (NP-SBJ (PRO you#you_pron))
	  (MD ought#ought_v)
	  (TO to#to_prep)
	  (VB Dress#dress_v)
	  (NP-OB1 (D these#these_pron))
	  (NP-TMP (NUMP (NUM once#once_adv) (CONJ or#or_conj1) (NUM twice#twice_adv))
		  (NP-MSR (D a#a_adj) (N year#year_n)))
	  (PP (P by#by_prep)
	      (IP-PPL (IP-PPL (VAG cutting#cut_v)
			      (RP off#off_adv)
			      (NP-OB1 (D the#the_adj) (ADJS biggest#big_adj) (NS side-branches#SEE_side_n1))
			      (IP-INF-PRP (TO to#to_prep)
					  (VB hasten#hasten_v)
					  (NP-OB1 (PRO$ their#their_adj)
						  (IP-PPL (VAG growing#grow_v)
							  (CODE <font>)
							  (ADJP-PRD (ADJ tall#tall_adj))))))
		      (CODE <$$font>)
		      (PUNC ,)
		      (CONJP (CONJ but#but_prep)
			     (IP-PPL (VAG leaving#leave_v1)
				     (NP-OB1 (Q some#some_pron) (ADJ small#small_adj) (NS side-branches#SEE_side_n1))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,28.237))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (D this#this_pron))
	  (VBP causeth#cause_v1)
	  (IP-INF (NP-SBJ (PRO them#them_pron))
		  (TO to#to_prep)
		  (VB thrive#thrive_v)
		  (PP (P in#in_prep)
		      (CODE <font>)
		      (NP (N bigness#bigness_n)))
		  (CODE <$$font>)
		  (NP-MSR (QP (D the#the_adj) (QR more#more_adj)))
		  (PUNC ,)
		  (CP-CAR (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-OB1 *T*-1)
				  (NP-SBJ (PRO they#they_pron))
				  (MD ought#ought_v)
				  (TO to#to_prep)
				  (DO do#do_v)
				  (ADJP-SPR (ADJ proportionable#proportionable_adj)
					    (PP (P to#to_prep)
						(NP (PRO$ their#their_adj) (N height#height_n)))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,28.238))

( (IP-MAT (CONJ or#or_conj1)
	  (ELSE else#else_adv)
	  (NP-SBJ (PRO they#they_pron))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADVR too#too_adv)
		    (CODE <font>)
		    (ADJ weak#weak_adj)
		    (CODE <$$font>)
		    (IP-INF-DEG (TO to#to_prep)
				(CODE <font>)
				(VB bear#bear_v1)
				(NP-OB1 (D a#a_adj) (N top#top_n1))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,28.239))

( (IP-IMP (VBI Observe#observe_v)
	  (NP-OB1 (D this#this_pron))
	  (ALSO also#also_adv)
	  (PP (P in#in_prep)
	      (CODE <font>)
	      (NP (ADJ graffed#graffed_adj) (NS Trees#tree_n)))
	  (CODE <$$font>)
	  (PP (PP (P in#in_prep)
		  (NP (PRO$ your#your_pron) (CODE <font>) (NS Nurseries#nursery_n)))
	      (CODE <$$font>)
	      (CONJP (CONJ or#or_conj1)
		     (ADVP (ADV elsewhere#elsewhere_adv))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,28.240))

( (CODE {COM:insert_helsinki_1_here}))

( (CODE <P_42>))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 2#two_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,42.243))

( (IP-MAT (NP-SBJ (D The#the_adj)
		  (ADJ second#second_adj)
		  (N way#way_n1)
		  (PUNC <paren>)
		  (RRC (VAN called#call_v)
		       (IP-SMC (NP-SBJ *)
			       (CODE <font>)
			       (NP-PRD (N Graffing#graffing_n)
				       (PP (P in#in_prep)
					   (NP (D the#the_adj) (N Bark#bark_n1)))))))
	  (CODE <$$font>)
	  (PUNC <$$paren>)
	  (BEP is#be_v)
	  (ADJP-PRD (Q much#much_adj)
		    (ADJ like#like_adj)
		    (NP (D this#this_pron)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,42.244))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO I#i_pron))
	  (VBP prefer#prefer_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P from#from_prep)
	      (NP (N experience#experience_n)))
	  (NP-MSR (Q much#much_adj))
	  (PP (P before#before_adv)
	      (NP (NP (D the#the_adj) (ADJ fore-mentioned#SEE_foremention_v))
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (NP (Q any#any_adj) (OTHER other#other_adj) (N way#way_n1)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,42.245))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (PRO it#it_pron))
	  (MD can#can_v1)
	  (PP (P with#with_prep)
	      (NP (N certainty#certainty_n)))
	  (FP only#only_adj)
	  (BE be#be_v)
	  (VAN used#use_v)
	  (PP (P for#for_prep)
	      (CODE <font>)
	      (NP (NS Apples#apple_n)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (Q all#all_adj)
				      (NS Scions#scion_n)
				      (PP (P of#of_prep)
					  (NP (OTHER other#other_adj) (N Fruit#fruit_n))))
			      (MD will#will_v1)
			      (BE be#be_v)
			      (VAN grown#grow_v)
			      (PP (P past#past_prep)
				  (NP (N use#use_n)))
			      (PUNC ,)
			      (PP (P before#before_adv)
				  (CP-ADV (C 0)
					  (IP-SUB (NP-SBJ (D the#the_adj)
							  (CODE <font>)
							  (N Bark#bark_n1)
							  (CODE <$$font>)
							  (PP (P of#of_prep)
							      (NP (D the#the_adj) (CODE <font>) (NS stocks#stock_n1))))
						  (CODE <$$font>)
						  (MD will#will_v1)
						  (CODE <font>)
						  (VB peel#peel_v1)
						  (CODE <$$font>)
						  (PUNC ;)
						  (CP-CAR (WNP-1 (WPRO which#which_adj))
							  (C 0)
							  (IP-SUB (NP-SBJ *T*-1)
								  (BEP is#be_v)
								  (NP-TMP (ADV about#about_adv)
									  (NP (D the#the_adj)
									      (N end#end_n)
									      (PP (P of#of_prep)
										  (CODE <font>)
										  (NP (NPR March#NA))))
									  (CODE <$$font>)
									  (CONJP (CONJ or#or_conj1)
										 (NP (D the#the_adj)
										     (N beginining#beginning_n)
										     (PP (P of#of_prep)
											 (CODE <font>)
											 (NP (NPR April#NA))))))))))))))
	  (CODE <$$font>)
	  (PUNC :))
  (ID LANGF-1696-E3-P1,42.246))

( (IP-MAT (CONJ But#but_prep)
	  (NP-SBJ (D this#this_pron))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (NP-PRD (N time#time_n)
		  (ADJP (ADJR enough#enough_adj))
		  (PP (P for#for_prep)
		      (CODE <font>)
		      (NP (NS Apples#apple_n))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (NS Stocks#stock_n1))
			      (BEP be#be_v)
			      (PP (P in#in_prep)
				  (NP (Q any#any_adj) (N thing#thing_n1)))
			      (NP-PRD (ADJ good#good_adj) (N liking#liking_n1))
			      (PUNC ,)
			      (CP-CAR (WNP-1 (WPRO which#which_adj))
				      (C 0)
				      (IP-SUB (PP (P if#if_conj)
						  (CP-ADV (C 0)
							  (IP-SUB (NP-PRD *T*-1)
								  (NP-SBJ (PRO they#they_pron))
								  (BEP be#be_v)
								  (NEG not#not_adv))))
					      (PUNC ,)
					      (NP-SBJ (PRO they#they_pron))
					      (BEP are#be_v)
					      (NEG not#not_adv)
					      (ADJP-PRD (ADJ fit#fit_adj)
							(IP-INF (TO to#to_prep)
								(BE be#be_v)
								(VAN graffed#graff_v1)
								(NP-ADV (Q any#any_adj) (N way#way_n1)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,42.247))

( (IP-MAT (IP-MAT-1 (NP-SBJ (PRO I#i_pron))
		    (HVP have#have_v)
		    (VBN kept#keep_v)
		    (NP-OB1 (NS Scions#scion_n)
			    (PP (P of#of_prep)
				(CODE <font>)
				(NP (NS Pears#pear_n))))
		    (CODE <$$font>)
		    (PP (P till#till_prep)
			(CP-ADV (C 0)
				(IP-SUB (NP-SBJ (D the#the_adj) (N bark#bark_n1))
					(HVP hath#have_v)
					(VBN risen#rise_v)))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (ADVP (ADV thus#thus_adv))
			   (VBN graffed#graff_v1)
			   (NP-OB1 (PRO them#them_pron))
			   (PP (P with#with_prep)
			       (NP (N success#success_n)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,42.248))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (CODE <font>)
		      (IP-SUB (NP-SBJ (NPR February#NA))
			      (CODE <$$font>)
			      (HVP have#have_v)
			      (BEN been#be_v)
			      (ADJP-PRD (ADVR so#so_adv)
					(ADJ sharp#sharp_adj)
					(PP (P as#as_adv)
					    (IP-INF (TO to#to_prep)
						    (VB keep#keep_v)
						    (NP-OB1 (D the#the_adj) (NS Scions#scion_n))
						    (ADVP (ADV backward#backward_adv))))))))
	  (PUNC ,)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (MD may#may_v1)
	  (DO do#do_v)
	  (ADVP (ADV very#very_adj) (ADV well#well_adv))
	  (PUNC ,)
	  (IP-PPL-1 (NEG not#not_adv)
		    (VAG cutting#cut_v)
		    (NP-OB1 (PRO them#them_pron))
		    (PP (P till#till_prep)
			(PP (P toward#toward_prep)
			    (NP (D the#the_adj)
				(N end#end_n)
				(PP (P of#of_prep)
				    (CODE <font>)
				    (NP (NPR February#NA)))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,42.249))

( (IP-MAT (CONJ for#for_prep)
	  (ADVP-TMP (ADV then#then_adv))
	  (NP-SBJ (PRO they#they_pron))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADVP (ADV well#well_adv))
	  (VAN preserved#preserve_v)
	  (PP (PP (P till#till_prep)
		  (CODE <font>)
		  (NP (NPR Lady-day#NA)))
	      (CODE <$$font>)
	      (CONJP (CONJ or#or_conj1)
		     (PP (ADV+P thereabouts#thereabouts_adv))))
	  (PUNC ,)
	  (CP-CAR (WPP-1 (P by#by_prep)
			 (WNP (WD which#which_adj) (N time#time_n)))
		  (C 0)
		  (IP-SUB (PP *T*-1)
			  (NP-SBJ (D the#the_adj)
				  (N bark#bark_n1)
				  (PP (P of#of_prep)
				      (CODE <font>)
				      (NP (N Pear#pear_n) (CODE <P_43>) (NS stocks#stock_n1))))
			  (CODE <$$font>)
			  (ADVP (ADV generally#generally_adv))
			  (MD will#will_v1)
			  (VB peel#peel_v1)
			  (PP (P from#from_prep)
			      (NP (D the#the_adj) (CODE <font>) (NS Stocks#stock_n1)))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,43.250))

( (IP-IMP (VBI Prepare#prepare_v)
	  (ADVP (ADV then#then_adv))
	  (NP-OB1 (PRO$ your#your_pron)
		  (CODE <font>)
		  (N Stock#stock_n1)
		  (CODE <$$font>)
		  (CONJP (CONJ and#and_conj1)
			 (CODE <font>)
			 (NX (N Scion#scion_n))))
	  (CODE <$$font>)
	  (PP (ADV exactly#exactly_adv)
	      (P as#as_adv)
	      (CP-ADV (WADVP-1 0)
		      (C 0)
		      (IP-SUB (ADVP *T*-1)
			      (NP-SBJ (PRO you#you_pron))
			      (BED were#be_v)
			      (VAN directed#direct_v)
			      (PP (P in#in_prep)
				  (CODE <font>)
				  (NP (N packing#packing_n1))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,43.251))

( (IP-IMP (PP (FP only#only_adj)
	      (P instead#instead_adv)
	      (PP (P of#of_prep)
		  (IP-PPL (VAG cutting#cut_v)
			  (NP-OB1 (D the#the_adj) (CODE <font>) (N bark#bark_n1))
			  (CODE <$$font>)
			  (PP (P off#off_adv)
			      (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (VBI slit#slit_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P on#on_prep)
	      (NP (D the#the_adj) (CODE <font>) (N South-west#south-west_adv) (CODE <$$font>) (N side#side_n1)))
	  (PUNC ,)
	  (PP (P from#from_prep)
	      (NP (D the#the_adj) (N top#top_n1)))
	  (PUNC ,)
	  (ADJP-SPR (ADV almost#almost_adv)
		    (ADVR as#as_adv)
		    (ADJ long#long_adj1)
		    (PP (P as#as_adv)
			(NP (D the#the_adj)
			    (CODE <font>)
			    (ADJ sloped#sloped_adj)
			    (CODE <$$font>)
			    (N part#part_n1)
			    (PP (P of#of_prep)
				(NP (D the#the_adj) (CODE <font>) (N Scion#scion_n))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,43.252))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI loosen#loosen_v)
	  (NP-OB1 (D the#the_adj) (CODE <font>) (N bark#bark_n1))
	  (CODE <$$font>)
	  (PP (P at#at_prep)
	      (NP (D the#the_adj)
		  (N top#top_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (N slit#slit_n)))))
	  (PP (P with#with_prep)
	      (NP (D the#the_adj)
		  (N point#point_n1)
		  (PP (P of#of_prep)
		      (NP (PRO$ your#your_pron) (N Knife#knife_n)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,43.253))

( (IP-IMP (HVI Have#have_v)
	  (PP (P in#in_prep)
	      (NP (N readiness#readiness_n)))
	  (NP-OB1 (D a#a_adj)
		  (ADJ little#little_adj)
		  (N Instrument#instrument_n)
		  (RRC (VAN made#make_v1)
		       (PP (P of#of_prep)
			   (CODE <font>)
			   (NP (NP (N Ivory#ivory_n))
			       (CODE <$$font>)
			       (PUNC ,)
			       (CONJP (CONJ or#or_conj1)
				      (NP (D a#a_adj)
					  (CODE <font>)
					  (N Deer#deer_n)
					  (CODE <$$font>)
					  (CONJP (CONJ or#or_conj1)
						 (CODE <font>)
						 (NX (N Sheep-shank#sheepshank_n)))))
			       (CODE <$$font>)
			       (PUNC ,)
			       (CONJP (CONJ or#or_conj1)
				      (CODE <font>)
				      (NP (N Silver#silver_n)))
			       (CODE <$$font>)
			       (PUNC ,)
			       (CONJP (CONJ or#or_conj1)
				      (NP (ADJ hard#hard_adj) (ADJ smooth#smooth_adj) (N Wood#wood_n1)))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,43.254))

( (IP-IMP (PP (P at#at_prep)
	      (NP (ONE one#one_adj) (N end#end_n)))
	  (VBI let#let_v1)
	  (IP-INF (NP-SBJ (PRO it#it_pron))
		  (BE be#be_v)
		  (VAN made#make_v1)
		  (PP (PP (P of#of_prep)
			  (NP (D the#the_adj)
			      (N shope#shop_n)
			      (CODE {COM:sic})
			      (PP (P of#of_prep)
				  (NP (D the#the_adj)
				      (N slope#slope_n1)
				      (N part#part_n1)
				      (PP (P of#of_prep)
					  (NP (D the#the_adj) (N Scion#scion_n)))))))
		      (PUNC ,)
		      (CONJP (CONJ but#but_prep)
			     (NP (QP (Q much#much_adj) (QR less#less_adj))
				 (NP-ADV (Q every#every_adj) (N way#way_n1))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,43.255))

( (IP-IMP (VBI thrust#thrust_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (RP down#down_adv)
	      (P betwixt#betwixt_prep)
	      (NP (NP (D the#the_adj) (N Bark#bark_n1))
		  (CONJP (CONJ and#and_conj1)
			 (NP (D the#the_adj)
			     (N Wood#wood_n1)
			     (PP (P of#of_prep)
				 (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1)))
			     (CODE <$$font>)
			     (PUNC ,)
			     (CP-REL (WADVP-1 (WADV where#where_adv))
				     (C 0)
				     (IP-SUB (ADVP-LOC *T*-1)
					     (NP-SBJ (PRO it#it_pron))
					     (BED was#be_v)
					     (VAN slit#slit_v)))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,43.256))

( (IP-IMP (IP-INF-PRP (TO to#to_prep)
		      (VB make#make_v1)
		      (NP-OB1 (N room#room_n1))
		      (PP (P for#for_prep)
			  (NP (D the#the_adj) (N Scion#scion_n))))
	  (PUNC ,)
	  (VBI take#take_v)
	  (NP-OB1 (PRO it#it_pron))
	  (RP out#out_adv))
  (ID LANGF-1696-E3-P1,43.257))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI put#put_v)
	  (RP in#in_adv)
	  (NP-OB1 (D the#the_adj) (N Scion#scion_n))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,43.258))

( (IP-IMP (CONJ but#but_prep)
	  (ADVP-TMP (ADV first#first_adj))
	  (VBI cut#cut_v)
	  (NP-OB1 (D a#a_adj)
		  (ADJ little#little_adj)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (CODE <font>) (N Bark#bark_n1))))
	  (CODE <$$font>)
	  (PP (P at#at_prep)
	      (NP (D the#the_adj)
		  (ADJ thin#thin_adj)
		  (N end#end_n)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (N slope#slope_n1)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj) (CODE <font>) (N Scion#scion_n)))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (PRO it#it_pron))
			  (VBP double#double_v)
			  (NEG not#not_adv)
			  (PP (P in#in_prep)
			      (IP-PPL (VAG going#go_v) (RP down#down_adv)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,43.259))

( (IP-IMP (ADVP (ADV yet#yet_adv))
	  (VBI leave#leave_v1)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P with#with_prep)
	      (NP (D a#a_adj) (ADJ sharp#sharp_adj) (N edge#edge_n)))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,43.260))

( (IP-IMP (CONJ and#and_conj1)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (PP (P when#when_adv)
				  (CP-ADV (C 0)
					  (IP-SUB (NP-SBJ (PRO$ your#your_pron)
							  (CODE {SIC:you})
							  (N Scion#scion_n))
						  (BEP is#be_v)
						  (VAN put#put_v)
						  (RP in#in_adv))))
			      (PUNC ,)
			      (NP-SBJ (PRO it#it_pron))
			      (MD will#will_v1)
			      (VB bear#bear_v1)
			      (NP-OB1 (D the#the_adj) (CODE <font>) (N bark#bark_n1))
			      (CODE <$$font>)
			      (ADJP-SPR (ADJ hollow#hollow_adj)
					(PP (P from#from_prep)
					    (NP (D the#the_adj) (N Stock#stock_n1)))))))
	  (PUNC ,)
	  (VBI (VBI nick#nick_v2) (CONJ or#or_conj1) (VBI slit#slit_v))
	  (NP-OB1 (D the#the_adj) (CODE <font>) (N Bark#bark_n1))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P on#on_prep)
	      (NP (Q each#each_adj)
		  (N side#side_n1)
		  (NP-COM (D the#the_adj) (N Scion#scion_n))))
	  (PUNC ,)
	  (PP (P so#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (MD may#may_v1)
			      (VB fall#fall_v)
			      (ADJP-LOC (ADJ close#close_adj)
					(PP (PP (P to#to_prep)
						(NP (D the#the_adj) (N Stock#stock_n1)))
					    (PUNC ,)
					    (CONJP (CONJ and#and_conj1)
						   (PP (P to#to_prep)
						       (NP (D the#the_adj)
							   (NS edges#edge_n)
							   (PP (P of#of_prep)
							       (NP (D the#the_adj) (N Scion#scion_n)))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,43.261))

( (IP-IMP (CODE <font>)
	  (VBI (VBI Bind#bind_v) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (VBI Clay#clay_v))
	  (CODE <$$font>)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-OB1 *T*-1)
			      (NP-SBJ (PRO you#you_pron))
			      (HVP have#have_v)
			      (ADVP (ADV already#already_adj))
			      (VBN heard#hear_v))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,43.262))

( (CODE <P_44>))

( (IP-MAT (NP-SBJ (D These#these_pron) (NUM two#two_adj))
	  (BEP are#be_v)
	  (NP-PRD (D the#the_adj)
		  (ADJS best#best_adj)
		  (NS ways#way_n1)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (N Graffing#graffing_n))))
	  (CODE <$$font>)
	  (PP (P for#for_prep)
	      (NP (D these#these_pron) (NS Reasons#reason_n1)))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,44.264))

( (PP (LS 1#one_adj)
      (PUNC .)
      (P Because#because_adv)
      (CP-ADV (C 0)
	      (CODE <font>)
	      (IP-SUB (NP-SBJ (NS Stocks#stock_n1))
		      (CODE <$$font>)
		      (MD may#may_v1)
		      (BE be#be_v)
		      (CODE <font>)
		      (VAN Graffed#graff_v1)
		      (CODE <$$font>)
		      (ADVP (ADV thus#thus_adv))
		      (PUNC ,)
		      (PP (NP-MSR (Q some#some_pron) (NS years#year_n))
			  (P before#before_adv)
			  (CP-ADV (C 0)
				  (IP-SUB (NP-SBJ (PRO they#they_pron))
					  (MD can#can_v1)
					  (BE be#be_v)
					  (ADJP-PRD (ADJ ready#ready_adj)
						    (CP-TMC (WNP-1 0)
							    (IP-INF (NP-OB1 *T*-1)
								    (TO to#to_prep)
								    (CODE <font>)
								    (VB graff#graff_v1)
								    (CODE <$$font>)
								    (PP (P in#in_prep)
									(NP (D the#the_adj) (CODE <font>) (N cleft#cleft_n)))))))))))
      (CODE <$$font>)
      (PUNC ;))
  (ID LANGF-1696-E3-P1,44.265))

( (IP-MAT (CONJ and#and_conj1)
	  (PP-LFD (P though#though_adv)
		  (CP-ADV (C 0)
			  (CODE <font>)
			  (IP-SUB (NP-SBJ (N Whip-graffing#whip-grafting_n))
				  (CODE <$$font>)
				  (MD may#may_v1)
				  (BE be#be_v)
				  (VAN used#use_v)
				  (ADVP-TMP (ADVR sooner#soon_adv)
					    (PP (P then#than_conj)
						(NP (Q either#either_pron)
						    (PP (P of#of_prep)
							(NP (D those#those_pron)))))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV yet#yet_adv))
	  (NP-SBJ-1 (EX their#there_adv))
	  (BEP are#be_v)
	  (NP-1 (OTHER other#other_adj)
		(ADJ great#great_adj)
		(NS inconveniencies#inconveniency_n)
		(RRC (VAG attending#attend_v)
		     (NP-OB1 (PRO it#it_pron))))
	  (PUNC ,)
	  (PP-PRN (P as#as_adv)
		  (CP-ADV (WNP-2 0)
			  (C 0)
			  (IP-SUB (NP-OB1 *T*-2)
				  (NP-SBJ (PRO you#you_pron))
				  (MD will#will_v1)
				  (VB see#see_v)
				  (PP (ADV+P hereafter#hereafter_adv)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,44.266))

( (IP-MAT (LS 2#two_adj)
	  (PUNC .)
	  (NP-SBJ (D The#the_adj) (NS Stocks#stock_n1))
	  (BEP are#be_v)
	  (NP-ADV (D this#this_pron) (N way#way_n1))
	  (NP-MSR (QR less#less_adj))
	  (VAN harmed#harm_v)
	  (PP (P than#than_conj)
	      (ADVP (CP-FRL (WADVP-1 (WADV where#where_adv))
			    (C 0)
			    (IP-SUB (ADVP-LOC *T*-1)
				    (NP-SBJ (D a#a_adj) (N cleft#cleft_n))
				    (BEP is#be_v)
				    (VAN used#use_v)))))
	  (PUNC ,)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (NP-SBJ (D the#the_adj) (N cleft#cleft_n))
				      (VBP lets#let_v1)
				      (NP-OB1 (N wet#wet_n1))
				      (PP (P into#into_prep)
					  (NP (PRO them#them_pron))))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB (NP-SBJ *con*)
					     (VBP makes#make_v1)
					     (IP-SMC (NP-SBJ (PRO them#them_pron))
						     (NEG not#not_adv)
						     (ADJP-PRD (ADVR so#so_adv)
							       (ADJ fit#fit_adj)
							       (PP (P for#for_prep)
								   (IP-PPL (VAG Graffing#graff_v1)
									   (ADVP (ADV again#again_adv))
									   (PUNC <paren>)
									   (PP-PRN (P if#if_conj)
										   (CP-ADV (C 0)
											   (IP-SUB (NP-SBJ (Q any#any_adj))
												   (VBP fail#fail_v)
												   (IP-INF (TO to#to_prep)
													   (VB grow#grow_v)
													   (NP-TMP (D the#the_adj) (ADJ first#first_adj) (N time#time_n))))))))
							       (PUNC <$$paren>)
							       (PP (P as#as_adv)
								   (CP-ADV (WADJP-2 0)
									   (C 0)
									   (IP-SUB (NP-SBJ (D these#these_pron))
										   (VBP continue#continue_v)
										   (IP-INF (ADJP-PRD *T*-2)
											   (TO to#to_prep)
											   (BE be#be_v))
										   (PUNC ,)
										   (PP (P though#though_adv)
										       (CP-ADV (C 0)
											       (IP-SUB (IP-SUB-3 (NP-SBJ (PRO they#they_pron))
														 (MD should#shall_v)
														 (ADVP-TMP (ADV once#once_adv))
														 (VB miscarry#miscarry_v))
												       (PUNC ,)
												       (CONJP (CONJ or#or_conj1)
													      (IP-SUB=3 (VB come#come_v)
															(PP (P to#to_prep)
															    (NP (Q any#any_adj) (N mischance#mischance_n))))))))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,44.267))

( (IP-MAT (LS 3#three_adj)
	  (PUNC .)
	  (IP-MAT-1 (NP-SBJ (D The#the_adj) (N Scion#scion_n))
		    (MD will#will_v1)
		    (ADVP (Q much#much_adj)
			  (ADVR sooner#soon_adv)
			  (CONJP (CONJ and#and_conj1)
				 (ADVX (ADVR better#better_adj))))
		    (VB cover#cover_v1)
		    (NP-OB1 (D the#the_adj) (N Stock#stock_n1)))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (ADVP (ADV so#so_adv))
			   (VB make#make_v1)
			   (NP-OB1 (D a#a_adj)
				   (ADJP (ADJP (QR more#more_adj) (CODE <font>) (ADJ healthful#healthful_adj))
					 (CODE <$$font>)
					 (PUNC ,)
					 (CODE <font>)
					 (CONJP (ADJP (ADJ sound#sound_adj)))
					 (CODE <$$font>)
					 (PUNC ,)
					 (CONJP (CONJ and#and_conj1)
						(CODE <font>)
						(ADJP (ADVR swifter#swift_adj) (ADJ growing#growing_adj))))
				   (N Tree#tree_n))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,44.268))

( (IP-MAT (LS 4#four_adj)
	  (PUNC .)
	  (NP-SBJ (D This#this_pron))
	  (BEP is#be_v)
	  (ADJP-PRD (QP (Q much#much_adj) (QR more#more_adj))
		    (ADJ speedy#speedy_adj)
		    (PUNC ,)
		    (CONJP (ADJX (ADJ easie#easy_adj)))
		    (PUNC ,)
		    (CONJP (CONJ and#and_conj1)
			   (ADJX (ADJ sure#sure_adj)
				 (IP-INF (TO to#to_prep) (VB succeed#succeed_v)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,44.269))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 3#three_adj) (PUNC .))
  (ID LANGF-1696-E3-P1,44.270))

( (IP-MAT (NP-SBJ-1 (EX There#there_adv))
	  (BEP is#be_v)
	  (NP-1 (D+OTHER another#another_pron)
		(N way#way_n1)
		(PUNC ,)
		(RRC (VAN called#call_v)
		     (IP-SMC (NP-SBJ *)
			     (CODE <font>)
			     (NP-PRD (N Whip-graffing#whip-grafting_n)))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,44.271))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP-LOC (ADV here#here_adv))
	  (NP-SBJ (PRO$ your#your_pron)
		  (N Stock#stock_n1)
		  (CONJP (CONJ and#and_conj1)
			 (NX (N Scion#scion_n))))
	  (MD ought#ought_v)
	  (TO to#to_prep)
	  (BE be#be_v)
	  (PP (ADV exactly#exactly_adv)
	      (P of#of_prep)
	      (NP (D the#the_adj) (ADJ same#same_adj) (N bigness#bigness_n)))
	  (PUNC ,)
	  (PP-PRN (P as#as_adv)
		  (CP-ADV (WADVP-1 0)
			  (C 0)
			  (IP-SUB (ADVP *T*-1)
				  (NP-SBJ (D the#the_adj)
					  (N manner#manner_n)
					  (PP (P of#of_prep)
					      (IP-PPL (VAG performing#perform_v)
						      (NP-OB1 (PRO it#it_pron))))
					  (CP-REL *ICH*-2))
				  (ADVP (ADV plainly#plainly_adv1))
				  (VBP sheweth#show_v)
				  (PUNC ,)
				  (CP-REL-2 (WNP-3 (WPRO which#which_adj))
					    (C 0)
					    (IP-SUB (NP-SBJ *T*-3)
						    (BEP is#be_v)
						    (PP (P as#as_adv)
							(CP-ADV (WNP-4 0)
								(C 0)
								(IP-SUB (NP-SBJ *T*-4)
									(VBP followeth#follow_v)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,44.272))

( (IP-IMP (CODE <font>)
	  (VBI Slope#slope_v1)
	  (CODE <$$font>)
	  (RP off#off_adv)
	  (NP-OB1 (D the#the_adj) (N Scion#scion_n))
	  (NP-MSR (NP (D a#a_adj) (ADJ full#full_adj) (N inch#inch_n1))
		  (CONJP (CONJ or#or_conj1)
			 (ADJP (ADJR longer#long_adj1))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,44.273))

( (IP-IMP (CONJ and#and_conj1)
	  (DOI do#do_v)
	  (NP-OB1 (D the#the_adj) (ADJ like#like_adj))
	  (PP (P to#to_prep)
	      (NP (D the#the_adj) (N Stock#stock_n1)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,44.274))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI tye#tie_v)
	  (NP-OB1 (D the#the_adj) (ONE one#one_adj))
	  (PP (P upon#upon_prep)
	      (NP (D the#the_adj) (OTHER other#other_adj)))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,44.275))

( (CODE <P_45>))

( (IP-MAT (IP-MAT-1 (NP-SBJ (PRO You#you_pron))
		    (MD may#may_v1)
		    (PP (P if#if_conj)
			(CP-ADV (C 0)
				(IP-SUB (NP-SBJ (PRO you#you_pron))
					(VBP will#will_v2))))
		    (PUNC ,)
		    (VB make#make_v1)
		    (NP-OB1 (D a#a_adj)
			    (CODE {SIC:a_make})
			    (N shoulder#shoulder_n))
		    (PP (P on#on_prep)
			(NP (D the#the_adj) (N Scion#scion_n))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (VB cut#cut_v)
			   (NP-OB1 (D the#the_adj)
				   (N top#top_n1)
				   (PP (P of#of_prep)
				       (NP (D the#the_adj) (N Stock#stock_n1))))
			   (IP-INF (TO to#to_prep)
				   (VB suit#suit_v)
				   (PP (P with#with_prep)
				       (NP (PRO it#it_pron))))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (ADVP-TMP (ADV then#then_adv))
			   (VB bind#bind_v)
			   (NP-OB1 (PRO them#them_pron))
			   (ADVP (ADV together#together_adv))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (CODE <font>)
		 (IP-MAT=1 (VB clay#clay_v)
			   (CODE <$$font>)
			   (PP (P about#about_adv)
			       (NP (D the#the_adj) (N place#place_n1)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,45.277))

( (IP-MAT (NP-SBJ (D This#this_pron) (N way#way_n1))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ successful#successful_adj)
		    (ADVP (ADVR enough#enough_adj)))
	  (PUNC ,)
	  (PP (P so#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (NP-SBJ (ADJ special#special_adj) (N care#care_n1))
			      (BEP be#be_v)
			      (VAN taken#take_v)
			      (PUNC ,)
			      (CP-THT (C that#that_conj)
				      (IP-SUB (NP-SBJ (CONJ both#both_pron) (CODE <font>) (N Stock#stock_n1) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (N Scion#scion_n))
					      (CODE <$$font>)
					      (VBP suit#suit_v)
					      (ADVP-LOC (ADV exactly#exactly_adv)
							(CP-FRL (WADVP-1 (WADV where#where_adv))
								(C 0)
								(IP-SUB (ADVP-LOC *T*-1)
									(NP-SBJ (PRO they#they_pron))
									(BEP are#be_v)
									(VAN joyned#join_v1)
									(ADVP (ADV together#together_adv)))))
					      (PUNC ,)
					      (CP-CAR (WNP-2 (WPRO which#which_adj))
						      (C 0)
						      (IP-SUB (NP-SBJ *T*-2)
							      (BEP is#be_v)
							      (ADJP-PRD (NP-MSR (Q somewhat#somewhat_n))
									(ADJ troublesome#troublesome_adj)
									(CP-TMC (WNP-3 0)
										(IP-INF (NP-OB1 *T*-3)
											(TO to#to_prep)
											(DO do#do_v)))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,45.278))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (NP-SBJ-1 (PRO it#it_pron))
	  (BEP is#be_v)
	  (IP-INF-1 (TO to#to_prep)
		    (VB find#find_v)
		    (NP-OB1 (NS Scions#scion_n)
			    (CONJ and#and_conj1)
			    (NS Stocks#stock_n1)
			    (PP (P of#of_prep)
				(NP (D a#a_adj) (ADJ equal#equal_adj) (N bigness#bigness_n)))))
	  (PUNC ;)
	  (CP-CAR (WNP-2 (Q both#both_pron) (WPRO which#which_adj))
		  (C 0)
		  (IP-SUB (NP-SBJ *T*-2)
			  (VBP makes#make_v1)
			  (IP-INF (NP-SBJ (PRO it#it_pron))
				  (VB require#require_v)
				  (NP-OB1 (ADJR longer#long_adj1)
					  (N time#time_n)
					  (PP (P in#in_prep)
					      (NP (N doing#doing_n)))
					  (PP (P than#than_conj)
					      (NP (D the#the_adj) (ADJ former#former_adj) (NS ways#way_n1)))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,45.279))

( (IP-MAT (ADVP (ADV besides#besides_adv))
	  (NP-SBJ (D the#the_adj) (N head#head_n1))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ apt#apt_adj)
		    (IP-INF (TO to#to_prep)
			    (VB overgrow#overgrow_v)
			    (NP-OB1 (D the#the_adj) (NS Stocks#stock_n1))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,45.280))

( (IP-MAT (NP-SBJ (Q all#all_adj)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (MD can#can_v1)
				  (BE be#be_v)
				  (DAN done#do_v)
				  (IP-INF-PRP (TO to#to_prep)
					      (VB prevent#prevent_v)
					      (NP-OB1 (PRO it#it_pron))))))
	  (PUNC ,)
	  (BEP is#be_v)
	  (IP-INF (IP-INF (TO to#to_prep)
			  (VB Graff#graff_v1)
			  (NP-OB1 (D these#these_pron))
			  (ADVP-LOC (ADV very#very_adj) (ADV low#low_adv)))
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (IP-INF (PP (P if#if_conj)
				     (ADVP (ADV high#high_adv)))
				 (PUNC ,)
				 (TO to#to_prep)
				 (VB give#give_v)
				 (NP-OB2 (D the#the_adj) (N Stock#stock_n1))
				 (NP-OB1 (QR more#more_adj)
					 (N liberty#liberty_n1)
					 (IP-INF (TO to#to_prep) (VB thicken#thicken_v)))
				 (PUNC ,)
				 (PP (P by#by_prep)
				     (IP-PPL (VAG slitting#slit_v)
					     (NP-OB1 (D the#the_adj)
						     (N Bark#bark_n1)
						     (PP (P of#of_prep)
							 (NP (PRO it#it_pron))))
					     (PP (P with#with_prep)
						 (NP (D a#a_adj) (N Knife#knife_n))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P1,45.281))

( (IP-MAT (PP (P In#in_prep)
	      (NP (D this#this_pron)
		  (N way#way_n1)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (N Graffing#graffing_n)))))
	  (CODE <$$font>)
	  (NP-SBJ-1 (EX there#there_adv))
	  (BEP is#be_v)
	  (NP-1 (D+OTHER another#another_pron)
		(ADJ little#little_adj)
		(N knack#knack_n2)
		(CP-REL (WNP-2 0)
			(C 0)
			(IP-SUB (NP-SBJ *T*-2)
				(MD may#may_v1)
				(BE be#be_v)
				(VAN added#add_v)
				(PP (P to#to_prep)
				    (NP (ADJP (ADV very#very_adj) (ADJ good#good_adj))
					(N purpose#purpose_n))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P1,45.282))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D that#that_pron1))
	  (BEP is#be_v)
	  (PUNC ,)
	  (IP-INF (IP-INF (PP (P when#when_adv)
			      (CP-ADV (C 0)
				      (IP-SUB (NP-SBJ (D the#the_adj)
						      (N Stock#stock_n1)
						      (CONJP (CONJ and#and_conj1)
							     (CODE <font>)
							     (NX (N Scion#scion_n))))
					      (CODE <$$font>)
					      (BEP are#be_v)
					      (VAN prepared#prepare_v)
					      (PUNC <paren>)
					      (PP-PRN (P as#as_adv)
						      (CP-ADV (WNP-1 0)
							      (C 0)
							      (IP-SUB (NP-OB1 *T*-1)
								      (NP-SBJ (PRO you#you_pron))
								      (VBD heard#hear_v)
								      (ADVP-TMP (ADV before#before_adv)))))
					      (PUNC <$$paren>)
					      (IP-INF (TO to#to_prep)
						      (BE be#be_v)
						      (VAN joyned#join_v1)
						      (ADVP (ADV together#together_adv))))))
			  (PUNC ,)
			  (TO to#to_prep)
			  (VB make#make_v1)
			  (NP-OB1 (D a#a_adj) (N slit#slit_n))
			  (PP (P with#with_prep)
			      (NP (D a#a_adj) (N Knife#knife_n)))
			  (PP (P in#in_prep)
			      (NP (D the#the_adj)
				  (ADJ bare#bare_adj)
				  (N place#place_n1)
				  (PP (P of#of_prep)
				      (NP (D the#the_adj) (N Stock#stock_n1)))))
			  (ADVP-DIR (ADV downward#downward_adv))
			  (PUNC ,)
			  (IP-PPL (IP-PPL (VAG beginning#begin_v1)
					  (PP (P towards#towards_prep)
					      (NP (D the#the_adj)
						  (N top#top_n1)
						  (PP (P of#of_prep)
						      (NP (D the#the_adj) (CODE <font>) (N slope#slope_n1))))))
				  (CODE <$$font>)
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (IP-PPL (ADVP (ADV so#so_adv))
						 (VAG slitting#slit_v)
						 (NP-OB1 (PRO it#it_pron))
						 (NP-MSR (NP-MSR (D a#a_adj) (ADJ little#little_adj))
							 (N way#way_n1))))
				  (PUNC ,)
				  (IP-PPL (IP-PPL (CONJ and#and_conj1)
						  (DAG doing#do_v)
						  (NP-OB1 (D the#the_adj) (ADJ like#like_adj))
						  (PP (P in#in_prep)
						      (NP (D the#the_adj)
							  (CODE <font>)
							  (ADJ sloped#sloped_adj)
							  (CODE <$$font>)
							  (N face#face_n)
							  (PP (P of#of_prep)
							      (NP (D the#the_adj) (N Scion#scion_n))))))
					  (PUNC ,)
					  (CONJP (CONJ but#but_prep)
						 (IP-PPL (VAG beginning#begin_v1)
							 (PP (P at#at_prep)
							     (NP (D the#the_adj)
								 (ADJ same#same_adj)
								 (N distance#distance_n)
								 (PP (P from#from_prep)
								     (NP (D the#the_adj)
									 (ADJ lower#lower_adj)
									 (N end#end_n)
									 (PP (P of#of_prep)
									     (NP (PRO it#it_pron)))))))
							 (PUNC ,)
							 (PP (P as#as_adv)
							     (CP-ADV (WNP-2 0)
								     (C 0)
								     (IP-SUB (NP-OB1 *T*-2)
									     (NP-SBJ (PRO you#you_pron))
									     (DOD did#do_v)
									     (ADVP-TMP (ADV before#before_adv))
									     (PP (P from#from_prep)
										 (NP (D the#the_adj)
										     (N top#top_n1)
										     (PP (P of#of_prep)
											 (CODE <P_46>)
											 (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))))))))
					  (CODE <$$font>)
					  (PUNC ,)
					  (CONJP (CONJ and#and_conj1)
						 (IP-PPL (ADVP (ADV so#so_adv))
							 (VAG carrying#carry_v)
							 (NP-OB1 (PRO it#it_pron))
							 (ADVP-DIR (ADV upwards#upwards_adv)))))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (IP-INF (ADVP-TMP (ADV then#then_adv))
				 (TO *)
				 (VB joyn#join_v1)
				 (NP-OB1 (PRO them#them_pron))
				 (PP (P by#by_prep)
				     (IP-PPL (VAG thrusting#thrust_v)
					     (NP-OB1 (D the#the_adj) (ONE one#one_adj) (CODE <font>) (N slice#slice_n1))
					     (CODE <$$font>)
					     (PP (P into#into_prep)
						 (NP (D the#the_adj) (OTHER other#other_adj)))
					     (PUNC ,)
					     (PP (P till#till_prep)
						 (CP-ADV (C 0)
							 (IP-SUB (NP-SBJ (D the#the_adj)
									 (ADJ bare#bare_adj)
									 (N place#place_n1)
									 (PP (P of#of_prep)
									     (NP (D the#the_adj) (CODE <font>) (N Scion#scion_n))))
								 (CODE <$$font>)
								 (VBP cover#cover_v1)
								 (NP-OB1 (D the#the_adj)
									 (ADJ bare#bare_adj)
									 (N place#place_n1)
									 (PP (P of#of_prep)
									     (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,46.283))

( (IP-MAT (NP-SBJ (D This#this_pron))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (DAN done#do_v)
	  (NP-ADV (N likewise#likewise_adv))
	  (PP (P in#in_prep)
	      (CODE <font>)
	      (NP (N Graffing#graffing_n)
		  (CODE <$$font>)
		  (PP (P by#by_prep)
		      (CODE <font>)
		      (NP (N packing#packing_n1)))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,46.284))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (PP (P in#in_prep)
	      (NP (Q both#both_pron)))
	  (VBP conduceth#conduce_v)
	  (NP-MSR (Q much#much_adj))
	  (IP-INF (TO to#to_prep)
		  (VB strengthen#strengthen_v)
		  (NP-OB1 (D the#the_adj) (N work#work_n)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P1,46.285))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ-1 *con*)
	  (BEP is#be_v)
	  (VAN called#call_v)
	  (PP (P by#by_prep)
	      (NP (Q some#some_pron)))
	  (PUNC ,)
	  (IP-SMC (NP-SBJ *-1)
		  (CODE <font>)
		  (NP-PRD (N (N Lipping#leaping_n) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (N Tonguing#tonguing_n))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P1,46.286))
