( (CODE <BEGIN_langf-1696-e3-p2>))

( (CODE <P_46>))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 4#four_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,46.3))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (BEP am#be_v)
	  (ADVP-TMP (ADV now#now_adv))
	  (VAG going#go_v)
	  (IP-INF (TO to#to_prep)
		  (VB discribe#describe_v)
		  (NP-OB1 (D+OTHER another#another_pron)
			  (N way#way_n1)
			  (CP-REL (WNP-1 0)
				  (C that#that_conj)
				  (IP-SUB (IP-SUB (NP-SBJ (PRO I#i_pron))
						  (ADVP-TMP (ADV never#never_adv))
						  (VBD read#read_v)
						  (PP (P of#of_prep)
						      (NP *T*-1)))
					  (PUNC ,)
					  (CONJP (CONJ neither#neither_adv)
						 (IP-SUB (ADVP-TMP (ADV ever#ever_adv))
							 (NP-SBJ *con*)
							 (VBD knew#know_v)
							 (NP-OB1 (QR more#more_adj)
								 (PP (P than#than_conj)
								     (NP (ONE one#one_adj)
									 (CP-REL (WNP-2 0)
										 (C that#that_conj)
										 (IP-SUB (NP-SBJ *T*-2)
											 (VBD used#use_v)
											 (NP-OB1-RSP=1 (PRO it#it_pron)))))))
							 (PUNC ,)
							 (IP-ABS-PRN (CONJ and#and_conj1)
								     (NP-SBJ (PRO he#he_pron))
								     (NP-PRD (D a#a_adj) (ADJ skilful#skilful_adj) (N Gardiner#gardener_n)))
							 (IP-MAT-PRN (CONJ and#and_conj1)
								     (NP-SBJ *con*)
								     (VBD us'd#use_v)
								     (NP-OB1 (PRO it#it_pron))
								     (NP-MSR (QP (ADV very#very_adj) (Q much#much_adj))))))))))
	  (PUNC :))
  (ID LANGF-1696-E3-P2,46.4))

( (IP-MAT (IP-PPL (VAG Knowing#know_v)
		  (NP-OB1 (Q no#no_adj)
			  (N name#name_n)
			  (PP (P for#for_prep)
			      (NP (PRO it#it_pron)))))
	  (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (VBN given#give_v)
	  (NP-OB2 (PRO it#it_pron))
	  (NP-OB1 (D the#the_adj)
		  (N name#name_n)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (N Side-graffing#SEE_side_n1))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,46.5))

( (IP-MAT (NP-SBJ (PRO It@#it_pron))
	  (BEP @'s#be_v)
	  (DAN done#do_v)
	  (PP (P by#by_prep)
	      (IP-PPL (VAG preparing#prepare_v)
		      (NP-OB1 (D the#the_adj) (CODE <font>) (N Scion#scion_n))
		      (CODE <$$font>)
		      (PP (P as#as_adv)
			  (PP (P in#in_prep)
			      (CODE <font>)
			      (NP (N Whip-graffing#whip-grafting_n))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,46.6))

( (IP-IMP (ADVP-TMP (ADV then#then_adv))
	  (PP (PP (P without#without_adv)
		  (IP-PPL (VAG cutting#cut_v)
			  (RP off#off_adv)
			  (NP-OB1 (D the#the_adj)
				  (N head#head_n1)
				  (PP (P of#of_prep)
				      (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))))
	      (CODE <$$font>)
	      (PUNC ,)
	      (PUNC <paren>)
	      (CONJP (CONJ but#but_prep)
		     (IP-PPL (VAG making#make_v1)
			     (IP-SMC (NP-SBJ (PRO it#it_pron))
				     (ADJP-PRD (ADJ thin#thin_adj)
					       (PP (P of#of_prep)
						   (NP (N side#side_n1) (NS Branches#branch_n))))))))
	  (PUNC <$$paren>)
	  (PP (P from#from_prep)
	      (NP (D a#a_adj)
		  (ADJ smooth#smooth_adj)
		  (N place#place_n1)
		  (PP (P of#of_prep)
		      (NP (PRO it#it_pron)))
		  (PP (P on#on_prep)
		      (NP (D the#the_adj) (CODE <font>) (N West-side#west-side_n)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (VBI take#take_v)
	  (RP off#off_adv)
	  (NP-OB1 (QP (ADVR as#as_adv) (Q much#much_adj))
		  (CODE <font>)
		  (N bark#bark_n1)
		  (CODE <$$font>)
		  (PP (P as#as_adv)
		      (CP-CMP (WNP-1 0)
			      (C 0)
			      (IP-SUB (NP-OB1 *T*-1)
				      (NP-SBJ (D the#the_adj) (CODE <font>) (N Scion#scion_n))
				      (CODE <$$font>)
				      (MD will#will_v1)
				      (VB cover#cover_v1)
				      (PUNC <paren>)
				      (PP-PRN (P as#as_adv)
					      (PP (P in#in_prep)
						  (CODE <font>)
						  (NP (N Packing#packing_n1))))))))
	  (CODE <$$font>)
	  (PUNC <$$paren>))
  (ID LANGF-1696-E3-P2,46.7))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI slit#slit_v)
	  (NP-OB1 (CONJ both#both_pron) (CODE <font>) (N Scion#scion_n) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (N Stock#stock_n1))
	  (CODE <$$font>)
	  (PUNC ,)
	  (IP-PPL (VAG according#accord_v)
		  (PP (P to#to_prep)
		      (NP (D the#the_adj)
			  (NS directions#direction_n)
			  (RRC (VAN given#give_v)
			       (PP (P of#of_prep)
				   (NP (N Lipping#leaping_n) (CONJ or#or_conj1) (N Tonguing#tonguing_n)))
			       (PP (P in#in_prep)
				   (NP (D the#the_adj)
				       (N end#end_n)
				       (PP (P of#of_prep)
					   (NP (D the#the_adj) (ADJ last#last_adv) (CODE <font>) (N Section#section_n)))))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,46.8))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI fix#fix_v)
	  (NP-OB1 (PRO them#them_pron))
	  (ADVP (ADV together#together_adv))
	  (ADVP (ADV accordingly#accordingly_adv))
	  (PUNC :))
  (ID LANGF-1696-E3-P2,46.9))

( (IP-IMP (VBI Bind#bind_v)
	  (NP-OB1 (PRO it#it_pron))
	  (ADJP-SPR (ADJ close#close_adj)))
  (ID LANGF-1696-E3-P2,46.10))

( (IP-IMP (CONJ and#and_conj1)
	  (CODE <font>)
	  (VBI clay#clay_v)
	  (CODE <$$font>)
	  (NP-OB1 (PRO it#it_pron))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,46.11))

( (IP-IMP (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (VBP grow#grow_v))))
	  (PUNC ,)
	  (PP (P at#at_prep)
	      (NP (NP-MSR (D a#a_adj) (N$ years#year_n))
		  (N end#end_n)))
	  (VBI cut#cut_v)
	  (RP off#off_adv)
	  (NP-OB1 (D the#the_adj)
		  (N top#top_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))
	  (CODE <$$font>)
	  (PP (P at#at_prep)
	      (NP (D the#the_adj) (CODE <font>) (ADJ graffed#graffed_adj) (CODE <$$font>) (N place#place_n1)))
	  (NP-ADV (N slopewise#slopewise_adv))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,46.12))

( (IP-IMP (CONJ and#and_conj1)
	  (CODE <font>)
	  (VBI clay#clay_v)
	  (CODE <$$font>)
	  (NP-OB1 (PRO it#it_pron))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,46.13))

( (CODE <P_47>))

( (IP-MAT (NP-SBJ (Q Some#some_pron)
		  (RRC (DAN done#do_v)
		       (ADVP (ADV thus#thus_adv))))
	  (VBP grow#grow_v)
	  (ADVP (ADV well#well_adv))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,47.15))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (VBN used#use_v)
	  (NP-OB1 (PRO it#it_pron))
	  (ADVP (ADV successfully#successfully_adv))
	  (PUNC ,)
	  (IP-PPL-ABS (NP-SBJ (D the#the_adj) (ADJ transient#transient_adj) (N sap#sap_n1))
		      (VAG uniting#unite_v)
		      (NP-OB1 (PRO it#it_pron))
		      (ADVP (ADV well#well_adv))
		      (PP (P to#to_prep)
			  (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,47.16))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO it#it_pron))
	  (VBP groweth#grow_v)
	  (ADVP (ADV fast#fast_adv))
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj)
				      (N head#head_n1)
				      (PP (P of#of_prep)
					  (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))
			      (CODE <$$font>)
			      (BEP be#be_v)
			      (NEG not#not_adv)
			      (ADJP-PRD (ADVR too#too_adv)
					(ADJ big#big_adj)
					(IP-INF-DEG (IP-INF-DEG (TO to#to_prep)
								(VB rob#rob_v)
								(NP-OB1 (PRO it#it_pron))
								(PP (P of#of_prep)
								    (NP (D the#the_adj) (N sap#sap_n1))))
						    (CONJP (CONJ and#and_conj1)
							   (IP-INF-DEG (TO *)
								       (VB drop#drop_v)
								       (PP (P upon#upon_prep)
									   (NP (PRO it#it_pron))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,47.17))

( (IP-IMP (PP (ADV+P therefore#therefore_adv))
	  (VBI suffer#suffer_v)
	  (NEG not#not_adv)
	  (IP-INF (NP-SBJ (D the#the_adj)
			  (N top#top_n1)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))
		  (CODE <$$font>)
		  (NP-MSR (Q much#much_adj))
		  (TO to#to_prep)
		  (VB over_grow#overgrow_v)
		  (NP-OB1 (D the#the_adj) (CODE <font>) (N Scion#scion_n))
		  (CODE <$$font>)
		  (NP-TMP (D the#the_adj) (ADJ first#first_adj) (N year#year_n))
		  (PP (P before#before_adv)
		      (CP-ADV (C 0)
			      (IP-SUB (NP-SBJ (PRO it@#it_pron))
				      (BEP @'s#be_v)
				      (VAN cut#cut_v)
				      (ADVP (ADV quite#quite_adv))
				      (RP off#off_adv)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,47.18))

( (IP-MAT (NP-SBJ-1 (EX There#there_adv))
	  (BEP is#be_v)
	  (NP-1 (D+OTHER another#another_pron)
		(N way#way_n1)
		(PP (P of#of_prep)
		    (NP (D this#this_pron) (N kind#kind_n)))
		(PUNC ,)
		(CP-REL (WNP-2 0)
			(C 0)
			(IP-SUB (NP-SBJ (PRO I#i_pron))
				(HVP have#have_v)
				(VBN known#know_v)
				(IP-SMC (NP-SBJ *T*-2)
					(VAN used#use_v)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,47.19))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (BEP is#be_v)
	  (ADVP (ADVR easier#easy_adj)
		(PP *ICH*-1))
	  (DAN done#do_v)
	  (PP-1 (P than#than_conj)
		(NP (D the#the_adj) (ADJ former#former_adj)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,47.20))

( (IP-MAT (NP-SBJ (D that#that_pron1))
	  (BEP is#be_v)
	  (PUNC ,)
	  (IP-INF (IP-INF (TO to#to_prep)
			  (VB slit#slit_v)
			  (NP-OB1 (D the#the_adj)
				  (CODE <font>)
				  (N bark#bark_n1)
				  (CODE <$$font>)
				  (PP (P of#of_prep)
				      (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))
			  (CODE <$$font>)
			  (PP (P in#in_prep)
			      (NP (D the#the_adj)
				  (N form#form_n)
				  (PP (P of#of_prep)
				      (NP (D a#a_adj) (ADJ great#great_adj) (N T#NA))))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (IP-PPL (VAG loosening#loosen_v)
				 (NP-OB1 (PRO it#it_pron))
				 (PP (P with#with_prep)
				     (NP (D the#the_adj)
					 (N point#point_n1)
					 (PP (P of#of_prep)
					     (NP (D a#a_adj) (N Knife#knife_n)))))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (IP-PPL (ADVP-TMP (ADV then#then_adv))
				 (VAG clapping#clap_v1)
				 (RP in#in_adv)
				 (NP-OB1 (D a#a_adj)
					 (CODE <font>)
					 (N Scion#scion_n)
					 (CODE <$$font>)
					 (PUNC ,)
					 (RRC (VAN prepared#prepare_v)
					      (PP (PP (P as#as_adv)
						      (CP-ADV (WNP-1 0)
							      (C 0)
							      (IP-SUB (NP-SBJ *T*-1)
								      (HVP hath#have_v)
								      (BEN been#be_v)
								      (VAN said#say_v1)
								      (ADVP-TMP (ADV before#before_adv)))))
						  (PUNC ,)
						  (PUNC <paren>)
						  (CONJP (CONJ but#but_prep)
							 (PP (P without#without_adv)
							     (NP (D the#the_adj)
								 (N slit#slit_n)
								 (PP (P for#for_prep)
								     (CODE <font>)
								     (NP (N Lipping#leaping_n))))))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PUNC <$$paren>))
  (ID LANGF-1696-E3-P2,47.21))

( (IP-IMP (CODE <font>)
	  (VBI (VBI bind#bind_v) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (VBI clay#clay_v))
	  (CODE <$$font>)
	  (NP-OB1 (PRO it#it_pron))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,47.22))

( (IP-MAT (NP-SBJ (D This#this_pron))
	  (MD can#can_v1)
	  (BE be#be_v)
	  (VAN used#use_v)
	  (PP (FP only#only_adj)
	      (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (N bark#bark_n1))
			      (MD will#will_v1)
			      (VB part#part_v)
			      (PP (P from#from_prep)
				  (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,47.23))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 5#five_v) (PUNC .))
  (ID LANGF-1696-E3-P2,47.24))

( (IP-MAT (NP-SBJ (D The#the_adj) (ADJS next#next_adj) (N way#way_n1))
	  (BEP is#be_v)
	  (NP-PRD (D that#that_pron1)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (IP-SUB (NP-SBJ-2 *T*-1)
					  (BEP is#be_v)
					  (VAN called#call_v)
					  (IP-SMC (NP-SBJ *-2)
						  (CODE <font>)
						  (NP-PRD (N Graffing#graffing_n)
							  (CODE <$$font>)
							  (PP (P in#in_prep)
							      (NP (D the#the_adj) (CODE <font>) (N Cleft#cleft_n))))))
				  (CODE <$$font>)
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (IP-SUB (IP-SUB-3 (NP-SBJ *T*-1)
							   (BEP is#be_v)
							   (ADJP-PRD (ADV very#very_adj) (ADJ ancient#ancient_adj)))
						 (PUNC ,)
						 (CONJP (CONJ and#and_conj1)
							(IP-SUB=3 (ADVP-TMP (ADV still#still_adv))
								  (VAN used#use_v)
								  (PP (P by#by_prep)
								      (CODE <font>)
								      (NP (NS common-Planters#SEE_common_adj))))))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,47.25))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO it@#it_pron))
	  (BEP @'s#be_v)
	  (ADVP (ADV thus#thus_adv))
	  (VAN performed#perform_v)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,47.26))

( (IP-IMP (VBI Cut#cut_v)
	  (RP off#off_adv)
	  (NP-OB1 (D the#the_adj)
		  (N head#head_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))
	  (CODE <$$font>)
	  (ADJP-SPR (ADJ even#even_adj1) (CONJ and#and_conj1) (ADJ smooth#smooth_adj))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,47.27))

( (IP-IMP (VBI cleave#cleave_v1)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P with#with_prep)
	      (NP (D a#a_adj)
		  (ADJ strong#strong_adj)
		  (CODE <font>)
		  (N Knife#knife_n)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NX (N Chissel#chisel_n1)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PUNC <paren>)
	  (IP-PPL (PP-PRN (ADV+P hereafter#hereafter_adv))
		  (VAN described#describe_v)
		  (PP (P when#when_adv)
		      (CP-ADV (C 0)
			      (IP-SUB (NP-SBJ (PRO I#i_pron))
				      (VBP speak#speak_v)
				      (PP (P of#of_prep)
					  (CODE <font>)
					  (IP-PPL (VAG Pruning#prune_v2)
						  (CODE <$$font>)
						  (NP-OB1 (ADJ big#big_adj) (NS Trees#tree_n))))))))
	  (PUNC <$$paren>))
  (ID LANGF-1696-E3-P2,47.28))

( (IP-IMP (VBI let#let_v1)
	  (IP-INF (NP-SBJ (D the#the_adj) (N slit#slit_n))
		  (VB run#run_v)
		  (ADJP-SPR (NP-MSR (NUMP (ADV near#near_adv2) (NUM two#two_adj))
				    (NS inches#inch_n1))
			    (ADJ deep#deep_adj)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,47.29))

( (IP-IMP (VBI let#let_v1)
	  (IP-INF (NP-SBJ (PRO it#it_pron))
		  (BE be#be_v)
		  (ADJP-LOC (ADJP (ADVR as#as_adv)
				  (ADJ near#near_adj)
				  (NP (D the#the_adj)
				      (N middle#middle_adj)
				      (PP (P of#of_prep)
					  (NP (D the#the_adj) (CODE <font>) (N stock#stock_n1))))
				  (CODE <$$font>)
				  (PP (P as#as_adv)
				      (CP-CMP (WADJP-1 0)
					      (C 0)
					      (IP-SUB (ADJP-LOC *T*-1)
						      (NP-SBJ (PRO you#you_pron))
						      (MD can#can_v1)
						      (BE *)))))
			    (PUNC ,)
			    (CONJP (CONJ but#but_prep)
				   (PP (NEG not#not_adv)
				       (P in#in_prep)
				       (NP (D the#the_adj)
					   (CODE <font>)
					   (N pith#pith_n)
					   (CODE <$$font>)
					   (CONJP (CONJ or#or_conj1)
						  (CODE <font>)
						  (NX (N heart#heart_n))))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,47.30))

( (IP-IMP (HVI have#have_v)
	  (PP (P in#in_prep)
	      (NP (N readiness#readiness_n)))
	  (NP-OB1 (D a#a_adj)
		  (N stick#stick_n1)
		  (PP (P of#of_prep)
		      (NP (ADJ hard#hard_adj) (N Wood#wood_n1)))
		  (PUNC ,)
		  (ADJP (NP-MSR (ADV near#near_adv2) (D a#a_adj) (N foot#foot_n))
			(CODE <P_48>)
			(ADJ long#long_adj1))
		  (PUNC ,)
		  (RRC (PP (P at#at_prep)
			   (NP (ONE one#one_adj) (N end#end_n)))
		       (VAN made#make_v1)
		       (ADJP-SPR (ADJ like#like_adj)
				 (NP (D a#a_adj) (CODE <font>) (N wedge#wedge_n)))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,48.31))

( (IP-IMP (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (HVP have#have_v)
			      (VBN taken#take_v)
			      (RP out#out_adv)
			      (NP-OB1 (D the#the_adj) (CODE <font>) (N Cleaver#cleaver_n1)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (VBI put#put_v)
	  (NP-OB1 (D the#the_adj) (CODE <font>) (N wedg#wedge_n))
	  (CODE <$$font>)
	  (PP (P into#into_prep)
	      (NP (D the#the_adj) (CODE <font>) (N slit#slit_n)))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,48.32))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI open#open_v)
	  (NP-OB1 (PRO it#it_pron))
	  (ADJP-SPR (ADVR so#so_adv)
		    (ADJ wide#wide_adj)
		    (PP (P as#as_adv)
			(IP-INF (TO to#to_prep)
				(VB put#put_v)
				(RP in#in_adv)
				(NP-OB1 (D the#the_adj) (CODE <font>) (N Scion#scion_n))
				(CODE <$$font>)
				(PUNC ,)
				(PP (P when#when_adv)
				    (CP-ADV (C 0)
					    (IP-SUB (NP-SBJ (PRO it@#it_pron))
						    (BEP @'s#be_v)
						    (VAN prepared#prepare_v)
						    (PUNC .)
						    (CP-CAR (WNP-1 (WPRO Which#which_adj))
							    (C 0)
							    (IP-SUB (NP-SBJ *T*-1)
								    (BEP is#be_v)
								    (PP (P by#by_prep)
									(IP-PPL (VAG cutting#cut_v)
										(NP-OB1 (PRO it#it_pron))
										(RP down#down_adv)
										(CODE <font>)
										(NP-ADV (N slope#slope_n1))
										(CODE <$$font>)
										(PP (P on#on_prep)
										    (NP (Q each#each_adj) (N side#side_n1)))
										(PUNC ,)
										(NP-MSR (ADV about#about_adv)
											(D an#a_adj)
											(N inch#inch_n1)
											(PP (P in#in_prep)
											    (NP (N length#length_n))))
										(PUNC ,)
										(IP-PPL (IP-PPL (VAG beginning#begin_v1)
												(PP (P at#at_prep)
												    (NP (D the#the_adj) (N joynt#joint_n1))))
											(PUNC ,)
											(CONJP (CONJ but#but_prep)
											       (IP-PPL (VAG leaving#leave_v1)
												       (NP-OB1 (PRO it#it_pron))
												       (ADJP-SPR (Q much#much_adj)
														 (ADJR thinner#thin_adj)
														 (PP (P on#on_prep)
														     (NP (D that#that_pron1)
															 (N side#side_n1)
															 (CP-REL (WNP-2 0)
																 (C that#that_conj)
																 (IP-SUB (NP-SBJ *T*-2)
																	 (VBP goeth#go_v)
																	 (PP (P into#into_prep)
																	     (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1)))))))
														 (CODE <$$font>)
														 (PP (P than#than_conj)
														     (NP (D the#the_adj)
															 (OTHER other#other_adj)
															 (CP-REL (WNP-3 0)
																 (C that#that_conj)
																 (IP-SUB (NP-SBJ *T*-3)
																	 (BEP is#be_v)
																	 (ADJP-PRD (ADJ outward#outward_adj))))))))))))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,48.33))

( (IP-MAT (PUNC <paren>)
	  (NP-SBJ (D that#that_pron1)
		  (N side#side_n1)
		  (CP-REL *ICH*-1))
	  (MD must#must_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ outward#outward_adj))
	  (CP-REL-1 (WNP-2 0)
		    (C that#that_conj)
		    (IP-SUB (NP-SBJ *T*-2)
			    (MD will#will_v1)
			    (VB cause#cause_v1)
			    (IP-INF (NP-SBJ (PRO it#it_pron))
				    (TO to#to_prep)
				    (VB lean#lean_v1)
				    (ADVP (ADVR rather#rather_adv)
					  (PP *ICH*-3))
				    (CODE <font>)
				    (ADVP-DIR (ADV outward#outward_adj))
				    (CODE <$$font>)
				    (PP-3 (P than#than_conj)
					  (CODE <font>)
					  (ADVP (ADV inward#inward_adv))))))
	  (CODE <$$font>)
	  (PUNC ;)
	  (PUNC <$$paren>))
  (ID LANGF-1696-E3-P2,48.34))

( (IP-MAT (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB let#let_v1)
	  (IP-INF (NP-SBJ (PRO it#it_pron))
		  (HV have#have_v)
		  (NP-OB1 (D a#a_adj)
			  (N shoulder#shoulder_n)
			  (PP (P on#on_prep)
			      (NP (NP (ONE one#one_adj) (N side#side_n1))
				  (PUNC ,)
				  (CONJP (CONJ or#or_conj1)
					 (NP (Q both#both_pron)))
				  (PUNC ,)
				  (CONJP (CONJ or#or_conj1)
					 (NP (Q neither#neither_adv)))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,48.35))

( (IP-MAT (NP-SBJ (Q all#all_adj) (D these#these_pron) (NS ways#way_n1))
	  (BEP are#be_v)
	  (VAN used#use_v)
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,48.36))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (N shouldering#shouldering_n))
	  (VBP takes#take_v)
	  (RP up#up_adv1)
	  (NP-OB1 (QR more#more_adj) (N time#time_n))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,48.37))

( (IP-MAT (CONJ and#and_conj1)
	  (IP-MAT-1 (NP-SBJ *con*)
		    (VBP makes#make_v1)
		    (IP-SMC (NP-SBJ (D the#the_adj) (CODE <font>) (N Scion#scion_n))
			    (ADJP-PRD (ADJR weaker#weak_adj))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (ADVP (ADV so#so_adv))
			   (ADJP-PRD (ADJR apter#apt_adj)
				     (IP-INF (PP (P by#by_prep)
						 (NP (Q any#any_adj) (N chance#chance_n)))
					     (TO to#to_prep)
					     (BE be#be_v)
					     (VAN broke#break_v)
					     (RP off#off_adv)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,48.38))

( (IP-IMP (ADVP-TMP (ADV Then#then_adv))
	  (PP (P with#with_prep)
	      (NP (PRO$ your#your_pron) (N Knife#knife_n)))
	  (VBI cut#cut_v)
	  (ADVP-DIR (ADV away#away_adv))
	  (NP-OB1 (Q any#any_adj)
		  (CODE <font>)
		  (NS jags#jag_n1)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NX (N roughness#roughness_n)))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NX (N blackness#blackness_n)))
		  (CODE <$$font>)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (VBP remains#remain_v)
				  (PP (P after#after_adv)
				      (IP-PPL (VAG cleaving#cleave_v1)
					      (PP (P on#on_prep)
						  (NP (Q each#each_adj)
						      (N side#side_n1)
						      (PP (P of#of_prep)
							  (NP (D the#the_adj)
							      (CODE <font>)
							      (N cleft#cleft_n)
							      (CODE <$$font>)
							      (ADVP-LOC (ADV within#within_adv)))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,48.39))

( (IP-IMP (CONJ and#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (VBI put#put_v)
	  (RP in#in_adv)
	  (NP-OB1 (NUMP (CONJ either#either_pron) (CODE <font>) (ONE one#one_adj) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NUM two#two_adj))
		  (NS Scions#scion_n))
	  (CODE <$$font>)
	  (PUNC <paren>)
	  (IP-PPL (VAG according#accord_v)
		  (PP (P as#as_adv)
		      (CP-ADV (WADVP-1 0)
			      (C 0)
			      (IP-SUB (ADVP *T*-1)
				      (NP-SBJ (PRO$ your#your_pron) (CODE <font>) (N stock#stock_n1))
				      (CODE <$$font>)
				      (BEP is#be_v)
				      (PP (P in#in_prep)
					  (NP (N bigness#bigness_n)))))))
	  (PUNC ,)
	  (PUNC <$$paren>))
  (ID LANGF-1696-E3-P2,48.40))

( (IP-IMP (VBI place#place_v)
	  (NP-OB1 (PRO them#them_pron))
	  (PP (P so#so_adv)
	      (PP (P as#as_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (D the#the_adj)
					  (N passage#passage_n)
					  (PP (P of#of_prep)
					      (NP (D the#the_adj)
						  (CODE <font>)
						  (N sap#sap_n1)
						  (CODE <$$font>)
						  (PP *ICH*-1)))
					  (PP (P betwixt#betwixt_prep)
					      (NP (D the#the_adj)
						  (CODE <font>)
						  (N bark#bark_n1)
						  (CODE <$$font>)
						  (CONJP (CONJ and#and_conj1)
							 (CODE <font>)
							 (NX (N wood#wood_n1)))))
					  (CODE <$$font>)
					  (PUNC ,)
					  (PP-1 (CONJ-2 both#NA)
						(P of#of_prep)
						(NP (CONJ *ICH*-2)
						    (D the#the_adj)
						    (CODE <font>)
						    (N Stock#stock_n1)
						    (CODE <$$font>)
						    (CONJP (CONJ and#and_conj1)
							   (CODE <font>)
							   (NX (N Scion#scion_n))))))
				  (CODE <$$font>)
				  (PUNC ,)
				  (MD may#may_v1)
				  (VB meet#meet_v)
				  (PP (Q all#all_adj)
				      (P along#along_adj2)
				      (NP (D the#the_adj) (CODE <font>) (N cleft#cleft_n)))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (ADJP-LOC (ADVR as#as_adv)
		    (ADJ near#near_adj)
		    (PP (P as#as_adv)
			(CP-CMP (WADJP-3 0)
				(C 0)
				(IP-SUB (ADJP-LOC *T*-3)
					(NP-SBJ (PRO you#you_pron))
					(MD can#can_v1)
					(VB *)))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,48.41))

( (IP-IMP (VBI draw#draw_v)
	  (ADVP-TMP (ADV then#then_adv))
	  (ADVP (ADV forth#forth_adv))
	  (NP-OB1 (PRO$ your#your_pron) (CODE <font>) (N wedge#wedge_n))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,48.42))

( (IP-IMP (IP-IMP-1 (CONJ and#and_conj1)
		    (PP (P if#if_conj)
			(CP-ADV (C 0)
				(IP-SUB (IP-SUB (NP-SBJ (D the#the_adj) (N stock#stock_n1))
						(BEP be#be_v)
						(NP-PRD (D a#a_adj) (ADJ big#big_adj) (ADJ strong#strong_adj) (N stock#stock_n1)))
					(PUNC ,)
					(CONJP (CONJ and#and_conj1)
					       (IP-SUB (NP-SBJ *con*)
						       (DOP do#do_v)
						       (VB pinch#pinch_v)
						       (NP-OB1 (D the#the_adj) (CODE <font>) (NS Graffs#graff_n1)))))))
		    (CODE <$$font>)
		    (PUNC ,)
		    (VBI drive#drive_v)
		    (NP-OB1 (D a#a_adj)
			    (ADJ little#little_adj)
			    (N wedge#wedge_n)
			    (PP (P of#of_prep)
				(NP (ADJ dry#dry_adj) (N wood#wood_n1))))
		    (PP (P into#into_prep)
			(NP (D the#the_adj) (CODE <font>) (N slit#slit_n))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CONJP (CONJ but#but_prep)
		 (IP-IMP=1 (NEG not#not_adv)
			   (PP (P so#so_adv)
			       (PP (P as#as_adv)
				   (IP-INF (TO to#to_prep)
					   (VB let#let_v1)
					   (IP-SMC (NP-SBJ (D the#the_adj) (CODE <font>) (NS Scions#scion_n))
						   (CODE <$$font>)
						   (ADJP-PRD (ADJ loose#loose_adj))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,48.43))

( (CODE <P_49_misnumbered_as_59>))

( (IP-IMP (CONJ or#or_conj1)
	  (PP (P for#for_prep)
	      (NP (SUCH such#such_adj) (ADJ strong#strong_adj) (NS stocks#stock_n1)))
	  (VBI cut#cut_v)
	  (NP-OB1 (D the#the_adj) (CODE <font>) (NS Graffs#graff_n1))
	  (CODE <$$font>)
	  (ADJP-SPR (ADVR as#as_adv)
		    (ADJ thick#thick_adj)
		    (PP *ICH*-2))
	  (PP (P on#on_prep)
	      (NP (D that#that_pron1)
		  (N side#side_n1)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (VBP goes#go_v)
				  (PP (P into#into_prep)
				      (NP (D the#the_adj) (N stock#stock_n1)))))))
	  (PUNC ,)
	  (PP-2 (P as#as_adv)
		(PP (P on#on_prep)
		    (NP (D the#the_adj) (N outside#outside_n))))
	  (PUNC ,)
	  (CP-CAR (WNP-3 (WPRO which#which_adj))
		  (C 0)
		  (IP-SUB (NP-SBJ *T*-3)
			  (MD will#will_v1)
			  (VB prevent#prevent_v)
			  (IP-PPL-OB1 (NP-SBJ (D the#the_adj) (NS stocks#stock_n1))
				      (VAG hurting#hurt_v)
				      (NP-OB1 (D the#the_adj)
					      (ADJ sappy#sappy_adj)
					      (N part#part_n1)
					      (CONJP (CONJ and#and_conj1)
						     (CODE <font>)
						     (NX (N bark#bark_n1)))
					      (CODE <$$font>)
					      (PP (P of#of_prep)
						  (NP (D the#the_adj) (N Scion#scion_n)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,49_misnumbered_as_59.45))

( (IP-MAT (NP-SBJ (Q Many#many_adj))
	  (VBP cleave#cleave_v1)
	  (NP-OB1 (ADJ big#big_adj) (NS stocks#stock_n1))
	  (NP-ADV (N cross-wise#crosswise_adv))
	  (ADVP (ADV again#again_adv))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,49_misnumbered_as_59.46))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (VBP put#put_v)
	  (RP in#in_adv)
	  (NP-OB1 (NUMP (NUM two#two_adj) (QR more#more_adj))
		  (CODE <font>)
		  (NS Scions#scion_n))
	  (CODE <$$font>))
  (ID LANGF-1696-E3-P2,49_misnumbered_as_59.47))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (N cleaving#cleaving_n1))
	  (VBP hurts#hurt_v)
	  (NP-OB1 (D the#the_adj) (N stock#stock_n1))
	  (NP-MSR (QP (ADVR so#so_adv) (Q much#much_adj))
		  (CP-DEG (C that#that_conj)
			  (IP-SUB (NP-SBJ (PRO you#you_pron))
				  (HVD had#have_v)
				  (ADVP (ADVR better#better_adj))
				  (PUNC <paren>)
				  (PP-PRN (P if#if_conj)
					  (CP-ADV (C 0)
						  (IP-SUB (NP-SBJ (PRO you#you_pron))
							  (MD will#will_v1)
							  (HV have#have_v)
							  (NP-OB1 (QR more#more_adj)
								  (PP (P than#than_conj)
								      (NP (NUM two#two_adj) (CODE <font>) (NS Scions#scion_n))))
							  (CODE <$$font>)
							  (PP (P in#in_prep)
							      (NP (ONE one#one_adj) (N stock#stock_n1))))))
				  (PUNC <$$paren>)
				  (CODE <font>)
				  (VB Graff#graff_v1)
				  (CODE <$$font>)
				  (NP-OB1 (D the#the_adj) (OTHER other#other_adj) (NUM two#two_adj))
				  (PP (P in#in_prep)
				      (NP (D the#the_adj) (N bark#bark_n1)))
				  (PUNC ,)
				  (IP-PPL (VAG according#accord_v)
					  (PP (P to#to_prep)
					      (NP (D the#the_adj)
						  (CODE <font>)
						  (ADJ second#second_adj)
						  (CODE <$$font>)
						  (N way#way_n1)
						  (PP (P of#of_prep)
						      (CODE <font>)
						      (NP (N Graffing#graffing_n))))))
				  (CODE <$$font>)
				  (PUNC ,)
				  (IP-PPL (VAG forecasting#forecast_v)
					  (IP-INF (NP-SBJ (ONE one#one_adj)
							  (PP (P of#of_prep)
							      (NP (PRO them#them_pron))))
						  (TO to#to_prep)
						  (BE be#be_v)
						  (PP (P on#on_prep)
						      (NP (D the#the_adj)
							  (CODE <font>)
							  (N West-side#west-side_n)
							  (CODE <$$font>)
							  (PP (P of#of_prep)
							      (NP (D the#the_adj) (CODE <font>) (N stock#stock_n1))))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,49_misnumbered_as_59.48))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 6#six_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,49_misnumbered_as_59.49))

( (IP-MAT (NP-SBJ-1 (EX There#there_adv))
	  (BEP is#be_v)
	  (NP-1 (D+OTHER another#another_pron)
		(N way#way_n1)
		(PUNC ,)
		(RRC (VAN called#call_v)
		     (IP-SMC (NP-SBJ *)
			     (CODE <font>)
			     (NP-PRD (N Graffing#graffing_n)
				     (CODE <$$font>)
				     (PP (P by#by_prep)
					 (CODE <font>)
					 (NP (N Approach#approach_n) (PUNC ,) (N Ablactation#ablactation_n) (PUNC ,) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (N Enarching#inarching_n))))))
		(CODE <$$font>)
		(PUNC ,)
		(CP-REL (WNP-2 (WPRO which#which_adj))
			(C 0)
			(IP-SUB (NP-SBJ *T*-2)
				(BEP is#be_v)
				(PP (P by#by_prep)
				    (IP-PPL (HAG having#have_v)
					    (IP-INF (IP-INF (NP-SBJ (D a#a_adj)
								    (CODE <font>)
								    (N stock#stock_n1)
								    (CODE <$$font>)
								    (PUNC ,)
								    (CONJP (CONJ or#or_conj1)
									   (CODE <font>)
									   (NX (NS stocks#stock_n1))))
							    (CODE <$$font>)
							    (VB grow#grow_v)
							    (ADJP-LOC (ADVR so#so_adv)
								      (ADJ near#near_adj)
								      (NP (D+OTHER another#another_pron)
									  (N Tree#tree_n)
									  (PUNC ,)
									  (CP-REL (WNP-3 (WPRO$ whose#whose_pron) (CODE <font>) (N Fruit#fruit_n))
										  (CODE <$$font>)
										  (C 0)
										  (IP-SUB (NP-OB1 *T*-3)
											  (NP-SBJ (PRO you#you_pron))
											  (MD would#will_v1)
											  (VB propagate#propagate_v))))
								      (PUNC ,)
								      (CP-DEG (C that#that_conj)
									      (IP-SUB (NP-SBJ (NP (D the#the_adj) (CODE <font>) (N stock#stock_n1))
											      (CODE <$$font>)
											      (CONJP (CONJ and#and_conj1)
												     (NP (D the#the_adj)
													 (CODE <font>)
													 (N branch#branch_n)
													 (CODE <$$font>)
													 (PP (P of#of_prep)
													     (NP (D that#that_pron1) (N Tree#tree_n))))))
										      (MD may#may_v1)
										      (BE be#be_v)
										      (VAN joyned#join_v1)
										      (ADVP (ADV together#together_adv))
										      (PP (P in#in_prep)
											  (NP (D the#the_adj)
											      (N manner#manner_n)
											      (RRC (VAG following#follow_v))))))))
						    (PUNC ;)
						    (CONJP (CONJ or#or_conj1)
							   (ELSE else#else_adv)
							   (CODE <font>)
							   (IP-SMC (NP-SBJ (NS stocks#stock_n1))
								   (CODE <$$font>)
								   (VAN raised#raise_v1)
								   (PP (P in#in_prep)
								       (CODE <font>)
								       (NP (NS Pots#pot_n1)
									   (CODE <$$font>)
									   (PUNC ,)
									   (CP-REL (WNP-4 0)
										   (C that#that_conj)
										   (IP-SUB (NP-SBJ *T*-4)
											   (MD may#may_v1)
											   (BE be#be_v)
											   (VAN placed#place_v)
											   (ADJP-LOC (ADJ near#near_adj)
												     (NP (D the#the_adj)
													 (N Tree#tree_n)
													 (CP-REL (WPP-5 (P of#of_prep)
															(WNP (WPRO$ whose#whose_pron) (N kind#kind_n)))
														 (C 0)
														 (IP-SUB (PP *T*-5)
															 (NP-SBJ (PRO you#you_pron))
															 (MD would#will_v1)
															 (VB propagate#propagate_v)))))))))
								   (PUNC ;)
								   (PP (P as#as_adv)
								       (CP-ADV (WNP-6 0)
									       (C 0)
									       (IP-SUB (NP-SBJ *T*-6)
										       (BEP is#be_v)
										       (ADVP (ADV commonly#commonly_adv))
										       (VAN used#use_v)
										       (PP (P for#for_prep)
											   (CODE <font>)
											   (NP (NS Orange-Trees#orange-tree_n))))))))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,49_misnumbered_as_59.50))

( (IP-IMP (VBI Cut#cut_v)
	  (NP-OB1 (D the#the_adj)
		  (N side#side_n1)
		  (PP (PP (P of#of_prep)
			  (NP (D the#the_adj) (CODE <font>) (N Branch#branch_n)))
		      (CODE <$$font>)
		      (CONJP (CONJ and#and_conj1)
			     (PP (P of#of_prep)
				 (NP (D the#the_adj) (CODE <font>) (N stock#stock_n1))))))
	  (CODE <$$font>)
	  (PUNC <paren>)
	  (ADVP-LOC (CP-FRL (WADVP-1 (WADV where#where_adv))
			    (C 0)
			    (IP-SUB (ADVP-LOC *T*-1)
				    (NP-SBJ (PRO they#they_pron))
				    (MD will#will_v1)
				    (VB meet#meet_v))))
	  (PUNC <$$paren>)
	  (NP-MSR (NUMP (ADV about#about_adv) (NUM three#three_adj))
		  (NS inches#inch_n1)
		  (PP (P in#in_prep)
		      (NP (N length#length_n))))
	  (PUNC ,)
	  (PP (P till#till_prep)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP come#come_v)
			      (ADJP-LOC (ADJ near#near_adj)
					(NP (D the#the_adj)
					    (CODE <font>)
					    (N pith#pith_n)
					    (CODE <$$font>)
					    (PP (P of#of_prep)
						(NP (Q each#each_adj))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,49_misnumbered_as_59.51))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI fit#fit_v1)
	  (NP-OB1 (PRO them#them_pron)
		  (QP (Q both#both_pron)))
	  (ADVP (ADV together#together_adv))
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (D the#the_adj)
				  (NS passages#passage_n)
				  (PP (P of#of_prep)
				      (NP (D the#the_adj) (N sap#sap_n1))))
			  (MD may#may_v1)
			  (VB joyn#join_v1)))
	  (PUNC ,)
	  (CP-CAR (WPP-1 (P in#in_prep)
			 (WNP (WD which#which_adj) (N posture#posture_n)))
		  (IP-IMP (PP *T*-1)
			  (CODE <font>)
			  (VBI (VBI bind#bind_v) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (VBI clay#clay_v))
			  (CODE <$$font>)
			  (NP-OB1 (PRO them#them_pron))))
	  (PUNC :))
  (ID LANGF-1696-E3-P2,49_misnumbered_as_59.52))

( (IP-IMP (ADVP-TMP (ADVR As@#as_adv)
		    (ADV @soon#soon_adv)
		    (CODE <P_50>)
		    (PP (P as#as_adv)
			(CP-CMP (WADVP-1 0)
				(C 0)
				(IP-SUB (ADVP-TMP *T*-1)
					(NP-SBJ (PRO you#you_pron))
					(VBP find#find_v)
					(IP-INF (NP-SBJ (D the#the_adj)
							(CODE <font>)
							(N Scion#scion_n)
							(CODE <$$font>)
							(CONJP (CONJ and#and_conj1)
							       (CODE <font>)
							       (NX (N Stock#stock_n1))))
						(CODE <$$font>)
						(TO to#to_prep)
						(BE be#be_v)
						(ADVP (ADV well#well_adv))
						(VAN cemented#cement_v)
						(ADVP (ADV together#together_adv)))))))
	  (PUNC ,)
	  (VBI cut#cut_v)
	  (RP off#off_adv)
	  (NP-OB1 (D the#the_adj)
		  (N head#head_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (NP-MSR (NUMP (ADV about#about_adv) (NUM four#four_adj))
		      (NS inches#inch_n1))
	      (P above#above_adv)
	      (NP (D the#the_adj) (N binding#binding_n)))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,50.53))

( (IP-IMP (CONJ and#and_conj1)
	  (PP (P in#in_prep)
	      (CODE <font>)
	      (NP (NPR March#NA)
		  (CODE <$$font>)
		  (RRC (VAG following#follow_v))))
	  (PUNC ,)
	  (VBI cut#cut_v)
	  (RP off#off_adv)
	  (NP-OB1 (NP (D the#the_adj)
		      (N stub#stub_n)
		      (CP-REL (WNP-1 0)
			      (C 0)
			      (IP-SUB (NP-OB1 *T*-1)
				      (NP-SBJ (PRO you#you_pron))
				      (VBD left#leave_v1)))
		      (PP (P of#of_prep)
			  (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (ALSO also#also_adv)
			 (NP (D the#the_adj)
			     (CODE <font>)
			     (N Scion#scion_n)
			     (CODE <$$font>)
			     (ADVP-LOC (ADV underneath#underneath_prep)))))
	  (PUNC ,)
	  (ADJP-LOC (ADJ close#close_adj)
		    (PP (P to#to_prep)
			(NP (D the#the_adj) (ADJ Graffed#graffed_adj) (N place#place_n1))))
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (PRO it#it_pron))
			  (MD may#may_v1)
			  (VB subsist#subsist_v)
			  (PP (P by#by_prep)
			      (NP (D the#the_adj) (N Stock#stock_n1) (FP only#only_adj)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,50.54))

( (IP-MAT (NP-SBJ (PRO It@#it_pron))
	  (BEP @'s#be_v)
	  (ALSO also#also_adv)
	  (VAN used#use_v)
	  (IP-INF (TO to#to_prep)
		  (BE be#be_v)
		  (DAN done#do_v)
		  (PP (P by#by_prep)
		      (IP-PPL (IP-PPL (VAG cutting#cut_v)
				      (RP off#off_adv)
				      (NP-OB1 (D the#the_adj)
					      (N head#head_n1)
					      (PP (P of#of_prep)
						  (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))
				      (CODE <$$font>)
				      (PP (P at#at_prep)
					  (ADVP (ADV first#first_adj))))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-PPL (VAG sloping#slope_v1)
					     (NP-OB1 (NUM half#half_adj))
					     (RP off#off_adv)
					     (NP-MSR (ADJP (NP-MSR (NUMP (ADV about#about_adv) (NUM two#two_adj))
								   (NS inches#inch_n1))
							   (ADJ long#long_adj1)))))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-PPL (VAG joyning#join_v1)
					     (NP-OB1 (D the#the_adj) (CODE <font>) (N Scion#scion_n))
					     (CODE <$$font>)
					     (PP (ADV+P thereunto#thereunto_adv))
					     (PUNC ,)
					     (IP-PPL (BAG being#be_v)
						     (VAN cut#cut_v)
						     (ADVP (ADV accordingly#accordingly_adv))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,50.55))

( (IP-IMP (CODE <font>)
	  (VBI See#see_v)
	  (NP-OB1 (D the#the_adj) (N figure#figure_n))
	  (PUNC .)
	  (CODE <$$font>))
  (ID LANGF-1696-E3-P2,50.56))

( (IP-MAT (NP-SBJ (D This#this_pron)
		  (N manner#manner_n)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (N Graffing#graffing_n))))
	  (CODE <$$font>)
	  (BEP is#be_v)
	  (ADJP-PRD (ADJP (ADJ unnecessary#unnecessary_adj))
		    (PUNC ,)
		    (CONJP (CONJ and#and_conj1)
			   (ADJP (ADV scarcely#scarcely_adv) (ADJ practicable#practicable_adj)))
		    (PP (P in#in_prep)
			(NP (D the#the_adj)
			    (CODE <font>)
			    (NS Fruit-Trees#SEE_fruit_n)
			    (CODE <$$font>)
			    (PUNC ,)
			    (RRC (ADVP (ADV chiefly#chiefly_adv))
				 (VAN intended#intend_v)
				 (PP (P in#in_prep)
				     (NP (D this#this_pron) (N Book#book_n)))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,50.57))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P for#for_prep)
	      (CODE <font>)
	      (NP (NP (NS Oranges#orange_n2) (PUNC ,) (NS Limons#lemon_n1) (PUNC ,) (NS Pomgranates#pomegranate_n) (PUNC ,) (NS Vines#vine_n) (PUNC ,) (NS Jessamins#jasmine_n))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (NP (SUCH such#such_adj) (ADJ like#like_adj) (CODE <font>) (NS shrubs#shrub_n1)))))
	  (CODE <$$font>)
	  (NP-SBJ (PRO it#it_pron))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (VAN practis'd#practise_v)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,50.58))

( (IP-MAT (ALSO Also#also_adv)
	  (NP-SBJ-1 (PRO it@#it_pron))
	  (BEP @'s#be_v)
	  (VAN said#say_v1)
	  (CP-THT-1 (C that#that_conj)
		    (IP-SUB (NP-SBJ (NS Trees#tree_n)
				    (PP (P of#of_prep)
					(NP (ADJ different#different_adj) (NS kinds#kind_n))))
			    (MD will#will_v1)
			    (ADVP-TMP (ADVR sooner#soon_adv)
				      (PP *ICH*-2))
			    (VB take#take_v)
			    (NP-OB1 (D this#this_pron) (N way#way_n1))
			    (PP-2 (P than#than_conj)
				  (NP (OTHER+N otherwise#otherwise_n)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,50.59))

( (IP-MAT (PP (P Among#among_prep)
	      (NP (Q all#all_adj)
		  (D these#these_pron)
		  (NS sorts#sort_n2)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (N Graffing#graffing_n)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (NP (D the#the_adj)
		      (ADJ second#second_adj)
		      (N way#way_n1)
		      (PP (P for#for_prep)
			  (CODE <font>)
			  (NP (NS Apples#apple_n))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (NP (D the#the_adj)
			     (ADJ first#first_adj)
			     (PP (P for#for_prep)
				 (NP (Q all#all_adj) (OTHER other#other_adj) (CODE <font>) (NS Fruit-trees#SEE_fruit_n))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (BEP are#be_v)
	  (IP-INF (TO to#to_prep)
		  (BE be#be_v)
		  (VAN preferred#prefer_v)
		  (PP (P before#before_adv)
		      (NP (Q all#all_adj) (D the#the_adj) (N rest#rest_n3))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,50.60))

( (IP-MAT (NP-1 (D The#the_adj)
		(NS Figures#figure_n)
		(PP (P with#with_prep)
		    (NP (D these#these_pron) (NS directions#direction_n))))
	  (PUNC ,)
	  (NP-SBJ (PRO I#i_pron))
	  (VBP hope#hope_v)
	  (CP-THT (C 0)
		  (IP-SUB (NP-SBJ *ICH*-1)
			  (MD will#will_v1)
			  (VB make#make_v1)
			  (IP-SMC (NP-SBJ (Q all#all_adj))
				  (ADJP-PRD (ADJ easie#easy_adj)
					    (PP (P to#to_prep)
						(NP (NP-POS (Q any#any_adj) (N$ mans#man_n1))
						    (N understanding#understanding_n)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,50.61))

( (CODE <P_51>))

( (CODE <heading>))

( (NP (N CHAP.#chapter_n) (NUM VI#six_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,51.64))

( (NP (CODE <font>)
      (NS Observations#observation_n)
      (PP (P concerning#concerning_prep)
	  (NP (N Graffing#graffing_n)))
      (PUNC .))
  (ID LANGF-1696-E3-P2,51.65))

( (CODE <$$heading>))

( (NP (N Sect.#section_n) (CODE <$$font>) (ONE 1#one_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,51.67))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (NP (D the#the_adj)
					  (CODE <font>)
					  (NS Plants#plant_n1)
					  (CODE <$$font>)
					  (CP-REL (WNP-1 0)
						  (C that#that_conj)
						  (IP-SUB (NP-OB1 *T*-1)
							  (NP-SBJ (PRO you#you_pron))
							  (VBD removed#remove_v)
							  (PP (RP out#out_adv)
							      (P of#of_prep)
							      (NP (PRO$ your#your_pron) (CODE <font>) (N Seed-plot#seed-plot_n)))
							  (CODE <$$font>)
							  (PP (P into#into_prep)
							      (NP (D the#the_adj) (CODE <font>) (N Nursery#nursery_n))))))
				      (CODE <$$font>)
				      (PUNC ,)
				      (CONJP (CONJ and#and_conj1)
					     (NP (SUCH such#such_adj)
						 (CODE <font>)
						 (NS Stocks#stock_n1)
						 (CODE <$$font>)
						 (PP (P for#for_prep)
						     (CODE <font>)
						     (NP (N Stone-fruit#stone-fruit_n)))
						 (CODE <$$font>)
						 (PP (P in#in_prep)
						     (NP (D the#the_adj) (CODE <font>) (N Seed-plot#seed-plot_n)))
						 (CODE <$$font>)
						 (PP (P as#as_adv)
						     (CP-CMP (WNP-2 0)
							     (C 0)
							     (IP-SUB (NP-SBJ (PRO you#you_pron))
								     (VBP intend#intend_v)
								     (IP-INF (NP-OB1 *T*-2)
									     (TO to#to_prep)
									     (CODE <font>)
									     (VB Graff#graff_v1))))))))
			      (CODE <$$font>)
			      (PUNC ,)
			      (BEP be#be_v)
			      (ADJP-PRD (NP-MSR (NP-MSR (Q half#half_adj) (D an#a_adj) (N inch#inch_n1) (RP over#over_adv))
						(CONJP *ICH*-4))
					(ADJ *)
					(PP (P in#in_prep)
					    (NP (N thickness#thickness_n))))
			      (PUNC ,)
			      (ADVP-LOC (CP-FRL (WADVP-3 (WADV where#where_adv))
						(C 0)
						(IP-SUB (NP-SBJ (PRO they#they_pron))
							(BEP are#be_v)
							(IP-INF (ADVP-LOC *T*-3)
								(TO to#to_prep)
								(BE be#be_v)
								(CODE <font>)
								(VAN Graffed#graff_v1)))))
			      (CODE <$$font>)
			      (PUNC ,)
			      (CONJP-4 (CONJ or#or_conj1)
				       (QP (Q little#little_adj) (QR more#more_adj))))))
	  (PUNC ,)
	  (NP-SBJ (PRO it@#it_pron))
	  (BEP @'s#be_v)
	  (ADJP-PRD (ADJR enough#enough_adj))
	  (PUNC :))
  (ID LANGF-1696-E3-P2,51.68))

( (IP-MAT (NP-SBJ-1 (PRO It@#it_pron))
	  (BEP @'s#be_v)
	  (ADJP-PRD (ADJS best#best_adj))
	  (IP-INF-1 (NEG not#not_adv)
		    (TO to#to_prep)
		    (HV have#have_v)
		    (IP-SMC (NP-SBJ (PRO them#them_pron))
			    (ADJP-PRD (NP-MSR (ADV above#above_adv) (D an#a_adj) (N inch#inch_n1))
				      (ADJ *)
				      (PP (P in#in_prep)
					  (NP (D the#the_adj) (N diameter#diameter_n))))))
	  (PUNC ,)
	  (CP-ADV (CONJ both#both_pron)
		  (CP-ADV (C that#that_conj)
			  (IP-SUB (NP-SBJ (PRO you#you_pron))
				  (MD may#may_v1)
				  (VB lose#lose_v1)
				  (NP-OB1 (Q no#no_adj) (N time#time_n))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (CP-ADV (C that#that_conj)
				 (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N Stock#stock_n1))
					 (CODE <$$font>)
					 (MD may#may_v1)
					 (BE be#be_v)
					 (ADVP (ADVR easier#easy_adj))
					 (VAN covered#cover_v1)
					 (PP (P by#by_prep)
					     (NP (D the#the_adj) (CODE <font>) (N Scion#scion_n)))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,51.69))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 2#two_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,51.70))

( (IP-MAT (PP (P In#in_prep)
	      (IP-PPL (VAG providing#provide_v)
		      (CODE <font>)
		      (NP-OB1 (NS Scions#scion_n)
			      (CODE <$$font>)
			      (CONJ or#or_conj1)
			      (CODE <font>)
			      (NS Graffs#graff_n1)
			      (CODE <$$font>)
			      (PP (P of#of_prep)
				  (CODE <font>)
				  (NP (NS Pears#pear_n) (PUNC ,) (NS Plums#plum_n) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Cherries#cherry_n))))))
	  (CODE <$$font>)
	  (NP-SBJ (PRO you#you_pron))
	  (MD must#must_v1)
	  (VB observe#observe_v)
	  (IP-INF (TO to#to_prep)
		  (VB cut#cut_v)
		  (NP-OB1 (PRO them#them_pron))
		  (PP (PP (P in#in_prep)
			  (CODE <font>)
			  (NP (NPR January#NA)))
		      (CODE <$$font>)
		      (PUNC ,)
		      (CONJP (CONJ or#or_conj1)
			     (PP (P at#at_prep)
				 (NP (D the#the_adj)
				     (ADJ very#very_adj)
				     (N beginning#beginning_n)
				     (PP (P of#of_prep)
					 (CODE <font>)
					 (NP (NPR February#NA)))))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (IP-PPL (HAG having#have_v)
			  (NP-OB1 (N respect#respect_n)
				  (PP (P to#to_prep)
				      (NP (NP (D the#the_adj)
					      (N forwardness#forwardness_n)
					      (CONJP (CONJ or#or_conj1)
						     (NX (N backwardness#backwardness_n)))
					      (PP (P of#of_prep)
						  (NP (D the#the_adj) (N Spring#spring_n1))))
					  (PUNC ,)
					  (CONJP (CONJ and#and_conj1)
						 (NP (D the#the_adj)
						     (N warmth#warmth_n)
						     (CONJP (CONJ or#or_conj1)
							    (NX (N coldness#coldness_n)))
						     (PP (P of#of_prep)
							 (NP (D the#the_adj)
							     (N Country#country_n)
							     (CP-REL (WNP-1 0)
								     (C 0)
								     (IP-SUB (NP-SBJ (PRO you#you_pron))
									     (VBP live#live_v1)
									     (PP (P in#in_prep)
										 (NP *T*-1)))))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,51.71))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (PRO you#you_pron))
	  (MD must#must_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ sure#sure_adj)
		    (IP-INF (TO to#to_prep)
			    (VB cut#cut_v)
			    (NP-OB1 (PRO them#them_pron))
			    (PP (P before#before_adv)
				(CP-ADV (C 0)
					(IP-SUB (NP-SBJ (D the#the_adj) (NS buds#bud_n1))
						(HVP have#have_v)
						(IP-INF (NP-SBJ (Q any#any_adj)
								(N speck#speck_n1)
								(PP (P of#of_prep)
								    (NP (N white#white_adj))))
							(VB appear#appear_v)
							(PP (P upon#upon_prep)
							    (NP (PRO them#them_pron)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,51.72))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Scions#scion_n)
		  (CODE <$$font>)
		  (PP (P for#for_prep)
		      (CODE <font>)
		      (NP (NS Apple-trees#apple-tree_n))))
	  (CODE <$$font>)
	  (MD will#will_v1)
	  (ADVP-TMP (ADV seldom#seldom_adv))
	  (BE be#be_v)
	  (ADJP-PRD (ADVR too#too_adv) (ADJ forward#forward_adj))
	  (NP-TMP (Q any#any_adj)
		  (N time#time_n)
		  (PP (P before#before_adv)
		      (NP (D the#the_adj)
			  (N beginning#beginning_n)
			  (PP (P of#of_prep)
			      (CODE <font>)
			      (NP (NPR March#NA))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,51.73))

( (IP-IMP (VBI Choose#choose_v)
	  (NP-OB1 (ADJP (ADJP (ADJ strong#strong_adj))
			(CONJP (CONJ and#and_conj1)
			       (ADJP (ADV well#well_adv) (ADJ grown#grown_adj))))
		  (CODE <font>)
		  (NS Scions#scion_n)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (VBP grow#grow_v)
				  (PP (P at#at_prep)
				      (NP (D the#the_adj)
					  (N top#top_n1)
					  (CONJP (CONJ or#or_conj1)
						 (NX (N outside#outside_n)))
					  (PP (P of#of_prep)
					      (NP (D a#a_adj)
						  (CODE <font>)
						  (N Tree#tree_n)
						  (CODE <$$font>)
						  (CP-REL (WNP-2 0)
							  (C that#that_conj)
							  (IP-SUB (NP-SBJ *T*-2)
								  (VBP bears#bear_v1)
								  (ADVP (ADVP (ADV well#well_adv))
									(PUNC ,)
									(CONJP (CONJ and#and_conj1)
									       (NP (ADJ good#good_adj)
										   (N fruit#fruit_n)
										   (PP (P of#of_prep)
										       (NP (PRO$ its#its_adj) (CODE <P_52>) (N kind#kind_n)))))))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,52.74))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI cut#cut_v)
	  (NEG not#not_adv)
	  (RP off#off_adv)
	  (NP-OB1 (D the#the_adj)
		  (NS tops#top_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (CODE <font>) (NS Scions#scion_n))))
	  (CODE <$$font>)
	  (PP (P till#till_prep)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (CODE <font>)
			      (VBP Graff#graff_v1)
			      (CODE <$$font>)
			      (NP-OB1 (PRO them#them_pron)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,52.75))

( (IP-MAT (CONJ for#for_prep)
	  (ADVP (ADV so#so_adv))
	  (NP-SBJ (PRO they#they_pron))
	  (MD will#will_v1)
	  (VB keep#keep_v)
	  (ADVP (D the#the_adj) (ADVR better#better_adj))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,52.76))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (ADVP-TMP (ADV always#always_adv))
	  (VBN found#find_v)
	  (IP-INF (NP-SBJ (D a#a_adj)
			  (CODE <font>)
			  (N shoot#shoot_n1)
			  (CODE <$$font>)
			  (CONJP (CONJ or#or_conj1)
				 (CODE <font>)
				 (NX (N branch#branch_n)))
			  (CODE <$$font>)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj)
				  (N year#year_n)
				  (ADJP (ADVS next#next_adj) (ADJ foregoing#foregoing_adj)))))
		  (TO to#to_prep)
		  (VB thrive#thrive_v)
		  (ADVP (ADVS best#best_adj)))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,52.77))

( (IP-MAT (CONJ and#and_conj1)
	  (PP-LFD (P though#though_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (PP (P in#in_prep)
				      (CODE <font>)
				      (IP-PPL (VAG Graffing#graff_v1)
					      (CODE <$$font>)
					      (NP-OB1 (ADJ old#old_adj) (NS Trees#tree_n))
					      (PP (P in#in_prep)
						  (CODE <font>)
						  (NP (NPR Hereford-shire#NA)))))
				  (CODE <$$font>)
				  (PUNC ,)
				  (NP-SBJ (Q some#some_pron))
				  (VBP (VBP commend#commend_v) (CONJ and#and_conj1) (VBP use#use_v))
				  (CODE <font>)
				  (NP-OB1 (NS Scions#scion_n)
					  (CODE <$$font>)
					  (PP (P of#of_prep)
					      (CODE <font>)
					      (NP (NP-MSR (NUMP (NUM two#two_adj) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NUM three#three_adj))
							  (CODE <$$font>)
							  (NS years#year_n))
						  (N growth#growth_n1)))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV yet#yet_adv))
	  (NP-SBJ-1 (D those#those_pron))
	  (BEP are#be_v)
	  (ADVP-TMP (ADV seldom#seldom_adv))
	  (VAN found#find_v)
	  (IP-INF (NP-SBJ *-1)
		  (TO to#to_prep)
		  (HV have#have_v)
		  (NP-OB1 (ADJ convenient#convenient_adj)
			  (CODE <font>)
			  (NS buds#bud_n1)
			  (CODE <$$font>)
			  (CP-EOP (WNP-2 0)
				  (IP-INF (TO to#to_prep)
					  (VB put#put_v)
					  (ADVP (ADV forth#forth_adv))
					  (PP (P at#at_prep)
					      (NP *T*-2))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,52.78))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (NP-TMP (ADV often#often_adv) (NS times#time_n))
	  (HVP have#have_v)
	  (CODE <font>)
	  (NP-OB1 (ADJ blossoming#blossoming_adj) (CODE <$$font>) (NS buds#bud_n1))
	  (PP (P on#on_prep)
	      (NP (PRO them#them_pron)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,52.79))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (VBP make#make_v1)
	  (NEG not#not_adv)
	  (NP-OB1 (ADJP (ADVR so#so_adv) (ADJ good#good_adj))
		  (D a#a_adj)
		  (N growth#growth_n1))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,52.80))

( (IP-MAT (CONJ neither#neither_adv)
	  (HVP have#have_v)
	  (NP-SBJ (PRO they#they_pron))
	  (NP-OB1 (ADJP (ADVR so#so_adv) (ADJ good#good_adj))
		  (D a#a_adj)
		  (CODE <font>)
		  (N joynt#joint_n1)
		  (CODE <$$font>)
		  (CP-EOP (WNP-1 0)
			  (IP-INF (TO to#to_prep)
				  (CODE <font>)
				  (VB Graff#graff_v1)
				  (CODE <$$font>)
				  (PP (P at#at_prep)
				      (NP *T*-1))))
		  (PUNC ,)
		  (PP (P as#as_adv)
		      (NP (D those#those_pron)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj) (ADJ last#last_adv) (N year#year_n))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,52.81))

( (IP-MAT (PP (P When#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP get#get_v)
			      (NP-OB1 (PRO them#them_pron)))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (HVD had#have_v)
	  (ADVP (ADVS best#best_adj))
	  (VB cut#cut_v)
	  (RP off#off_adv)
	  (NP-OB1 (NP-POS (PP (P at#at_prep)
			      (QP (QS least#least_adj)))
			  (D a#a_adj)
			  (N$ hands#hand_n))
		  (N breadth#breadth_n)
		  (PP (P of#of_prep)
		      (NP (D that#that_pron1)
			  (CP-REL (WNP-1 (WPRO which#which_adj))
				  (C 0)
				  (IP-SUB (NP-SBJ *T*-1)
					  (VBD grew#grow_v)
					  (NP-TMP (D the#the_adj)
						  (N year#year_n)
						  (ADVP-TMP (ADV before#before_adv)))
					  (PP (P with#with_prep)
					      (NP (PRO them#them_pron)))))))
		  (PUNC ,)
		  (PP (P besides#besides_adv)
		      (NP (NP-POS (D the#the_adj) (ADJ last#last_adv) (N$ years#year_n))
			  (CODE <font>)
			  (N shoot#shoot_n1))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,52.82))

( (IP-MAT (CONJ for#for_prep)
	  (ADVP (ADV so#so_adv))
	  (NP-SBJ (PRO they#they_pron))
	  (MD will#will_v1)
	  (VB keep#keep_v)
	  (ADVP (D the#the_adj) (ADVR better#better_adj))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,52.83))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO you#you_pron))
	  (MD must#must_v1)
	  (VB use#use_v)
	  (NP-OB1 (ADV about#about_adv)
		  (D an#a_adj)
		  (N inch#inch_n1)
		  (PP (P of#of_prep)
		      (NP (D that#that_pron1) (ADJ old#old_adj) (N wood#wood_n1))))
	  (PP (P in#in_prep)
	      (NP (Q every#every_adj) (CODE <font>) (N Scion#scion_n)))
	  (CODE <$$font>)
	  (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (CODE <font>)
			      (VBP Graff#graff_v1)
			      (CODE <$$font>)
			      (NP-OB1 (PRO it#it_pron)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,52.84))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 3#three_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,52.85))

( (IP-MAT (IP-MAT-1 (PP (P In#in_prep)
			(CODE <font>)
			(NP (NPR January#NA) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NPR February#NA)))
		    (CODE <$$font>)
		    (PUNC ,)
		    (PP (P as#as_adv)
			(CP-ADV (WADVP-2 0)
				(C 0)
				(IP-SUB (ADVP *T*-2)
					(NP-SBJ (PRO you#you_pron))
					(VBP find#find_v)
					(IP-INF (NP-SBJ (D the#the_adj) (N weather#weather_n))
						(VB grow#grow_v)
						(ADJP-PRD (ADJ warm#warm_adj))))))
		    (PUNC ,)
		    (IP-PPL-ABS (NP-SBJ (D the#the_adj) (N wind#wind_n1))
				(NEG not#not_adv)
				(BAG being#be_v)
				(CODE <font>)
				(NP-PRD (N North#north_adv) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (N North-East#north-east_adv)))
		    (CODE <$$font>)
		    (PUNC ,)
		    (NP-SBJ (PRO you#you_pron))
		    (MD may#may_v1)
		    (VB Graff#graff_v1)
		    (CODE <font>)
		    (NP-OB1 (NS Plums#plum_n) (PUNC ,) (NS Cherries#cherry_n) (CODE <$$font>) (PUNC ,) (CONJ and#and_conj1) (CODE <font>) (NS Pears#pear_n)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CONJP (CONJ but#but_prep)
		 (IP-MAT=1 (NEG not#not_adv)
			   (CODE <font>)
			   (NP-OB1 (NS Apples#apple_n))
			   (CODE <$$font>)
			   (PP (P till#till_prep)
			       (CP-ADV (C 0)
				       (IP-SUB (NP-SBJ (D the#the_adj)
						       (CODE <font>)
						       (N bark#bark_n1)
						       (CODE <$$font>)
						       (PP (P of#of_prep)
							   (NP (D the#the_adj) (CODE <font>) (NS Stocks#stock_n1))))
					       (CODE <$$font>)
					       (MD will#will_v1)
					       (CODE <font>)
					       (VB (VB rise#rise_v) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (VB peel#peel_v1))
					       (CODE <$$font>)
					       (PP (P from#from_prep)
						   (NP (D the#the_adj) (N wood#wood_n1)))
					       (PUNC ,)
					       (CP-CAR (WNP-3 (WPRO which#which_adj))
						       (C 0)
						       (IP-SUB (IP-SUB-4 (NP-SBJ *T*-3)
									 (BEP is#be_v)
									 (ADVP-TMP (ADV seldom#seldom_adv))
									 (PP (P before#before_adv)
									     (NP (D the#the_adj)
										 (N middle#middle_adj)
										 (PP (P of#of_prep)
										     (CODE <font>)
										     (NP (NPR March#NA))))))
							       (CODE <$$font>)
							       (PUNC ,)
							       (CONJP (CONJ and#and_conj1)
								      (IP-SUB=4 (ADVP-TMP (ADV often#often_adv))
										(PP (NEG not#not_adv)
										    (P till#till_prep)
										    (CODE <font>)
										    (NP (NPR April#NA))))))))))
			   (CODE <$$font>)
			   (PUNC ,)
			   (PP (P because#because_adv)
			       (CP-ADV (C 0)
				       (IP-SUB (NP-SBJ (D this#this_pron))
					       (BEP is#be_v)
					       (ADJP-PRD (ADJ necessary#necessary_adj)
							 (PP (P for#for_prep)
							     (NP (D the#the_adj)
								 (ADJS best#best_adj)
								 (N way#way_n1)
								 (CODE <P_53>)
								 (PP (P of#of_prep)
								     (CODE <font>)
								     (IP-PPL (VAG Graffing#graff_v1)
									     (CODE <$$font>)
									     (NP-OB1 (PRO them#them_pron))))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,53.86))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (MD will#will_v1)
			      (CODE <font>)
			      (VB Graff#graff_v1)
			      (CODE <$$font>)
			      (NP-OB1 (Q any#any_adj) (CODE <font>) (NS Apples#apple_n))
			      (CODE <$$font>)
			      (PP (P in#in_prep)
				  (NP (D the#the_adj) (CODE <font>) (N cleft#cleft_n))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (DO do#do_v)
	  (NP-OB1 (PRO it#it_pron))
	  (ADVP-TMP (NP-MSR (D a#a_adj) (ADJ little#little_adj))
		    (ADVR sooner#soon_adv))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,53.87))

( (IP-MAT (ADVP (ADV Perhaps#perhaps_adv))
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (NEG not#not_adv)
	  (HV have#have_v)
	  (IP-SMC (NP-SBJ (ADJ several#several_adj)
			  (NS sorts#sort_n2)
			  (PP (P of#of_prep)
			      (CODE <font>)
			      (NP (NS Plums#plum_n) (PUNC ,) (NS Cherries#cherry_n) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NS Pears#pear_n))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (ADJP-LOC (ADVR so#so_adv)
			    (ADJ near#near_adj)
			    (NP (PRO you#you_pron))
			    (PP (P as#as_adv)
				(CP-CMP (WADVP-1 0)
					(C that#that_conj)
					(IP-SUB (ADVP *T*-1)
						(NP-SBJ (PRO you#you_pron))
						(MD may#may_v1)
						(VB get#get_v)
						(CODE <font>)
						(NP-OB1 (NS buds#bud_n1)
							(CODE <$$font>)
							(ADJP (ADJ fresh#fresh_adj)
							      (ADVP (ADVR enough#enough_adj))
							      (PP (P for#for_prep)
								  (CODE <font>)
								  (NP (N Inoculation#inoculation_n))))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,53.88))

( (IP-MAT (IP-MAT-1 (PP (P In#in_prep)
			(NP (D this#this_pron) (N case#case_n1)))
		    (NP-SBJ (PRO you#you_pron))
		    (MD may#may_v1)
		    (VB procure#procure_v)
		    (CODE <font>)
		    (NP-OB1 (NS Scions#scion_n)))
	  (CODE <$$font>)
	  (CONJP (CONJ and#and_conj1)
		 (CODE <font>)
		 (IP-MAT=1 (VB Graff#graff_v1)
			   (CODE <$$font>)
			   (NP-OB1 (PRO them#them_pron))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,53.89))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO they#they_pron))
	  (MD will#will_v1)
	  (VB continue#continue_v)
	  (ADJP-PRD (ADJ fresh#fresh_adj))
	  (PP (P though#though_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (MD should#shall_v)
			      (VB send#send_v1)
			      (PP (P for#for_prep)
				  (NP (PRO them#them_pron)))
			      (PP (P from#from_prep)
				  (PP (P beyond#beyond_adv)
				      (NP (N Sea#sea_n)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,53.90))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 4#four_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,53.91))

( (IP-MAT (NP-SBJ (D These#these_pron) (CODE <font>) (NS Scions#scion_n))
	  (CODE <$$font>)
	  (MD may#may_v1)
	  (BE be#be_v)
	  (VAN kept#keep_v)
	  (NP-MSR (NP (NUM three#three_adj) (CODE <font>) (NS weeks#week_n))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (NP (D a#a_adj) (CODE <font>) (N month#month_n1))))
	  (CODE <$$font>)
	  (PP (P after#after_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (VAN cut#cut_v))))
	  (PUNC ,)
	  (PP (P before#before_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (VAN used#use_v))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,53.92))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ-1 (EX there#there_adv))
	  (MD ought#ought_v)
	  (TO to#to_prep)
	  (BE be#be_v)
	  (NP-1 (NP (D a#a_adj) (CODE <font>) (N fortnight#fortnight_n))
		(CODE <$$font>)
		(CONJP (CONJ or#or_conj1)
		       (CODE <font>)
		       (NP (NUM three#three_adj) (NS weeks#week_n))))
	  (CODE <$$font>)
	  (PP (P betwixt#betwixt_prep)
	      (NP (D the#the_adj)
		  (N time#time_n)
		  (PP (PP (P of#of_prep)
			  (NP (PRO$ their#their_adj)
			      (IP-PPL (BAG being#be_v) (CODE <font>) (VAN cut#cut_v))))
		      (CODE <$$font>)
		      (PUNC ,)
		      (CONJP (CONJ and#and_conj1)
			     (PP (P of#of_prep)
				 (NP (PRO$ their#their_adj)
				     (IP-PPL (BAG being#be_v) (CODE <font>) (VAN Graffed#graff_v1))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (NS Stocks#stock_n1))
				  (CODE <$$font>)
				  (PP (P in#in_prep)
				      (NP (D that#that_pron1) (N time#time_n)))
				  (MD may#may_v1)
				  (BE be#be_v)
				  (NP-MSR (QR more#more_adj))
				  (VAN replenisht#replenish_v)
				  (PP (P with#with_prep)
				      (CODE <font>)
				      (NP (N sap#sap_n1))))
			  (CODE <$$font>)
			  (PUNC ,)
			  (CONJP (CONJ and#and_conj1)
				 (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (NS Scions#scion_n))
					 (CODE <$$font>)
					 (BEP be#be_v)
					 (ADJP-PRD (QR more#more_adj)
						   (ADJ empty#empty_adj)
						   (PP (P of#of_prep)
						       (NP (PRO it#it_pron))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,53.93))

( (IP-MAT (IP-INF-PRP (TO To#to_prep)
		      (VB keep#keep_v)
		      (NP-OB1 (PRO$ your#your_pron)
			      (CODE <font>)
			      (NS Scions#scion_n)
			      (CODE <$$font>)
			      (CONJP (CONJ or#or_conj1)
				     (CODE <font>)
				     (NX (NS Graffs#graff_n1))))
		      (CODE <$$font>)
		      (PP (P after#after_adv)
			  (CP-ADV (C 0)
				  (IP-SUB (NP-SBJ (PRO they#they_pron))
					  (BEP are#be_v)
					  (VAN cut#cut_v)))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD need#need_v2)
	  (NEG not#not_adv)
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-OB1 *T*-1)
			      (NP-SBJ (Q some#some_pron))
			      (VBP direct#direct_v))))
	  (PUNC ,)
	  (VB bury#bury_v)
	  (NP-OB1 (PRO them#them_pron))
	  (PP (P in#in_prep)
	      (CODE <font>)
	      (NP (ADJ moist#moist_adj) (N mold#mould_n1)))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,53.94))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (D this#this_pron))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (NP-PRD (D a#a_adj)
		  (NS means#mean_n3)
		  (IP-INF (TO to#to_prep)
			  (VB make#make_v1)
			  (IP-INF (NP-SBJ (PRO them#them_pron))
				  (VB swell#swell_v)
				  (IP-INF-PRN (CONJ and#and_conj1)
					      (VB bud#bud_v1)
					      (ADVP (ADV forth#forth_adv)))
				  (PUNC ,)
				  (PP (P by#by_prep)
				      (IP-PPL (VAG receiving#receive_v)
					      (NP-OB1 (N moisture#moisture_n))
					      (PP (P from#from_prep)
						  (NP (D the#the_adj) (CODE <font>) (N Earth#earth_n1))))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,53.95))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP-TMP (ADV then#then_adv))
	  (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (PP (P by#by_prep)
				  (CODE <font>)
				  (NP (N Graffing#graffing_n)))
			      (CODE <$$font>)
			      (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (VAN exposed#expose_v)
			      (PP (P to#to_prep)
				  (NP (D the#the_adj) (ADJ cold#cold_adj) (ADJ open#open_adj) (CODE <font>) (N Air#air_n1))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (PRO they#they_pron))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (PP (P in#in_prep)
	      (NP (N danger#danger_n)
		  (IP-INF (TO to#to_prep)
			  (VB (VB wither#wither_v2) (CONJ and#and_conj1) (VB die#die_v1))
			  (PP (P before#before_adv)
			      (CP-ADV (C 0)
				      (IP-SUB (NP-SBJ (PRO they#they_pron))
					      (HVP have#have_v)
					      (NP-OB1 (N nourishment#nourishment_n)
						      (PP (P from#from_prep)
							  (NP (D the#the_adj) (CODE <font>) (N Stock#stock_n1))))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,53.96))

( (CODE <P_54>))

( (IP-MAT (IP-MAT-1 (NP-SBJ (PRO You#you_pron))
		    (MD may#may_v1)
		    (VB lay#lay_v1)
		    (NP-OB1 (PRO them#them_pron))
		    (PP (PP (P in#in_prep)
			    (NP (D a#a_adj) (ADJ dry#dry_adj) (N house#house_n1)))
			(CONJP *ICH*-2))
		    (PUNC ,)
		    (PP (P so#so_adv)
			(CP-ADV (C 0)
				(IP-SUB (NP-SBJ (PRO it#it_pron))
					(BEP be#be_v)
					(ADJP-LOC (ADJ near#near_adj)
						  (NP (Q no#no_adj) (N heat#heat_n))))))
		    (PUNC ,)
		    (CONJP-2 (CONJ or#or_conj1)
			     (PP (P under#under_prep)
				 (NP (D an#a_adj)
				     (ADJ old#old_adj)
				     (N Tree#tree_n)
				     (PUNC ,)
				     (CONJP (CONJ or#or_conj1)
					    (NX (N Hedge#hedge_n)))))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (VB cover#cover_v1)
			   (NP-OB1 (PRO them#them_pron))
			   (ADVP (Q all#all_adj) (RP over#over_adv))
			   (PP (P with#with_prep)
			       (CODE <font>)
			       (NP (ADJ dry#dry_adj) (N mold#mould_n1)))
			   (CODE <$$font>)
			   (PUNC ,)
			   (CP-ADV (C that#that_conj)
				   (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N Air#air_n1))
					   (CODE <$$font>)
					   (MD may#may_v1)
					   (NEG not#not_adv)
					   (HV have#have_v)
					   (NP-OB1 (QP (ADVR too#too_adv) (Q much#much_adj))
						   (N influence#influence_n)
						   (PP (P upon#upon_prep)
						       (NP (PRO them#them_pron))))))))
	  (PUNC :))
  (ID LANGF-1696-E3-P2,54.98))

( (IP-MAT (IP-MAT-1 (PP-LFD (P though#though_adv)
			    (CP-ADV (C 0)
				    (IP-SUB (NP-SBJ (PRO they#they_pron))
					    (VBP seem#seem_v2)
					    (ADJP-PRD (NP-MSR (Q somewhat#somewhat_n))
						      (ADJ dry#dry_adj)))))
		    (PUNC ,)
		    (ADVP-RSP (ADV yet#yet_adv))
		    (PP (P if#if_conj)
			(CP-ADV (C 0)
				(IP-SUB (IP-SUB (NP-SBJ (PRO they#they_pron))
						(VBP cut#cut_v)
						(PP (P with#with_prep)
						    (NP (D a#a_adj) (ADJ fresh#fresh_adj) (N colour#colour_n1))))
					(PUNC ,)
					(CONJP (CONJ and#and_conj1)
					       (IP-SUB (NP-SBJ *con*)
						       (BEP be#be_v)
						       (NEG not#not_adv)
						       (NP-MSR (Q much#much_adj))
						       (VAN withered#wither_v2))))))
		    (PUNC ,)
		    (NP-SBJ (PRO they#they_pron))
		    (MD will#will_v1)
		    (NEG not#not_adv)
		    (VB grow#grow_v)
		    (ADVP (D the#the_adj) (ADVR worse#worse_adv)))
	  (PUNC ,)
	  (CONJP (CONJ but#but_prep)
		 (IP-MAT=1 (ADVP (ADVR rather#rather_adv))
			   (ADVP (D the#the_adj) (ADVR better#better_adj))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,54.99))

( (IP-MAT (INTJ yea#yea_adv)
	  (NP-SBJ (Q some#some_pron)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (HVP have#have_v)
				  (VBN seemed#seem_v2)
				  (IP-PPL (VAN withered#wither_v2)))))
	  (PUNC ,)
	  (IP-PPL (BAG being#be_v)
		  (VAN carried#carry_v)
		  (PP (P in#in_prep)
		      (NP (D a#a_adj) (N Cloak-bag#cloak-bag_n)))
		  (CODE <font>)
		  (NP-MSR (NUMP (NUM seventy#seventy_adj) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NUM eighty#eighty_adj))
			  (CODE <$$font>)
			  (NS miles#mile_n1)))
	  (HVP have#have_v)
	  (VBN grown#grow_v)
	  (ADVP (ADV well#well_adv))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,54.100))

( (IP-IMP (VBI Suffer#suffer_v)
	  (NEG not#not_adv)
	  (IP-INF (NP-SBJ (D the#the_adj) (CODE <font>) (NS buds#bud_n1))
		  (CODE <$$font>)
		  (TO to#to_prep)
		  (BE be#be_v)
		  (VAN (VAN hurt#hurt_v) (PUNC ,) (CONJ or#or_conj1) (VAN rub'd#rub_v1))
		  (PP (P in#in_prep)
		      (NP (D the#the_adj)
			  (CODE <font>)
			  (N binding#binding_n)
			  (CODE <$$font>)
			  (CONJP (CONJ or#or_conj1)
				 (CODE <font>)
				 (NX (N carriage#carriage_n))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,54.101))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 5#five_v) (PUNC .))
  (ID LANGF-1696-E3-P2,54.102))

( (IP-MAT (NP-SBJ-1 (EX There#there_adv))
	  (BEP be#be_v)
	  (NP-1 (Q some#some_pron)
		(ADJP (ADJP (ADJ indifferent#indifferent_adj1)
			    (CP-QUE-SUB (WQ whether#whether_pron)
					(C 0)
					(IP-SUB (IP-SUB-2 (NP-SBJ (PRO they#they_pron))
							  (CODE <font>)
							  (VBP Graff#graff_v1)
							  (CODE <$$font>)
							  (PP (P at#at_prep)
							      (NP (D a#a_adj) (CODE <font>) (N joynt#joint_n1))))
						(CODE <$$font>)
						(CONJP (CONJ or#or_conj1)
						       (IP-SUB=2 (NEG no#no_adv1))))))
		      (PUNC ,)
		      (CONJP (CONJ but#but_prep)
			     (CP-REL (WNP-3 0)
				     (C 0)
				     (IP-SUB (NP-SBJ *T*-3)
					     (VBP forecast#forecast_v)
					     (IP-INF (TO to#to_prep)
						     (HV have#have_v)
						     (NP-OB1 (D a#a_adj) (CODE <font>) (N bud#bud_n1))
						     (CODE <$$font>)
						     (PP (ADV directly#directly_adv)
							 (P behind#behind_adv)
							 (NP (D the#the_adj)
							     (CODE <font>)
							     (N shoulder#shoulder_n)
							     (CODE <$$font>)
							     (PP (P of#of_prep)
								 (NP (D the#the_adj) (CODE <font>) (N Scion#scion_n)))))))))))
	  (CODE <$$font>)
	  (PUNC :))
  (ID LANGF-1696-E3-P2,54.103))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (CODE <font>)
		      (IP-SUB (NP-SBJ (NS Scions#scion_n)
				      (CODE <$$font>)
				      (PP (P with#with_prep)
					  (CODE <font>)
					  (NP (NS joynts#joint_n1))))
			      (CODE <$$font>)
			      (BED were#be_v)
			      (ADJP-PRD (ADJ scarce#scarce_adj)))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD might#may_v1)
	  (VB practise#practise_v)
	  (ADVP (ADV so#so_adv))
	  (PP (P on#on_prep)
	      (NP (ADJ small#small_adj)
		  (CODE <font>)
		  (NS Stocks#stock_n1)
		  (CODE <$$font>)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (MD will#will_v1)
				  (BE be#be_v)
				  (ADVP (ADV speedily#speedily_adv))
				  (VAN cover'd#cover_v1)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,54.104))

( (IP-IMP (CONJ but#but_prep)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (CODE <font>)
		      (IP-SUB (NP-SBJ (NS Scions#scion_n)
				      (CODE <$$font>)
				      (PP *ICH*-1))
			      (MD can#can_v1)
			      (BE be#be_v)
			      (HAN had#have_v)
			      (PP-1 (P with#with_prep)
				    (CODE <font>)
				    (NP (NS joints#joint_n1))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (ADVP-TMP (ADV never#never_adv))
	  (CODE <font>)
	  (VBI Graff#graff_v1)
	  (CODE <$$font>)
	  (PP (P with#with_prep)
	      (NP (OTHERS others#other_adj)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,54.105))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (D these#these_pron))
	  (MD will#will_v1)
	  (VB cover#cover_v1)
	  (NP-OB1 (D the#the_adj) (CODE <font>) (NS Stocks#stock_n1))
	  (CODE <$$font>)
	  (ADVP-TMP (ADVR sooner#soon_adv))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,54.106))

( (IP-MAT (NP-SBJ-1 (PRO It#it_pron))
	  (MD will#will_v1)
	  (DO do#do_v)
	  (ADVP (ADV well#well_adv))
	  (PP (P in#in_prep)
	      (CODE <font>)
	      (IP-PPL (VAG Graffing#graff_v1)
		      (NP-OB1 (NS Stocks#stock_n1)
			      (CODE <$$font>)
			      (PP (P for#for_prep)
				  (NP (ADJ large#large_adj) (CODE <font>) (NS Standards#standard_n))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (IP-INF-1 (IP-INF (TO to#to_prep)
			    (VB put#put_v)
			    (NP-OB1 (FP but#but_prep) (ONE one#one_adj) (CODE <font>) (N Scion#scion_n))
			    (CODE <$$font>)
			    (PP (P into#into_prep)
				(NP (D a#a_adj) (N Stock#stock_n1))))
		    (PUNC ,)
		    (CONJP (CONJ and#and_conj1)
			   (IP-INF (PP (P if#if_conj)
				       (CP-ADV (C 0)
					       (IP-SUB (NP-SBJ (PRO it#it_pron))
						       (VBP put#put_v)
						       (ADVP (ADV forth#forth_adv))
						       (NP-OB1 (ADJ several#several_adj) (CODE <font>) (NS shoots#shoot_n1)))))
				   (CODE <$$font>)
				   (TO to#to_prep)
				   (VB cut#cut_v)
				   (RP off#off_adv)
				   (NP-OB1 (Q all#all_adj)
					   (PP (P but#but_prep)
					       (NP (ONE one#one_adj)
						   (PUNC ,)
						   (CP-REL (WNP-2 0)
							   (C that#that_conj)
							   (IP-SUB (NP-SBJ *T*-2)
								   (BEP is#be_v)
								   (NP-PRD (D the#the_adj)
									   (ADJP (ADJS straightest#straight_adj) (CONJ and#and_conj1) (ADJS strongest#strong_adj)))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,54.107))

( (IP-IMP (CONJ But#but_prep)
	  (PP (P for#for_prep)
	      (CODE <font>)
	      (NP (NS Dwarfs#dwarf_n) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (N Wall-fruit#SEE_wall_n1)))
	  (CODE <$$font>)
	  (VBI put#put_v)
	  (RP in#in_adv)
	  (CODE <font>)
	  (NP-OB1 (NUM two#two_adj) (NS Scions#scion_n))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N Stock#stock_n1))
			      (CODE <$$font>)
			      (BEP be#be_v)
			      (ADJP-PRD (ADJ big#big_adj)
					(ADVP (ADVR enough#enough_adj))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,54.108))

( (IP-IMP (VBI Let#let_v1)
	  (IP-INF (IP-INF-1 (NP-SBJ (D the#the_adj) (ADJ latter#latter_adj))
			    (BE be#be_v)
			    (CODE <P_55>)
			    (CODE <font>)
			    (VAN Graffed#graff_v1)
			    (CODE <$$font>)
			    (ADJP-LOC (ADJ near#near_adj)
				      (NP (D the#the_adj) (N ground#ground_n))))
		  (PUNC ,)
		  (CONJP (IP-INF=1 (NP-SBJ (D the#the_adj) (ADJ former#former_adj))
				   (PP (P at#at_prep)
				       (NP (SUCH such#such_adj)
					   (N height#height_n)
					   (PP (P as#as_adv)
					       (CP-CMP (WNP-2 0)
						       (C 0)
						       (IP-SUB (NP-OB1 *T*-2)
							       (NP-SBJ (D the#the_adj) (CODE <font>) (N Stock#stock_n1))
							       (CODE <$$font>)
							       (MD will#will_v1)
							       (VB allow#allow_v)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,55.109))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 6#six_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,55.110))

( (IP-MAT (PP (P In#in_prep)
	      (CODE <font>)
	      (NP (N (N Graffing#graffing_n) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (N Inoculating#inoculating_n))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ necessary#necessary_adj))
	  (IP-INF-1 (TO to#to_prep)
		    (HV have#have_v)
		    (NP-OB1 (Q some#some_pron) (CODE <font>) (N mark#mark_n1)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (IP-INF-PRP (TO to#to_prep)
		      (VB know#know_v)
		      (CP-QUE-SUB (WNP-2 (WD what#what_pron)
					 (N kind#kind_n)
					 (PP (P of#of_prep)
					     (CODE <font>)
					     (NP (N Fruit#fruit_n))))
				  (CODE <$$font>)
				  (C 0)
				  (IP-SUB (NP-SBJ *T*-2)
					  (BEP is#be_v)
					  (VAN put#put_v)
					  (PP (P upon#upon_prep)
					      (NP (Q each#each_adj) (N Stock#stock_n1))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,55.111))

( (IP-MAT (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP Graff#graff_v1)
			      (NP-OB1 (Q many#many_adj)
				      (PP (P of#of_prep)
					  (NP (ONE one#one_adj) (N kind#kind_n)))))))
	  (PUNC ,)
	  (PUNC <paren>)
	  (PP-PRN (P as#as_adv)
		  (CP-ADV (WADVP-1 0)
			  (C 0)
			  (IP-SUB (ADVP *T*-1)
				  (NP-SBJ (PRO it@#it_pron))
				  (BEP @'s#be_v)
				  (ADJP-PRD (ADJ necessary#necessary_adj)
					    (PP (P for#for_prep)
						(CODE <font>)
						(NP (N Syder-Fruit#SEE_cider_n)))))))
	  (CODE <$$font>)
	  (PUNC <$$paren>)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB observe#observe_v)
	  (IP-INF (TO to#to_prep)
		  (VB make#make_v1)
		  (IP-INF (NP-SBJ (Q every#every_adj) (CODE <font>) (N row#row_n1))
			  (CODE <$$font>)
			  (TO to#to_prep)
			  (VB consist#consist_v)
			  (FP-2 but#NA)
			  (PP (P of#of_prep)
			      (NP (FP *ICH*-2)
				  (NP (ONE one#one_adj) (N kind#kind_n))
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (NP (Q no#no_adj) (OTHER other#other_adj)))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,55.112))

( (IP-MAT (CONJ but#but_prep)
	  (IP-MAT-1 (PP (P in#in_prep)
			(NP (D a#a_adj)
			    (N Book#book_n)
			    (PUNC ,)
			    (CP-THT (C that#that_conj)
				    (IP-SUB (NP-SBJ (SUCH such#such_adj) (D a#a_adj) (N row#row_n1))
					    (HVP hath#have_v)
					    (NP-OB1 (SUCH such#such_adj)
						    (D a#a_adj)
						    (N kind#kind_n)
						    (PP (P of#of_prep)
							(CODE <font>)
							(NP (N Fruit#fruit_n))))
					    (CODE <$$font>)
					    (PP (P in#in_prep)
						(NP (PRO it#it_pron)))))))
		    (PUNC ,)
		    (IP-MAT-PRN (CONJ and#and_conj1)
				(NP-SBJ (PRO it@#it_pron))
				(BEP @'s#be_v)
				(FP but#but_prep)
				(IP-PPL (VAG entring#enter_v)
					(CP-QUE-SUB (WADVP-2 (WADV where#where_adv))
						    (C 0)
						    (IP-SUB (ADVP-LOC *T*-2)
							    (NP-SBJ-3 (EX there#there_adv))
							    (BEP are#be_v)
							    (NP-3 (ADJ several#several_adj))
							    (PP (P in#in_prep)
								(NP (ONE one#one_adj) (N row#row_n1)))))))
		    (PUNC ,)
		    (NP-SBJ-4 (EX there#there_adv))
		    (MD may#may_v1)
		    (BE be#be_v)
		    (NP-4 (D a#a_adj) (N Stake#stake_n1))
		    (VAN knockt#knock_v)
		    (PP (P into#into_prep)
			(NP (D the#the_adj) (N ground#ground_n)))
		    (PP (P at#at_prep)
			(NP (D the#the_adj)
			    (N beginning#beginning_n)
			    (PP (P of#of_prep)
				(NP (Q every#every_adj) (ADJ new#new_adj) (N sort#sort_n2))))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (ADVP (ADV so#so_adv))
			   (VAN entred#enter_v)
			   (PP (P in#in_prep)
			       (NP (PRO$ your#your_pron) (N Book#book_n)))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,55.113))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP-LOC (ADVP-LOC (CP-FRL (WADVP-1 (WADV where#where_adv))
				      (C 0)
				      (IP-SUB (ADVP-LOC *T*-1)
					      (NP-SBJ (PRO you#you_pron))
					      (HVP have#have_v)
					      (NP-OB1 (QP (ADV very#very_adj)
							  (Q few#few_adj)
							  (PP (P of#of_prep)
							      (NP (D a#a_adj) (N kind#kind_n))))))))
		    (PUNC <paren>)
		    (CONJP (CONJ or#or_conj1)
			   (PP (P for#for_prep)
			       (NP (PRO$ your#your_pron) (ADJ whole#whole_adj) (CODE <font>) (N Nursery#nursery_n)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP-PRN (P if#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (PRO you#you_pron))
				  (VBP please#please_v))))
	  (PUNC <$$paren>)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB make#make_v1)
	  (CODE <font>)
	  (NP-OB1 (NS marks#mark_n1)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (NP (ADJ several#several_adj)
			  (CODE <font>)
			  (NS figures#figure_n)
			  (CODE <$$font>)
			  (CONJP (CONJ or#or_conj1)
				 (NX (NS shapes#shape_n1)))))
		  (PUNC ,)
		  (PP (P in#in_prep)
		      (NP (D the#the_adj)
			  (CODE <font>)
			  (N bark#bark_n1)
			  (CODE <$$font>)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj) (CODE <font>) (NS Stocks#stock_n1))))))
	  (CODE <$$font>)
	  (PUNC ;)
	  (CP-CAR (WNP-2 (WNP (WD which#which_adj) (CODE <font>) (NS marks#mark_n1))
			 (CODE <$$font>)
			 (CONJP *ICH*-3))
		  (IP-IMP (NP-OB1 *T*-2)
			  (VBI enter#enter_v)
			  (PP (P into#into_prep)
			      (NP (PRO$ your#your_pron) (N Book#book_n)))
			  (PUNC ,)
			  (CONJP-3 (CONJ and#and_conj1)
				   (CP-QUE-SUB (WNP-4 (WD what#what_pron) (CODE <font>) (N kind#kind_n))
					       (CODE <$$font>)
					       (C 0)
					       (IP-SUB (NP-OB1 *T*-4)
						       (NP-SBJ (PRO it#it_pron))
						       (VBP denotes#denote_v))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,55.114))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P at#at_prep)
	      (NP (NUMP (NUM two#two_adj) (CONJ or#or_conj1) (NUM three#three_adj))
		  (NS years#year_n)))
	  (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP remove#remove_v)
			      (NP-OB1 (PRO it#it_pron)))))
	  (PUNC ,)
	  (NP-SBJ (D the#the_adj) (N mark#mark_n1))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADV very#very_adj) (ADJ visible#visible_adj))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,55.115))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P by#by_prep)
	      (IP-PPL (VAG renewing#renew_v1)
		      (NP-OB1 (D the#the_adj) (NS marks#mark_n1))
		      (NP-TMP (Q+NS sometimes#sometimes_adv))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB continue#continue_v)
	  (NP-OB1 (PRO it#it_pron))
	  (NP-MSR (ADJP (ADVR as#as_adv) (ADJ long#long_adj1))
		  (PP (P as#as_adv)
		      (CP-CMP (WNP-1 0)
			      (C 0)
			      (IP-SUB (NP-MSR *T*-1)
				      (NP-SBJ (PRO you#you_pron))
				      (VBP please#please_v)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,55.116))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (Q any#any_adj) (N Tree#tree_n))
			      (BEP be#be_v)
			      (VAN stolen#steal_v1))))
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB own#own_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P by#by_prep)
	      (NP (D the#the_adj) (N mark#mark_n1)))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,55.117))

( (CODE <P_56>))

( (CODE <heading>))

( (NP (N CHAP.#chapter_n) (NUM VIII#eight_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,56.120))

( (PP (CODE <font>)
      (P Of#of_prep)
      (IP-PPL (VAG Planting#plant_v)
	      (NP-OB1 (N Wall-Fruit#SEE_wall_n1)))
      (PUNC .))
  (ID LANGF-1696-E3-P2,56.121))

( (CODE <$$heading>))

( (NP (N Sect.#section_n) (CODE <$$font>) (ONE 1#one_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,56.123))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (N Stone-fruit#stone-fruit_n))
	  (CODE <$$font>)
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADVP-TMP (ADV first#first_adj))
	  (ADJP-PRD (ADJ ready#ready_adj)
		    (CP-TMC (WNP-1 0)
			    (IP-INF (NP-OB1 *T*-1)
				    (TO to#to_prep)
				    (VB remove#remove_v))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,56.124))

( (IP-MAT (CONJ for#for_prep)
	  (PP (P after#after_adv)
	      (NP (NP-MSR (NUM two#two_adj) (NS years#year_n))
		  (N growth#growth_n1)
		  (PP (P in#in_prep)
		      (NP (D the#the_adj)
			  (N Seed-plot#seed-plot_n)
			  (CONJP (CONJ or#or_conj1)
				 (NX (N Nursery#nursery_n)))))))
	  (PUNC ,)
	  (PP (P after#after_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (VAN (VAN Inoculated#inoculate_v) (PUNC ,) (CONJ or#or_conj1) (VAN Graffed#graff_v1)))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (ADVP (ADV well#well_adv))
	  (VB remove#remove_v)
	  (NP-OB1 (PRO them#them_pron))
	  (PUNC ,)
	  (CP-ADV (IP-SUB (BEP be#be_v)
			  (NP-SBJ (PRO they#they_pron))
			  (PP (P for#for_prep)
			      (CODE <font>)
			      (NP (N Wall#wall_n1) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NS Dwarfs#dwarf_n)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CP-CAR (WNP-1 (WPRO which#which_adj))
		  (C 0)
		  (IP-SUB (NP-OB1 *T*-1)
			  (NP-SBJ (PRO you#you_pron))
			  (MD ought#ought_v)
			  (TO to#to_prep)
			  (DO do#do_v)
			  (PP (P in#in_prep)
			      (CODE <font>)
			      (NP (NPR October#NA) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NPR November#NA)))))
	  (CODE <$$font>)
	  (PUNC ;)
	  (IP-PPL-ABS (NP-SBJ (ADJ early#early_adj) (N removing#removing_n))
		      (PUNC ,)
		      (BAG being#be_v)
		      (ADJP-PRD (ADJ advantageous#advantageous_adj)
				(PP (P for#for_prep)
				    (NP (Q all#all_adj) (CODE <font>) (NS Fruit-Trees#SEE_fruit_n)))
				(CODE <$$font>)
				(PUNC ,)
				(PP (CONJ both#both_pron)
				    (PP (P for#for_prep)
					(NP (D the#the_adj)
					    (N security#security_n)
					    (PP (P of#of_prep)
						(NP (PRO$ their#their_adj) (N growing#growing_n)))))
				    (PUNC ,)
				    (CONJP (CONJ and#and_conj1)
					   (PP (P for#for_prep)
					       (NP (PRO$ their#their_adj)
						   (IP-PPL (ADVP (ADV well#well_adv))
							   (VAG growing#grow_v))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,56.125))

( (IP-MAT (IP-PPL-ABS (IP-PPL-1 (NP-SBJ (ADJ Young#young_adj) (CODE <font>) (NS Trees#tree_n))
				(CODE <$$font>)
				(PUNC ,)
				(HAG having#have_v)
				(BEN been#be_v)
				(VAN taken#take_v)
				(RP up#up_adv1)
				(NP-TMP (ADV about#about_adv) (CODE <font>) (NPR November#NA)))
		      (CODE <$$font>)
		      (PUNC ,)
		      (CONJP (CONJ and#and_conj1)
			     (IP-PPL=1 (IP-PPL-2 (NP-SBJ (D the#the_adj)
							 (NS ends#end_n)
							 (PP (P of#of_prep)
							     (NP (D the#the_adj) (NS roots#root_n1))))
						 (VAN cut#cut_v)
						 (RP off#off_adv))
				       (PUNC ,)
				       (CONJP (CONJ and#and_conj1)
					      (IP-PPL=2 (VAN laid#lay_v1)
							(PP (P in#in_prep)
							    (NP (D the#the_adj) (N Earth#earth_n1)))
							(PP (P till#till_prep)
							    (CODE <font>)
							    (NP (NPR March#NA)))
							(CODE <$$font>)
							(IP-INF-PRP (TO to#to_prep) (BE be#be_v) (VAN Planted#plant_v))))
				       (PUNC ,)
				       (CONJP (IP-PPL (NP-SBJ *con*)
						      (BAG being#be_v)
						      (ADVP-TMP (ADV then#then_adv))
						      (VAN taken#take_v)
						      (ADVP (ADV forth#forth_adv))
						      (ADVP (ADV again#again_adv)))))))
	  (PUNC ,)
	  (NP-SBJ-3 (PRO it#it_pron))
	  (HVP hath#have_v)
	  (VBN appeared#appear_v)
	  (CP-THT-3 (C that#that_conj)
		    (IP-SUB (NP-SBJ (PRO they#they_pron))
			    (HVP have#have_v)
			    (VBN put#put_v)
			    (RP out#out_adv)
			    (NP-OB1 (Q many#many_adj) (ADJ fibrous#fibrous_adj) (NS roots#root_n1))
			    (PUNC ,)
			    (PP (P at#at_prep)
				(NP (D the#the_adj)
				    (NS ends#end_n)
				    (PP (P of#of_prep)
					(NP (D those#those_pron)
					    (ADJ big#big_adj)
					    (NS roots#root_n1)
					    (CP-REL (WNP-4 0)
						    (C that#that_conj)
						    (IP-SUB (NP-SBJ *T*-4)
							    (BED were#be_v)
							    (VAN cut#cut_v)
							    (RP off#off_adv)))))))
			    (PUNC ;)
			    (CP-CAR (WNP-5 (WPRO which#which_adj))
				    (C 0)
				    (IP-SUB (CP-ADV (C 0)
						    (IP-SUB (NP-OB1 *T*-5)
							    (HVD had#have_v)
							    (NP-SBJ (PRO they#they_pron))
							    (DON done#do_v)
							    (PP (P in#in_prep)
								(NP (D the#the_adj)
								    (N place#place_n1)
								    (CP-REL (WNP-6 0)
									    (C 0)
									    (IP-SUB (NP-SBJ (PRO they#they_pron))
										    (BED were#be_v)
										    (IP-INF (TO to#to_prep)
											    (VB grow#grow_v)
											    (PP (P in#in_prep)
												(NP *T*-6))
											    (NP-TMP (D the#the_adj) (ADJS next#next_adj) (N Summer#summer_n1)))))))))
					    (PUNC ,)
					    (NP-SBJ (D this#this_pron))
					    (MD would#will_v1)
					    (HV have#have_v)
					    (BEN been#be_v)
					    (NP-PRD (D a#a_adj)
						    (ADJ good#good_adj)
						    (N preparation#preparation_n)
						    (PP (P against#against_prep)
							(NP (N Spring#spring_n1))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,56.126))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ-1 (PRO it@#it_pron))
	  (BEP @'s#be_v)
	  (ADVP-TMP (ADV always#always_adv))
	  (VAN seen#see_v)
	  (CP-THT-1 (C that#that_conj)
		    (IP-SUB (NP-SBJ (NS Trees#tree_n)
				    (RRC (VAN set#set_v1)
					 (PP (P in#in_prep)
					     (CODE <font>)
					     (NP (NPR February#NA) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NPR March#NA)))))
			    (CODE <$$font>)
			    (PUNC ,)
			    (VBP make#make_v1)
			    (ADVP (ADV generally#generally_adv))
			    (NP-OB1 (D a#a_adj)
				    (QP (Q much#much_adj) (QR less#less_adj))
				    (N growth#growth_n1)
				    (PP *ICH*-2))
			    (NP-TMP (D the#the_adj) (ADJS next#next_adj) (CODE <P_57>) (N year#year_n))
			    (PUNC ,)
			    (PP-2 (P than#than_conj)
				  (NP (D those#those_pron)
				      (CP-REL (WNP-3 0)
					      (C that#that_conj)
					      (IP-SUB (NP-SBJ *T*-3)
						      (BED were#be_v)
						      (VAN set#set_v1)
						      (PP (P before#before_adv)
							  (NP (N Winter#winter_n1)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,57.127))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D a#a_adj) (ADJ dry#dry_adj) (N Summer#summer_n1))
			      (VBP happen#happen_v)
			      (IP-INF (TO to#to_prep) (VB succeed#succeed_v)))))
	  (PUNC ,)
	  (NP-SBJ (PRO it#it_pron))
	  (ADVP-TMP (ADV often#often_adv))
	  (VBP kills#kill_v)
	  (NP-OB1 (Q some#some_pron)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (ADJP (ADV late#late_adv) (ADJ set#set_adj1))
			  (NS Trees#tree_n))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,57.128))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (VBP puts#put_v)
	  (NP-OB1 (SUCH such#such_adj)
		  (D a#a_adj)
		  (N stop#stop_n2)
		  (CP-DEG *ICH*-1))
	  (PP (P to#to_prep)
	      (NP (OTHERS others#other_adj)))
	  (PUNC ,)
	  (CP-DEG-1 (C that#that_conj)
		    (IP-SUB (NP-SBJ (PRO they#they_pron))
			    (VBP recover#recover_v1)
			    (NEG not#not_adv)
			    (PP (P of#of_prep)
				(NP (Q many#many_adj) (NS years#year_n)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,57.129))

( (IP-MAT (PP (P In#in_prep)
	      (NP (ADJ sharp#sharp_adj) (NS Frosts#frost_n)))
	  (PUNC ,)
	  (PP (P though#though_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (MD could#can_v1)
			      (VB dig#dig_v))))
	  (PUNC ,)
	  (NP-SBJ-1 (PRO it@#it_pron))
	  (BEP @'s#be_v)
	  (NEG not#not_adv)
	  (ADJP-PRD (ADJ good#good_adj))
	  (IP-INF-1 (TO to#to_prep)
		    (VB remove#remove_v)
		    (NP-OB1 (NS Trees#tree_n)))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,57.130))

( (IP-MAT (ADVP (ADV Yet#yet_adv))
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (HVP have#have_v)
			      (NP-OB1 (QP (D a#a_adj) (Q few#few_adj))
				      (ADJ small#small_adj)
				      (CODE <font>)
				      (NS Trees#tree_n)
				      (CODE <$$font>)
				      (ADJP-LOC (ADJ near#near_adj)
						(NP (N hand#hand_n)))
				      (CP-EOP (WNP-1 0)
					      (IP-INF (NP-OB1 *T*-1)
						      (TO to#to_prep)
						      (VB remove#remove_v)))))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB make#make_v1)
	  (NP-OB1 (N advantage#advantage_n)
		  (PP (P of#of_prep)
		      (NP (D a#a_adj) (ADJ small#small_adj) (CODE <font>) (N Frost#frost_n))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P by#by_prep)
	      (IP-PPL (VAG removing#remove_v)
		      (NP-OB1 (PRO them#them_pron))))
	  (PUNC ,)
	  (PP (P in#in_prep)
	      (IP-PPL (VAG getting#get_v)
		      (RP up#up_adv1)
		      (NP-OB1 (D the#the_adj) (CODE <font>) (N Earth#earth_n1))
		      (CODE <$$font>)
		      (ADJP-SPR (ADJ whole#whole_adj))
		      (PP (P about#about_adv)
			  (NP (D the#the_adj)
			      (NS roots#root_n1)
			      (PP (P of#of_prep)
				  (NP (D the#the_adj) (N Tree#tree_n)))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,57.131))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI set#set_v1)
	  (NP-OB1 (PRO it#it_pron))
	  (ADVP-TMP (ADV presently#presently_adv))
	  (IP-PPL (VAG letting#let_v1)
		  (IP-INF (NP-SBJ (QP (ADVR as#as_adv) (Q little#little_adj))
				  (N Earth#earth_n1)
				  (PP *ICH*-1))
			  (CODE <font>)
			  (VB fall#fall_v)
			  (CODE <$$font>)
			  (PP (P from#from_prep)
			      (NP (PRO them#them_pron)))
			  (PP-1 (P as#as_adv)
				(CP-CMP (WNP-2 0)
					(C 0)
					(IP-SUB (NP-3 *T*-2)
						(NP-SBJ-3 *exp*)
						(MD may#may_v1)
						(BE be#be_v))))
			  (PUNC ,)
			  (CP-CAR (WPP-4 (WADV+P whereby#whereby_adv))
				  (C 0)
				  (IP-SUB (PP *T*-4)
					  (NP-SBJ (D the#the_adj) (N Tree#tree_n))
					  (MD may#may_v1)
					  (BE be#be_v)
					  (ADJP-PRD (ADV scarcely#scarcely_adv)
						    (ADJ sensible#sensible_adj)
						    (PP (P of#of_prep)
							(CODE <font>)
							(NP (N removing#removing_n))))))))
	  (CODE <$$font>)
	  (PUNC :))
  (ID LANGF-1696-E3-P2,57.132))

( (IP-IMP (CONJ And#and_conj1)
	  (PP (P at#at_prep)
	      (NP (Q all#all_adj) (NS times#time_n)))
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (HVP have#have_v)
			      (NEG not#not_adv)
			      (NP-MSR (ADJ far#far_adj))
			      (IP-INF (TO to#to_prep)
				      (VB carry#carry_v)
				      (NP-OB1 (D the#the_adj) (CODE <font>) (NS Trees#tree_n))
				      (CODE <$$font>)
				      (IP-INF-PRP (TO to#to_prep)
						  (VB set#set_v1)
						  (NP-OB1 (PRO them#them_pron)))))))
	  (PUNC ,)
	  (VBI knock#knock_v)
	  (NEG not#not_adv)
	  (RP off#off_adv)
	  (NP-OB1 (D the#the_adj) (N mold#mould_n1))
	  (PP (P from#from_prep)
	      (NP (D the#the_adj) (CODE <font>) (NS roots#root_n1)))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,57.133))

( (IP-IMP (CONJ but#but_prep)
	  (VBI preserve#preserve_v)
	  (NP-OB1 (QP (ADVR as#as_adv) (Q much#much_adj))
		  (PP (P as#as_adv)
		      (CP-CMP (WNP-1 0)
			      (C 0)
			      (IP-SUB (NP-OB1 *T*-1)
				      (NP-SBJ (PRO you#you_pron))
				      (MD can#can_v1)
				      (VB *)
				      (PP (P about#about_adv)
					  (NP (PRO them#them_pron)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,57.134))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 2#two_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,57.135))

( (IP-IMP (VBI Make#make_v1)
	  (NP-OB1 (D a#a_adj)
		  (N Trench#trench_n)
		  (PP (P by#by_prep)
		      (NP (D the#the_adj)
			  (N Wall-side#SEE_wall_n1)
			  (CP-REL (WNP-1 0)
				  (C 0)
				  (IP-SUB (NP-SBJ (PRO you#you_pron))
					  (BEP are#be_v)
					  (IP-INF (TO to#to_prep)
						  (VB set#set_v1)
						  (NP-OB1 (PRO them#them_pron))
						  (PP (RP up#up_adv1)
						      (P to#to_prep)
						      (NP *T*-1)))))))
		  (PUNC ,)
		  (ADJP (ADJP (NP-MSR (NUMP (ADV about#about_adv) (NUM two#two_adj))
				      (NS foot#foot_n))
			      (ADJ broad#broad_adj1))
			(PUNC ,)
			(CONJP (CONJ and#and_conj1)
			       (ADJP (ADVR as#as_adv) (ADJ deep#deep_adj)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,57.136))

( (IP-IMP (CONJ and#and_conj1)
	  (PP (P in#in_prep)
	      (NP (Q every#every_adj)
		  (N place#place_n1)
		  (CP-REL (WADVP-1 (WADV where#where_adv))
			  (C 0)
			  (IP-SUB (NP-SBJ (D a#a_adj) (N Tree#tree_n))
				  (BEP is#be_v)
				  (IP-INF (ADVP-LOC *T*-1)
					  (TO to#to_prep)
					  (BE be#be_v)
					  (VAN set#set_v1))))))
	  (PUNC ,)
	  (NP-LOC (ADV about#about_adv)
		  (D a#a_adj)
		  (N yard#yard_n2)
		  (ADJP (ADJ square#square_adj)))
	  (PUNC ,)
	  (VBI mingle#mingle_v)
	  (NP-OB1 (ADJ good#good_adj) (CODE <font>) (ADJ old#old_adj) (ADJ rotten#rotten_adj) (N Neats-dung#SEE_neat_n1))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P with#with_prep)
	      (NP (D the#the_adj) (N Earth#earth_n1)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,57.137))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI fill#fill_v)
	  (NP-OB1 (PRO it#it_pron))
	  (RP up#up_adv1)
	  (ADVP (ADV lightly#lightly_adv))
	  (PUNC ,)
	  (NP-MSR (ADJP (ADV near#near_adv2) (ADVR as#as_adv) (ADJ high#high_adj))
		  (PP (P as#as_adv)
		      (CP-CMP (WADJP-1 0)
			      (C 0)
			      (IP-SUB (NP-SBJ (PRO you#you_pron))
				      (VBP intend#intend_v)
				      (IP-INF (ADJP-PRD *T*-1)
					      (NP-SBJ (D the#the_adj) (NS borders#border_n))
					      (TO to#to_prep)
					      (BE be#be_v))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,57.138))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI tread#tread_v)
	  (NP-OB1 (PRO it#it_pron))
	  (RP down#down_adv)
	  (PUNC ;)
	  (PP (P So#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (BEP be#be_v)
			      (NEG not#not_adv)
			      (ADJP-PRD (NP-MSR (NUMP (ADV above#above_adv) (NUM half#half_adj)))
					(ADJ full#full_adj))
			      (PP (P in#in_prep)
				  (NP (D the#the_adj)
				      (NS places#place_n1)
				      (CP-REL (WADVP-1 0)
					      (C 0)
					      (IP-SUB (NP-SBJ (PRO you#you_pron))
						      (VBD designed#design_v)
						      (IP-INF (ADVP-LOC *T*-1)
							      (TO to#to_prep)
							      (VB set#set_v1)
							      (NP-OB1 (D the#the_adj) (NS trees#tree_n))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,57.139))

( (IP-IMP (PP (P as#as_adv)
	      (PP (P to#to_prep)
		  (NP (D the#the_adj) (NS borders#border_n))))
	  (VBI make#make_v1)
	  (NP-OB1 (PRO them#them_pron))
	  (RP up#up_adv1)
	  (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP please#please_v))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,57.140))

( (CODE <P_58>))

( (IP-IMP (CONJ But#but_prep)
	  (PP-LFD (P if#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (PRO you#you_pron))
				  (VBP design#design_v)
				  (NP-OB1 (Q no#no_adj) (NS borders#border_n)))))
	  (PUNC ,)
	  (VBI make#make_v1)
	  (ADVP-RSP (ADV then#then_adv))
	  (NP-OB1 (FP only#only_adj)
		  (D a#a_adj)
		  (N hole#hole_n)
		  (PP (P for#for_prep)
		      (NP (Q each#each_adj) (N Tree#tree_n)))
		  (PUNC ,)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (N square#square_n)
			  (RRC (ADVP-TMP (ADV before#before_adv))
			       (VAN mentioned#mention_v)))))
	  (PUNC :))
  (ID LANGF-1696-E3-P2,58.142))

( (IP-IMP (CONJ And#and_conj1)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO$ your#your_pron) (CODE <font>) (N Soil#soil_n1))
			      (CODE <$$font>)
			      (BEP be#be_v)
			      (CODE <font>)
			      (ADJP-PRD (ADJP (ADJ wet#wet_adj))
					(CODE <$$font>)
					(PUNC ,)
					(CONJP (CONJ or#or_conj1)
					       (CODE <font>)
					       (NP (ADJ binding#binding_adj) (N gravel#gravel_n)))
					(CODE <$$font>)
					(PUNC ,)
					(CONJP (CONJ or#or_conj1)
					       (NP (SUCH such#such_adj) (ADJ like#like_adj)))
					(PUNC ,)
					(CONJP (ADJP (ADV very#very_adj)
						     (ADJ bad#bad_adj)
						     (PP (P in#in_prep)
							 (NP (D the#the_adj) (N bottom#bottom_n)))))))))
	  (PUNC ,)
	  (VBI go#go_v)
	  (NEG not#not_adv)
	  (NP-MSR (ADJP (ADVR so#so_adv) (ADJ deep#deep_adj)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,58.143))

( (IP-MAT (NP-SBJ-1 (PRO it#it_pron))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJR better#better_adj))
	  (IP-INF-1 (IP-INF (TO to#to_prep)
			    (VB set#set_v1)
			    (NP-OB1 (PRO them#them_pron))
			    (ADJP-SPR (ADJ shallow#shallow_adj1)))
		    (PUNC ,)
		    (CONJP (CONJ and#and_conj1)
			   (IP-INF (TO *)
				   (VB raise#raise_v1)
				   (NP-OB1 (D the#the_adj) (N Earth#earth_n1))
				   (PP (P about#about_adv)
				       (NP (PRO them#them_pron))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,58.144))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (VBD knew#know_v)
	  (NP-OB1 (D an#a_adj)
		  (ADJ excellent#excellent_adj)
		  (CODE <font>)
		  (N Planter#planter_n)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (PP (P in#in_prep)
				      (NP (D a#a_adj) (ADJ blewish#bluish_adj) (N clay#clay_n) (N ground#ground_n)))
				  (PUNC ,)
				  (VBD used#use_v)
				  (IP-INF (PP (P at#at_prep)
					      (NP (D the#the_adj)
						  (N bottom#bottom_n)
						  (PP (P of#of_prep)
						      (NP (D the#the_adj) (CODE <font>) (N hole#hole_n)))))
					  (CODE <$$font>)
					  (TO to#to_prep)
					  (VB set#set_v1)
					  (NP-OB1 (D a#a_adj) (ADJ broad#broad_adj1) (N stone#stone_n))
					  (PUNC ,)
					  (IP-INF-PRP (TO to#to_prep)
						      (VB prevent#prevent_v)
						      (NP-OB1 (D the#the_adj)
							      (NS Roots#root_n1)
							      (PP (P of#of_prep)
								  (NP (D the#the_adj) (CODE <font>) (NS Trees#tree_n))))
						      (CODE <$$font>)
						      (PP (P in#in_prep)
							  (IP-PPL (VAG runing#run_v)
								  (ADVP-DIR (ADV downward#downward_adv)))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,58.145))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV certainly#certainly_adv))
	  (ADVP-LOC (CP-FRL (WADVP-1 (WADV where#where_adv))
			    (C 0)
			    (IP-SUB (ADVP-LOC *T*-1)
				    (NP-SBJ (D the#the_adj) (N Land#land_n1))
				    (BEP is#be_v)
				    (ADJP-PRD (ADJ spungy#spongy_adj)
					      (CONJ or#or_conj1)
					      (ADJ bad#bad_adj)
					      (PP (P in#in_prep)
						  (NP (D the#the_adj) (N bottom#bottom_n)))))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD can@#can_v1)
	  (NEG @not#not_adv)
	  (VB set#set_v1)
	  (NP-OB1 (D the#the_adj) (NS Trees#tree_n))
	  (ADJP-SPR (ADVR too#too_adv) (ADJ shallow#shallow_adj1))
	  (PUNC ;)
	  (PP (P so#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (NP-SBJ (D the#the_adj) (N Earth#earth_n1))
			      (BEP be#be_v)
			      (ADJP-PRD (ADJ deep#deep_adj)
					(ADVP (ADVR enough#enough_adj))
					(PP (P above#above_adv)
					    (NP (PRO them#them_pron)))
					(IP-INF-DEG (TO to#to_prep)
						    (VB prevent#prevent_v)
						    (NP-OB1 (NP-POS (D the#the_adj) (N$ Sun's#sun_n1))
							    (IP-PPL (VAG burning#burn_v1)
								    (NP-OB1 (PRO them#them_pron))
								    (NP-TMP (D the#the_adj) (N Summer#summer_n1)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,58.146))

( (IP-MAT (PP (P As#as_adv)
	      (PP (P to#to_prep)
		  (NP (D the#the_adj)
		      (N distance#distance_n)
		      (CP-REL (WNP-1 0)
			      (C 0)
			      (CODE <font>)
			      (IP-SUB (NP-SBJ (NS Wall-fruit-trees#SEE_wall_n1))
				      (CODE <$$font>)
				      (BEP are#be_v)
				      (IP-INF (TO to#to_prep)
					      (BE be#be_v)
					      (VAN set#set_v1)
					      (PP (P at#at_prep)
						  (NP *T*-1))
					      (PUNC ,)
					      (ADVP-LOC (CP-FRL (WADVP-2 (WADV where#where_adv))
								(C 0)
								(IP-SUB (NP-SBJ (PRO they#they_pron))
									(BEP are#be_v)
									(ADJP-PRD (ADJ apt#apt_adj)
										  (IP-INF (ADVP-LOC *T*-2)
											  (TO to#to_prep)
											  (VB grow#grow_v))))))))))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB learn#learn_v)
	  (NP-OB1 (D that#that_pron1))
	  (ADVP (ADVS best#best_adj))
	  (PP (P by#by_prep)
	      (IP-PPL (VAG considering#consider_v)
		      (NP-OB1 (PRO$ their#their_adj)
			      (N aptness#aptness_n)
			      (IP-INF (TO to#to_prep) (VB spread#spread_v)))))
	  (PUNC :))
  (ID LANGF-1696-E3-P2,58.147))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Apricocks#apricot_n) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Pears#pear_n))
	  (CODE <$$font>)
	  (VBP spread#spread_v)
	  (NP-MSR (QS most#most_adj))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,58.148))

( (IP-MAT (NP-SBJ (NP (D the#the_adj) (CODE <font>) (NPR May#NA) (N Cherry#cherry_n))
		  (CODE <$$font>)
		  (CONJP (CONJ and#and_conj1)
			 (NP (Q some#some_pron) (OTHERS others#other_adj))))
	  (BEP are#be_v)
	  (PP (P of#of_prep)
	      (NP (ADJP (ADV very#very_adj) (ADJ small#small_adj))
		  (N growth#growth_n1)))
	  (PUNC :))
  (ID LANGF-1696-E3-P2,58.149))

( (IP-MAT (NP-SBJ-1 (PRO it@#it_pron))
	  (BEP @'s#be_v)
	  (ADJP-PRD (ADJ impossible#impossible_adj))
	  (IP-INF-1 (TO to#to_prep)
		    (VB give#give_v)
		    (NP-OB1 (NS rules#rule_n1)
			    (PP (P for#for_prep)
				(NP (Q all#all_adj)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,58.150))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (D the#the_adj) (ADJ general#general_adj) (N distance#distance_n))
	  (BEP is#be_v)
	  (PP (NP-MSR (NUMP (ADV about#about_adv) (NUM four#four_adj))
		      (NS yards#yard_n2))
	      (P+ADJ asunder#asunder_adv))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,58.151))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 3#three_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,58.152))

( (IP-IMP (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (BEP be#be_v)
			      (NEG not#not_adv)
			      (NP-PRD (D a#a_adj) (ADJ manur'd#manure_v) (N Land#land_n1))
			      (CP-CLF (WNP-1 0)
				      (C 0)
				      (IP-SUB (NP-SBJ (PRO you#you_pron))
					      (VBD set#set_v1)
					      (NP-OB1 (PRO them#them_pron))
					      (PP (P in#in_prep)
						  (NP *T*-1)))))))
	  (PUNC ,)
	  (HVI have#have_v)
	  (PP (P in#in_prep)
	      (NP (N readiness#readiness_n)))
	  (NP-OB1 (Q some#some_pron)
		  (ADJP (ADV very#very_adj) (CODE <font>) (ADJ fine#fine_adj))
		  (ADJ rich#rich_adj)
		  (N Mold#mould_n1)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NX (NS shovellings#shovelling_n)
			     (CODE <$$font>)
			     (PP (P of#of_prep)
				 (NP (D a#a_adj)
				     (N yard#yard_n1)
				     (CODE <P_59>)
				     (CP-REL (WADVP-2 (WADV where#where_adv))
					     (C 0)
					     (IP-SUB (ADVP-LOC *T*-2)
						     (NP-SBJ (NS Cattle#cattle_n))
						     (BEP are#be_v)
						     (ADVP (ADV frequently#frequently_adv))
						     (VAN (VAN lodged#lodge_v) (CONJ or#or_conj1) (VAN fed#feed_v))))))
			     (PUNC ,)
			     (CP-REL (WNP-3 0)
				     (C that#that_conj)
				     (IP-SUB (NP-SBJ *T*-3)
					     (HVP hath#have_v)
					     (VBN lain#lie_v1)
					     (PP (P on#on_prep)
						 (NP (NS heaps#heap_n)))
					     (PP (P till#till_prep)
						 (CP-ADV (C 0)
							 (IP-SUB (IP-SUB-4 (NP-SBJ (PRO it@#it_pron))
									   (BEP @'s#be_v)
									   (CODE <font>)
									   (ADJP-PRD (ADJ mellow#mellow_adj)))
								 (CODE <$$font>)
								 (PUNC ,)
								 (CONJP (CONJ and#and_conj1)
									(IP-SUB=4 (VBN become#become_v)
										  (NP-PRD (ADJP (ADJ dry#dry_adj) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (ADJ rotten#rotten_adj))
											  (N Neats-dung#SEE_neat_n1)
											  (CODE <$$font>)
											  (PUNC ,)
											  (CP-REL (WNP-5 (WPRO which#which_adj))
												  (C 0)
												  (IP-SUB (NP-OB1 *T*-5)
													  (NP-SBJ (PRO you#you_pron))
													  (MD may#may_v1)
													  (VB mix#mix_v)
													  (PP (P with#with_prep)
													      (NP (D the#the_adj)
														  (N Earth#earth_n1)
														  (CP-REL (WNP-6 0)
															  (C that#that_conj)
															  (IP-SUB (NP-SBJ *T*-6)
																  (VBD came#come_v)
																  (ADVP (ADV forth#forth_adv))
																  (PP (P of#of_prep)
																      (NP (D the#the_adj) (N hole#hole_n))))))))))))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,59.153))

( (IP-IMP (CONJ and#and_conj1)
	  (ADVP (ADVR so#so_adv)
		(CP-DEG *ICH*-1))
	  (VBI order#order_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PUNC ,)
	  (CP-DEG-1 (C that#that_conj)
		    (IP-SUB (NP-SBJ (PRO it#it_pron))
			    (MD may#may_v1)
			    (BE be#be_v)
			    (ADJP-PRD (ADJP (ADVR as#as_adv) (ADJ good#good_adj))
				      (CONJP (CONJ or#or_conj1)
					     (ADJP (ADJR better#better_adj)))
				      (PUNC ,)
				      (PP (P than#than_conj)
					  (NP (D that#that_pron1)
					      (CP-REL (WPP-2 (RP out#out_adv)
							     (P of#of_prep)
							     (WNP (WPRO which#which_adj)))
						      (C 0)
						      (IP-SUB (PP *T*-2)
							      (NP-SBJ (PRO$ your#your_pron) (NS Trees#tree_n))
							      (VBD came#come_v))))))))
	  (PUNC :))
  (ID LANGF-1696-E3-P2,59.154))

( (IP-IMP (VBI Fill#fill_v)
	  (NP-OB1 (D the#the_adj) (N hole#hole_n))
	  (NP-MSR (NUM half#half_adj) (N way#way_n1))
	  (RP up#up_adv1)
	  (PP (P with#with_prep)
	      (NP (D this#this_pron)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,59.155))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI tread#tread_v)
	  (NP-OB1 (PRO it#it_pron))
	  (RP down#down_adv)
	  (PP (P in#in_prep)
	      (NP (SUCH such#such_adj)
		  (N form#form_n)
		  (CP-DEG *ICH*-2)))
	  (PUNC <paren>)
	  (IP-PPL (HAG having#have_v)
		  (NP-OB1 (N respect#respect_n)
			  (PP (P to#to_prep)
			      (NP (D the#the_adj)
				  (CODE <font>)
				  (NS roots#root_n1)
				  (CODE <$$font>)
				  (PP (P of#of_prep)
				      (NP (D the#the_adj)
					  (N Tree#tree_n)
					  (CP-REL (WNP-1 0)
						  (C that#that_conj)
						  (IP-SUB (NP-SBJ *T*-1)
							  (BEP is#be_v)
							  (VAN set#set_v1)
							  (PP (P in#in_prep)
							      (NP (PRO it#it_pron)))))))))))
	  (PUNC <$$paren>)
	  (CP-DEG-2 (C that#that_conj)
		    (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (NS roots#root_n1))
			    (CODE <$$font>)
			    (MD may#may_v1)
			    (VB rest#rest_v3)
			    (ADJP-LOC (ADJ close#close_adj)
				      (PP (P upon#upon_prep)
					  (NP (PRO it#it_pron))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,59.156))

( (IP-IMP (VBI Cut#cut_v)
	  (RP off#off_adv)
	  (NP-OB1 (D the#the_adj)
		  (NS ends#end_n)
		  (PP (P of#of_prep)
		      (NP (Q all#all_adj) (D the#the_adj) (CODE <font>) (NS roots#root_n1))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,59.157))

( (IP-MAT (PUNC <paren>)
	  (PP-PRN (P if#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (PRO it#it_pron))
				  (VBP chance#chance_v)
				  (IP-INF (TO to#to_prep)
					  (HV have#have_v)
					  (NP-OB1 (ONE one#one_adj) (ADJ long#long_adj1) (ADJ downright#downright_adv) (CODE <font>) (N root#root_n1))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB cut#cut_v)
	  (NP-OB1 (PRO it#it_pron))
	  (NP-MSR (NUMP (ADV almost#almost_adv) (NUM half#half_adj)))
	  (RP off#off_adv)
	  (PUNC ,)
	  (PUNC <$$paren>))
  (ID LANGF-1696-E3-P2,59.158))

( (IP-IMP (VBI try#try_v)
	  (PUNC <paren>)
	  (PP-PRN (P by#by_prep)
		  (IP-PPL (VAG setting#set_v1)
			  (NP-OB1 (D the#the_adj) (N Tree#tree_n))
			  (PP (P in#in_prep)
			      (NP (D the#the_adj) (N hole#hole_n)))))
	  (PUNC <$$paren>)
	  (CP-QUE-SUB (WNP-1 (WD which#which_adj) (N side#side_n1))
		      (C 0)
		      (IP-SUB (NP-SBJ *T*-1)
			      (MD will#will_v1)
			      (VB stand#stand_v)
			      (ADVP (ADVS best#best_adj))
			      (PP (P to#to_prep)
				  (NP (D the#the_adj) (N Wall#wall_n1)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,59.159))

( (IP-IMP (CONJ and#and_conj1)
	  (ADVP-TMP (ADV then#then_adv))
	  (VBI cut#cut_v)
	  (RP off#off_adv)
	  (NP-OB1 (SUCH such#such_adj)
		  (NS branches#branch_n)
		  (PP (P as#as_adv)
		      (CP-CMP (WNP-1 0)
			      (C 0)
			      (IP-SUB (NP-SBJ *T*-1)
				      (VBP grow#grow_v)
				      (PP (ADV directly#directly_adv)
					  (P (P toward#toward_prep) (PUNC ,) (CONJ and#and_conj1) (P fromward#fromward_adj))
					  (NP (D the#the_adj) (N Wall#wall_n1)))))))
	  (PUNC ,)
	  (IP-PPL (VAG leaving#leave_v1)
		  (IP-INF (NP-SBJ (FP only#only_adj) (D the#the_adj) (N side#side_n1) (NS branches#branch_n))
			  (PUNC ,)
			  (TO to#to_prep)
			  (BE be#be_v)
			  (VAN nail'd#nail_v)
			  (PP (P unto#unto_prep)
			      (NP (PRO it#it_pron)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,59.160))

( (IP-IMP (ADVP-TMP (ADV then#then_adv))
	  (VBI clap#clap_v1)
	  (NP-OB1 (PRO$ your#your_pron) (N Tree#tree_n))
	  (RP in#in_adv)
	  (PUNC ,)
	  (IP-PPL (VAG placing#place_v)
		  (NP-OB1 (PRO it#it_pron))
		  (ADJP-LOC (ADVR as#as_adv)
			    (ADJ far#far_adj)
			    (PP (P from#from_prep)
				(NP (D the#the_adj) (N Wall#wall_n1)))
			    (PP (P as#as_adv)
				(CP-CMP (WNP-1 0)
					(C 0)
					(IP-SUB (NP-MSR *T*-1)
						(NP-SBJ (D the#the_adj) (CODE <font>) (N top#top_n1))
						(CODE <$$font>)
						(MD will#will_v1)
						(VB allow#allow_v))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,59.161))

( (IP-MAT (NP-SBJ (D that#that_pron1))
	  (MD must#must_v1)
	  (BE be#be_v)
	  (VAN spread#spread_v)
	  (PP (P upon#upon_prep)
	      (NP (PRO it#it_pron)))
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (NS roots#root_n1))
			  (CODE <$$font>)
			  (MD may#may_v1)
			  (HV have#have_v)
			  (NP-OB1 (QP (D the#the_adj) (QR more#more_adj))
				  (N liberty#liberty_n1)
				  (IP-INF (TO to#to_prep)
					  (VB spread#spread_v)
					  (ADVP-DIR (ADV backwards#backwards_adv))))))
	  (PUNC :))
  (ID LANGF-1696-E3-P2,59.162))

( (IP-IMP (VBI fill#fill_v)
	  (RP up#up_adv1)
	  (NP-OB1 (D the#the_adj) (N hole#hole_n))
	  (PP (P with#with_prep)
	      (NP (D the#the_adj) (CODE <font>) (N mold#mould_n1)))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,59.163))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI use#use_v)
	  (NP-OB1 (Q all#all_adj)
		  (N diligence#diligence_n1)
		  (IP-INF (TO to#to_prep)
			  (VB place#place_v)
			  (NP-OB1 (D the#the_adj)
				  (CODE <font>)
				  (NS roots#root_n1)
				  (CODE <$$font>)
				  (PP (P of#of_prep)
				      (NP (PRO$ your#your_pron) (N Tree#tree_n))))
			  (PP (P in#in_prep)
			      (NP (D the#the_adj)
				  (ADJ same#same_adj)
				  (N posture#posture_n)
				  (CP-REL (WNP-1 0)
					  (C 0)
					  (IP-SUB (NP-SBJ (PRO they#they_pron))
						  (BED were#be_v)
						  (PP (P in#in_prep)
						      (NP *T*-1))
						  (PP (P before#before_adv)
						      (CP-ADV (C 0)
							      (IP-SUB (NP-SBJ (PRO you#you_pron))
								      (VBD removed#remove_v)
								      (NP-OB1 (PRO it#it_pron)))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,59.164))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB-1 (NP-SBJ (D the#the_adj) (N Tree#tree_n))
					(BEP be#be_v)
					(ADJP-PRD (ADJ young#young_adj)))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB=1 (NP-SBJ (D the#the_adj) (CODE <font>) (NS Roots#root_n1))
					       (CODE <$$font>)
					       (ADJP-PRD (ADJ slender#slender_adj)))))))
	  (PUNC ,)
	  (NP-SBJ (D this#this_pron))
	  (MD can#can_v1)
	  (BE be#be_v)
	  (VAN performed#perform_v)
	  (NP-ADV (Q no#no_adj)
		  (N way#way_n1)
		  (PP (P but#but_prep)
		      (PP (P by#by_prep)
			  (IP-PPL (IP-PPL (VAG throwing#throw_v1)
					  (RP in#in_adv)
					  (NP-OB1 (NP-MSR (D a#a_adj) (ADJ little#little_adj))
						  (N soil#soil_n1))
					  (PP (P at#at_prep)
					      (NP (D a#a_adj) (N time#time_n))))
				  (PUNC ,)
				  (CODE <P_60>)
				  (CONJP (CONJ and#and_conj1)
					 (IP-PPL (ADVP-TMP (ADV then#then_adv))
						 (VAG raising#raise_v1)
						 (RP up#up_adv1)
						 (PP (P with#with_prep)
						     (NP (PRO$ your#your_pron) (NS hands#hand_n)))
						 (NP-OB1 (SUCH such#such_adj)
							 (CODE <font>)
							 (NS Roots#root_n1)
							 (CODE <$$font>)
							 (PP (P as#as_adv)
							     (CP-CMP (WNP-2 0)
								     (C 0)
								     (IP-SUB (NP-SBJ *T*-2)
									     (BEP are#be_v)
									     (VAN pressed#press_v1)
									     (RP down#down_adv)
									     (PP (P by#by_prep)
										 (NP (PRO it#it_pron)))
									     (PP (P below#below_adv)
										 (NP (PRO$ their#their_adj) (ADJ proper#proper_adj) (N situation#situation_n)))))))
						 (PUNC ,)
						 (IP-PPL (IP-PPL (VAG spreading#spread_v)
								 (NP-OB1 (PRO them#them_pron))
								 (PP (P on#on_prep)
								     (NP (D the#the_adj)
									 (N soil#soil_n1)
									 (CP-REL (WNP-3 0)
										 (C 0)
										 (IP-SUB (NP-OB1 *T*-3)
											 (NP-SBJ (PRO you#you_pron))
											 (HVP have#have_v)
											 (VBN cast#cast_v)
											 (RP in#in_adv))))))
							 (PUNC ,)
							 (CONJP (CONJ and#and_conj1)
								(IP-PPL (ADVP-TMP (ADV then#then_adv))
									(VAG throwing#throw_v1)
									(RP in#in_adv)
									(NP-OB1 (QR more#more_adj))))
							 (PUNC ,)
							 (CONJP (CONJ and#and_conj1)
								(IP-PPL (VAG ordering#order_v)
									(NP-OB1 (D the#the_adj) (NS Roots#root_n1))
									(PP (P as#as_adv)
									    (ADVP (ADV before#before_adv)))))
							 (PUNC ,)
							 (CONJP (IP-PPL (ADVP (ADV so#so_adv))
									(VAG continuing#continue_v)
									(IP-INF (TO to#to_prep)
										(DO do#do_v)
										(PP (P till#till_prep)
										    (CP-ADV (C 0)
											    (IP-SUB (NP-SBJ (PRO you#you_pron))
												    (HVP have#have_v)
												    (VBN filled#fill_v)
												    (RP up#up_adv1)
												    (NP-OB1 (D the#the_adj) (N hole#hole_n)))))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,60.165))

( (IP-MAT (NP-SBJ (ADJ Old#old_adj)
		  (NS Trees#tree_n)
		  (PP (P with#with_prep)
		      (NP (ADJ sturdy#sturdy_adj) (NS Roots#root_n1))))
	  (DOP do#do_v)
	  (NEG not#not_adv)
	  (VB require#require_v)
	  (NP-OB1 (QP (ADVR so#so_adv) (Q much#much_adj))
		  (N curiosity#curiosity_n))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,60.166))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (PRO you#you_pron))
	  (MD must#must_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ sure#sure_adj)
		    (CP-THT (C that#that_conj)
			    (IP-SUB (NP-SBJ (D the#the_adj) (N mold#mould_n1))
				    (VBP lie#lie_v1)
				    (ADVP-LOC (NP-MSR (ADJ close#close_adj))
					      (ADV under#under_adv))
				    (PUNC ,)
				    (PP (P (P betwixt#betwixt_prep) (PUNC ,) (CONJ and#and_conj1) (P among#among_prep))
					(NP (D the#the_adj) (NS Roots#root_n1))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,60.167))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N Soil#soil_n1))
			      (CODE <$$font>)
			      (BEP be#be_v)
			      (CODE <font>)
			      (ADJP-PRD (ADJ light#light_adj1)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD must#must_v1)
	  (VB press#press_v1)
	  (NP-OB1 (PRO it#it_pron))
	  (RP down#down_adv)
	  (ADVP (ADV gently#gently_adv))
	  (PP (P with#with_prep)
	      (NP (PRO$ your#your_pron) (N foot#foot_n)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,60.168))

( (IP-MAT (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (HVP have#have_v)
			      (VBN finished#finish_v)
			      (IP-PPL-OB1 (VAG placing#place_v)
					  (NP-OB1 (D the#the_adj) (N Earth#earth_n1))
					  (PP (P about#about_adv)
					      (NP (PRO them#them_pron)))))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (PUNC <paren>)
	  (PP-PRN (P if#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (D the#the_adj) (N Land#land_n1))
				  (BEP be#be_v)
				  (ADJP-PRD (ADJ stiff#stiff_adj) (PUNC ,) (ADJ cold#cold_adj) (PUNC ,) (ADJ wet#wet_adj) (PUNC ,) (CONJ or#or_conj1) (ADJ barren#barren_adj)))))
	  (PUNC <$$paren>)
	  (VB cover#cover_v1)
	  (NP-OB1 (D the#the_adj) (N Earth#earth_n1))
	  (PP (P with#with_prep)
	      (NP (N Dung#dung_n1)))
	  (PUNC ,)
	  (PP (ADV round#round_adv)
	      (P about#about_adv)
	      (NP (D the#the_adj) (N Tree#tree_n)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,60.169))

( (IP-IMP (CONJ but#but_prep)
	  (PP-LFD (P if#if_conj)
		  (CP-ADV (CP-ADV (C 0)
				  (IP-SUB (NP-SBJ (D the#the_adj) (N Land#land_n1))
					  (BEP be#be_v)
					  (ADJP-PRD (ADJ good#good_adj))))
			  (PUNC ,)
			  (CONJP (CONJ or#or_conj1)
				 (CP-ADV (C that#that_conj)
					 (IP-SUB (NP-SBJ (PRO you#you_pron))
						 (MD can@#can_v1)
						 (NEG @not#not_adv)
						 (VB spare#spare_v1)
						 (NP-OB1 (N Dung#dung_n1)))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV then#then_adv))
	  (PP (P in#in_prep)
	      (NP (D the#the_adj)
		  (N end#end_n)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (NPR February#NA)
			  (CODE <$$font>)
			  (RRC (VAG following#follow_v))))))
	  (VBI cover#cover_v1)
	  (NP-OB1 (D the#the_adj) (N Earth#earth_n1))
	  (PP (P with#with_prep)
	      (CODE <font>)
	      (NP (N Fearn#fern_n1) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (N Straw#straw_n1)))
	  (CODE <$$font>)
	  (NP-MSR (ADJP (NP-MSR (ADV almost#almost_adv) (D a#a_adj) (N foot#foot_n))
			(ADJ thick#thick_adj)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,60.170))

( (IP-IMP (CONJ and#and_conj1)
	  (NP-OB1 (D this#this_pron))
	  (DOI do#do_v)
	  (ADVP-TMP (ADV then#then_adv))
	  (PUNC ,)
	  (ADVP (ADVR rather#rather_adv)
		(PP (P than#than_conj)
		    (PP (P when#when_adv)
			(CP-ADV (C 0)
				(IP-SUB (NP-SBJ (PRO you#you_pron))
					(VBP set#set_v1)
					(NP-OB1 (D the#the_adj) (N Tree#tree_n)))))))
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (N Earth#earth_n1))
			  (MD may#may_v1)
			  (HV have#have_v)
			  (NP-OB1 (QR more#more_adj)
				  (N benefit#benefit_n)
				  (PP (P of#of_prep)
				      (NP (D the#the_adj)
					  (N Frost#frost_n)
					  (CONJP (CONJ and#and_conj1)
						 (NX (N Wet#wet_n1))))))
			  (PP (P in#in_prep)
			      (NP (D the#the_adj) (N Winter#winter_n1)))
			  (IP-INF-PRP (TO to#to_prep)
				      (VB temper#temper_v)
				      (NP-OB1 (PRO it#it_pron)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,60.171))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-SBJ (Q some#some_pron))
	  (PP (P in#in_prep)
	      (IP-PPL (VAG setting#set_v1)
		      (NP-OB1 (NS Trees#tree_n))))
	  (VBP esteem#esteem_v)
	  (IP-SMC (NP-SBJ-1 (PRO it#it_pron))
		  (ADJP-PRD (ADJS best#best_adj))
		  (IP-INF-1 (IP-INF-2 (TO to#to_prep)
				      (VB put#put_v)
				      (NP-OB1 (NP (Q no#no_adj) (N Dung#dung_n1)))
				      (PP (P into#into_prep)
					  (NP (D the#the_adj) (NS holes#hole_n))))
			    (PUNC ,)
			    (CONJP (CONJ but#but_prep)
				   (IP-INF=2 (NP-OB1 (D the#the_adj)
						     (N soil#soil_n1)
						     (CP-REL (WNP-3 0)
							     (C that#that_conj)
							     (IP-SUB (NP-SBJ *T*-3)
								     (VBD came#come_v)
								     (ADVP (ADV forth#forth_adv))
								     (PP (P of#of_prep)
									 (NP (PRO it#it_pron))))))
					     (PUNC ,)
					     (PP (P (CONJ both#both_pron) (P under#under_prep) (CONJ and#and_conj1) (P about#about_adv))
						 (NP (D the#the_adj) (CODE <font>) (NS Roots#root_n1)))
					     (CODE <$$font>)
					     (PUNC ,)
					     (IP-PPL (VAG placing#place_v)
						     (NP-OB1 (D the#the_adj)
							     (ADJP (ADJS smallest#small_adj) (CONJ and#and_conj1) (ADJS best#best_adj))
							     (N mold#mould_n1))
						     (ADJP-LOC (ADJS next#next_adj)
							       (NP (PRO them#them_pron))))
					     (PUNC ,)
					     (CODE <P_61>)
					     (IP-PPL (VAG laying#lay_v1)
						     (NP-OB1 (D a#a_adj)
							     (ADJ good#good_adj)
							     (N quantity#quantity_n)
							     (PP (P of#of_prep)
								 (NP (N Dung#dung_n1))))
						     (PP (P on#on_prep)
							 (NP (D the#the_adj)
							     (N top#top_n1)
							     (PP (P of#of_prep)
								 (NP (D the#the_adj) (N Earth#earth_n1)))))
						     (PP (P about#about_adv)
							 (NP (PRO them#them_pron))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,61.172))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 4#four_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,61.173))

( (IP-MAT (NP-TMP (Q Every#every_adj) (N year#year_n))
	  (NP-SBJ-1 (PRO it#it_pron))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ necessary#necessary_adj))
	  (IP-INF-1 (TO to#to_prep)
		    (CODE <font>)
		    (VB (VB prune#prune_v2) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (VB nail#nail_v))
		    (CODE <$$font>)
		    (NP-OB1 (PRO them#them_pron))
		    (PP (P to#to_prep)
			(NP (D the#the_adj) (N Wall#wall_n1)))
		    (PUNC ,)
		    (CODE <font>)
		    (NP-TMP (NUMP (NUM twice#twice_adv) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (NUM thrice#thrice_adv)))
		    (CODE <$$font>)
		    (PUNC ,)
		    (IP-PPL (VAG according#accord_v)
			    (PP (P as#as_adv)
				(CP-ADV (WADVP-2 0)
					(C 0)
					(IP-SUB (ADVP *T*-2)
						(NP-SBJ (PRO they#they_pron))
						(VBP grow#grow_v)
						(NP-MSR (QP (QR more#more_adj) (CONJ or#or_conj1) (QR less#less_adj))))))))
	  (PUNC ;)
	  (CP-CAR (WPP-3 (WADV+P wherein#wherein_adv))
		  (C 0)
		  (IP-SUB (PP *T*-3)
			  (NP-SBJ (PRO you#you_pron))
			  (MD must#must_v1)
			  (VB observe#observe_v)
			  (PUNC ,)
			  (IP-INF (TO to#to_prep)
				  (VB bend#bend_v)
				  (RP down#down_adv)
				  (NP-OB1 (D the#the_adj)
					  (ADJS strongest#strong_adj)
					  (CODE <font>)
					  (NS shoots#shoot_n1)
					  (CODE <$$font>)
					  (PUNC <paren>)
					  (CP-REL (WNP-4 0)
						  (C that#that_conj)
						  (IP-SUB (NP-SBJ *T*-4)
							  (MD would#will_v1)
							  (VB grow#grow_v)
							  (ADVP-DIR (ADV upward#upward_adv)))))
				  (PUNC <$$paren>)
				  (PP (P towards#towards_prep)
				      (NP (D the#the_adj) (NS sides#side_n1))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,61.174))

( (IP-MAT (NP-ADV (OTHER+N otherwise#otherwise_n))
	  (NP-SBJ (PRO they#they_pron))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ apt#apt_adj)
		    (IP-INF (IP-INF (TO to#to_prep)
				    (VB run#run_v)
				    (ADVP-DIR (ADV straight#straight_adj) (ADV upward#upward_adv)))
			    (PUNC ,)
			    (CONJP (CONJ and#and_conj1)
				   (IP-INF (NEG not#not_adv)
					   (TO *)
					   (VB cover#cover_v1)
					   (NP-OB1 (D the#the_adj)
						   (N space#space_n1)
						   (CP-REL (WNP-1 0)
							   (C 0)
							   (IP-SUB (NP-OB1 *T*-1)
								   (NP-SBJ (PRO you#you_pron))
								   (VBP design#design_v)
								   (PP (P for#for_prep)
								       (NP (PRO them#them_pron))))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,61.175))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P by#by_prep)
	      (NP (PRO$ their#their_adj) (ADJ luxurious#luxurious_adj) (N growth#growth_n1)))
	  (PUNC ,)
	  (NP-SBJ *con*)
	  (MD will#will_v1)
	  (ADVP (ADV extreamly#extremely_adv))
	  (VB rob#rob_v)
	  (NP-OB1 (D the#the_adj) (N side#side_n1) (NS branches#branch_n))
	  (PP (P of#of_prep)
	      (NP (PRO$ their#their_adj) (N nourishment#nourishment_n)))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,61.176))

( (IP-MAT (NP-SBJ-1 (EX There#there_adv))
	  (MD will#will_v1)
	  (NP-1 (NS branches#branch_n)
		(ADJP (ADJR enow#enough_adj)
		      (IP-INF-DEG *ICH*-2)))
	  (VB spring#spring_v1)
	  (RP out#out_adv)
	  (ADJP-SPR (ADJ fresh#fresh_adj))
	  (IP-INF-DEG-2 (TO to#to_prep)
			(VB run#run_v)
			(ADVP-DIR (ADV upwards#upwards_adv))
			(PP (RP out#out_adv)
			    (P of#of_prep)
			    (NP (PRO them#them_pron))))
	  (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (ADVP (ADV so#so_adv))
			      (VAN bowed#bow_v1))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,61.177))

( (IP-IMP (VBI Lay#lay_v1)
	  (NP-OB1 (Q none#none_pron))
	  (ADVP (ADVP (ADV a-cross#across_adv))
		(CONJP (CONJ or#or_conj1)
		       (PP (P under#under_prep)
			   (NP (ONE one#one_adj) (D+OTHER another#another_pron)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,61.178))

( (IP-IMP (CONJ but#but_prep)
	  (VBI let#let_v1)
	  (IP-INF (NP-SBJ (PRO them#them_pron))
		  (VB spread#spread_v)
		  (PP (P as#as_adv)
		      (NP (D the#the_adj)
			  (NS fingers#finger_n)
			  (PP (P of#of_prep)
			      (NP (PRO$ your#your_pron) (N hand#hand_n)))))
		  (PP (P when#when_adv)
		      (CP-ADV (C 0)
			      (IP-SUB (NP-SBJ (PRO it#it_pron))
				      (BEP is#be_v)
				      (VAN expanded#expand_v)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,61.179))

( (IP-IMP (VBI Cut#cut_v)
	  (RP off#off_adv)
	  (NP-OB1 (SUCH such#such_adj)
		  (PP (P as#as_adv)
		      (CP-CMP (WNP-1 0)
			      (C 0)
			      (IP-SUB (NP-SBJ *T*-1)
				      (VBP grow#grow_v)
				      (ADVP-DIR (ADV directly#directly_adv) (ADV outward#outward_adj))))))
	  (ADJP-LOC (ADJ close#close_adj)
		    (PP (P to#to_prep)
			(NP (D the#the_adj) (N body#body_n))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,61.180))

( (IP-IMP (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP cut#cut_v)
			      (NP-OB1 (D a#a_adj)
				      (N part#part_n1)
				      (PP (P of#of_prep)
					  (NP (Q any#any_adj) (N branch#branch_n))))
			      (RP off#off_adv))))
	  (PUNC ,)
	  (DOI do#do_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P at#at_prep)
	      (NP (D the#the_adj) (N bud#bud_n1)))
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (D the#the_adj) (N cut#cut_n2))
			  (MD may#may_v1)
			  (BE be#be_v)
			  (VAN covered#cover_v1)
			  (PP (P with#with_prep)
			      (NP (D a#a_adj) (ADJ fresh#fresh_adj) (N sprig#sprig_n2)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,61.181))

( (IP-MAT (NP-SBJ (D The#the_adj) (CODE <font>) (N Winter#winter_n1) (N pruning#pruning_n2))
	  (CODE <$$font>)
	  (MD may#may_v1)
	  (BE be#be_v)
	  (DAN done#do_v)
	  (ADVP-TMP (ADVP-TMP (ADVR as#as_adv)
			      (ADV soon#soon_adv)
			      (PP (P as#as_adv)
				  (CP-CMP (WADVP-1 0)
					  (C 0)
					  (IP-SUB (ADVP-TMP *T*-1)
						  (NP-SBJ (D the#the_adj)
							  (CODE <font>)
							  (N fruit#fruit_n)
							  (CODE <$$font>)
							  (PUNC ,)
							  (CONJP (CONJ and#and_conj1)
								 (NX (NS leaves#leaf_n1))))
						  (BEP are#be_v)
						  (VBN fallen#fall_v)))))
		    (PUNC ,)
		    (CONJP (CONJ or#or_conj1)
			   (NP-TMP (Q any#any_adj)
				   (N time#time_n)
				   (PP (P before#before_adv)
				       (CODE <font>)
				       (NP (NPR February#NA))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P except#except_adj)
	      (CODE <font>)
	      (NP (NS Nectarines#nectarine_n1)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJ and#and_conj1)
		  (CODE <font>)
		  (NS Peaches#peach_n1)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CP-REL (WNP-2 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-2)
				  (BEP are#be_v)
				  (ADJP-PRD (ADJ apt#apt_adj)
					    (IP-INF (TO to#to_prep) (VB die#die_v1)))
				  (PUNC ,)
				  (PP (P if#if_conj)
				      (IP-PPL (VAN prun'd#prune_v2)
					      (PP (P before#before_adv)
						  (CP-ADV (C 0)
							  (IP-SUB (NP-SBJ (D the#the_adj) (N Sap#sap_n1))
								  (VBP raise#raise_v1))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,61.182))

( (IP-MAT (NP-SBJ (NPR Mr.#NA) (CODE <font>) (NPR Rea#NA))
	  (CODE <$$font>)
	  (VBP saith#say_v1)
	  (PUNC ,)
	  (CP-THT (C 0)
		  (IP-SUB (NP-SBJ (D the#the_adj)
				  (ADJS best#best_adj)
				  (N time#time_n)
				  (IP-INF (TO to#to_prep)
					  (VB Prune#prune_v2)
					  (NP-OB1 (PRO them#them_pron))))
			  (PUNC ,)
			  (BEP is#be_v)
			  (PP (P after#after_adv)
			      (CP-ADV (C 0)
				      (IP-SUB (NP-SBJ (PRO they#they_pron))
					      (VBP flower#flower_v))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,61.183))

( (CODE <P_62>))

( (IP-MAT (NP-SBJ (NS Shreads#shred_n)
		  (PP (P of#of_prep)
		      (NP (ADJ Wollen#woollen_adj) (N Cloth#cloth_n))))
	  (BEP are#be_v)
	  (NP-PRD (D the#the_adj)
		  (ADJS best#best_adj)
		  (NS things#thing_n1)
		  (CP-EOP (WNP-1 0)
			  (IP-INF (TO to#to_prep)
				  (VB Nail#nail_v)
				  (NP-OB1 (PRO them#them_pron))
				  (RP up#up_adv1)
				  (PP (P with#with_prep)
				      (NP *T*-1)))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,62.185))

( (IP-MAT (NP-SBJ (Q some#some_pron))
	  (VBP use#use_v)
	  (NP-OB1 (NP (ADJ gentle#gentle_adj) (N Leather#leather_n))
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (NP (D an#a_adj) (ADJ old#old_adj) (N Hat#hat_n))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,62.186))

( (IP-MAT (NP-SBJ (Q any#any_adj)
		  (PP (P of#of_prep)
		      (NP (D these#these_pron))))
	  (MD may#may_v1)
	  (VB serve#serve_v1)
	  (NP-OB1 (N turn#turn_n))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,62.187))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 5#five_v) (PUNC .))
  (ID LANGF-1696-E3-P2,62.188))

( (IP-IMP (NP-TMP (Q+N Sometime#sometime_adv)
		  (PP (P in#in_prep)
		      (NP (D the#the_adj) (N Winter#winter_n1))))
	  (PUNC ,)
	  (PP (P after#after_adv)
	      (CODE <font>)
	      (NP (NUMP (NUM two#two_adj) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NUM three#three_adj))
		  (CODE <$$font>)
		  (NS years#year_n)))
	  (PUNC ,)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj)
				      (CODE <font>)
				      (N Soil#soil_n1)
				      (CODE <$$font>)
				      (CP-REL (WNP-1 0)
					      (C 0)
					      (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (NS roots#root_n1))
						      (CODE <$$font>)
						      (BEP are#be_v)
						      (IP-INF (TO to#to_prep)
							      (VB spread#spread_v)
							      (PP (P into#into_prep)
								  (NP *T*-1))))))
			      (PUNC ,)
			      (BEP be#be_v)
			      (NEG not#not_adv)
			      (CODE <font>)
			      (ADJP-PRD (ADJ rich#rich_adj)
					(CODE <$$font>)
					(ADVP (ADVR enough#enough_adj))))))
	  (PUNC ,)
	  (VBI open#open_v)
	  (NP-OB1 (D the#the_adj) (N ground#ground_n))
	  (PP (P at#at_prep)
	      (NP (D the#the_adj)
		  (N outside#outside_n)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (CODE <font>)
			  (NS holes#hole_n)
			  (CODE <$$font>)
			  (CP-REL (WNP-2 0)
				  (C 0)
				  (IP-SUB (NP-OB1 *T*-2)
					  (NP-SBJ (PRO you#you_pron))
					  (VBD made#make_v1)
					  (PP (P at#at_prep)
					      (NP (N setting#setting_n1)))))))))
	  (PUNC ,)
	  (ADJP-LOC (ADVR as#as_adv)
		    (ADJ near#near_adj)
		    (ADVP-LOC (ADV round#round_adv) (RP about#about_adv))
		    (PUNC ,)
		    (PP (P as#as_adv)
			(CP-CMP (WNP-3 0)
				(C 0)
				(IP-SUB (NP-OB1 *T*-3)
					(NP-SBJ (D the#the_adj) (N Wall#wall_n1))
					(MD will#will_v1)
					(VB permit#permit_v)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,62.189))

( (IP-IMP (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP find#find_v)
			      (IP-SMC (NP-SBJ (Q no#no_adj) (NS roots#root_n1))
				      (ADJP-PRD (ADJ bare#bare_adj))))))
	  (PUNC ,)
	  (VBI let#let_v1)
	  (IP-INF (NP-SBJ (PRO it#it_pron))
		  (VB lye#lie_v1)
		  (ADJP-SPR (ADJ open#open_adj))
		  (NP-MSR (D a#a_adj) (N month#month_n1)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,62.190))

( (IP-IMP (CONJ and#and_conj1)
	  (ADVP-TMP (ADV then#then_adv))
	  (VBI fill#fill_v)
	  (NP-OB1 (PRO it#it_pron))
	  (RP up#up_adv1)
	  (PP (P with#with_prep)
	      (NP (D the#the_adj)
		  (N Earth#earth_n1)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (VBD came#come_v)
				  (ADVP (ADV forth#forth_adv))))
		  (PUNC ,)
		  (RRC (ADVP (ADV well#well_adv))
		       (VAN mixt#mix_v)
		       (PP (P with#with_prep)
			   (NP (SUCH such#such_adj)
			       (D a#a_adj)
			       (CODE <font>)
			       (N manure#manure_n)
			       (CODE <$$font>)
			       (PP (P as#as_adv)
				   (CP-CMP (WNP-2 0)
					   (C 0)
					   (IP-SUB (NP-SBJ *T*-2)
						   (VBP suits#suit_v)
						   (PP (P with#with_prep)
						       (NP (PRO it#it_pron)))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,62.191))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 6#six_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,62.192))

( (IP-MAT-1 (ADVP-LFD (CP-FRL (WADVP-2 (WADV Where#where_adv))
			      (C 0)
			      (IP-SUB (ADVP-LOC *T*-2)
				      (NP-SBJ (D the#the_adj) (ADJ natural#natural_adj) (CODE <font>) (N soil#soil_n1))
				      (CODE <$$font>)
				      (BEP is#be_v)
				      (NEG not#not_adv)
				      (ADJP-PRD (ADJ good#good_adj)
						(ADVP (ADVR enough#enough_adj))
						(PP (P of#of_prep)
						    (NP (PRO it#it_pron) (N self#self_pron))))
				      (PUNC ,)
				      (CP-QUE-SUB-ADV (WQ whether#whether_pron)
						      (C 0)
						      (IP-SUB (NP-SBJ (PRO it#it_pron))
							      (BEP be#be_v)
							      (PP (P in#in_prep)
								  (CODE <font>)
								  (NP (N Garden#garden_n) (PUNC ,) (N Orchard#orchard_n) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (N Field#field_n1))))))))
	    (CODE <$$font>)
	    (PUNC ,)
	    (ADVP-LOC-RSP (ADV there#there_adv))
	    (NP-SBJ (PRO it#it_pron))
	    (MD ought#ought_v)
	    (TO to#to_prep)
	    (BE be#be_v)
	    (PP (P by#by_prep)
		(NP (N skill#skill_n1)))
	    (VAN (VAN assisted#assist_v) (PUNC ,) (CONJ and#and_conj1) (VAN better'd#better_v1))
	    (PUNC ,)
	    (IP-MAT-PRN=1 (PP (P at#at_prep)
			      (NP (QS+N least-wise#leastwise_n)))
			  (PP (P for#for_prep)
			      (NP (SUCH such#such_adj)
				  (D a#a_adj)
				  (N compass#compass_n1)
				  (PP (P as#as_adv)
				      (CP-CMP (WNP-3 0)
					      (C 0)
					      (IP-SUB (NP-OB1 *T*-3)
						      (NP-SBJ (D the#the_adj)
							      (CODE <font>)
							      (NS roots#root_n1)
							      (CODE <$$font>)
							      (PP (P of#of_prep)
								  (NP (Q every#every_adj) (N Tree#tree_n))))
						      (VBP take#take_v)
						      (RP up#up_adv1)
						      (PP (P for#for_prep)
							  (NP (Q some#some_pron) (N time#time_n))))))))
			  (PUNC ,)
			  (PP (P if#if_conj)
			      (FRAG (NEG not#not_adv)
				    (ADVP-LOC (NP-MSR (ADJP (ADVR so#so_adv) (ADJ far#far_adj)))
					      (ADV round#round_adv)
					      (PP (P as#as_adv)
						  (CP-CMP (WNP-4 0)
							  (C 0)
							  (IP-SUB (NP-SBJ (PRO they#they_pron))
								  (BEP are#be_v)
								  (ADVP-TMP (ADV ever#ever_adv))
								  (ADJP-PRD (ADJ like#like_adj)
									    (IP-INF (NP-MSR *T*-4)
										    (TO to#to_prep)
										    (VB extend#extend_v)
										    (NP-OB1 (PRO themselves#themselves_pron)))))))))))
	    (PUNC .))
  (ID LANGF-1696-E3-P2,62.193))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-SBJ (D this#this_pron))
	  (MD must#must_v1)
	  (BE be#be_v)
	  (DAN done#do_v)
	  (PP (P by#by_prep)
	      (IP-PPL (VAG mixing#mix_v)
		      (NP-OB1 (SUCH such#such_adj)
			      (CODE <font>)
			      (NS Manures#manure_n)
			      (CODE <$$font>)
			      (PP *ICH*-1))
		      (PP (P with#with_prep)
			  (NP (D the#the_adj) (CODE <font>) (N Soil#soil_n1)))
		      (CODE <$$font>)
		      (PUNC ,)
		      (PP-1 (P as#as_adv)
			    (CP-CMP (WNP-2 0)
				    (C 0)
				    (IP-SUB (NP-SBJ *T*-2)
					    (VBP suit#suit_v)
					    (ADVP (ADVS best#best_adj))
					    (PP (P with#with_prep)
						(NP (PRO$ its#its_adj) (N temper#temper_n))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,62.194))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N Soil#soil_n1))
			      (CODE <$$font>)
			      (BEP be#be_v)
			      (CODE <font>)
			      (NP-PRD (NP (N clay#clay_n))
				      (CODE <$$font>)
				      (PUNC ,)
				      (CONJP (CONJ or#or_conj1)
					     (CODE <font>)
					     (NP (N clay#clay_n)
						 (CODE <$$font>)
						 (RRC (VAN mixt#mix_v)
						      (PP (P with#with_prep)
							  (CODE <font>)
							  (NP (N gravel#gravel_n))))))
				      (CODE <$$font>)
				      (PUNC ,)
				      (CONJP (CONJ or#or_conj1)
					     (CODE <font>)
					     (NP (ADJ wet#wet_adj) (ADJ heavy#heavy_adj1) (N Land#land_n1)))))))
	  (PUNC ,)
	  (NP-SBJ (ADJ hot#hot_adj)
		  (N Dung#dung_n1)
		  (CODE <$$font>)
		  (PUNC ,)
		  (PP (P as#as_adv)
		      (NP (D that#that_pron1)
			  (PP (P of#of_prep)
			      (CODE <font>)
			      (NP (NS Horses#horse_n) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (N Poultry#poultry_n))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (BEP is#be_v)
	  (NP-PRD (ADJS best#best_adj)
		  (CP-TMC (WNP-1 0)
			  (IP-INF (NP-OB1 *T*-1)
				  (TO to#to_prep)
				  (VB mix#mix_v)
				  (PP (P with#with_prep)
				      (NP (PRO it#it_pron)))
				  (PUNC ,)
				  (IP-INF-PRP (TO to#to_prep)
					      (VB bring#bring_v)
					      (NP-OB1 (PRO it#it_pron))
					      (PP (P to#to_prep)
						  (NP (D a#a_adj) (ADJ due#due_adj) (N temperament#temperament_n)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,62.195))

( (CODE <P_63>))

( (IP-MAT (CONJ And#and_conj1)
	  (PP-LFD (P if#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N soil#soil_n1))
				  (CODE <$$font>)
				  (BEP be#be_v)
				  (NP-PRD (D a#a_adj)
					  (CODE <font>)
					  (ADJP (ADJ light#light_adj1) (PUNC ,) (ADJ hollow#hollow_adj) (PUNC ,) (ADJ eskie#NA) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (ADJ sandy#sandy_adj))
					  (N land#land_n1)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (ADVP-RSP (ADV then#then_adv))
	  (CODE <font>)
	  (NP-SBJ (NP (N Marl#marl_n1))
		  (PUNC ,)
		  (CONJP (NP (N Mud#mud_n1)
			     (CODE <$$font>)
			     (PP (RP out#out_adv)
				 (P of#of_prep)
				 (NP (D a#a_adj)
				     (N Pond#pond_n)
				     (CONJP (CONJ or#or_conj1)
					    (NX (N River#river_n1)))))))
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NP (NS shovellings#shovelling_n)
			     (CODE <$$font>)
			     (PP (P of#of_prep)
				 (CODE <font>)
				 (NP (NP (ADJ dirty#dirty_adj) (NS yards#yard_n1))
				     (CODE <$$font>)
				     (CONJP (CONJ or#or_conj1)
					    (CODE <font>)
					    (NP (NS high-ways#highway_n)))))
			     (CODE <$$font>)
			     (PUNC ,)
			     (PP (P if#if_conj)
				 (CP-ADV (C 0)
					 (IP-SUB (IP-SUB (NP-SBJ (PRO they#they_pron))
							 (BEP be#be_v)
							 (NEG not#not_adv)
							 (CODE <font>)
							 (ADJP-PRD (ADJ sandy#sandy_adj)))
						 (CODE <$$font>)
						 (PUNC ,)
						 (CONJP (CONJ and#and_conj1)
							(IP-SUB (NP-SBJ *con*)
								(BEP be#be_v)
								(ADVP (ADV well#well_adv))
								(CODE <font>)
								(VAN mellowed#mellow_v)
								(CODE <$$font>)
								(PUNC ,)
								(PP (P by#by_prep)
								    (IP-PPL (VAG lying#lie_v1)
									    (PP (P on#on_prep)
										(NP (NS heaps#heap_n)))))
								(PUNC ,)
								(IP-SUB-PRN (CONJ and#and_conj1)
									    (ADVP (ADV especially#especially_adv))
									    (PP (P if#if_conj)
										(CP-ADV (C 0)
											(IP-SUB (NP-SBJ (D those#those_pron) (NS heaps#heap_n))
												(BEP are#be_v)
												(VAN mixed#mix_v)
												(PP (P with#with_prep)
												    (NP (N Lime#lime_n1)))))))))))))))
	  (PUNC ,)
	  (BEP are#be_v)
	  (ADJP-PRD (ADJ proper#proper_adj)
		    (IP-INF (TO to#to_prep)
			    (VB mend#mend_v)
			    (NP-OB1 (PRO it#it_pron))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,63.197))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D this#this_pron) (ADJ last#last_adv) (CODE <font>) (N soil#soil_n1))
			      (CODE <$$font>)
			      (BEP be#be_v)
			      (CODE <font>)
			      (ADJP-PRD (ADJ barren#barren_adj))
			      (CODE <$$font>)
			      (NP-ADV (N likewise#likewise_adv)))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (ADVP (ADV properly#properly_adv))
	  (VB add#add_v)
	  (NP-OB1 (D a#a_adj)
		  (N mixture#mixture_n)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (N Neats-dung#SEE_neat_n1))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,63.198))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO$ your#your_pron) (N Land#land_n1))
			      (BEP be#be_v)
			      (ADJP-PRD (ADVR too#too_adv) (ADJ rich#rich_adj))
			      (PUNC <paren>)
			      (CP-CAR (WNP-1 (WPRO which#which_adj))
				      (C 0)
				      (IP-SUB (NP-SBJ *T*-1)
					      (BEP is#be_v)
					      (ADVP-TMP (ADV seldom#seldom_adv))
					      (VAN seen#see_v))))))
	  (PUNC <$$paren>)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB mix#mix_v)
	  (NP-OB1 (NP (N Gravel#gravel_n))
		  (CONJP (CONJ or#or_conj1)
			 (NP (ADJ cold#cold_adj) (N clay#clay_n))))
	  (PP (P with#with_prep)
	      (NP (PRO it#it_pron)))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,63.199))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (VBN seen#see_v)
	  (IP-INF (NP-SBJ (D an#a_adj)
			  (CODE <font>)
			  (N Apple-tree#apple-tree_n)
			  (CODE <$$font>)
			  (PP (P on#on_prep)
			      (NP (D a#a_adj)
				  (CODE <font>)
				  (N Hemp-but#SEE_hemp_n)
				  (CODE <$$font>)
				  (PUNC ,)
				  (CP-REL (WNP-1 (WPRO which#which_adj))
					  (C 0)
					  (IP-SUB (IP-SUB-2 (NP-SBJ *T*-1)
							    (BED was#be_v)
							    (ADVP (ADV constantly#constantly_adv))
							    (VAN Plowed#plough_v))
						  (PUNC ,)
						  (CONJP (CONJ and#and_conj1)
							 (IP-SUB=2 (VAN Manur'd#manure_v)
								   (PP (P to#to_prep)
								       (NP (D a#a_adj) (ADJ great#great_adj) (N richness#richness_n))))))))))
		  (PUNC ,)
		  (VB bear#bear_v1)
		  (NP-OB1 (QR more#more_adj)
			  (CODE <font>)
			  (NS Apples#apple_n)
			  (CODE <$$font>)
			  (PP (P than#than_conj)
			      (CP-CMP (WNP-3 0)
				      (C 0)
				      (IP-SUB (NP-OB1 *T*-3)
					      (NP-SBJ (NUM four#four_adj)
						      (SUCH such#such_adj)
						      (NS Trees#tree_n)
						      (PP (P in#in_prep)
							  (NP (D an#a_adj) (CODE <font>) (N Orchard#orchard_n))))
					      (CODE <$$font>)
					      (MD would#will_v1)
					      (DO do#do_v))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,63.200))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-SBJ-1 (PRO it@#it_pron))
	  (BEP @'s#be_v)
	  (ADVP (ADV constantly#constantly_adv))
	  (VAN seen#see_v)
	  (CP-THT-1 (C 0)
		    (IP-SUB (IP-SUB (PP (P in#in_prep)
					(CODE <font>)
					(NP (ADJ barren#barren_adj) (ADJ hungry#hungry_adj) (N Land#land_n1)))
				    (CODE <$$font>)
				    (PUNC ,)
				    (NP-SBJ (NS Trees#tree_n))
				    (VBP thrive#thrive_v)
				    (ADVP (ADV poorly#poorly_adv)))
			    (PUNC ,)
			    (CONJP (IP-SUB (NP-SBJ *con*)
					   (VBP grow#grow_v)
					   (CODE <font>)
					   (ADJP-PRD (ADJ Mossey#mossy_adj) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (ADJ Bark-bound#SEE_bark_n1))))
			    (CODE <$$font>)
			    (PUNC ,)
			    (IP-PPL (VAG bearing#bear_v1)
				    (NP-OB1 (QP (ADV very#very_adj) (Q little#little_adj)))
				    (PUNC ,)
				    (IP-ABS (CONJ and#and_conj1)
					    (NP-SBJ (D that#that_pron1))
					    (NP-PRD (D a#a_adj)
						    (ADJP (ADV very#very_adj) (ADJ poor#poor_adj))
						    (CODE <font>)
						    (N Fruit#fruit_n))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,63.201))

( (IP-MAT (NP-SBJ (FP Only#only_adj) (CODE <font>) (NS Wallnut-trees#walnut-tree_n) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Pear-trees#pear-tree_n))
	  (CODE <$$font>)
	  (PUNC ,)
	  (DOP do#do_v)
	  (NEG not#not_adv)
	  (ADVP (ADV necessarily#necessarily_adv))
	  (VB require#require_v)
	  (NP-OB1 (D a#a_adj)
		  (ADJP (ADV very#very_adj) (CODE <font>) (ADJ rich#rich_adj))
		  (N ground#ground_n))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,63.202))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (MD will#will_v1)
	  (VB prosper#prosper_v)
	  (ADVP (ADVS best#best_adj))
	  (PP (P on#on_prep)
	      (NP (ADJP (ADJ stony#stony_adj) (CONJ and#and_conj1) (ADJ light#light_adj1))
		  (N Land#land_n1)))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,63.203))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 7#seven_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,63.204))

( (IP-MAT (PP (P When#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO$ your#your_pron) (CODE <font>) (NS Wall-trees#SEE_wall_n1))
			      (CODE <$$font>)
			      (BEP are#be_v)
			      (VBN grown#grow_v)
			      (ADJP-PRD (ADJP (ADJ old#old_adj))
					(PUNC ,)
					(CONJP (CONJ and#and_conj1)
					       (ADJP (ADJ full#full_adj)
						     (PP (P of#of_prep)
							 (NP (ADJ big#big_adj) (N Wood#wood_n1)))))))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (PP (P in#in_prep)
	      (NP (NP-MSR (NUMP (NUM three#three_adj) (CONJ or#or_conj1) (NUM four#four_adj))
			  (NS years#year_n))
		  (N time#time_n)))
	  (VB renew#renew_v1)
	  (NP-OB1 (PRO them#them_pron))
	  (PUNC ,)
	  (PP (P by#by_prep)
	      (IP-PPL (VAG cutting#cut_v)
		      (RP out#out_adv)
		      (NP-OB1 (Q some#some_pron)
			      (PP (P of#of_prep)
				  (NP (D the#the_adj)
				      (ADJS biggest#big_adj)
				      (CODE <font>)
				      (NS stems#stem_n1)
				      (CODE <$$font>)
				      (PUNC ,)
				      (CONJP (CONJ or#or_conj1)
					     (CODE <font>)
					     (NX (NS boughs#bough_n))))))
		      (CODE <$$font>)
		      (PUNC ,)
		      (ADVP (ADV yearly#yearly_adv))
		      (PUNC ;)
		      (IP-PPL (VAG cutting#cut_v)
			      (CODE <P_64>)
			      (NP-OB1 (Q each#each_adj) (N branch#branch_n))
			      (RP off#off_adv)
			      (PP (P at#at_prep)
				  (NP (Q some#some_pron) (ADJ small#small_adj) (N twig#twig_n1)))
			      (PUNC ,)
			      (PUNC <paren>)
			      (PP-PRN (P if#if_conj)
				      (CP-ADV (C 0)
					      (IP-SUB (NP-SBJ (PRO it#it_pron))
						      (MD may#may_v1)
						      (BE be#be_v))))
			      (PUNC <$$paren>)
			      (CP-ADV (C that#that_conj)
				      (IP-SUB (NP-SBJ (CONJ either#either_pron)
						      (NP (PRO it#it_pron))
						      (PUNC ,)
						      (CONJP (CONJ or#or_conj1)
							     (NP (D a#a_adj) (ADJ fresh#fresh_adj) (N branch#branch_n))))
					      (MD may#may_v1)
					      (CODE {SIC:my})
					      (VB grow#grow_v)
					      (PP (P over#over_prep)
						  (NP (D the#the_adj)
						      (ADJ cut#cut_adj)
						      (N place#place_n1)
						      (PUNC ;)
						      (CP-REL (WNP-1 (WPRO which#which_adj))
							      (C 0)
							      (IP-SUB (NP-SBJ *T*-1)
								      (MD must#must_v1)
								      (BE be#be_v)
								      (VAN kept#keep_v)
								      (ADJP-SPR (ADJ covered#covered_adj)
										(PP (P with#with_prep)
										    (NP (N Clay#clay_n)))))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,64.205))

( (IP-IMP (CONJ and#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (VBI go#go_v)
	  (RP on#on_adv)
	  (ADVP (ADV yearly#yearly_adv))
	  (PUNC ,)
	  (PP (P till#till_prep)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (Q all#all_adj) (D the#the_adj) (ADJ big#big_adj) (N wood#wood_n1))
			      (BEP is#be_v)
			      (VAN cut#cut_v)
			      (RP out#out_adv))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,64.206))

( (IP-MAT (IP-MAT-1 (CONJ Or#or_conj1)
		    (PP (P if#if_conj)
			(CP-ADV (C 0)
				(IP-SUB (NP-SBJ (PRO you#you_pron))
					(VBP dislike#dislike_v)
					(NP-OB1 (D the#the_adj)
						(N kind#kind_n)
						(PP (P of#of_prep)
						    (CODE <font>)
						    (NP (N Fruit#fruit_n)))))))
		    (CODE <$$font>)
		    (PUNC ,)
		    (NP-SBJ (PRO you#you_pron))
		    (MD may#may_v1)
		    (CODE <font>)
		    (VB (VB Inoculate#inoculate_v) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (VB Graff#graff_v1))
		    (CODE <$$font>)
		    (NP-OB1 (D the#the_adj) (NS boughs#bough_n))
		    (PP (P with#with_prep)
			(NP (D a#a_adj)
			    (ADJR better#better_adj)
			    (N sort#sort_n2)
			    (PP (P of#of_prep)
				(CODE <font>)
				(NP (N Fruit#fruit_n))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CONJP (CONJ but#but_prep)
		 (IP-MAT=1 (NEG not#not_adv)
			   (PP (Q all#all_adj)
			       (P in#in_prep)
			       (NP (ONE one#one_adj) (N year#year_n)))))
	  (PUNC ,)
	  (CONJP (CONJ but#but_prep)
		 (IP-MAT=1 (NP-OB1 (Q some#some_pron))
			   (NP-TMP (ONE one#one_adj))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (NP-OB1 (Q some#some_pron))
			   (NP-TMP (D+OTHER another#another_pron))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,64.207))

( (IP-MAT (IP-MAT-1 (PP (P By#by_prep)
			(NP (Q either#either_pron)
			    (PP (P of#of_prep)
				(NP (D these#these_pron) (NS ways#way_n1)))))
		    (PUNC ,)
		    (NP-SBJ (PRO you#you_pron))
		    (MD may#may_v1)
		    (VB renew#renew_v1)
		    (NP-OB1 (D a#a_adj) (ADJ decaying#decaying_adj) (N Tree#tree_n)))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (VB keep#keep_v)
			   (NP-OB1 (PRO$ your#your_pron) (CODE <font>) (N Wall#wall_n1))
			   (CODE <$$font>)
			   (ADJP-SPR (ADVP-TMP (ADV almost#almost_adv) (ADV still#still_adv))
				     (ADJ furnished#furnished_adj))
			   (PUNC ,)
			   (PP (P with#with_prep)
			       (NP (QR less#less_adj)
				   (N trouble#trouble_n)
				   (CONJP (CONJ and#and_conj1)
					  (NX (N charge#charge_n1)))
				   (PUNC ,)
				   (CONJP (CONJ or#or_conj1)
					  (NX (N loss#loss_n1)
					      (PP (P of#of_prep)
						  (NP (N time#time_n)))))
				   (PP (P than#than_conj)
				       (PP (P by#by_prep)
					   (IP-PPL (IP-PPL (VAG taking#take_v)
							   (RP up#up_adv1)
							   (NP-OB1 (D the#the_adj) (ADJ old#old_adj) (ONE one#one_adj)))
						   (PUNC ,)
						   (CONJP (CONJ and#and_conj1)
							  (CODE <font>)
							  (IP-PPL (VAG planting#plant_v)
								  (CODE <$$font>)
								  (NP-OB1 (D a#a_adj) (ADJ young#young_adj) (ONE one#one_adj))
								  (PP (P in#in_prep)
								      (NP (PRO$ its#its_adj) (N stead#stead_n))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,64.208))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N Tree#tree_n))
			      (CODE <$$font>)
			      (BEP be#be_v)
			      (ADJP-PRD (ADVR so#so_adv)
					(ADJ old#old_adj)
					(PUNC ,)
					(CP-DEG (C that#that_conj)
						(IP-SUB (NP-SBJ (PRO you#you_pron))
							(VBP resolve#resolve_v)
							(IP-INF (IP-INF (TO to#to_prep)
									(VB take#take_v)
									(NP-OB1 (PRO it#it_pron))
									(RP up#up_adv1))
								(PUNC ,)
								(CONJP (CONJ and#and_conj1)
								       (IP-INF (TO *)
									       (VB plant#plant_v)
									       (NP-OB1 (D+OTHER another#another_pron))
									       (PP (P in#in_prep)
										   (NP (PRO$ its#its_adj) (N place#place_n1))))))))))))
	  (PUNC ,)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (NP-SBJ (PRO you#you_pron))
				      (HVP have#have_v)
				      (IP-SMC (NP-SBJ (Q none#none_pron))
					      (ADJP-PRD (ADJ ready#ready_adj))))
			      (PUNC ,)
			      (CONJP (CONJ nor#nor_conj1)
				     (IP-SUB (NP-SBJ *con*)
					     (BEP are#be_v)
					     (ADJP-PRD (ADJ willing#willing_adj)
						       (IP-INF (TO to#to_prep) (VB buy#buy_v))))))))
	  (PUNC ,)
	  (NP-1 (D the#the_adj)
		(ADJS speediest#speedy_adj)
		(N way#way_n1)
		(IP-INF (TO to#to_prep) (BE be#be_v) (VAN supplyed#supply_v1)))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB find#find_v)
	  (IP-SMC (NP-SBJ *ICH*-1)
		  (VAN directed#direct_v)
		  (PP (P in#in_prep)
		      (NP (N Chapter#chapter_n) (D the#the_adj) (ADJ first#first_adj) (PUNC ,) (N Section#section_n) (D the#the_adj) (ADJ Ninth#NA))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,64.209))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 8#eight_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,64.210))

( (IP-IMP (PP (P IN#in_prep)
	      (IP-PPL (VAG furnishing#furnish_v)
		      (NP-OB1 (PRO$ your#your_pron) (CODE <font>) (NS Walls#wall_n1))
		      (CODE <$$font>)
		      (PP (P with#with_prep)
			  (CODE <font>)
			  (NP (NS Fruit-trees#SEE_fruit_n)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (VBI observe#observe_v)
	  (ADVP-TMP (ADV always#always_adv))
	  (IP-INF (TO to#to_prep)
		  (VB Plant#plant_v)
		  (CODE <font>)
		  (NP-OB1 (NS Peaches#peach_n1) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (NS Nectarines#nectarine_n1))
		  (CODE <$$font>)
		  (PP (RP up#up_adv1)
		      (P to#to_prep)
		      (NP (D the#the_adj)
			  (CODE <font>)
			  (N Wall#wall_n1)
			  (CODE <$$font>)
			  (CP-REL (WNP-1 0)
				  (C that#that_conj)
				  (IP-SUB (NP-SBJ *T*-1)
					  (BEP is#be_v)
					  (ADVP-DIR (QS most#most_adj) (CODE <font>) (ADV South-ward#southward_adv)))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,64.211))

( (IP-MAT (NP-SBJ (D the#the_adj) (CODE <font>) (N East-Wall#actual_adj))
	  (CODE <$$font>)
	  (BEP is#be_v)
	  (IP-INF (TO to#to_prep)
		  (BE be#be_v)
		  (VAN allotted#allot_v)
		  (PP (P to#to_prep)
		      (CODE <font>)
		      (NP (NP (NS Apricocks#apricot_n))
			  (CODE <$$font>)
			  (PUNC ,)
			  (CONJP (NP (ADJ early#early_adj) (CODE <font>) (NS Cherries#cherry_n)))
			  (CODE <$$font>)
			  (PUNC ,)
			  (CONJP (CONJ and#and_conj1)
				 (NP (D the#the_adj) (ADJS choicest#choice_adj) (CODE <font>) (NS Plums#plum_n))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,64.212))

( (IP-MAT (NP-SBJ (D the#the_adj) (CODE <font>) (N West#west_adv))
	  (CODE <$$font>)
	  (MD may#may_v1)
	  (BE be#be_v)
	  (VAN set#set_v1)
	  (PP (P with#with_prep)
	      (CODE <font>)
	      (NP (NS Pears#pear_n) (PUNC ,) (NS Cherries#cherry_n) (CODE <$$font>) (PUNC ,) (CONJ and#and_conj1) (CODE <font>) (NS Plums#plum_n)))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,64.213))

( (CODE <P_65>))

( (IP-MAT (NP-OB1 (Q Some#some_pron)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (ADJS coursest#coarse_adj)
			  (CODE <font>)
			  (NS Pears#pear_n)
			  (CODE <$$font>)
			  (CONJP (CONJ and#and_conj1)
				 (CODE <font>)
				 (NX (NS Plums#plum_n))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB set#set_v1)
	  (PP (P to#to_prep)
	      (NP (D the#the_adj) (CODE <font>) (N North-@#north_adv) (N @Wall#wall_n1)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (IP-INF (CONJ both#both_pron)
		  (TO to#to_prep)
		  (VB cover#cover_v1)
		  (NP-OB1 (D the#the_adj) (CODE <font>) (N Wall#wall_n1))
		  (CODE <$$font>)
		  (ADVP (ADV handsomely#handsomely_adv)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,65.215))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-TMP (Q many#many_adj) (NS years#year_n))
	  (NP-SBJ (PRO they#they_pron))
	  (MD will#will_v1)
	  (VB bear#bear_v1)
	  (PP (ADVP (ADVR as#as_adv)
		    (ADV well#well_adv)
		    (PP *ICH*-1))
	      (PP (P on#on_prep)
		  (NP (PRO it#it_pron)))
	      (PUNC ,)
	      (PP-1 (P as#as_adv)
		    (PP (P on#on_prep)
			(CODE <font>)
			(NP (NS standards#standard_n)))))
	  (CODE <$$font>)
	  (PUNC ;)
	  (PP (ADV especially#especially_adv)
	      (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO$ your#your_pron) (CODE <font>) (N wall#wall_n1))
			      (CODE <$$font>)
			      (VBP stand#stand_v)
			      (NP-DIR (NP (NEG not#not_adv) (ADV directly#directly_adv) (CODE <font>) (N North#north_adv))
				      (CODE <$$font>)
				      (PUNC ,)
				      (CONJP (CONJ but#but_prep)
					     (PP (P so#so_adv)
						 (PP (P as#as_adv)
						     (IP-INF (TO to#to_prep)
							     (HV have#have_v)
							     (NP-OB1 (Q some#some_pron)
								     (ADJ considerable#considerable_adj)
								     (N benefit#benefit_n)
								     (PP (P of#of_prep)
									 (NP (D the#the_adj) (N Sun#sun_n1))))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,65.216))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Nut-trees#nut-tree_n)
		  (CODE <$$font>)
		  (NP-ADV (N likewise#likewise_adv)))
	  (BEP are#be_v)
	  (ADJP-PRD (ADJ proper#proper_adj)
		    (PP (P for#for_prep)
			(NP (D this#this_pron) (CODE <font>) (N wall#wall_n1))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,65.217))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (MD will#will_v1)
	  (VB prosper#prosper_v)
	  (ADVP (ADV well#well_adv))
	  (PP (RP up#up_adv1)
	      (P to#to_prep)
	      (NP (PRO it#it_pron)))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,65.218))

( (IP-MAT (PP (P For#for_prep)
	      (NP (D those#those_pron)
		  (ADJP (ADJ Autumnal#autumnal_adj) (CONJ and#and_conj1) (N winter#winter_n1))
		  (CODE <font>)
		  (NS Pears#pear_n)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (VBP ripen#ripen_v)
				  (ADVP-TMP (ADV late#late_adv))))))
	  (PUNC ,)
	  (NP-SBJ (D the#the_adj)
		  (ADJP (ADJP (QS most#most_adj) (CODE <font>) (N South#south_adv))
			(CODE <$$font>)
			(CONJP (CONJ and#and_conj1)
			       (ADJP (ADJS highest#high_adj))))
		  (N wall#wall_n1))
	  (PUNC ,)
	  (DOP doth#do_v)
	  (VB improve#improve_v2)
	  (NP-OB1 (PRO them#them_pron))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,65.219))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO they#they_pron))
	  (VBP deserve#deserve_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,65.220))

( (IP-MAT (CONJ neither#neither_adv)
	  (MD will#will_v1)
	  (NP-SBJ (Q some#some_pron))
	  (VB come#come_v)
	  (PP (P to#to_prep)
	      (NP (N maturity#maturity_n)))
	  (PP (P in#in_prep)
	      (NP (PRO$ our#our_pron) (N Climate#climate_n1)))
	  (PUNC <paren>)
	  (NP-TMP (Q some#some_pron) (NS years#year_n))
	  (PUNC <$$paren>)
	  (PP (P without#without_adv)
	      (NP (SUCH such#such_adj) (D a#a_adj) (N wall#wall_n1)))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,65.221))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (MD would#will_v1)
	  (ADVP (ADV willingly#willingly_adv))
	  (VB bestow#bestow_v)
	  (NP-OB1 (D the#the_adj)
		  (ADJS best#best_adj)
		  (N place#place_n1)
		  (CP-REL (WNP-1 0)
			  (C 0)
			  (IP-SUB (NP-OB1 *T*-1)
				  (NP-SBJ (PRO I#i_pron))
				  (HVD had#have_v)
				  (PP (P upon#upon_prep)
				      (NP (NP (ONE one#one_adj) (CODE <font>) (N Winter-Boncreisten#cNA))
					  (CODE <$$font>)
					  (PUNC ,)
					  (CONJP (NP (NUM two#two_adj)
						     (CODE <font>)
						     (NS Buryes#bury_n)
						     (CODE <$$font>)
						     (CONJP (CONJ or#or_conj1)
							    (CODE <font>)
							    (NX (N Butter#butter_n1) (NS Pears#pear_n)))))
					  (CODE <$$font>)
					  (PUNC ,)
					  (CONJP (NP (NUM two#two_adj) (CODE <font>) (NS Virgulees#virgoule_n)))
					  (CODE <$$font>)
					  (PUNC ,)
					  (CONJP (CONJ and#and_conj1)
						 (NP (NUM two#two_adj) (CODE <font>) (NS Chasseryes#chassery_n)))
					  (CODE <$$font>)
					  (PUNC ,)
					  (CONJP (NP (D a#a_adj) (NPR St.#NA) (CODE <font>) (NPRS Germans#NA)))
					  (CODE <$$font>)
					  (PUNC ,)
					  (CONJP (NP (NPR St.#NA) (CODE <font>) (NPR Michael#NA)))
					  (CODE <$$font>)
					  (PUNC ,)
					  (CONJP (NP (D the#the_adj) (CODE <font>) (NPR Crasson#NA)))
					  (CODE <$$font>)
					  (PUNC ,)
					  (CONJP (NP (D the#the_adj) (CODE <font>) (NPR Bon-Gerson#NA))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,65.222))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (NP-SBJ (PRO$ your#your_pron) (NS conveniencies#conveniency_n))
				      (MD will#will_v1)
				      (VB allow#allow_v)
				      (NP-OB1 (PRO it#it_pron)))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB (NP-SBJ (PRO you#you_pron))
					     (BEP are#be_v)
					     (IP-INF (TO to#to_prep)
						     (VB build#build_v)
						     (NP-OB1 (D a#a_adj) (ADJ new#new_adj) (CODE <font>) (N Wall#wall_n1))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (BEP is#be_v)
	  (ADJP-PRD (Q much#much_adj)
		    (ADJR better#better_adj)
		    (PP *ICH*-2))
	  (IP-INF-1 (TO to#to_prep)
		    (HV have#have_v)
		    (IP-INF (NP-SBJ (PRO$ your#your_pron) (CODE <font>) (N Garden#garden_n) (NS walls#wall_n1))
			    (CODE <$$font>)
			    (NEG not#not_adv)
			    (TO to#to_prep)
			    (VB stand#stand_v)
			    (PP (ADV directly#directly_adv)
				(P towards#towards_prep)
				(NP (D the#the_adj) (CODE <font>) (NUM four#four_adj) (NS points#point_n1)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP-2 (P than#than_conj)
		(NP (OTHER+N otherwise#otherwise_n)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,65.223))

( (IP-MAT (CONJ and#and_conj1)
	  (IP-MAT-1 (ADVP (ADV then#then_adv))
		    (NP-SBJ (D the#the_adj) (ADJS worst#worst_adj) (N wall#wall_n1))
		    (MD will#will_v1)
		    (BE be#be_v)
		    (ADJP-PRD (Q much#much_adj) (ADJR better#better_adj)))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (NP-SBJ (D the#the_adj) (ADJS best#best_adj))
			   (ADJP-PRD (ADJ good#good_adj)
				     (ADVP (ADVR enough#enough_adj))
				     (PP (P for#for_prep)
					 (NP (PRO$ your#your_pron) (N purpose#purpose_n))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,65.224))

( (CODE <P_66>))

( (FRAG (PP (P As#as_adv)
	    (ADVP (ADV thus#thus_adv)))
	(PUNC ,)
	(IP-INF-ABS (IP-INF-ABS-1 (NP-SBJ (D the#the_adj) (CODE <font>) (N East-wall#actual_adj))
				  (CODE <$$font>)
				  (PUNC ,)
				  (TO to#to_prep)
				  (VB incline#incline_v)
				  (PP (P to#to_prep)
				      (NP (D the#the_adj) (CODE <font>) (N South#south_adv))))
		    (CODE <$$font>)
		    (PUNC ;)
		    (CONJP (IP-INF-ABS=1 (NP-SBJ (D the#the_adj) (CODE <font>) (N South#south_adv))
					 (CODE <$$font>)
					 (PUNC ,)
					 (PP (P to#to_prep)
					     (NP (D the#the_adj) (CODE <font>) (N West#west_adv)))))
		    (CODE <$$font>)
		    (PUNC ;)
		    (CONJP (IP-INF-ABS=1 (NP-SBJ (D the#the_adj) (CODE <font>) (N west#west_adv))
					 (CODE <$$font>)
					 (PUNC ,)
					 (PP (P to#to_prep)
					     (NP (D the#the_adj) (CODE <font>) (N North#north_adv)))))
		    (CODE <$$font>)
		    (PUNC ;)
		    (CONJP (IP-INF-ABS=1 (NP-SBJ (D the#the_adj) (CODE <font>) (N North#north_adv))
					 (CODE <$$font>)
					 (PP (P to#to_prep)
					     (NP (D the#the_adj) (CODE <font>) (N East#east_adv))))))
	(CODE <$$font>)
	(PUNC ;))
  (ID LANGF-1696-E3-P2,66.226))

( (CONJP (CONJ or#or_conj1)
	 (ADJP (ADJP (ADJ contrary#contrary_adj))
	       (PUNC ,)
	       (CONJP (CONJ but#but_prep)
		      (ADVP (NEG not#not_adv) (ADVR so#so_adv) (ADV well#well_adv))))
	 (PUNC .))
  (ID LANGF-1696-E3-P2,66.227))

( (IP-MAT (IP-MAT-1 (PP (P In#in_prep)
			(NP (D the#the_adj) (ADJ first#first_adj) (N way#way_n1)))
		    (NP-SBJ (D the#the_adj) (NUM two#two_adj) (ADJ first#first_adj) (NS walls#wall_n1))
		    (MD will#will_v1)
		    (BE be#be_v)
		    (ADJP-PRD (ADV extraordinary#extraordinary_adj) (ADJ good#good_adj)))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (NP-SBJ (D the#the_adj) (NUM two#two_adj) (ADJ latter#latter_adj))
			   (ADJP-PRD (ADJ good#good_adj)
				     (ADVP (ADVR enough#enough_adj))
				     (PP (P for#for_prep)
					 (NP (ADJ ordinary#ordinary_adj) (CODE <font>) (N Fruit#fruit_n))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,66.228))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 9#nine_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,66.229))

( (IP-MAT (PP (P In#in_prep)
	      (IP-PPL (VAG building#build_v)
		      (NP-OB1 (D a#a_adj) (ADJ new#new_adj) (N Wall#wall_n1))))
	  (PUNC ,)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (MD would#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADV very#very_adj) (ADJ advantageous#advantageous_adj))
	  (PUNC ,)
	  (IP-INF-1 (TO to#to_prep)
		    (VB make#make_v1)
		    (NP-OB1 (PRO it#it_pron))
		    (PP (P with#with_prep)
			(NP (NUM half#half_adj) (NS rounds#round_n1))))
	  (PUNC ,)
	  (IP-PPL-ABS (NP-SBJ (Q each#each_adj) (N semi-circle#semicircle_n))
		      (BAG being#be_v)
		      (ADJP-PRD (ADJP (NP-MSR (NUM eight#eight_adj) (NS yards#yard_n2))
				      (ADJ round#round_adj)
				      (PP (P in#in_prep)
					  (NP (D the#the_adj) (N inside#inside_n1))))
				(PUNC ,)
				(CONJP (CONJ and#and_conj1)
				       (ADJP (NP-MSR (NUMP (ADV about#about_adv) (NUM six#six_adj))
						     (NS yards#yard_n2))
					     (ADJ *)
					     (PP (P in#in_prep)
						 (NP (D the#the_adj)
						     (N face#face_n)
						     (CONJP (CONJ or#or_conj1)
							    (NX (N diameter#diameter_n)))))))))
	  (PUNC ,)
	  (IP-PPL-ABS (NP-SBJ (Q each#each_adj))
		      (VAG taking#take_v)
		      (NP-OB1 (NUM two#two_adj) (NS Trees#tree_n)))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,66.230))

( (IP-IMP (CONJ and#and_conj1)
	  (PP (P betwixt#betwixt_prep)
	      (NP (Q every#every_adj) (NUM half#half_adj) (N round#round_n1)))
	  (PUNC ,)
	  (VBI let#let_v1)
	  (IP-INF (NP-SBJ-1 (EX there#there_adv))
		  (BE be#be_v)
		  (NP-1 (NP-MSR (NUM two#two_adj) (NS foot#foot_n))
			(N breadth#breadth_n)
			(PP (P of#of_prep)
			    (NP (ADJ plain#plain_adj2)
				(N walling#walling_n2)
				(PUNC ,)
				(CP-REL (WADVP-2 (WADV where#where_adv))
					(C 0)
					(IP-SUB (IP-SUB-3 (ADVP-LOC *T*-2)
							  (NP-SBJ (PRO you#you_pron))
							  (MD may#may_v1)
							  (VB place#place_v)
							  (NP-OB1 (D a#a_adj) (CODE <font>) (N Flower-pot#flowerpot_n))
							  (CODE <$$font>)
							  (PP (P on#on_prep)
							      (NP (D a#a_adj)
								  (CODE <font>)
								  (N pillar#pillar_n)
								  (ADJP (NP-MSR (NUM two#two_adj) (N foot#foot_n))
									(CODE <$$font>)
									(ADJ high#high_adj)))))
						(PUNC ,)
						(CONJP (CONJ or#or_conj1)
						       (IP-SUB=3 (VB Plant#plant_v)
								 (NP-OB1 (D a#a_adj)
									 (CODE <font>)
									 (N Vine#vine_n)
									 (CODE <$$font>)
									 (CP-EOP (WNP-4 0)
										 (IP-INF (NP-SBJ *T*-4)
											 (TO to#to_prep)
											 (VB run#run_v)
											 (PP (P up#up_prep2)
											     (NP (PRO it#it_pron)))))
									 (PUNC ,)
									 (CP-REL (WNP-5 (WPRO which#which_adj))
										 (C 0)
										 (IP-SUB (NP-TMP (Q every#every_adj) (N Summer#summer_n1))
											 (PUNC ,)
											 (NP-SBJ (PRO you#you_pron))
											 (MD may#may_v1)
											 (VB let#let_v1)
											 (IP-INF (NP-SBJ *T*-5)
												 (VB spread#spread_v)
												 (NP-OB1 (PRO it#it_pron) (N self#self_pron))
												 (NP-MSR (D a#a_adj) (ADJ little#little_adj))
												 (PP (P into#into_prep)
												     (NP (D the#the_adj)
													 (CODE <font>)
													 (NUM half#half_adj)
													 (NS rounds#round_n1)
													 (CODE <$$font>)
													 (PP (P on#on_prep)
													     (NP (Q each#each_adj)
														 (N side#side_n1)
														 (NP-COM (PRO it#it_pron))))))))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,66.231))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (VBP know#know_v)
	  (NP-OB1 (D an#a_adj)
		  (ADJ honourable#honourable_adj)
		  (N Gentleman#gentleman_n)
		  (PUNC ,)
		  (PP (P in#in_prep)
		      (NP (NP-1 (Q somewhat#somewhat_n))
			  (D a#a_adj)
			  (ADJP (NP-MSR *ICH*-1)
				(ADJ cold#cold_adj))
			  (N Country#country_n)))
		  (PUNC ,)
		  (CP-REL (WNP-2 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-2)
				  (HVP hath#have_v)
				  (IP-SMC (NP-SBJ (PRO$ his#his_adj) (N Garden#garden_n) (NS walls#wall_n1))
					  (ADVP (ADV so#so_adv))
					  (VAN made#make_v1)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,66.232))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO$ his#his_adj) (NS Trees#tree_n))
	  (VBP bear#bear_v1)
	  (NP-OB1 (N Fruit#fruit_n))
	  (ADVP (ADV plentifully#plentifully_adv))
	  (PP (P in#in_prep)
	      (NP (SUCH such#such_adj)
		  (NS years#year_n)
		  (PP (P as#as_adv)
		      (CP-CMP (WNP-1 0)
			      (C 0)
			      (IP-SUB (NP-TMP *T*-1)
				      (NP-SBJ (NP-POS (PRO$ his#his_adj) (NS$ neighbours#neighbour_n)))
				      (ADVP (ADV generally#generally_adv))
				      (VBP fail#fail_v))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,66.233))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (ALSO also#also_adv)
	  (VBD saw#see_v)
	  (NP-OB1 (D a#a_adj)
		  (CODE <font>)
		  (N wall#wall_n1)
		  (CODE <$$font>)
		  (RRC (VAN made#make_v1)
		       (ADVP (ADV thus#thus_adv))
		       (PP (P for#for_prep)
			   (IP-PPL (VAG raising#raise_v1)
				   (CODE <font>)
				   (NP-OB1 (NS Melons#melon_n1))
				   (CODE <$$font>)
				   (PP (P under#under_prep)
				       (NP *))))
		       (PUNC ,)
		       (PP (P by#by_prep)
			   (NP (D a#a_adj)
			       (N pattern#pattern_n)
			       (CONJP (CONJ or#or_conj1)
				      (NX (NS directions#direction_n)))
			       (PP (P from#from_prep)
				   (CODE <font>)
				   (NP (NPR Italy#NA)))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,66.234))

( (CODE <P_67>))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (HVP have#have_v)
	  (ALSO also#also_adv)
	  (VBN seen#see_v)
	  (CODE <font>)
	  (IP-INF (NP-SBJ (NS Grapes#grape_n1)
			  (CODE <$$font>)
			  (CP-REL *ICH*-1))
		  (VB ripen#ripen_v)
		  (ADVP (ADV delicately#delicately_adv))
		  (PP (P on#on_prep)
		      (NP (Q every#every_adj)
			  (N side#side_n1)
			  (NP-COM (D the#the_adj) (CODE <font>) (N cluster#cluster_n))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CP-REL-1 (WNP-2 0)
			    (C that#that_conj)
			    (IP-SUB (NP-SBJ *T*-2)
				    (VBD grew#grow_v)
				    (PP (P in#in_prep)
					(NP (D a#a_adj) (CODE <font>) (NUM half#half_adj) (N round#round_n1))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,67.236))

( (IP-MAT (PP (P By#by_prep)
	      (NP (NS means#mean_n3)
		  (PP (P of#of_prep)
		      (NP (D these#these_pron) (CODE <font>) (NS rounds#round_n1)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (Q every#every_adj) (CODE <font>) (N wall#wall_n1))
	  (CODE <$$font>)
	  (MD will#will_v1)
	  (NP-TMP (NP (ONE one#one_adj)
		      (N time#time_n)
		      (PP (P of#of_prep)
			  (NP (D the#the_adj) (N day#day_n))))
		  (CONJP (CONJ or#or_conj1)
			 (NP (OTHER other#other_adj))))
	  (PUNC ,)
	  (HV have#have_v)
	  (NP-OB1 (D a#a_adj)
		  (N share#share_n2)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (N Sun#sun_n1))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,67.237))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj) (ADJS best#best_adj) (CODE <font>) (NS walls#wall_n1))
	  (CODE <$$font>)
	  (PUNC <paren>)
	  (PP-PRN (P by#by_prep)
		  (NP (N reason#reason_n1)
		      (PP (P of#of_prep)
			  (NP (SUCH such#such_adj)
			      (D a#a_adj)
			      (N reflection#reflection_n)
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (NX (N collection#collection_n)))
			      (PP (P of#of_prep)
				  (NP (D the#the_adj) (NS Sun-beams#sunbeam_n)))
			      (PP (P as#as_adv)
				  (CP-CMP (WNP-1 0)
					  (C 0)
					  (IP-SUB (NP-SBJ *T*-1)
						  (MD will#will_v1)
						  (BE be#be_v)
						  (PP (P in#in_prep)
						      (NP (Q every#every_adj) (CODE <font>) (N round#round_n1))))))))))
	  (CODE <$$font>)
	  (PUNC <$$paren>)
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADV exceeding#exceeding_adj) (ADJ hot#hot_adj))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,67.238))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj) (CODE <font>) (NS Trees#tree_n))
	  (CODE <$$font>)
	  (BEP be#be_v)
	  (ADJP-PRD (QR more#more_adj) (ADJ secure#secure_adj))
	  (PP (P from#from_prep)
	      (NP (NS winds#wind_n1)))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,67.239))

( (IP-MAT (IP-PPL (HAG Having#have_v)
		  (VBN said#say_v1)
		  (NP-MSR (QP (ADV thus#thus_adv) (Q much#much_adj)))
		  (ADVP-LOC (ADV here#here_adv))
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (CODE <font>)
			  (N Wall#wall_n1)
			  (CODE <$$font>)
			  (CP-REL (WNP-1 0)
				  (C that#that_conj)
				  (CODE <font>)
				  (IP-SUB (NP-SBJ (N Fruit#fruit_n) (NS trees#tree_n))
					  (CODE <$$font>)
					  (BEP are#be_v)
					  (IP-INF (TO to#to_prep)
						  (BE be#be_v)
						  (VAN set#set_v1)
						  (PP (RP up#up_adv1)
						      (P to#to_prep)
						      (NP *T*-1))))))))
	  (PUNC ,)
	  (NP-SBJ (QP (QP (ADV thus#thus_adv) (Q much#much_adj))
		      (QR more#more_adj))
		  (CP-THT *ICH*-2))
	  (MD may#may_v1)
	  (NEG not#not_adv)
	  (ADVP (ADV improperly#improperly_adv))
	  (BE be#be_v)
	  (ADVP-LOC (ADV here#here_adv))
	  (VAN added#add_v)
	  (PUNC .)
	  (CP-THT-2 (C That#that_conj)
		    (IP-SUB (NP-SBJ (D a#a_adj) (CODE <font>) (N Pale#pale_n1))
			    (CODE <$$font>)
			    (BEP is#be_v)
			    (ADJP-PRD (ADJP (ADVR as#as_adv)
					    (ADJ good#good_adj)
					    (PP (P for#for_prep)
						(NP (D this#this_pron) (N purpose#purpose_n))))
				      (PUNC ,)
				      (CONJP (CONJ and#and_conj1)
					     (ADJP (PP (P in#in_prep)
						       (NP (N respect#respect_n)
							   (PP (P of#of_prep)
							       (IP-PPL (VAG ripening#ripen_v)
								       (CODE <font>)
								       (NP-OB1 (N Fruit#fruit_n))))))
						   (CODE <$$font>)
						   (ADJR better#better_adj)))
				      (PP (P than#than_conj)
					  (NP (Q any#any_adj)
					      (N thing#thing_n1)
					      (ADJP (ADJ else#else_adv))
					      (CP-REL (WNP-3 0)
						      (C 0)
						      (IP-SUB (NP-SBJ (PRO it#it_pron))
							      (MD can#can_v1)
							      (BE be#be_v)
							      (VAN raised#raise_v1)
							      (PP (RP up#up_adv1)
								  (P to#to_prep)
								  (NP *T*-3)))))))
			    (PUNC ,)
			    (PP (P if#if_conj)
				(CP-ADV (C 0)
					(IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N Pale#pale_n1))
						(CODE <$$font>)
						(BEP be#be_v)
						(VAN made#make_v1)
						(PP (P of#of_prep)
						    (NP (ADJ sawed#sawed_adj)
							(NS boards#board_n)
							(PUNC ,)
							(ADJP (ADJP (NP-MSR (NUMP (NUM nine#nine_adj) (CONJ or#or_conj1) (NUM ten#ten_adj))
									    (NS foot#foot_n))
								    (ADJ high#high_adj))
							      (PUNC ,)
							      (CONJP (CONJ and#and_conj1)
								     (RRC (ADVP (ADV exactly#exactly_adv))
									  (VAN joined#join_v1)
									  (PUNC ,)
									  (CP-ADV (C that#that_conj)
										  (IP-SUB (NP-SBJ (Q no#no_adj) (N wind#wind_n1))
											  (MD may#may_v1)
											  (VB come#come_v)
											  (RP through#through_prep)))))))))))))
	  (PUNC :))
  (ID LANGF-1696-E3-P2,67.240))

( (IP-MAT (IP-MAT-1 (ADJP-LOC (ADJS Next#next_adj)
			      (PP (P to#to_prep)
				  (NP (D this#this_pron)))
			      (PP (P in#in_prep)
				  (NP (N goodness#goodness_n))))
		    (BEP is#be_v)
		    (NP-SBJ (D a#a_adj) (CODE <font>) (N Brick-wall#brick-wall_n1)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (ADVP (ADV then#then_adv))
			   (NP-SBJ (D a#a_adj) (CODE <font>) (N Stone-wall#stonewall_n))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (NP-SBJ (D the#the_adj)
				   (ADJS worst#worst_adj)
				   (PP (P of#of_prep)
				       (NP (Q all#all_adj))))
			   (NP-OB1 (D that#that_pron1)
				   (CP-REL (WNP-2 (WPRO which#which_adj))
					   (C 0)
					   (IP-SUB (NP-SBJ *T*-2)
						   (BEP is#be_v)
						   (VAN made#make_v1)
						   (PP (P of#of_prep)
						       (CODE <font>)
						       (NP (N Timber#timber_n1) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (N Mortar#mortar_n1))))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,67.241))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P in#in_prep)
	      (NP (D this#this_pron)))
	  (NP-SBJ (Q every#every_adj) (ONE one#one_adj))
	  (MD can@#can_v1)
	  (NEG @not#not_adv)
	  (BE be#be_v)
	  (NP-PRD (PRO$ his#his_adj) (ADJ own#own_adj) (N chooser#chooser_n))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,67.242))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ *con*)
	  (MD must#must_v1)
	  (VB comply#comply_v1)
	  (PP (P with#with_prep)
	      (NP (CP-FRL (WNP-1 (WPRO what#what_pron))
			  (C 0)
			  (IP-SUB (NP-SBJ (D the#the_adj)
					  (CODE <font>)
					  (N Country#country_n)
					  (CODE <$$font>)
					  (CP-REL (WNP-2 0)
						  (C 0)
						  (IP-SUB (NP-SBJ (PRO he#he_pron))
							  (VBP lives#live_v1)
							  (PP (P in#in_prep)
							      (NP *T*-2)))))
				  (MD will#will_v1)
				  (VB permit#permit_v)
				  (NP-OB2 (PRO him#him_pron))
				  (IP-INF (NP-OB1 *T*-1)
					  (TO to#to_prep)
					  (DO do#do_v)
					  (PP (P for#for_prep)
					      (NP (PRO$ his#his_adj) (ADJS best#best_adj) (N convenience#convenience_n))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,67.243))

( (IP-MAT (PP (P When#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (CODE <font>)
			      (VBP plant#plant_v)
			      (CODE <$$font>)
			      (NP-OB1 (PRO$ your#your_pron) (CODE <font>) (N Garden#garden_n))
			      (CODE <$$font>)
			      (PP (P with#with_prep)
				  (CODE <font>)
				  (NP (N Fruit#fruit_n) (NS trees#tree_n))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (DO do#do_v)
	  (ADVP (ADV well#well_adv))
	  (IP-INF (IP-INF (TO to#to_prep)
			  (VB draw#draw_v)
			  (CODE <P_68>)
			  (NP-OB1 (D the#the_adj)
				  (CODE <font>)
				  (N Platform#platform_n)
				  (CODE <$$font>)
				  (PP (P of#of_prep)
				      (NP (PRO it#it_pron))))
			  (PP (P in#in_prep)
			      (NP (N Paper#paper_n))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (IP-INF (ADVP (ADV so#so_adv))
				 (TO *)
				 (VB set#set_v1)
				 (RP down#down_adv)
				 (NP-OB1 (D the#the_adj)
					 (N name#name_n)
					 (PP (P of#of_prep)
					     (NP (Q every#every_adj) (N Tree#tree_n))))
				 (PUNC ,)
				 (IP-PPL (VAG according#accord_v)
					 (PP (P to#to_prep)
					     (NP (D the#the_adj)
						 (N place#place_n1)
						 (CP-REL (WNP-1 0)
							 (C 0)
							 (IP-SUB (NP-SBJ (PRO it#it_pron))
								 (VBP stands#stand_v)
								 (PP (P in#in_prep)
								     (NP *T*-1)))))))
				 (PUNC ,)
				 (CP-QUE-SUB-ADV (WQ whether#whether_pron)
						 (FRAG (PP (P in#in_prep)
							   (CODE <font>)
							   (NP (N Wall-fruit#SEE_wall_n1) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NS Dwarf-trees#cNA))))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,68.244))

( (IP-MAT (NP-OB1 (D the#the_adj) (ADJ same#same_adj) (N course#course_n1))
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB use#use_v)
	  (PP (P about#about_adv)
	      (NP (PRO$ your#your_pron) (CODE <font>) (N Orchard#orchard_n)))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,68.245))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO you#you_pron))
	  (MD will#will_v1)
	  (VB find#find_v)
	  (IP-SMC (NP-SBJ-1 (PRO it#it_pron))
		  (ADJP-PRD (CONJ both#both_pron) (ADJ satisfactory#satisfactory_adj) (CONJ and#and_conj1) (ADJ useful#useful_adj))
		  (PUNC ,)
		  (CP-THT-1 (C that#that_conj)
			    (IP-SUB (NP-SBJ (PRO you#you_pron))
				    (MD may#may_v1)
				    (ADVP (ADV readily#readily_adv))
				    (PP (P at#at_prep)
					(NP (Q any#any_adj)
					    (N season#season_n)
					    (PP (P of#of_prep)
						(NP (D the#the_adj) (N year#year_n)))))
				    (PUNC ,)
				    (VB know#know_v)
				    (CP-QUE-SUB (WNP-2 (WD what#what_pron)
						       (N kind#kind_n)
						       (PP (P of#of_prep)
							   (CODE <font>)
							   (NP (N Fruit#fruit_n))))
						(CODE <$$font>)
						(C 0)
						(IP-SUB (NP-OB1 *T*-2)
							(NP-SBJ (Q every#every_adj) (N Tree#tree_n))
							(VBP beareth#bear_v1))))))
	  (PUNC :))
  (ID LANGF-1696-E3-P2,68.246))

( (IP-MAT (NP-SBJ (D The#the_adj)
		  (CODE <font>)
		  (N Fruit#fruit_n)
		  (CODE <$$font>)
		  (RRC (VAN planted#plant_v)
		       (PP (P in#in_prep)
			   (CODE <font>)
			   (NP (NS Fields#field_n1)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (IP-PPL (NEG not#not_adv)
		  (BAG being#be_v)
		  (PP (P of#of_prep)
		      (NP (QP (ADVR so#so_adv) (Q much#much_adj))
			  (N variety#variety_n))))
	  (PUNC ,)
	  (MD may#may_v1)
	  (BE be#be_v)
	  (ADVP (ADV easily#easily_adv))
	  (VAN distinguished#distinguish_v)
	  (PP (P without#without_adv)
	      (NP (D this#this_pron) (N help#help_n)))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,68.247))

( (CODE <heading>))

( (NP (N CHAP.#chapter_n) (NUM XI#eleven_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,68.249))

( (PP (CODE <font>)
      (P Concerning#concerning_prep)
      (NP (NS Dwarf-Trees#cNA))
      (PUNC .))
  (ID LANGF-1696-E3-P2,68.250))

( (CODE <$$heading>))

( (NP (N Sect.#section_n) (CODE <$$font>) (ONE 1#one_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,68.252))

( (IP-MAT (NP-SBJ (D These#these_pron) (CODE <font>) (NS Trees#tree_n))
	  (CODE <$$font>)
	  (HVP have#have_v)
	  (BEN been#be_v)
	  (PP (P of#of_prep)
	      (ADJP (ADJ late#late_adj1)))
	  (NP-MSR (Q much#much_adj))
	  (VAN (VAN affected#affect_v1) (CONJ and#and_conj1) (VAN coveted#covet_v))
	  (PUNC ,)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (PP (P of#of_prep)
				  (NP (ADJ special#special_adj)
				      (N advantage#advantage_n)
				      (PP (P for#for_prep)
					  (NP (N Table-fruit#SEE_table_n)))))
			      (PUNC ,)
			      (PUNC <paren>)
			      (CP-QUE-SUB-ADV (WQ whether#whether_pron)
					      (C 0)
					      (CODE <font>)
					      (FRAG (NP (NS Pears#pear_n)
							(PUNC ,)
							(NS Apples#apple_n)
							(PUNC ,)
							(NS Plums#plum_n)
							(CODE <$$font>)
							(PUNC <paren>)
							(CODE {COM:sic})
							(CONJ or#or_conj1)
							(CODE <font>)
							(NS Cherries#cherry_n))))
			      (CODE <$$font>)
			      (PUNC <$$paren>)
			      (IP-PPL (BAG being#be_v)
				      (PP (FP but#but_prep)
					  (P of#of_prep)
					  (NP (ADJ low#low_adj) (N Stature#stature_n)))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,68.253))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (MD may#may_v1)
	  (BE be#be_v)
	  (CODE <font>)
	  (VAN planted#plant_v)
	  (CODE <$$font>)
	  (PP (P in#in_prep)
	      (NP (D the#the_adj)
		  (CODE <font>)
		  (NS borders#border_n)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (NS Garden-walks#SEE_garden_n)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P without#without_adv)
	      (IP-PPL (DAG doing#do_v)
		      (NP-OB2 (Q any#any_adj)
			      (N thing#thing_n1)
			      (ADJ else#else_adv)
			      (ADVP-LOC (ADV there#there_adv))
			      (PP (P about#about_adv)
				  (NP (PRO them#them_pron))))
		      (NP-OB1 (Q any#any_adj) (N prejudice#prejudice_n))
		      (PUNC ,)
		      (PP (P by#by_prep)
			  (IP-PPL (VAG overshadowing#overshadow_v)
				  (NP-OB1 (PRO them#them_pron))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,68.254))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO$ their#their_adj) (CODE <font>) (N fruit#fruit_n))
	  (CODE <$$font>)
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADVP (ADVR as#as_adv) (ADV well#well_adv))
		    (ADJ secured#secured_adj)
		    (PUNC ,)
		    (CONJP (CONJ and#and_conj1)
			   (CODE <P_69>)
			   (ADJX (ADJ commodious#commodious_adj)
				 (PP (P for#for_prep)
				     (NP (N gathering#gathering_n)))))
		    (PP (P as#as_adv)
			(NP (D the#the_adj) (CODE <font>) (N Wall-fruit#SEE_wall_n1))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,69.255))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 2#two_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,69.256))

( (IP-MAT (CODE <font>)
	  (NP-SBJ (NS Plants#plant_n1)
		  (CODE <$$font>)
		  (PP (P for#for_prep)
		      (NP (D this#this_pron) (N purpose#purpose_n))))
	  (MD must#must_v1)
	  (BE be#be_v)
	  (VAN (VAN provided#provide_v) (PUNC ,) (CONJ and#and_conj1) (VAN prepared#prepare_v))
	  (ADVP (NP-MSR (Q somewhat#somewhat_n))
		(ADV differently#differently_adv)
		(PP (P from#from_prep)
		    (NP (D those#those_pron)
			(PP (P for#for_prep)
			    (CODE <font>)
			    (NP (NS Orchards#orchard_n) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (NS Fields#field_n1))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,69.257))

( (IP-MAT-1 (NP-SBJ (D The#the_adj) (CODE <font>) (N Quince-tree#quince-tree_n))
	    (CODE <$$font>)
	    (BEP is#be_v)
	    (ADVP (ADV generally#generally_adv))
	    (VAN used#use_v)
	    (PUNC ,)
	    (IP-MAT-PRN=1 (CONJ and#and_conj1)
			  (ADJP-PRD (ADJS best#best_adj)
				    (PP (P for#for_prep)
					(CODE <font>)
					(NP (NS Stocks#stock_n1)
					    (PP (P for#for_prep)
						(CODE <font>)
						(NP (NS Pears#pear_n)))))))
	    (CODE <$$font>)
	    (PUNC ,)
	    (PP (CONJ both#both_pron)
		(PP (P for#for_prep)
		    (CODE <font>)
		    (NP (NS Dwarfs#dwarf_n) (CODE <$$font>) (CONJ and#and_conj1) (CODE <font>) (N Wall#wall_n1))))
	    (CODE <$$font>)
	    (PUNC ;)
	    (PP (ADVP (ADVR as#as_adv)
		      (ADV well#well_adv)
		      (PP *ICH*-2))
		(PP (P because#because_adv)
		    (CP-ADV (C 0)
			    (IP-SUB (NP-SBJ (PRO it#it_pron))
				    (MD may#may_v1)
				    (ADVP (ADV possibly#possibly_adv))
				    (NP-MSR (Q somewhat#somewhat_n))
				    (VB meliorate#meliorate_v)
				    (NP-OB1 (D the#the_adj) (CODE <font>) (N Pear#pear_n)))))
		(CODE <$$font>)
		(PP-2 (P as#as_adv)
		      (PUNC <paren>)
		      (FRAG (CONJ and#and_conj1)
			    (NP (D that#that_pron1))
			    (ADVP (ADV chiefly#chiefly_adv)))
		      (PUNC <$$paren>)
		      (PP (P because#because_adv)
			  (CP-ADV (C 0)
				  (IP-SUB (NP-SBJ (PRO it#it_pron))
					  (VBP groweth#grow_v)
					  (NEG not#not_adv)
					  (PP (P to#to_prep)
					      (NP (D that#that_pron1)
						  (N bigness#bigness_n)
						  (PUNC ,)
						  (PP (P as#as_adv)
						      (CP-CMP (WNP-3 0)
							      (C 0)
							      (IP-SUB (PP (P on#on_prep)
									  (NP (D a#a_adj) (CODE <font>) (N Pear-stock#SEE_pear_n)))
								      (CODE <$$font>)
								      (NP-SBJ (PRO it#it_pron))
								      (MD would#will_v1)
								      (BE be#be_v)
								      (ADJP-PRD (ADJ apt#apt_adj)
										(IP-INF (NP-OB1 *T*-3)
											(TO to#to_prep)
											(DO do#do_v)))))))))))))
	    (PUNC .))
  (ID LANGF-1696-E3-P2,69.258))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 3#three_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,69.259))

( (IP-MAT (PP (P For#for_prep)
	      (CODE <font>)
	      (NP (NS Dwarf-Apple-trees#cNA)))
	  (CODE <$$font>)
	  (NP-SBJ (D the#the_adj) (ADJS best#best_adj) (CODE <font>) (NS Stocks#stock_n1))
	  (CODE <$$font>)
	  (BEP are#be_v)
	  (ADJP-PRD (SUCH such#such_adj)
		    (PP (P as#as_adv)
			(CP-CMP (WNP-1 0)
				(C 0)
				(IP-SUB (NP-SBJ *T*-1)
					(BEP are#be_v)
					(VAN raised#raise_v1)
					(PP (P of#of_prep)
					    (NP (D the#the_adj)
						(CODE <font>)
						(NS cuttings#cutting_n)
						(CODE <$$font>)
						(PP (P of#of_prep)
						    (NP (OTHER other#other_adj)
							(CODE <font>)
							(NS Apple-trees#apple-tree_n)
							(CODE <$$font>)
							(PUNC ,)
							(PP (P as#as_adv)
							    (PP (P of#of_prep)
								(NP (NP (D the#the_adj) (CODE <font>) (N Gennet-moil#genet-moyle_n))
								    (CODE <$$font>)
								    (PUNC ,)
								    (CONJP (NP (D the#the_adj) (CODE <font>) (N Kentish-Codling#cNA)))
								    (CODE <$$font>)
								    (CONJP (CONJ and#and_conj1)
									   (NP (OTHERS others#other_adj))))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,69.260))

( (IP-MAT (CP-THT-SBJ (C That#that_conj)
		      (IP-SUB (NP-SBJ (D these#these_pron))
			      (BEP are#be_v)
			      (ADJP-PRD (QR more#more_adj)
					(ADJ proper#proper_adj)
					(PP (P for#for_prep)
					    (CODE <font>)
					    (NP (NS Dwarf-trees#cNA)))
					(CODE <$$font>)
					(PUNC ,)
					(PP (P than#than_conj)
					    (CODE <font>)
					    (NP (NS Crab-stocks#crab-stock_n))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (VBP appears#appear_v)
	  (PUNC ;)
	  (LS 1.#one_adj)
	  (PP (P Because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB-1 (NP-SBJ (D the#the_adj) (CODE <font>) (N Fruit#fruit_n))
					(CODE <$$font>)
					(MD will#will_v1)
					(BE be#be_v)
					(ADVP (ADVR rather#rather_adv))
					(VAN better'd#better_v1))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB=1 (NEG not#not_adv)
					       (VAN tainted#taint_v)
					       (PP (P with#with_prep)
						   (NP (Q any#any_adj)
						       (N asperity#asperity_n)
						       (PUNC ,)
						       (CONJP (CONJ or#or_conj1)
							      (NX (N roughnesse#roughness_n)))))
					       (PUNC ,)
					       (PP (P as#as_adv)
						   (CP-ADV (WADVP-2 0)
							   (C 0)
							   (IP-SUB (ADVP *T*-2)
								   (ADVP (ADV possibly#possibly_adv))
								   (NP-SBJ (PRO it#it_pron))
								   (MD might#may_v1)
								   (BE be#be_v)
								   (VAN *)
								   (PUNC ,)
								   (PP (P if#if_conj)
								       (CP-ADV (C 0)
									       (CODE <font>)
									       (IP-SUB (NP-SBJ-3 (N Crab#crab_n2) (NS tree-stocks#SEE_tree_n))
										       (CODE <$$font>)
										       (BED were#be_v)
										       (VAN made#make_v1)
										       (NP-OB1 (N use#use_n))
										       (PP (P of#of_prep)
											   (NP *-3)))))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,69.261))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (ONE one#one_adj)
		  (ADJ chief#chief_adj)
		  (N design#design_n)
		  (PP (P in#in_prep)
		      (NP (D these#these_pron) (CODE <font>) (NS Trees#tree_n))))
	  (CODE <$$font>)
	  (BEP is#be_v)
	  (IP-INF-PRD (TO to#to_prep)
		      (HV have#have_v)
		      (NP-OB1 (ADJP (ADJ choice#choice_adj) (CONJ and#and_conj1) (ADJ delicious#delicious_adj))
			      (N Fruit#fruit_n)
			      (PP (P for#for_prep)
				  (NP (N eating#eating_n)))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,69.262))

( (IP-MAT (LS 2#NA)
	  (PUNC .)
	  (CODE <font>)
	  (NP-SBJ (NS Apple-trees#apple-tree_n)
		  (CODE <$$font>)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP are#be_v)
				  (VAN raised#raise_v1)
				  (PP (P on#on_prep)
				      (NP (SUCH such#such_adj) (CODE <font>) (NS Stocks#stock_n1))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (MD will#will_v1)
	  (NEG not#not_adv)
	  (VB grow#grow_v)
	  (ADJP-PRD (ADVR so#so_adv)
		    (ADJ big#big_adj)
		    (PP (P as#as_adv)
			(NP (D those#those_pron)
			    (PP (P on#on_prep)
				(CODE <font>)
				(NP (NS Crab-stocks#crab-stock_n))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,69.263))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ *con*)
	  (BEP are#be_v)
	  (PP (P with#with_prep)
	      (NP (N ease#ease_n) (CONJ and#and_conj1) (N certainty#certainty_n)))
	  (VAN kept#keep_v)
	  (CODE <font>)
	  (NP-SPR (NS Dwarfs#dwarf_n))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,69.264))

( (IP-MAT (NP-SBJ (NPR Mr.#NA) (CODE <font>) (NPR Rea#NA))
	  (CODE <$$font>)
	  (IP-PPL (VAG judging#judge_v)
		  (CODE <P_70>)
		  (NP-OB1 (D the#the_adj) (CODE <font>) (N Paradise-Apple#SEE_paradise_n))
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (NP (ADJP (NP-MSR (Q somewhat#somewhat_n))
				(ADJ slow#slow_adj))
			  (N growth#growth_n1)
			  (PP (P in#in_prep)
			      (IP-PPL (VAG bringing#bring_v)
				      (ADVP-DIR (ADV forward#forward_adj))
				      (NP-OB1 (D a#a_adj) (CODE <font>) (N Scion#scion_n)))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (VBP advises#advise_v)
	  (IP-INF (IP-INF-1 (TO to#to_prep)
			    (CODE <font>)
			    (VB graff#graff_v1)
			    (CODE <$$font>)
			    (NP-OB1 (D a#a_adj) (CODE <font>) (N Paradise#paradise_n))
			    (CODE <$$font>)
			    (PP (P on#on_prep)
				(NP (D a#a_adj) (CODE <font>) (N Crab-stock#crab-stock_n))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (IP-INF=1 (NP-OB1 (D the#the_adj)
					   (CODE <font>)
					   (N Fruit#fruit_n)
					   (CODE <$$font>)
					   (CP-REL (WNP-2 0)
						   (C 0)
						   (IP-SUB (NP-OB1 *T*-2)
							   (NP-SBJ (PRO you#you_pron))
							   (MD would#will_v1)
							   (HV have#have_v))))
				   (PUNC ,)
				   (PP (P on#on_prep)
				       (NP (D that#that_pron1) (CODE <font>) (N Paradise#paradise_n))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (IP-SUB-3 (NP-SBJ (D the#the_adj) (CODE <font>) (N Crab#crab_n2))
				    (CODE <$$font>)
				    (MD might#may_v1)
				    (VB yield#yield_v)
				    (NP-OB1 (N plenty#plenty_n)
					    (PP (P of#of_prep)
						(CODE <font>)
						(NP (N juice#juice_n) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (N sap#sap_n1))))
				    (CODE <$$font>)
				    (PP (P to#to_prep)
					(NP (D the#the_adj) (CODE <font>) (N Paradise#paradise_n))))
			  (CODE <$$font>)
			  (PUNC ,)
			  (CONJP (CONJ and#and_conj1)
				 (IP-SUB=3 (NP-SBJ (D the#the_adj) (CODE <font>) (N Paradise#paradise_n))
					   (CODE <$$font>)
					   (VB retard#retard_v)
					   (NP-OB1 (D the#the_adj)
						   (N growth#growth_n1)
						   (PP (P of#of_prep)
						       (NP (D the#the_adj)
							   (CODE <font>)
							   (N Apple#apple_n)
							   (RRC (VAN planted#plant_v)
								(CODE <$$font>)
								(PP (P on#on_prep)
								    (NP (PRO it#it_pron)))))))
					   (PUNC ,)
					   (PP (P so#so_adv)
					       (PP (P as#as_adv)
						   (IP-INF (TO to#to_prep)
							   (VB keep#keep_v)
							   (NP-OB1 (PRO it#it_pron))
							   (NP-SPR (D a#a_adj) (CODE <font>) (N Dwarf#dwarf_n)))))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,70.265))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P besides#besides_adv)
	      (NP (N loss#loss_n1)
		  (PP (P of#of_prep)
		      (NP (N time#time_n)))))
	  (PUNC ,)
	  (NP-SBJ (PRO I#i_pron))
	  (VBP doubt#doubt_v)
	  (NP-OB1 (D the#the_adj)
		  (N success#success_n)
		  (PP (P of#of_prep)
		      (NP (D this#this_pron))))
	  (PUNC ,)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB-1 (NP-SBJ (D the#the_adj) (CODE <font>) (N Crab#crab_n2))
					(CODE <$$font>)
					(MD will#will_v1)
					(VB put#put_v)
					(ADVP (ADV forth#forth_adv))
					(NP-OB1 (ADJ strong#strong_adj) (N Root#root_n1)))
			      (PUNC ;)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB=1 (VB yield#yield_v)
					       (NP-OB1 (N plenty#plenty_n)
						       (PP (P of#of_prep)
							   (NP (N nourishment#nourishment_n)))))))))
	  (PUNC :))
  (ID LANGF-1696-E3-P2,70.266))

( (IP-MAT (CONJ For#for_prep)
	  (CP-QUE-SUB-1 (WADVP-2 (WADV why#why_adv))
			(C 0)
			(IP-SUB (ADVP *T*-2)
				(CODE <font>)
				(NP-SBJ (NS Apple-trees#apple-tree_n)
					(CODE <$$font>)
					(RRC (VAN raised#raise_v1)
					     (PP (P by#by_prep)
						 (CODE <font>)
						 (NP (NS cuttings#cutting_n)))))
				(CODE <$$font>)
				(VBP grow#grow_v)
				(NEG not#not_adv)
				(IP-INF (TO to#to_prep)
					(BE be#be_v)
					(NP-PRD (ADJP (ADV very#very_adj) (ADJ large#large_adj))
						(NS Trees#tree_n)))))
	  (PUNC ,)
	  (NP-SBJ (PRO I#i_pron))
	  (VBP take#take_v)
	  (IP-INF (CP-QUE-SUB-SBJ *ICH*-1)
		  (TO to#to_prep)
		  (BE be#be_v)
		  (PUNC ,)
		  (NP-PRD (PRO$ their#their_adj)
			  (IP-PPL (VAG putting#put_v)
				  (ADVP (ADV forth#forth_adv))
				  (NP-OB1 (SUCH such#such_adj) (ADJ small#small_adj) (CODE <font>) (NS Roots#root_n1))
				  (CODE <$$font>)
				  (PUNC ,)
				  (CP-CAR (WPP-3 (P by#by_prep)
						 (WNP (WD which#which_adj) (NS means#mean_n3)))
					  (C 0)
					  (IP-SUB (PP *T*-3)
						  (NP-SBJ (D the#the_adj) (N Tree#tree_n))
						  (HVP hath#have_v)
						  (CODE <font>)
						  (IP-SMC (NP-SBJ (N sap#sap_n1))
							  (CODE <$$font>)
							  (VAN conveyed#convey_v1)
							  (PP (P to#to_prep)
							      (NP (PRO it#it_pron)))
							  (ADVP (ADV accordingly#accordingly_adv))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,70.267))

( (IP-MAT (LS 3#NA)
	  (PUNC .)
	  (PP (P By#by_prep)
	      (IP-PPL (VAG using#use_v)
		      (NP-OB1 (D these#these_pron) (CODE <font>) (NS cuttings#cutting_n))
		      (CODE <$$font>)
		      (PP (P for#for_prep)
			  (CODE <font>)
			  (NP (NS Stocks#stock_n1)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD shall#shall_v)
	  (VB get#get_v)
	  (NP-OB1 (NP-MSR (NUMP (PP (P at#at_prep)
				    (QP (QS least#least_adj)))
				(NUM four#four_adj))
			  (NS years#year_n))
		  (N time#time_n))
	  (PUNC ,)
	  (IP-PPL (VAG reckoning#reckon_v)
		  (PP (P from#from_prep)
		      (IP-PPL (IP-PPL (VAG sowing#sow_v1)
				      (NP-OB1 (D the#the_adj) (CODE <font>) (N Crab-kernel#SEE_crab_n2)))
			      (CODE <$$font>)
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (NP (D the#the_adj)
					 (IP-PPL (VAG setting#set_v1)
						 (NP-OB1 (D the#the_adj)
							 (CODE <font>)
							 (N Stem#stem_n1)
							 (CODE <$$font>)
							 (CONJP (CONJ or#or_conj1)
								(CODE <font>)
								(NX (N Cutting#cutting_n))))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (IP-PPL (BAG being#be_v)
		  (ADVP (ADV duly#duly_adv))
		  (VAN ordered#order_v)
		  (PUNC ;)
		  (PP (P As#as_adv)
		      (PUNC ,)
		      (LS 1.#one_adj)
		      (PP (P By#by_prep)
			  (IP-PPL (IP-PPL (VAG setting#set_v1)
					  (NP-OB1 (D the#the_adj) (CODE <font>) (N Stem#stem_n1))
					  (CODE <$$font>)
					  (PP (P in#in_prep)
					      (NP (D the#the_adj)
						  (N place#place_n1)
						  (CP-REL (WADVP-1 0)
							  (C 0)
							  (IP-SUB (NP-SBJ (PRO you#you_pron))
								  (VBP intend#intend_v)
								  (CP-THT (C 0)
									  (IP-SUB (ADVP-LOC *T*-1)
										  (NP-SBJ (D the#the_adj) (CODE <font>) (N Dwarf-tree#cNA))
										  (CODE <$$font>)
										  (MD shal#shall_v)
										  (VB grow#grow_v))))))))
				  (PUNC .)
				  (LS 2.#two_adj)
				  (CONJP (CONJ And#and_conj1)
					 (IP-PPL (VAG setting#set_v1)
						 (NP-OB1 (PRO it#it_pron))
						 (PP (P in#in_prep)
						     (NP (ADJ good#good_adj) (N Earth#earth_n1)))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,70.268))

( (IP-MAT (CONJ for#for_prep)
	  (ADVP-TMP (ADV then#then_adv))
	  (PP (P after#after_adv)
	      (NP (NP-MSR (ONE one#one_adj) (N$ years#year_n))
		  (N growth#growth_n1)))
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (CODE <font>)
	  (VB Graff#graff_v1)
	  (CODE <$$font>)
	  (NP-OB1 (PRO it#it_pron))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,70.269))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO you#you_pron))
	  (MD will#will_v1)
	  (ADVP (ADV easily#easily_adv))
	  (VB discern#discern_v)
	  (NP-OB1 (D the#the_adj)
		  (N advantage#advantage_n)
		  (PP (P in#in_prep)
		      (NP (N point#point_n1)
			  (PP (P of#of_prep)
			      (NP (N time#time_n))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,70.270))

( (CODE <P_71>))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ-1 (PRO it#it_pron))
			      (BEP be#be_v)
			      (VAN said#say_v1)
			      (CP-THT-1 (C 0)
					(CODE <font>)
					(IP-SUB (NP-SBJ-2 (NS Crab-stocks#crab-stock_n)
							  (CODE <$$font>)
							  (RRC (ADVP (ADV ready#ready_adj))
							       (VBN grown#grow_v)))
						(MD may#may_v1)
						(BE be#be_v)
						(VAN made#make_v1)
						(NP-OB1 (N use#use_n))
						(PP (P of#of_prep)
						    (NP *-2))
						(PP (P instead#instead_adv)
						    (PP (P of#of_prep)
							(CODE <font>)
							(NP (NS cuttings#cutting_n)))))))))
	  (CODE <$$font>)
	  (PUNC ;)
	  (NP-SBJ-3 (EX there@#there_adv))
	  (BEP @'s#be_v)
	  (NP-3 (D this#this_pron)
		(N Answer#answer_n)
		(CP-THT-PRN *ICH*-4))
	  (ADJP-PRD (ADJ ready#ready_adj))
	  (PUNC ,)
	  (CP-THT-PRN-4 (C 0)
			(IP-SUB (IP-SUB (NP-SBJ (PRO They#they_pron))
					(MD must#must_v1)
					(VB grow#grow_v)
					(CODE <font>)
					(NP-MSR (NUM two#two_adj)
						(CODE <$$font>)
						(PP-PRN (P if#if_conj)
							(FRAG (NEG not#not_adv)
							      (CODE <font>)
							      (NP (NUM three#three_adj))))
						(CODE <$$font>)
						(NS years#year_n))
					(PP (P after#after_adv)
					    (CP-ADV (C 0)
						    (IP-SUB (NP-SBJ (PRO they#they_pron))
							    (BEP are#be_v)
							    (VAN set#set_v1))))
					(PP (P before#before_adv)
					    (CP-ADV (C 0)
						    (IP-SUB (NP-SBJ (PRO they#they_pron))
							    (BEP are#be_v)
							    (ADJP-PRD (ADJ fit#fit_adj)
								      (CP-TMC (WNP-5 0)
									      (IP-INF (NP-OB1 *T*-5)
										      (TO to#to_prep)
										      (CODE <font>)
										      (VB graff#graff_v1))))))))
				(CODE <$$font>)
				(PUNC ,)
				(CONJP (CONJ and#and_conj1)
				       (IP-SUB (PP (P in#in_prep)
						   (NP (N respect#respect_n)
						       (PP (P of#of_prep)
							   (NP (PRO$ their#their_adj) (ADJ large#large_adj) (N growth#growth_n1)))))
					       (NP-SBJ *con*)
					       (MD will#will_v1)
					       (NEG not#not_adv)
					       (BE be#be_v)
					       (ADJP-PRD (ADJ fit#fit_adj)
							 (PP (P for#for_prep)
							     (CODE <font>)
							     (NP (NS Dwarfs#dwarf_n))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,71.272))

( (IP-MAT (NP-SBJ (Q Some#some_pron) (CODE <font>) (N Nursery#nursery_n) (NS Men#man_n1))
	  (CODE <$$font>)
	  (HVP have#have_v)
	  (VBN made#make_v1)
	  (NP-OB1 (N advantage#advantage_n))
	  (PP (P to#to_prep)
	      (NP (PRO themselves#themselves_pron)))
	  (PP (P by#by_prep)
	      (NP (D this#this_pron)
		  (ADJ speedy#speedy_adj)
		  (N way#way_n1)
		  (PP (P of#of_prep)
		      (IP-PPL (VAG raising#raise_v1)
			      (NP-OB1 (NS Trees#tree_n))
			      (PP (P by#by_prep)
				  (CODE <font>)
				  (NP (NS Cuttings#cutting_n)))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,71.273))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P to#to_prep)
	      (NP (D the#the_adj)
		  (N disadvantage#disadvantage_n)
		  (PP (P of#of_prep)
		      (NP (PRO them#them_pron)))))
	  (NP-SBJ (PRO they#they_pron))
	  (VBD put#put_v)
	  (NP-OB1 (PRO them#them_pron))
	  (RP off#off_adv)
	  (PP (P for#for_prep)
	      (CODE <font>)
	      (IP-PPL (VAG planting#plant_v)
		      (CODE <$$font>)
		      (PP (P in#in_prep)
			  (CODE <font>)
			  (NP (NS Orchards#orchard_n)))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (ADVP-TMP (ADV never#never_adv))
			      (ADJP-PRD (ADJ like#like_adj)
					(IP-INF (TO to#to_prep)
						(VB make#make_v1)
						(NP-OB1 (ADJP (ADJ large#large_adj) (PUNC ,) (CONJ or#or_conj1) (ADJ long_lasting#long-lasting_adj))
							(NS Trees#tree_n)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,71.274))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 4#four_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,71.275))

( (IP-MAT (NP-SBJ (D The#the_adj)
		  (N way#way_n1)
		  (ADVP (ADV then#then_adv))
		  (IP-INF (TO to#to_prep)
			  (VB provide#provide_v)
			  (NP-OB1 (D these#these_pron) (CODE <font>) (NS Stocks#stock_n1))))
	  (CODE <$$font>)
	  (BEP is#be_v)
	  (ADVP (ADV thus#thus_adv))
	  (PUNC :))
  (ID LANGF-1696-E3-P2,71.276))

( (IP-IMP (PP (P In#in_prep)
	      (CODE <font>)
	      (NP (NPR October#NA)))
	  (CODE <$$font>)
	  (PP (P from#from_prep)
	      (NP (SUCH such#such_adj)
		  (CODE <font>)
		  (NS Trees#tree_n)
		  (CODE <$$font>)
		  (CP-REL (WNP-1 (WPRO$ whose#whose_pron) (CODE <font>) (NS cuttings#cutting_n))
			  (CODE <$$font>)
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (MD will#will_v1)
				  (VB grow#grow_v)))))
	  (PUNC ,)
	  (VBI take#take_v)
	  (NP-OB1 (SUCH such#such_adj)
		  (CODE <font>)
		  (NS stems#stem_n1)
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NX (NS branches#branch_n)))
		  (CODE <$$font>)
		  (CP-REL (CP-REL (WNP-2 0)
				  (C that#that_conj)
				  (IP-SUB (NP-SBJ *T*-2)
					  (VBP grow#grow_v)
					  (ADVP (ADVS straightest#straight_adj))))
			  (PUNC ,)
			  (CONJP (CONJ and#and_conj1)
				 (CP-REL (WNP-3 (WPRO which#which_adj))
					 (C 0)
					 (IP-SUB (NP-SBJ *T*-3)
						 (PUNC <paren>)
						 (PP-PRN (P in#in_prep)
							 (NP (D the#the_adj)
							     (N place#place_n1)
							     (CP-REL (WADVP-4 (WADV where#where_adv))
								     (C 0)
								     (IP-SUB (ADVP-LOC *T*-4)
									     (NP-SBJ (PRO they#they_pron))
									     (MD shall#shall_v)
									     (BE be#be_v)
									     (CODE <font>)
									     (VAN graffed#graff_v1)))))
						 (CODE <$$font>)
						 (PUNC <$$paren>)
						 (BEP are#be_v)
						 (ADJP-PRD (NP-MSR (NP (D an#a_adj) (CODE <font>) (N inch#inch_n1))
								   (CODE <$$font>)
								   (CONJP (CONJ or#or_conj1)
									  (NP (QR more#more_adj))))
							   (ADJ thick#thick_adj)))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,71.277))

( (IP-MAT (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP be#be_v)
			      (ADJP-PRD (NP-MSR (NUMP (ADV near#near_adv2) (CODE <font>) (NUM two#two_adj))
						(NS inches#inch_n1))
					(CODE <$$font>)
					(ADJ *)))))
	  (NP-SBJ (PRO it@#it_pron))
	  (BEP @'s#be_v)
	  (ADJP-PRD (QP (ADVR so#so_adv) (Q much#much_adj))
		    (D the#the_adj)
		    (ADJR better#better_adj))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,71.278))

( (IP-IMP (VBI cut#cut_v)
	  (NP-OB1 (PRO them#them_pron))
	  (RP off#off_adv)
	  (PUNC ,)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (MD can#can_v1)
			      (VB *))))
	  (PUNC ,)
	  (PP (NP-MSR (NP-MSR (D a#a_adj) (N$ hands#hand_n))
		      (N breadth#breadth_n))
	      (P below#below_adv)
	      (NP (SUCH such#such_adj)
		  (CODE <font>)
		  (NS knots#knot_n1)
		  (CODE <$$font>)
		  (CONJP (CONJ or#or_conj1)
			 (CODE <font>)
			 (NX (NS burrs#bur_n)))
		  (CODE <$$font>)
		  (PP (P as#as_adv)
		      (CP-CMP (WNP-1 0)
			      (C 0)
			      (IP-SUB (NP-SBJ *T*-1)
				      (BEP are#be_v)
				      (PP (P on#on_prep)
					  (NP (PRO them#them_pron))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,71.279))

( (IP-MAT (CONJ for#for_prep)
	  (PP (P at#at_prep)
	      (NP (D those#those_pron) (CODE <font>) (NS burs#bur_n)))
	  (CODE <$$font>)
	  (NP-SBJ (PRO they#they_pron))
	  (ADVP (ADV principally#principally_adv))
	  (VBP put#put_v)
	  (ADVP (ADV forth#forth_adv))
	  (NP-OB1 (PRO$ their#their_adj) (CODE <font>) (NS Roots#root_n1))
	  (CODE <$$font>)
	  (PUNC <$$paren>)
	  (CODE {COM:no_matching_open_paren}))
  (ID LANGF-1696-E3-P2,71.280))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI cut#cut_v)
	  (RP off#off_adv)
	  (NP-OB1 (D the#the_adj) (N top#top_n1))
	  (PUNC ,)
	  (CP-ADV (C that#that_conj)
		  (IP-SUB (NP-SBJ (PRO they#they_pron))
			  (BEP be#be_v)
			  (NEG not#not_adv)
			  (ADJP-PRD (NP-MSR (ADV above#above_adv) (D a#a_adj) (N yard#yard_n2))
				    (ADJ long#long_adj1))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,71.281))

( (IP-MAT (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (MD can@#can_v1)
			      (NEG @not#not_adv)
			      (VB get#get_v)
			      (IP-SMC (NP-SBJ (PRO them#them_pron))
				      (ADJP-PRD (ADVR so#so_adv) (ADJ long#long_adj1))
				      (PP (P of#of_prep)
					  (CODE <font>)
					  (NP (NS Quinces#quince_n1)))))))
	  (CODE <$$font>)
	  (PUNC <$$paren>)
	  (CODE {COM:no_matching_open_paren})
	  (NP-SBJ (PRO you#you_pron))
	  (MD must#must_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ content#content_adj2)
		    (PP (P with#with_prep)
			(NP (ADJR shorter#short_adj))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,71.282))

( (IP-MAT (PUNC <paren>)
	  (PP-PRN (P if#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (PRO they#they_pron))
				  (BEP be#be_v)
				  (CODE <font>)
				  (ADJP-PRD (NP-MSR (NUM two#two_adj) (NS foot#foot_n))))))
	  (CODE <$$font>)
	  (NP-SBJ (PRO it#it_pron))
	  (MD may#may_v1)
	  (DO do#do_v)
	  (CODE <P_72>)
	  (ADVP (ADV reasonably#reasonably_adv) (ADV well#well_adv))
	  (CODE {COM:no_matching_close_paren})
	  (PUNC :))
  (ID LANGF-1696-E3-P2,72.283))

( (IP-IMP (VBI Cut#cut_v)
	  (RP off#off_adv)
	  (ALSO also#also_adv)
	  (NP-OB1 (Q all#all_adj) (N side#side_n1) (CODE <font>) (NS branches#branch_n))
	  (CODE <$$font>)
	  (ADJP-LOC (ADJ close#close_adj)
		    (PP (P to#to_prep)
			(NP (D the#the_adj) (N body#body_n))))
	  (PUNC ,)
	  (PP (P except#except_adj)
	      (NP (ONE one#one_adj)
		  (ADJ small#small_adj)
		  (N twigg#twig_n1)
		  (ADJP-LOC (ADJ near#near_adj)
			    (NP (D the#the_adj) (N top#top_n1)))
		  (PUNC ,)
		  (CP-EOP (WNP-1 0)
			  (IP-INF (FOR for#for_prep)
				  (NP-SBJ (D the#the_adj) (N Sap#sap_n1))
				  (TO to#to_prep)
				  (VB vent#vent_v2)
				  (NP-OB1 (PRO it#it_pron) (N self#self_pron))
				  (PP (P at#at_prep)
				      (NP *T*-1))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,72.284))

( (IP-IMP (VBI set#set_v1)
	  (NP-OB1 (D these#these_pron))
	  (ADVP-TMP (ADV presently#presently_adv))
	  (PP (P in#in_prep)
	      (CODE <font>)
	      (NP (NS beds#bed_n)))
	  (CODE <$$font>)
	  (PP (P as#as_adv)
	      (CP-ADV (WADVP-1 0)
		      (C 0)
		      (IP-SUB (ADVP *T*-1)
			      (NP-SBJ (PRO$ your#your_pron) (CODE <font>) (NS Seed-plants#SEE_seed_n))
			      (CODE <$$font>)
			      (BED were#be_v)
			      (VAN *))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,72.285))

( (IP-IMP (CONJ or#or_conj1)
	  (ADVP (ADVR rather#rather_adv))
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO$ your#your_pron) (CODE <font>) (N Garden#garden_n))
			      (CODE <$$font>)
			      (BEP be#be_v)
			      (VAN laid#lay_v1)
			      (RP out#out_adv)
			      (PUNC <paren>)
			      (CP-ADV (C that#that_conj)
				      (IP-SUB (NP-SBJ (PRO you#you_pron))
					      (MD can#can_v1)
					      (VB know#know_v)
					      (NP-OB1 (D the#the_adj)
						      (NS places#place_n1)
						      (CP-REL (WNP-1 0)
							      (C 0)
							      (IP-SUB (NP-SBJ (PRO they#they_pron))
								      (MD shall#shall_v)
								      (VB stand#stand_v)
								      (PP (P in#in_prep)
									  (NP *T*-1))))))))))
	  (PUNC <$$paren>)
	  (VBI set#set_v1)
	  (NP-OB1 (PRO them#them_pron))
	  (ADVP-LOC (ADV there#there_adv))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,72.286))

( (IP-MAT (NP-SBJ (PRO You#you_pron))
	  (MD need#need_v2)
	  (NEG not#not_adv)
	  (VB fear#fear_v)
	  (IP-PPL-OB1 (VAG setting#set_v1)
		      (NP-OB1 (D these#these_pron))
		      (ADVP (ADVR as#as_adv)
			    (ADV deep#deep_adv)
			    (PUNC ,)
			    (PP (P as#as_adv)
				(CP-CMP (WNP-1 0)
					(C 0)
					(IP-SUB (NP-OB1 *T*-1)
						(NP-SBJ (D the#the_adj) (N length#length_n))
						(MD will#will_v1)
						(VB bear#bear_v1)))))
		      (PUNC ,)
		      (PP (P so#so_adv)
			  (CP-ADV (C that#that_conj)
				  (IP-SUB (NP-SBJ-2 (EX there#there_adv))
					  (BEP be#be_v)
					  (NP-2 (ADV about#about_adv) (D a#a_adj) (CODE <font>) (N foot#foot_n))
					  (CODE <$$font>)
					  (PP (P above#above_adv)
					      (NP (N ground#ground_n)))))))
	  (PUNC ,)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB-3 (NP-SBJ (PRO they#they_pron))
					(MD will#will_v1)
					(VB shoot#shoot_v)
					(RP out#out_adv)
					(CODE <font>)
					(NP-OB1 (NS roots#root_n1))
					(CODE <$$font>)
					(ADVP (Q all#all_adj) (ADV along#along_adj2))
					(PUNC ,)
					(PP (ADV almost#almost_adv)
					    (P to#to_prep)
					    (NP (D the#the_adj)
						(N top#top_n1)
						(PP (P of#of_prep)
						    (NP (D the#the_adj) (N ground#ground_n))))))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB=3 (TO to#to_prep)
					       (VB spread#spread_v)
					       (NP-OB1 (PRO$ their#their_adj) (CODE <font>) (NS roots#root_n1))
					       (CODE <$$font>)
					       (PP (P in#in_prep)
						   (NP (D the#the_adj) (ADJ good#good_adj) (N Soil#soil_n1))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,72.287))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P by#by_prep)
	      (IP-PPL (VAG setting#set_v1)
		      (NP-OB1 (PRO them#them_pron))
		      (ADVP (NP-MSR (Q+N something#something_n))
			    (ADV deep#deep_adv))))
	  (NP-SBJ (PRO they#they_pron))
	  (BEP are#be_v)
	  (PP (P in#in_prep)
	      (NP (QR less#less_adj)
		  (N danger#danger_n)
		  (PP (P of#of_prep)
		      (NP (N dying#dying_n1)))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,72.288))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D this#this_pron))
	  (VBP prevents#prevent_v)
	  (NP-OB1 (D the#the_adj)
		  (N trouble#trouble_n)
		  (PP (P of#of_prep)
		      (IP-PPL (VAG covering#cover_v1)
			      (NP-OB1 (D the#the_adj)
				      (N ground#ground_n)
				      (PP (P about#about_adv)
					  (NP (PRO them#them_pron))))
			      (PP (P with#with_prep)
				  (CODE <font>)
				  (NP (N Fearn#fern_n1) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (N Straw#straw_n1))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,72.289))

( (IP-MAT (IP-MAT-1 (CONJ and#and_conj1)
		    (PP (P by#by_prep)
			(NP (D this#this_pron) (NS means#mean_n3)))
		    (NP-ADV (N likewise#likewise_adv))
		    (NP-SBJ (PRO they#they_pron))
		    (MD will#will_v1)
		    (VB stand#stand_v)
		    (ADVP (D the#the_adj) (ADVR firmer#firm_adj))
		    (PP (P in#in_prep)
			(NP (D the#the_adj) (ADJ loose#loose_adj) (CODE <font>) (N Garden-land#SEE_garden_n)))
		    (CODE <$$font>)
		    (PUNC ,)
		    (PP (P for#for_prep)
			(CODE <font>)
			(IP-PPL (VAG graffing#graff_v1)
				(CODE <$$font>)
				(PP (P at#at_prep)
				    (NP (NP-MSR (D a#a_adj) (N$ years#year_n))
					(N end#end_n))))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (ADVP (ADVR better#better_adj))
			   (VB support#support_v)
			   (NP-OB1 (D a#a_adj) (CODE <font>) (ADJ spreading#spreading_adj) (N top#top_n1))
			   (CODE <$$font>)
			   (ADVP-TMP (ADV afterwards#afterwards_adv))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,72.290))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 5#five_v) (PUNC .))
  (ID LANGF-1696-E3-P2,72.291))

( (IP-MAT (CONJ But#but_prep)
	  (PP-LFD (P because#because_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ-1 (PRO it@#it_pron))
				  (BEP @'s#be_v)
				  (ADJP-PRD (ADJ hard#hard_adj))
				  (IP-INF-1 (TO to#to_prep)
					    (VB meet#meet_v)
					    (PP (P with#with_prep)
						(NP (ADJ great#great_adj)
						    (N plenty#plenty_n)
						    (PP (P of#of_prep)
							(NP (SUCH such#such_adj)
							    (CODE <font>)
							    (NS branches#branch_n)
							    (CODE <$$font>)
							    (PUNC ,)
							    (RRC (IP-INF (IP-INF-2 (ADVP (ADV thus#thus_adv))
										   (TO to#to_prep)
										   (BE be#be_v)
										   (VAN cut#cut_v))
									 (PUNC ,)
									 (CONJP (CONJ and#and_conj1)
										(IP-INF=2 (VAN set#set_v1)
											  (PP (P for#for_prep)
											      (CODE <font>)
											      (NP (NS stocks#stock_n1)))))))
							    (CODE <$$font>)
							    (PUNC ,)
							    (CP-REL (WNP-3 0)
								    (C that#that_conj)
								    (IP-SUB (NP-SBJ *T*-3)
									    (HVP have#have_v)
									    (CODE <font>)
									    (NP-OB1 (NS burrs#bur_n) (CODE <$$font>) (CONJ or#or_conj1) (CODE <font>) (NS knots#knot_n1))
									    (CODE <$$font>)
									    (PP (P upon#upon_prep)
										(NP (PRO them#them_pron)))))))))))))
	  (PUNC ;)
	  (CODE <font>)
	  (NP-SBJ (NS Planters#planter_n))
	  (CODE <$$font>)
	  (HVP have#have_v)
	  (PP-RSP (ADV+P therefore#therefore_adv))
	  (VBN found#find_v)
	  (RP out#out_adv)
	  (NP-OB1 (D a#a_adj)
		  (N way#way_n1)
		  (PUNC <paren>)
		  (CP-REL (WNP-4 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ-5 *T*-4)
				  (BEP is#be_v)
				  (VAN called#call_v)
				  (IP-SMC (NP-SBJ *-5)
					  (CODE <font>)
					  (NP-PRD (N Circumposition#circumposition_n)))))
		  (CODE <$$font>)
		  (PUNC <$$paren>)
		  (IP-INF (IP-INF (TO to#to_prep)
				  (VB bring#bring_v)
				  (NP-OB1 (D these#these_pron)
					  (CODE <font>)
					  (NS knots#knot_n1)
					  (CODE <$$font>)
					  (CONJP (CONJ or#or_conj1)
						 (CODE <font>)
						 (NX (NS burrs#bur_n)))
					  (CODE <$$font>)
					  (PP (P upon#upon_prep)
					      (CODE <font>)
					      (NP (NS Branches#branch_n)
						  (CODE <$$font>)
						  (PUNC ,)
						  (CP-REL (WNP-6 0)
							  (C that#that_conj)
							  (IP-SUB (NP-SBJ *T*-6)
								  (HVD had#have_v)
								  (NP-OB1 (PRO them#them_pron))
								  (NEG not#not_adv)
								  (ADVP-TMP (ADV before#before_adv))))))))
			  (PUNC ,)
			  (CONJP (CONJ and#and_conj1)
				 (IP-INF (TO to#to_prep)
					 (VB (VB mend#mend_v) (CONJ and#and_conj1) (VB improve#improve_v2))
					 (NP-OB1 (D those#those_pron)
						 (CP-REL (WNP-7 0)
							 (C that#that_conj)
							 (IP-SUB (NP-SBJ *T*-7)
								 (ADVP-TMP (ADV before#before_adv))
								 (HVD had#have_v)
								 (NP-OB1 (PRO them#them_pron)))))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,72.292))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj)
		  (N way#way_n1)
		  (PP (P of#of_prep)
		      (NP (PRO it#it_pron))))
	  (BEP is#be_v)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-SBJ *T*-1)
			      (VBP followeth#follow_v))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,72.293))

( (CODE <P_73>))

( (IP-IMP (IP-IMP (NP-TMP (ADV About#about_adv)
			  (D the#the_adj)
			  (N beginning#beginning_n)
			  (PP (P of#of_prep)
			      (CODE <font>)
			      (NP (NPR February#NA)
				  (CODE <$$font>)
				  (ADVP-TMP (ADVS next#next_adj)
					    (PP (P before#before_adv)
						(CP-ADV (C 0)
							(IP-SUB (NP-SBJ (PRO you#you_pron))
								(VBP design#design_v)
								(IP-INF (TO to#to_prep)
									(VB cut#cut_v)
									(NP-OB1 (D these#these_pron) (CODE <font>) (NS stems#stem_n1))))))))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (PP (ADV directly#directly_adv)
		      (P above#above_adv)
		      (NP (D the#the_adj)
			  (N place#place_n1)
			  (CP-REL (WNP-1 0)
				  (C 0)
				  (IP-SUB (NP-SBJ (PRO you#you_pron))
					  (VBP intend#intend_v)
					  (IP-INF (TO to#to_prep)
						  (VB cut#cut_v)
						  (NP-OB1 (PRO them#them_pron))
						  (RP off#off_adv)
						  (PP (P at#at_prep)
						      (NP *T*-1)))))))
		  (PUNC ,)
		  (PP (P for#for_prep)
		      (NP (ADV about#about_adv)
			  (D a#a_adj)
			  (CODE <font>)
			  (N foot#foot_n)
			  (CODE <$$font>)
			  (PP (P in#in_prep)
			      (NP (N length#length_n)))))
		  (PUNC ,)
		  (VBI fasten#fasten_v)
		  (PP (P about#about_adv)
		      (NP (PRO them#them_pron)))
		  (NP-OB1 (Q some#some_pron)
			  (N Earth#earth_n1)
			  (PP (P in#in_prep)
			      (NP (D an#a_adj)
				  (CODE <font>)
				  (ADJ old#old_adj)
				  (N Hat#hat_n)
				  (CODE <$$font>)
				  (PUNC ,)
				  (CONJP (CONJ or#or_conj1)
					 (CODE <font>)
					 (NX (N Boot#boot_n3)))
				  (CODE <$$font>)
				  (PUNC ,)
				  (CONJP (CONJ or#or_conj1)
					 (CODE <font>)
					 (NX (N Bag#bag_n)
					     (CODE <$$font>)
					     (PUNC ,)
					     (RRC (VAN made#make_v1)
						  (PP (P of#of_prep)
						      (NP (Q some#some_pron) (ADJ strong#strong_adj) (N Cloth#cloth_n))))))))))
	  (PUNC :)
	  (CONJP (CONJ And#and_conj1)
		 (IP-MAT (PP (P in#in_prep)
			     (NP (D that#that_pron1) (N Earth#earth_n1)))
			 (NP-SBJ (PRO they#they_pron))
			 (MD will#will_v1)
			 (HV have#have_v)
			 (VBN put#put_v)
			 (ADVP (ADV forth#forth_adv))
			 (NP-OB1 (NS Roots#root_n1))
			 (PP (P against#against_prep)
			     (NP (D the#the_adj)
				 (CODE <font>)
				 (NPR October#NA)
				 (CODE <$$font>)
				 (RRC (VAG following#follow_v))))
			 (PUNC ,)
			 (PP (P when#when_adv)
			     (CP-ADV (C 0)
				     (IP-SUB (NP-SBJ (PRO you#you_pron))
					     (BEP are#be_v)
					     (IP-INF (TO to#to_prep)
						     (VB cut#cut_v)
						     (NP-OB1 (PRO them#them_pron))
						     (RP off#off_adv)
						     (IP-INF-PRP (TO to#to_prep)
								 (VB set#set_v1)
								 (NP-OB1 (PRO them#them_pron)))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,73.295))

( (IP-MAT (CONJ Or#or_conj1)
	  (PUNC <paren>)
	  (IP-MAT-1 (NP-ADV (CP-FRL (WNP-2 (WPRO which#which_adj))
				    (C 0)
				    (IP-SUB (NP-SBJ *T*-2)
					    (BEP is#be_v)
					    (NP-PRD (D a#a_adj)
						    (ADJP (ADJR quicker#quick_adj) (CONJ and#and_conj1) (ADJR readier#ready_adj))
						    (N way#way_n1)))))
		    (PUNC <$$paren>)
		    (NP-SBJ (PRO you#you_pron))
		    (MD may#may_v1)
		    (VB dawb#daub_v)
		    (NP-OB1 (Q some#some_pron)
			    (CODE <font>)
			    (ADJ wet#wet_adj)
			    (N Earth#earth_n1)
			    (CODE <$$font>)
			    (CONJP (CONJ or#or_conj1)
				   (CODE <font>)
				   (NX (N Clay#clay_n))))
		    (CODE <$$font>)
		    (PP (P about#about_adv)
			(NP (D the#the_adj) (N place#place_n1))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (VB wrap#wrap_v)
			   (NP-OB1 (D a#a_adj) (CODE <font>) (N Hay-band#hay-band_n))
			   (CODE <$$font>)
			   (PP (P about#about_adv)
			       (NP (PRO it#it_pron)))
			   (PUNC ,)
			   (IP-PPL (IP-PPL (VAG putting#put_v)
					   (NP-OB1 (Q some#some_pron) (ADJ moist#moist_adj) (N Earth#earth_n1))
					   (NP-ADV (N likewise#likewise_adv))
					   (PP (P betwixt#betwixt_prep)
					       (NP (D the#the_adj)
						   (CODE <font>)
						   (NS rounds#round_n1)
						   (CODE <$$font>)
						   (PP (P of#of_prep)
						       (NP (D the#the_adj) (N band#band_n1))))))
				   (PUNC ,)
				   (CONJP (CONJ and#and_conj1)
					  (IP-PPL (ADVP-TMP (ADV then#then_adv))
						  (VAG running#run_v)
						  (NP-OB1 (PRO it#it_pron))
						  (RP about#about_adv)
						  (ADVP (ADV again#again_adv))
						  (PP (P over#over_prep)
						      (NP (D the#the_adj)
							  (NS spaces#space_n1)
							  (PP (P betwixt#betwixt_prep)
							      (NP (D those#those_pron)
								  (ADJ first#first_adj)
								  (CODE <font>)
								  (NS rounds#round_n1)
								  (CODE <$$font>)
								  (PP (P of#of_prep)
								      (NP (D the#the_adj) (CODE <font>) (N Hay-band#hay-band_n)))))))))
				   (CODE <$$font>)
				   (CONJP (CONJ and#and_conj1)
					  (IP-PPL (VAG making#make_v1)
						  (IP-SMC (ADJP-PRD (ADJ fast#fast_adj))
							  (NP-SBJ (D the#the_adj)
								  (NS ends#end_n)
								  (PP (P of#of_prep)
								      (NP (PRO it#it_pron))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,73.296))

( (IP-IMP (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N stem#stem_n1))
			      (CODE <$$font>)
			      (HVP have#have_v)
			      (NP-OB1 (Q no#no_adj) (CODE <font>) (N burr#bur_n))
			      (CODE <$$font>)
			      (PP (P before#before_adv)
				  (NP (PRO you#you_pron))))))
	  (VBI go#go_v)
	  (NP-ADV (Q either#either_pron)
		  (PP (P of#of_prep)
		      (NP (D these#these_pron) (NS ways#way_n1))))
	  (PP (P to#to_prep)
	      (NP (N work#work_n)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,73.297))

( (IP-IMP (ADVP-TMP (ADV then#then_adv))
	  (ADVP-TMP (ADV first#first_adj))
	  (VBI take#take_v)
	  (RP off#off_adv)
	  (ADVP-LOC (ADV here#here_adv) (CONJ and#and_conj1) (ADV there#there_adv))
	  (NP-OB1 (D a#a_adj)
		  (ADJ little#little_adj)
		  (CODE <font>)
		  (N slice#slice_n1)
		  (CODE <$$font>)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (N Bark#bark_n1)))
		  (CODE <$$font>)
		  (ADJP (NP-MSR (ADV about#about_adv) (D an#a_adj) (CODE <font>) (N inch#inch_n1))
			(CODE <$$font>)
			(ADJ long#long_adj1)))
	  (PP (ADV round#round_adv)
	      (P about#about_adv)
	      (NP (PRO it#it_pron)))
	  (ADJP-LOC (ADJ near#near_adj)
		    (NP (D the#the_adj)
			(N middle#middle_adj)
			(PP (P of#of_prep)
			    (NP (D the#the_adj)
				(N place#place_n1)
				(CP-EOP (WNP-1 0)
					(IP-INF (NP-SBJ *T*-1)
						(TO to#to_prep)
						(BE be#be_v)
						(VAN covered#cover_v1)))))))
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-2 0)
		      (C 0)
		      (IP-SUB (NP-SBJ *T*-2)
			      (HVP hath#have_v)
			      (BEN been#be_v)
			      (VAN directed#direct_v))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,73.298))

( (IP-MAT (NP-SBJ (Q Some#some_pron))
	  (VBP direct#direct_v)
	  (PUNC ,)
	  (CP-THT (C That#that_conj)
		  (IP-SUB (PP (P before#before_adv)
			      (NP (D this#this_pron)
				  (N application#application_n)
				  (PP (P of#of_prep)
				      (NP (D the#the_adj) (N Earth#earth_n1)))))
			  (PUNC ,)
			  (NP-SBJ (NP-MSR (ADV about#about_adv) (D an#a_adj) (CODE <font>) (N inch#inch_n1))
				  (CODE <$$font>)
				  (N breadth#breadth_n)
				  (PP (P of#of_prep)
				      (NP (D the#the_adj) (CODE <font>) (N Bark#bark_n1))))
			  (CODE <$$font>)
			  (BEP be#be_v)
			  (VAN taken#take_v)
			  (RP off#off_adv)
			  (PUNC ,)
			  (PP (ADV round#round_adv)
			      (P about#about_adv)
			      (NP (D the#the_adj)
				  (N part#part_n1)
				  (PP (P of#of_prep)
				      (NP (D the#the_adj)
					  (CODE <font>)
					  (N branch#branch_n)
					  (CODE <$$font>)
					  (PUNC ,)
					  (CP-REL (WNP-1 0)
						  (C that#that_conj)
						  (IP-SUB (NP-SBJ *T*-1)
							  (BEP is#be_v)
							  (IP-INF (TO to#to_prep)
								  (BE be#be_v)
								  (VAN surrounded#surround_v)
								  (PP (P with#with_prep)
								      (NP (D the#the_adj) (N Earth#earth_n1))))))))))
			  (PUNC ,)
			  (CP-ADV (C that#that_conj)
				  (CODE <font>)
				  (IP-SUB (NP-SBJ (NS roots#root_n1))
					  (CODE <$$font>)
					  (MD may#may_v1)
					  (VB shoot#shoot_v)
					  (RP out#out_adv)
					  (PP (P in#in_prep)
					      (NP (ADJR greater#great_adj) (N quantity#quantity_n)))
					  (PUNC ,)
					  (PP (P by#by_prep)
					      (IP-PPL (VAG coming#come_v)
						      (CODE <P_74>)
						      (RP out#out_adv)
						      (PP (PP (P in#in_prep)
							      (NP (D the#the_adj)
								  (ADJ upper#upper_adj)
								  (CODE <font>)
								  (NS skirts#skirt_n)
								  (CODE <$$font>)
								  (PP (P of#of_prep)
								      (NP (D that#that_pron1) (CODE <font>) (N circle#circle_n)))))
							  (CODE <$$font>)
							  (PUNC ,)
							  (ADVP (ADVR as#as_adv)
								(ADV well#well_adv)
								(PP (P as#as_adv)
								    (PP (P in#in_prep)
									(NP (D the#the_adj) (ADJ lower#lower_adj))))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,74.299))

( (IP-MAT (CONJ but#but_prep)
	  (IP-MAT-1 (NP-SBJ (D this#this_pron))
		    (BEP is#be_v)
		    (NP-PRD (FP but#but_prep) (D a#a_adj) (N Crotchet#crotchet_n1)))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (VAN grounded#ground_v)
			   (PUNC <paren>)
			   (PP-PRN (P as#as_adv)
				   (CP-ADV (WNP-2 0)
					   (C 0)
					   (IP-SUB (NP-OB1 *T*-2)
						   (NP-SBJ (PRO$ my#my_adj)
							   (N Lord#lord_n)
							   (CODE <font>)
							   (NP-PRN (NPR Bacon#NA)))
						   (CODE <$$font>)
						   (HVP hath#have_v)
						   (ADVP (ADV truly#truly_adv))
						   (VBN observed#observe_v))))
			   (PUNC <$$paren>)
			   (PP (P upon#upon_prep)
			       (NP (D the#the_adj)
				   (N opinion#opinion_n)
				   (PP (P of#of_prep)
				       (NP (D the#the_adj)
					   (CODE <font>)
					   (N Descension#descension_n)
					   (CODE <$$font>)
					   (PP (P of#of_prep)
					       (NP (D the#the_adj) (CODE <font>) (N Sap#sap_n1)))))))
			   (CODE <$$font>)
			   (PUNC ;)
			   (PP (P whereas#whereas_adv)
			       (CP-ADV (C 0)
				       (IP-SUB (PP (P+N indeed#indeed_adv))
					       (NP-SBJ-3 (EX there#there_adv))
					       (BEP is#be_v)
					       (NP-3 (Q no#no_adj) (SUCH such#such_adj) (N thing#thing_n1)))))))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,74.300))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (D the#the_adj)
		  (ADJ whole#whole_adj)
		  (N mass#mass_n2)
		  (PP (P of#of_prep)
		      (CODE <font>)
		      (NP (N Sap#sap_n1))))
	  (CODE <$$font>)
	  (BEP is#be_v)
	  (ADVP-TMP (ADV always#always_adv))
	  (VAG ascending#ascend_v)
	  (PUNC ;)
	  (PP (P in#in_prep)
	      (NP (ADJR lesser#lesser_adj)
		  (N quantity#quantity_n)
		  (PP (P in#in_prep)
		      (NP (D the#the_adj) (N Winter#winter_n1)))))
	  (PUNC ,)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB-1 (NP-SBJ (D the#the_adj) (N Tree#tree_n))
					(BEP is#be_v)
					(ADVP-TMP (ADV then#then_adv))
					(IP-INF (FP only#only_adj) (TO to#to_prep) (BE be#be_v) (VAN nourished#nourish_v)))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB=1 (VAN kept#keep_v)
					       (PP (P+N alive#alive_adj))))
			      (PUNC ,)
			      (CP-CAR (WPP-2 (P to#to_prep)
					     (WNP (WD which#which_adj) (N end#end_n)))
				      (C 0)
				      (IP-SUB (IP-SUB-3 (NP-SBJ (D a#a_adj) (ADJ small#small_adj) (N supply#supply_n))
							(BEP is#be_v)
							(ADJP-PRD (ADJ sufficient#sufficient_adj)
								  (PP *T*-2)))
					      (PUNC ,)
					      (CONJP (CONJ and#and_conj1)
						     (IP-SUB=3 (ADVP (ADV yet#yet_adv))
							       (ADJP-PRD (ADJ necessary#necessary_adj)))))))))
	  (PUNC ;)
	  (FRAG (CONJ and#and_conj1)
		(PP (P in#in_prep)
		    (NP (ADJR greater#great_adj)
			(N plenty#plenty_n)
			(PP (P than#than_conj)
			    (CODE {COM:sic})
			    (NP (D the#the_adj) (N Summer#summer_n1)))))
		(PUNC ,)
		(IP-INF-PRP (TO to#to_prep)
			    (VB furnish#furnish_v)
			    (NP-OB1 (D the#the_adj) (N Tree#tree_n))
			    (PP (P with#with_prep)
				(NP (NP (NS leaves#leaf_n1))
				    (PUNC ,)
				    (CONJP (NP (N fruit#fruit_n)))
				    (PUNC ,)
				    (CONJP (CONJ and#and_conj1)
					   (NP (ADJ new#new_adj) (ADJ yearly#yearly_adj) (N growth#growth_n1)))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,74.301))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-SBJ (D the#the_adj)
		  (ADJ true#true_adj)
		  (N reason#reason_n1)
		  (CP-REL (WADVP-1 (WADV why#why_adv))
			  (C 0)
			  (IP-SUB (ADVP *T*-1)
				  (NP-SBJ (D the#the_adj)
					  (CODE <font>)
					  (NS leaves#leaf_n1)
					  (CODE <$$font>)
					  (CONJP (CONJ and#and_conj1)
						 (CODE <font>)
						 (NX (N fruit#fruit_n))))
				  (CODE <$$font>)
				  (VBP fall#fall_v)
				  (RP off#off_adv)
				  (PP (P towards#towards_prep)
				      (NP (N Winter#winter_n1))))))
	  (BEP is#be_v)
	  (PUNC ,)
	  (PP (PP (NEG not#not_adv)
		  (P because#because_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (D the#the_adj) (CODE <font>) (N sap#sap_n1))
				  (CODE <$$font>)
				  (VBP returns#return_v1)
				  (ADVP-DIR (ADV downward#downward_adv))
				  (PP (P from#from_prep)
				      (NP (PRO them#them_pron))))))
	      (PUNC ,)
	      (CONJP (CONJ but#but_prep)
		     (PP (P because#because_adv)
			 (CP-ADV (C 0)
				 (IP-SUB (IP-SUB (NP-SBJ (PRO they#they_pron))
						 (HVP have#have_v)
						 (VBN arrived#arrive_v)
						 (PP (P to#to_prep)
						     (NP (PRO$ their#their_adj) (ADJ full#full_adj) (N ripeness#ripeness_n))))
					 (PUNC ,)
					 (CONJP (CONJ and#and_conj1)
						(IP-SUB (NP-SBJ (D the#the_adj) (N Tree#tree_n))
							(VBP fails#fail_v)
							(PP (P by#by_prep)
							    (NP (NS degrees#degree_n)))
							(PUNC ,)
							(IP-INF (TO to#to_prep)
								(VB convey#convey_v1)
								(RP up#up_adv1)
								(NP-OB1 (QP (ADVR so#so_adv) (Q much#much_adj))
									(N Sap#sap_n1)
									(PP (P as#as_adv)
									    (CP-CMP (WNP-2 0)
										    (C 0)
										    (IP-SUB (NP-OB1 *T*-2)
											    (NP-SBJ (PRO it#it_pron))
											    (DOD did#do_v)
											    (PP (P in#in_prep)
												(NP (D the#the_adj) (N Summer#summer_n1)))
											    (PP (P to#to_prep)
												(NP (PRO them#them_pron)))
											    (PUNC ,)
											    (IP-INF-PRP (TO to#to_prep)
													(VB produce#produce_v)
													(NP-OB1 (ADJ fresh#fresh_adj) (ONES ones#one_adj)))))))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,74.302))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (ADV+P therefore#therefore_adv))
	  (ADVP (ADV consequently#consequently_adv))
	  (NP-SBJ (D that@#that_pron1)
		  (IP-INF *ICH*-1))
	  (BEP @'s#be_v)
	  (NP-PRD (D an#a_adj) (ADJ idle#idle_adj) (N mistake#mistake_n))
	  (ADVP (ADV too#too_adv))
	  (PUNC ,)
	  (IP-INF-1 (TO to#to_prep)
		    (VB think#think_v2)
		    (CP-THT (C that#that_conj)
			    (IP-SUB (NP-SBJ (D the#the_adj)
					    (CODE <font>)
					    (N sap#sap_n1)
					    (CODE <$$font>)
					    (CONJP (CONJ or#or_conj1)
						   (CODE <font>)
						   (NX (N juice#juice_n))))
				    (CODE <$$font>)
				    (PP (P in#in_prep)
					(NP (D the#the_adj) (N Winter#winter_n1)))
				    (PUNC ,)
				    (BEP is#be_v)
				    (VAN laid#lay_v1)
				    (RP up#up_adv1)
				    (PP (P in#in_prep)
					(NP (D the#the_adj)
					    (NS Roots#root_n1)
					    (PP (P as#as_adv)
						(NP (D a#a_adj) (CODE <font>) (N repository#repository_n))))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-2 0)
		      (C 0)
		      (IP-SUB (NP-SBJ *T*-2)
			      (VBP appears#appear_v)
			      (ADVP (ADV plainly#plainly_adv1))
			      (PUNC ,)
			      (PP (P inasmuch#inasmuch_adv)
				  (PP (P as#as_adv)
				      (CP-ADV (C 0)
					      (IP-SUB (NP-SBJ-3 (PRO they#they_pron))
						      (BEP are#be_v)
						      (ADVP-TMP (ADV ever#ever_adv))
						      (VAN found#find_v)
						      (IP-SMC (NP-SBJ *-3)
							      (ADJP-PRD (ADJR dryer#dry_adj)
									(PP (P in#in_prep)
									    (NP (D the#the_adj) (N Winter#winter_n1)))
									(PP (P than#than_conj)
									    (PP (P in#in_prep)
										(NP (D the#the_adj) (N Summer#summer_n1)))))))))))))
	  (PUNC .)
	  (PP (P So#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (PP (P upon#upon_prep)
				  (NP (D the#the_adj) (N whole#whole_adj)))
			      (PUNC ,)
			      (NP-SBJ (D this#this_pron)
				      (IP-PPL (VAG taking#take_v)
					      (NP-OB1 (D the#the_adj) (CODE <font>) (N Bark#bark_n1))
					      (CODE <$$font>)
					      (RP off#off_adv)
					      (PP (P round#round_adv)
						  (NP (D the#the_adj) (CODE <font>) (N branch#branch_n)))))
			      (CODE <$$font>)
			      (PUNC ,)
			      (BEP is#be_v)
			      (ADJP-PRD (ADJ good#good_adj)
					(PP (P for#for_prep)
					    (NP (Q+N nothing#nothing_pron)
						(PUNC ,)
						(PP (P but#but_prep)
						    (IP-INF (TO to#to_prep)
							    (VB endanger#endanger_v)
							    (NP-OB1 (PRO it#it_pron))
							    (PUNC ,)
							    (PP (P by#by_prep)
								(IP-PPL (VAG intercepting#intercept_v)
									(CODE <P_75>)
									(NP-OB1 (D the#the_adj)
										(CODE <font>)
										(N juice#juice_n)
										(CODE <$$font>)
										(CONJP (CONJ or#or_conj1)
										       (CODE <font>)
										       (NX (N sap#sap_n1)))
										(CODE <$$font>)
										(PUNC ,)
										(CP-REL (WNP-4 (WPRO which#which_adj))
											(C 0)
											(IP-SUB (NP-SBJ *T*-4)
												(VBP rises#rise_v)
												(PP (P in#in_prep)
												    (NP (ADJS greatest#great_adj) (N quantity#quantity_n)))
												(PP (P betwixt#betwixt_prep)
												    (NP (NP (D the#the_adj) (CODE <font>) (N bark#bark_n1))
													(CODE <$$font>)
													(CONJP (CONJ and#and_conj1)
													       (NP (D the#the_adj) (CODE <font>) (N wood#wood_n1))))))))))))))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,75.303))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P if#if_conj)
	      (PUNC ,)
	      (CP-ADV (C 0)
		      (IP-SUB (PP (P as#as_adv)
				  (CP-ADV (WNP-1 0)
					  (C 0)
					  (IP-SUB (NP-SBJ *T*-1)
						  (ADVP-TMP (ADV before#before_adv))
						  (BED was#be_v)
						  (VAN hinted#hint_v))))
			      (PUNC ,)
			      (NP-SBJ (PRO you#you_pron))
			      (VBP take#take_v)
			      (NP-OB1 (Q some#some_pron)
				      (ADJ little#little_adj)
				      (CODE <font>)
				      (NS slices#slice_n1)
				      (CODE <$$font>)
				      (PP (P of#of_prep)
					  (NP (D the#the_adj) (CODE <font>) (N bark#bark_n1))))
			      (CODE <$$font>)
			      (RP off#off_adv)
			      (PP (P round#round_adv)
				  (NP (D the#the_adj) (CODE <font>) (N branch#branch_n)))
			      (CODE <$$font>)
			      (PUNC ,)
			      (ADVP-LOC (ADV here#here_adv) (CONJ and#and_conj1) (ADV there#there_adv))
			      (PUNC ,)
			      (IP-PPL (VAG leaving#leave_v1)
				      (NP-OB1 (D the#the_adj) (N Bark#bark_n1))
				      (ADJP-SPR (ADJ intire#entire_adj))
				      (PP (P in#in_prep)
					  (NP (Q some#some_pron) (NS places#place_n1)))))))
	  (PUNC ,)
	  (NP-SBJ (D this#this_pron))
	  (MD may#may_v1)
	  (PUNC ,)
	  (PP (P by#by_prep)
	      (IP-PPL (VAG checking#check_v1)
		      (NP-OB1 (D the#the_adj) (N Sap#sap_n1))))
	  (PUNC ,)
	  (VB cause#cause_v1)
	  (IP-INF (NP-SBJ (PRO it#it_pron))
		  (ADVP (QP (D the#the_adj) (QR more#more_adj))
			(ADV abundantly#abundantly_adv))
		  (TO to#to_prep)
		  (VB pass#pass_v)
		  (PP (P into#into_prep)
		      (CODE <font>)
		      (NP (NS Roots#root_n1))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,75.304))

( (IP-MAT (CONJ But#but_prep)
	  (IP-INF-PRP (TO to#to_prep)
		      (VB proceed#proceed_v)
		      (PP (P to#to_prep)
			  (NP (D the#the_adj)
			      (N business#business_n)
			      (PP (P in#in_prep)
				  (NP (N hand#hand_n))))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (HVP have#have_v)
	  (VBN seen#see_v)
	  (NP-OB1 (D the#the_adj)
		  (N way#way_n1)
		  (PP (P of#of_prep)
		      (IP-PPL (VAG preparing#prepare_v)
			      (CODE <font>)
			      (NP-OB1 (NS cuttings#cutting_n))
			      (CODE <$$font>)
			      (PP (P by#by_prep)
				  (CODE <font>)
				  (NP (N circumposition#circumposition_n))))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,75.305))

( (IP-MAT (CONJ and#and_conj1)
	  (PP-LFD (P though#though_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (Q some#some_pron))
				  (MD will#will_v1)
				  (VB pretend#pretend_v)
				  (IP-INF (TO to#to_prep)
					  (VB raise#raise_v1)
					  (NP-OB1 (NS Trees#tree_n)
						  (PP (P of#of_prep)
						      (NP (Q any#any_adj) (N kind#kind_n))))
					  (PP (P by#by_prep)
					      (NP (D the#the_adj)
						  (N use#use_n)
						  (PP (P of#of_prep)
						      (NP (PRO it#it_pron)))))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV yet#yet_adv))
	  (NP-SBJ-1 (PRO it@#it_pron))
	  (BEP @'s#be_v)
	  (ADJP-PRD (ADJ certain#certain_adj))
	  (CP-THT-1 (C 0)
		    (IP-SUB (NP-SBJ (PRO it#it_pron))
			    (VBP avails#avail_v)
			    (NEG not#not_adv)
			    (PUNC ,)
			    (PP (P but#but_prep)
				(PP (FP only#only_adj)
				    (P in#in_prep)
				    (NP (SUCH such#such_adj)
					(PP (P as#as_adv)
					    (CP-CMP (WNP-2 0)
						    (C 0)
						    (IP-SUB (NP-SBJ *T*-2)
							    (PP (P by#by_prep)
								(NP (D a#a_adj) (ADJ peculiar#peculiar_adj) (N property#property_n)))
							    (BEP are#be_v)
							    (ADJP-PRD (ADJ apt#apt_adj)
								      (IP-INF (TO to#to_prep)
									      (VB put#put_v)
									      (ADVP (ADV forth#forth_adv))
									      (CODE <font>)
									      (NP-OB1 (NS Roots#root_n1))
									      (CODE <$$font>)
									      (PUNC ,)
									      (IP-PPL (IP-PPL (BAG being#be_v) (VAN cut#cut_v) (RP off#off_adv))
										      (CONJP (CONJ and#and_conj1)
											     (IP-PPL (VAN set#set_v1)
												     (PP (P into#into_prep)
													 (NP (D the#the_adj) (N ground#ground_n))))))))))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,75.306))

( (IP-MAT (CONJ and#and_conj1)
	  (PUNC ,)
	  (NP-SBJ (D those#those_pron)
		  (RRC (RRC (ADVP (ADV generally#generally_adv))
			    (VAN known#know_v))
		       (PUNC ,)
		       (CONJP (CONJ and#and_conj1)
			      (RRC (VAN made#make_v1)
				   (NP-OB1 (N use#use_n))
				   (PP (P of#of_prep)
				       (NP *))
				   (NP-ADV (D this#this_pron) (N way#way_n1))))))
	  (PUNC ,)
	  (BEP are#be_v)
	  (NP-PRD (NP (D the#the_adj) (CODE <font>) (N Kentish-Codling#cNA))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (NP (D the#the_adj) (CODE <font>) (N Gennet-moil#genet-moyle_n)))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (NP (Q some#some_pron)
			     (NS sorts#sort_n2)
			     (PP (P of#of_prep)
				 (CODE <font>)
				 (NP (NS Sweet-Apples#SEE_sweet_adj) (CODE <$$font>) (PUNC ,) (CONJ and#and_conj1) (CODE <font>) (NS Bitter-sweets#bittersweet_n)))))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (NP (D the#the_adj) (CODE <font>) (N Quince-tree#quince-tree_n)))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (NP (D the#the_adj) (CODE <font>) (N Mulberry-tree#mulberry-tree_n)))
		  (CODE <$$font>)
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (NP (D the#the_adj) (CODE <font>) (N Paradise-Apple-tree#SEE_paradise_n))))
	  (CODE <$$font>)
	  (PUNC ;)
	  (CP-CAR (WNP-1 (WD which#which_adj) (ADJ last#last_adv))
		  (C 0)
		  (IP-SUB (NP-SBJ *T*-1)
			  (BEP is#be_v)
			  (NP-MSR (Q much#much_adj))
			  (VAN commended#commend_v)
			  (PP (P by#by_prep)
			      (NP (D the#the_adj) (ADJ skilful#skilful_adj) (NPR Mr.#NA) (CODE <font>) (NPR Rea#NA)))
			  (CODE <$$font>)
			  (PUNC ,)
			  (IP-INF (FOR for#for_prep)
				  (TO to#to_prep)
				  (VB raise#raise_v1)
				  (CODE <font>)
				  (NP-OB1 (NS Stocks#stock_n1))
				  (CODE <$$font>)
				  (PP (P for#for_prep)
				      (CODE <font>)
				      (NP (NS Dwarf-Apple-trees#cNA))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,75.307))

( (NP (CODE <font>) (N Sect.#section_n) (CODE <$$font>) (NUM 6#six_adj) (PUNC .))
  (ID LANGF-1696-E3-P2,75.308))

( (IP-MAT (NP-SBJ (D+OTHER Another#another_pron)
		  (N way#way_n1)
		  (IP-INF (TO to#to_prep)
			  (VB raise#raise_v1)
			  (CODE <font>)
			  (NP-OB1 (NS Stocks#stock_n1)
				  (CODE <$$font>)
				  (PP (P for#for_prep)
				      (CODE <font>)
				      (NP (N Dwarf#dwarf_n) (NS trees#tree_n))))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (BEP is#be_v)
	  (IP-INF (TO to#to_prep)
		  (VB cut#cut_v)
		  (RP down#down_adv)
		  (NP-OB1 (Q some#some_pron)
			  (ONE one#one_adj)
			  (N Tree#tree_n)
			  (PP (P of#of_prep)
			      (NP (Q little#little_adj) (N worth#worth_n1)))
			  (PUNC ,)
			  (PP (P of#of_prep)
			      (NP (SUCH such#such_adj)
				  (D a#a_adj)
				  (N kind#kind_n)
				  (PP (P as#as_adv)
				      (CP-CMP (WNP-1 0)
					      (C 0)
					      (IP-SUB (NP-SBJ (PRO you#you_pron))
						      (VBP want#want_v)
						      (CODE <font>)
						      (NP-OB1 (NS Stocks#stock_n1)
							      (CODE <$$font>)
							      (PP (P of#of_prep)
								  (NP *T*-1)))))))))
		  (ADJP-LOC (NP-MSR (NP (ADV about#about_adv) (D a#a_adj) (CODE <font>) (N foot#foot_n))
				    (CODE <$$font>)
				    (PUNC ,)
				    (CONJP (CONJ or#or_conj1)
					   (NP (QR more#more_adj))))
			    (PP (P from#from_prep)
				(NP (D the#the_adj) (N ground#ground_n)))))
	  (PUNC :))
  (ID LANGF-1696-E3-P2,75.309))

( (IP-MAT (NP-SBJ (D This#this_pron))
	  (MD will#will_v1)
	  (VB make#make_v1)
	  (IP-SMC (NP-SBJ (Q some#some_pron)
			  (NS kind#kind_n)
			  (PP (P of#of_prep)
			      (NP (NS Trees#tree_n))))
		  (ADJP-PRD (ADV very#very_adj)
			    (ADJ apt#apt_adj)
			    (IP-INF (TO to#to_prep)
				    (VB cast#cast_v)
				    (ADVP (ADV forth#forth_adv))
				    (CODE <P_76>)
				    (NP-OB1 (ADJP (ADV very#very_adj) (ADJ good#good_adj))
					    (CODE <font>)
					    (NS Suckers#sucker_n))
				    (CODE <$$font>)
				    (PP (P from#from_prep)
					(NP (D the#the_adj) (ADJ old#old_adj) (CODE <font>) (NS Roots#root_n1))))))
	  (CODE <$$font>)
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,76.310))

( (IP-MAT (IP-MAT-1 (NP-SBJ (SUCH such#such_adj)
			    (PP (P as#as_adv)
				(CP-CMP (WNP-2 0)
					(C 0)
					(IP-SUB (NP-SBJ *T*-2)
						(BEP are#be_v)
						(NP-PRD (NP-MSR (NUM two#two_adj) (NS years#year_n))
							(N growth#growth_n1))))))
		    (MD may#may_v1)
		    (BE be#be_v)
		    (CODE <font>)
		    (VAN transplanted#transplant_v))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CONJP (CONJ or#or_conj1)
		 (CODE <font>)
		 (IP-MAT=1 (VAN inoculated#inoculate_v)
			   (CODE <$$font>)
			   (ADVP-LOC (CP-FRL (WADVP-3 (WADV where#where_adv))
					     (C 0)
					     (IP-SUB (ADVP-LOC *T*-3)
						     (NP-SBJ (PRO they#they_pron))
						     (VBP stand#stand_v)
						     (PP (P before#before_adv)
							 (NP (N removal#removal_n))))))))
	  (PUNC ;))
  (ID LANGF-1696-E3-P2,76.311))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj)
		  (N Stump#stump_n1)
		  (PP (P above#above_adv)
		      (NP (N ground#ground_n))))
	  (PUNC ,)
	  (MD will#will_v1)
	  (ALSO also#also_adv)
	  (VB put#put_v)
	  (ADVP (ADV forth#forth_adv))
	  (NP-OB1 (N abundance#abundance_n)
		  (PP (P of#of_prep)
		      (NP (ADJ young#young_adj) (NS Shoots#shoot_n1))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,76.312))

( (IP-IMP (IP-IMP (PP (P After#after_adv)
		      (CP-ADV (C 0)
			      (IP-SUB (NP-SBJ (D these#these_pron) (ADJ young#young_adj) (CODE <font>) (NS shoots#shoot_n1))
				      (CODE <$$font>)
				      (HVP have#have_v)
				      (VBN grown#grow_v)
				      (PP (RP out#out_adv)
					  (P of#of_prep)
					  (NP (D the#the_adj) (N stump#stump_n1)))
				      (NP-MSR (ONE one#one_adj) (N year#year_n)))))
		  (PUNC ,)
		  (VBI cast#cast_v)
		  (CODE <font>)
		  (NP-OB1 (N Mold#mould_n1) (CODE <$$font>) (PUNC ,) (CONJ or#or_conj1) (CODE <font>) (N Earth#earth_n1))
		  (CODE <$$font>)
		  (PP (P about#about_adv)
		      (NP (PRO them#them_pron)))
		  (PUNC ,)
		  (NP-MSR (D a#a_adj) (ADJ good#good_adj) (N height#height_n))
		  (PUNC ;)
		  (PP (P so#so_adv)
		      (CP-ADV (C that#that_conj)
			      (IP-SUB (NP-SBJ (PRO you#you_pron))
				      (VBP cover#cover_v1)
				      (NEG not#not_adv)
				      (NP-OB1 (D the#the_adj)
					      (CODE <font>)
					      (NS tops#top_n1)
					      (CODE <$$font>)
					      (PP (P of#of_prep)
						  (NP (Q any#any_adj)
						      (PP (P of#of_prep)
							  (NP (PRO them#them_pron)))))))))
		  (PUNC ;)
		  (CP-CAR (WADVP-1 (WADV where#where_adv))
			  (IP-IMP (VBI let#let_v1)
				  (IP-INF (ADVP-LOC *T*-1)
					  (NP-SBJ (PRO them#them_pron))
					  (VB grow#grow_v)
					  (NP-MSR (NUM two#two_adj)
						  (NS years#year_n)
						  (QP (QR more#more_adj)))))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT (NP-SBJ (PRO they#they_pron))
			 (MD will#will_v1)
			 (BE be#be_v)
			 (ADVP (ADV well#well_adv))
			 (VAN rooted#root_v1)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,76.313))

( (IP-IMP (ADVP-TMP (ADV then#then_adv))
	  (VBI cut#cut_v)
	  (NP-OB1 (PRO them#them_pron))
	  (RP off#off_adv)
	  (PP (P from#from_prep)
	      (NP (D the#the_adj) (ADJ old#old_adj) (CODE <font>) (N Stock#stock_n1)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (PUNC <paren>)
	  (CP-CAR (WNP-1 (WPRO which#which_adj))
		  (C 0)
		  (IP-SUB (NP-SBJ *T*-1)
			  (PP (P after#after_adv) (D that#that_pron1))
			  (MD may#may_v1)
			  (VB yield#yield_v)
			  (NP-OB1 (ADJ fresh#fresh_adj) (ONES ones#one_adj))
			  (ADVP (ADV again#again_adv))))
	  (PUNC <$$paren>))
  (ID LANGF-1696-E3-P2,76.314))

( (IP-IMP (CONJ and#and_conj1)
	  (VBI set#set_v1)
	  (NP-OB1 (D the#the_adj)
		  (CODE <font>)
		  (NS shoots#shoot_n1)
		  (CODE <$$font>)
		  (CP-REL (WNP-1 0)
			  (C 0)
			  (IP-SUB (NP-OB1 *T*-1)
				  (NP-SBJ (PRO you#you_pron))
				  (VBP take#take_v)
				  (RP off#off_adv))))
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-2 0)
		      (C 0)
		      (IP-SUB (NP-SBJ *T*-2)
			      (ADVP-TMP (ADV before#before_adv))
			      (HVP hath#have_v)
			      (BEN been#be_v)
			      (VAN directed#direct_v)
			      (PP (P about#about_adv)
				  (NP (NS Cuttings#cutting_n))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,76.315))

( (IP-MAT (NP-SBJ (D These#these_pron))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (NP-MSR (NUMP (ADV about#about_adv) (NUM three#three_adj))
			    (NS years#year_n))
		    (ADJR longer#long_adj1)
		    (PP (P before#before_adv)
			(CP-ADV (C 0)
				(IP-SUB (NP-SBJ (PRO they#they_pron))
					(BEP be#be_v)
					(ADJP-PRD (ADJ ready#ready_adj)
						  (CP-TMC (WNP-1 0)
							  (IP-INF (NP-OB1 *T*-1)
								  (TO to#to_prep)
								  (CODE <font>)
								  (VB graff#graff_v1)))))))
		    (CODE <$$font>)
		    (PP (P than#than_conj)
			(CODE <font>)
			(NP (NS Cuttings#cutting_n))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,76.316))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ *con*)
	  (MD will#will_v1)
	  (BE be#be_v)
	  (NP-PRD (ADJP (ADV very#very_adj) (ADJ good#good_adj))
		  (ADJ young#young_adj)
		  (ADJ fresh#fresh_adj)
		  (CODE <font>)
		  (NS Stocks#stock_n1))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,76.317))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *pro*)
	  (BEP is#be_v)
	  (NP-PRD (D a#a_adj)
		  (ADJ good#good_adj)
		  (N way#way_n1)
		  (IP-INF (TO to#to_prep)
			  (VB raise#raise_v1)
			  (CODE <font>)
			  (NP-OB1 (NS Stocks#stock_n1)
				  (CODE <$$font>)
				  (PP (P of#of_prep)
				      (NP (D the#the_adj) (CODE <font>) (N Quince-tree#quince-tree_n))))
			  (CODE <$$font>)
			  (PP (P for#for_prep)
			      (CODE <font>)
			      (NP (NS Pears#pear_n)))))
	  (CODE <$$font>)
	  (PUNC ;)
	  (PP (P because#because_adv)
	      (CP-ADV (C 0)
		      (CODE <font>)
		      (IP-SUB (NP-SBJ (NS Quince-trees#quince-tree_n))
			      (CODE <$$font>)
			      (ADVP (ADV generally#generally_adv))
			      (VBP grow#grow_v)
			      (ADJP-PRD (ADVR so#so_adv)
					(ADJ crooked#crooked_adj)
					(CONJP (CONJ and#and_conj1)
					       (ADJX (ADJ irregular#irregular_adj)))
					(PUNC ,)
					(CP-DEG (C that#that_conj)
						(IP-SUB (NP-SBJ-1 (PRO it@#it_pron))
							(BEP @'s#be_v)
							(ADJP-PRD (ADJ difficult#difficult_adj))
							(IP-INF-1 (TO to#to_prep)
								  (VB procure#procure_v)
								  (NP-OB1 (Q any#any_adj)
									  (ADJ considerable#considerable_adj)
									  (N quantity#quantity_n)
									  (PP (P of#of_prep)
									      (NP (PRO them#them_pron))))
								  (PP (P by#by_prep)
								      (CODE <font>)
								      (NP (NS Cuttings#cutting_n))))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,76.318))

( (IP-MAT (NP-SBJ (PRO You#you_pron))
	  (MD may#may_v1)
	  (VB gain#gain_v2)
	  (NP-OB1 (N time#time_n)
		  (PP (P in#in_prep)
		      (IP-PPL (VAG raising#raise_v1)
			      (CODE <font>)
			      (NP-OB1 (NS Trees#tree_n))
			      (CODE <$$font>)
			      (NP-ADV (D this#this_pron) (N way#way_n1)))))
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (NP-SBJ (PRO you#you_pron))
				      (VBP inoculate#inoculate_v)
				      (NP-OB1 (D these#these_pron)
					      (ADJ young#young_adj)
					      (CODE <font>)
					      (NS suckers#sucker_n)
					      (CODE <$$font>)
					      (CONJP (CONJ or#or_conj1)
						     (CODE <font>)
						     (NX (NS shoots#shoot_n1))))
				      (CODE <$$font>)
				      (ADVP-LOC (CP-FRL (WADVP-1 (WADV where#where_adv))
							(C 0)
							(IP-SUB (ADVP-LOC *T*-1)
								(NP-SBJ (PRO they#they_pron))
								(VBP stand#stand_v))))
				      (PUNC ,)
				      (ADVP-TMP (ADVR as#as_adv)
						(ADV soon#soon_adv)
						(PP (P as#as_adv)
						    (CP-CMP (WADVP-2 0)
							    (C 0)
							    (IP-SUB (ADVP-TMP *T*-2)
								    (NP-SBJ (PRO they#they_pron))
								    (BEP are#be_v)
								    (ADJP-PRD (ADJ big#big_adj)
									      (ADVP (ADVR enough#enough_adj))))))))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB (NP-SBJ *con*)
					     (VBP let#let_v1)
					     (IP-INF (NP-SBJ (PRO them#them_pron))
						     (VB continue#continue_v)
						     (CODE <P_77>)
						     (ADVP-LOC (ADV there#there_adv))
						     (IP-INF-PRP (TO to#to_prep)
								 (VB make#make_v1)
								 (NP-OB1 (NP-MSR (ONE one#one_adj) (N$ years#year_n))
									 (N growth#growth_n1))
								 (PUNC ;)
								 (CP-CAR (WPP-3 (P by#by_prep)
										(WNP (WD which#which_adj) (N time#time_n)))
									 (C 0)
									 (IP-SUB (PP *T*-3)
										 (NP-SBJ (PRO they#they_pron))
										 (MD will#will_v1)
										 (BE be#be_v)
										 (ADJP-PRD (ADJP (ADVP (ADV well#well_adv))
												 (ADJ rooted#rooted_adj))
											   (PUNC ,)
											   (CONJP (CONJ and#and_conj1)
												  (ADJP (ADJ ready#ready_adj)
													(CP-TMC (WNP-4 0)
														(IP-INF (NP-OB1 *T*-4)
															(TO to#to_prep)
															(VB remove#remove_v)))))))))))))))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,77.319))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (VBP shoot#shoot_v)
			      (RP up#up_adv1)
			      (ADJP-SPR (ADJ tall#tall_adj))
			      (PP (P after#after_adv)
				  (CP-ADV (C 0)
					  (IP-SUB (NP-SBJ (PRO they#they_pron))
						  (BEP are#be_v)
						  (VAN molded#mould_v1)))))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (HVD had#have_v)
	  (ADVP (ADVS best#best_adj))
	  (VB top#top_v1)
	  (NP-OB1 (PRO them#them_pron))
	  (PP (P at#at_prep)
	      (NP (D a#a_adj) (ADJ convenient#convenient_adj) (N height#height_n)))
	  (PUNC ,))
  (ID LANGF-1696-E3-P2,77.320))

( (IP-MAT (NP-SBJ (PRO it#it_pron))
	  (MD will#will_v1)
	  (VB make#make_v1)
	  (IP-INF (IP-INF (NP-SBJ (PRO them#them_pron))
			  (VB grow#grow_v)
			  (NP-MSR (QP (D the#the_adj) (QR more#more_adj)))
			  (PP (P in#in_prep)
			      (NP (N bigness#bigness_n))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (IP-INF (NP-SBJ *con*)
				 (ADVP (ADV so#so_adv))
				 (BE be#be_v)
				 (ADVP-TMP (ADVR sooner#soon_adv))
				 (ADJP-PRD (ADJ fit#fit_adj)
					   (CP-TMC (WNP-1 0)
						   (IP-INF (NP-OB1 *T*-1)
							   (TO to#to_prep)
							   (CODE <font>)
							   (VB graff#graff_v1)))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,77.321))

( (IP-MAT (CONJ But#but_prep)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (HVP have#have_v)
			      (NP-OB1 (D a#a_adj)
				      (N desire#desire_n)
				      (IP-INF (TO to#to_prep)
					      (HV have#have_v)
					      (NP-OB1 (Q any#any_adj)
						      (PP (P of#of_prep)
							  (NP (D the#the_adj)
							      (ADJ same#same_adj)
							      (N kind#kind_n)
							      (PP (P as#as_adv)
								  (CP-CMP (WPP-1 0)
									  (C 0)
									  (IP-SUB (PP *T*-1)
										  (NP-SBJ (D the#the_adj) (ADJ old#old_adj) (N Tree#tree_n))
										  (BED was#be_v))))))))))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD need#need_v2)
	  (NEG not#not_adv)
	  (VB top#top_v1)
	  (NP-OB1 (PRO them#them_pron))
	  (PUNC .))
  (ID LANGF-1696-E3-P2,77.322))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (P by#by_prep)
	      (NP (D this#this_pron) (NS means#mean_n3)))
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP want#want_v)
			      (CODE <font>)
			      (NP-OB1 (NS Quince-trees#quince-tree_n) (PUNC ,) (NS Codlings#codling_n2) (CODE <$$font>) (PUNC ,) (X &c.#et-cetera_n)))))
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (VAN furnished#furnish_v)
	  (PP (P with#with_prep)
	      (NP (N plenty#plenty_n)
		  (PUNC ,)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (MD will#will_v1)
				  (VB make#make_v1)
				  (NP-OB1 (ADJP (ADJR better#better_adj) (CONJ and#and_conj1) (ADJR handsomer#handsome_adj))
					  (NS Trees#tree_n)
					  (PP (P than#than_conj)
					      (PP (P if#if_conj)
						  (CP-ADV (C 0)
							  (IP-SUB (NP-SBJ (PRO you#you_pron))
								  (VBP raise#raise_v1)
								  (NP-OB1 (PRO them#them_pron))
								  (PP (P by#by_prep)
								      (CODE <font>)
								      (NP (NS Cuttings#cutting_n))))))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID LANGF-1696-E3-P2,77.323))
