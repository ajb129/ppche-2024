( (CODE <BEGIN_memo-1675-e3-p2>))

( (CODE <P_277>))

( (PP (P To#to_prep)
      (NP (D y=e=#the_adj) (ADJ 4=th=#NA))
      (PUNC .))
  (ID MEMO-1675-E3-P2,277.3))

( (CP-THT (C That#that_conj)
	  (IP-SUB-1 (PP (P upon#upon_prep)
			(NP (D y=e=#the_adj)
			    (IP-PPL (VAG giving#give_v)
				    (NP-OB1 (N dispatch#dispatch_n))
				    (PP (P to#to_prep)
					(NP (Q every#every_adj)
					    (N Vessel#vessel_n1)
					    (CP-REL (WNP-2 0)
						    (C that#that_conj)
						    (IP-SUB (NP-SBJ *T*-2)
							    (MD shall#shall_v)
							    (VB Lade#lade_v)
							    (NP-OB1 (N Wooll#wool_n))
							    (PP (P from#from_prep)
								(NP (NPR Ireland#NA))))))))))
		    (PUNC ,)
		    (NP-SBJ (D The#the_adj)
			    (NS Officers#officer_n)
			    (PP (P of#of_prep)
				(NP (D y=e=#the_adj) (NS Customs#custom_n))))
		    (DOP doe#do_v)
		    (ADVP-TMP (ADV forthw=th=#forthwith_adv))
		    (VB transmitt#transmit_v)
		    (NP-OB1 (D a#a_adj)
			    (N Duplicate#duplicate_adj)
			    (PP (P of#of_prep)
				(NP (Q each#each_adj)
				    (N Entry#entry_n)
				    (PP (P of#of_prep)
					(NP (N Wooll#wool_n)))))
			    (CP-EOP *ICH*-3))
		    (PP (P to#to_prep)
			(NP (D y=e=#the_adj) (NPR Trea~ry#NA) (NPR Office#NA)))
		    (PUNC ,)
		    (IP-SUB-PRN=1 (CONJ &#and_conj1)
				  (NP-OB1 (D+OTHER another#another_pron)
					  (N Duplicate#duplicate_adj)
					  (PP (P of#of_prep)
					      (NP (Q each#each_adj)
						  (N entry#entry_n)
						  (PP (P of#of_prep)
						      (NP (N Wooll#wool_n)))))
					  (CP-EOP *ICH*-3))
				  (PP (P to#to_prep)
				      (NP (D y=e=#the_adj)
					  (N Comm=rs=#commander_n)
					  (PP (P of#of_prep)
					      (NP (D y=e=#the_adj)
						  (NS Customs#custom_n)
						  (PP (P in#in_prep)
						      (NP (NPR England#NA)))))
					  (PUNC ,)
					  (PP (P at#at_prep)
					      (NP (D y=e=#the_adj)
						  (NPR Custome#NA)
						  (NPR House#NA)
						  (PP (P in#in_prep)
						      (NP (NPR London#NA))))))))
		    (PUNC ,)
		    (CP-EOP-3 (WNP-4 0)
			      (IP-INF-5 (IP-INF (NP-SBJ *T*-4)
						(TO to#to_prep)
						(BE be#be_v)
						(PP (P by#by_prep)
						    (NP (PRO them#them_pron)))
						(VAN registerd#register_v)
						(PP (P in#in_prep)
						    (NP (PRO$ their#their_adj) (N Office#office_n))))
					(PUNC ,)
					(CONJP (CONJ &#and_conj1)
					       (IP-INF=5 (VAN transmitted#transmit_v)
							 (PP (P to#to_prep)
							     (NP (D y=e=#the_adj)
								 (ADJ severall#several_adj)
								 (NS Ports#port_n1)
								 (CP-REL (WPP-6 (P to#to_prep)
										(WNP (WPRO w=ch=#which_adj)))
									 (C 0)
									 (IP-SUB (NP-SBJ-7 (D y=e=#the_adj) (ADJ s=d=#said_adj) (N Wooll#wool_n))
										 (MD shall#shall_v)
										 (BE be#be_v)
										 (VAN said#say_v1)
										 (IP-INF (PP *T*-6)
											 (NP-SBJ *-7)
											 (TO to#to_prep)
											 (BE be#be_v)
											 (VAN consigned#consign_v))))))))))
		    (PUNC .)
		    (CP-CAR (WPP-8 (WADV+P Whereunto#whereunto_adv))
			    (C 0)
			    (IP-SUB (PP *T*-8)
				    (NP-SBJ-9 *exp*)
				    (MD may#may_v1)
				    (BE be#be_v)
				    (CODE <P_278>)
				    (VAN Added#add_v)
				    (PUNC ,)
				    (CP-THT-9 (C that#that_conj)
					      (IP-SUB (NP-SBJ (Q some#some_pron) (ADJ Trusty#trusty_adj) (N person#person_n))
						      (BEP be#be_v)
						      (VAN employd#employ_v)
						      (PP (P in#in_prep)
							  (NP (Q each#each_adj)
							      (N Port#port_n1)
							      (PP (P in#in_prep)
								  (NP (NPR England#NA)))
							      (CP-REL (WADVP-10 (WADV where#where_adv))
								      (C 0)
								      (IP-SUB (ADVP-LOC *T*-10)
									      (NP-SBJ (N Wooll#wool_n))
									      (BEP is#be_v)
									      (ADVP (ADV usually#usually_adv))
									      (VAN Landed#land_v)))))
						      (PUNC ,)
						      (IP-INF-PRP (TO to#to_prep)
								  (VB give#give_v)
								  (NP-OB1 (D an#a_adj)
									  (N Acc=t=#account_n)
									  (PP *ICH*-11))
								  (NP-MSR (PP (P from#from_prep)
									      (NP (N Time#time_n)))
									  (PP (P to#to_prep)
									      (NP (N Time#time_n))))
								  (PP-11 (P of#of_prep)
									 (NP (D y=e=#the_adj)
									     (N Wooll#wool_n)
									     (CP-REL (WNP-12 0)
										     (C that#that_conj)
										     (IP-SUB (NP-SBJ *T*-12)
											     (BEP is#be_v)
											     (ADVP (ADV really#really_adv2))
											     (VAN exported#export_v)
											     (PP (P from#from_prep)
												 (NP (NPR Ireland#NA)))))))))))))
	  (PUNC .))
  (ID MEMO-1675-E3-P2,278.4))

( (IP-MAT (NP-SBJ-1 (PRO It#it_pron))
	  (BEP is#be_v)
	  (ALSO also#also_adv)
	  (VAN proposed#propose_v)
	  (PUNC ,)
	  (CP-THT-1 (C that#that_conj)
		    (IP-SUB (NP-SBJ (D y=e=#the_adj)
				    (NS Comm=rs=#commander_n)
				    (PP (P of#of_prep)
					(NP (D y=e=#the_adj)
					    (NS Customs#custom_n)
					    (PP (P in#in_prep)
						(NP (NPR England#NA))))))
			    (DOP doe#do_v)
			    (VB send#send_v1)
			    (RP over#over_adv)
			    (PP (P to#to_prep)
				(NP (D y=e=#the_adj) (N L=d=#lord_n) (N Lieu=t=#lieutenant_n)))
			    (PUNC ,)
			    (PP (P at#at_prep)
				(NP (NP-MSR (Q every#every_adj)
					    (NUM six#six_adj)
					    (CONJP (CONJ or#or_conj1)
						   (NX (NUM Twelve#twelve_adj)))
					    (NS months#month_n1))
				    (N End#end_n)))
			    (PUNC ,)
			    (NP-OB1 (NS Copies#copy_n)
				    (PP (P of#of_prep)
					(NP (D y=e=#the_adj)
					    (NS Returns#return_n)
					    (CP-REL (WNP-2 0)
						    (C 0)
						    (IP-SUB (NP-OB1 *T*-2)
							    (NP-SBJ (PRO they#they_pron))
							    (HVP have#have_v)
							    (VBN received#receive_v)
							    (PP (P from#from_prep)
								(NP (D y=e=#the_adj)
								    (NS Ports#port_n1)
								    (PP (P in#in_prep)
									(NP (NPR Ireland#NA)))))))))
				    (PUNC ;)
				    (CP-REL (WNP-3 (WPRO w=ch=#which_adj))
					    (C 0)
					    (IP-SUB (NP-SBJ *T*-3)
						    (MD may#may_v1)
						    (BE be#be_v)
						    (VAN compared#compare_v1)
						    (PP (P w=th=#with_prep)
							(NP (D y=e=#the_adj)
							    (N booke#book_n)
							    (PP (P of#of_prep)
								(NP (NS Licences#licence_n)
								    (RRC (VAN kept#keep_v)
									 (PP (P in#in_prep)
									     (NP (NP-POS (D y=e=#the_adj) (N$ Secretarys#secretary_n1))
										 (N Office#office_n)))))))))))))
	  (PUNC ,))
  (ID MEMO-1675-E3-P2,278.5))

( (IP-MAT (CONJ &#and_conj1)
	  (PP (P by#by_prep)
	      (NP (D that#that_pron1)))
	  (NP-SBJ-1 *exp*)
	  (MD will#will_v1)
	  (BE be#be_v)
	  (VAN seen#see_v)
	  (CP-QUE-SUB-1 (WQ whether#whether_pron)
			(C 0)
			(IP-SUB (NP-SBJ (Q all#all_adj)
					(D y=e=#the_adj)
					(N Wooll#wool_n)
					(CP-REL (WNP-2 (WPRO w=ch=#which_adj))
						(C 0)
						(IP-SUB (NP-SBJ *T*-2)
							(VBD went#go_v))))
				(HVP hath#have_v)
				(BEN bin#be_v)
				(ADVP (ADV truly#truly_adv))
				(VAN Licenced#license_v)))
	  (PUNC .))
  (ID MEMO-1675-E3-P2,278.6))

( (PP (P To#to_prep)
      (NP (D y=e=#the_adj) (ADJ 5=th=#NA))
      (PUNC .))
  (ID MEMO-1675-E3-P2,278.7))

( (IP-MAT (IP-PPL-ABS (NP-SBJ (ADJ Woollen#woollen_adj) (N Yarne#yarn_n))
		      (BAG being#be_v)
		      (PP (P within#within_adv)
			  (NP (D y=e=#the_adj)
			      (N prohibition#prohibition_n)
			      (PP (P of#of_prep)
				  (NP (D y=e=#the_adj) (ADJ aforsd~#aforesaid_adj) (NS Acts#act_n))))))
	  (PUNC ,)
	  (NP-SBJ (D the#the_adj) (N Lord#lord_n) (N Lieu=t=#lieutenant_n))
	  (HVP hath#have_v)
	  (ADVP-TMP (ADV already#already_adj))
	  (VBN given#give_v)
	  (NP-OB1 (N Ord=r=#order_n))
	  (CP-THT (C that#that_conj)
		  (IP-SUB (NP-SBJ (Q no#no_adj)
				  (ADJ Woollen#woollen_adj)
				  (N Yarne#yarn_n)
				  (NP-PRN (CP-FRL (WNP (WPRO whatever#whatever_pron)))))
			  (MD shall#shall_v)
			  (BE be#be_v)
			  (VAN Exported#export_v)
			  (PP (P without#without_adv)
			      (NP (N Licence#licence_n)))
			  (PP (P in#in_prep)
			      (NP (D y=e=#the_adj)
				  (ADJ same#same_adj)
				  (N Forme#form_n)
				  (PP (P as#as_adv)
				      (PP (P in#in_prep)
					  (NP (D y=e=#the_adj)
					      (N case#case_n1)
					      (PP (P of#of_prep)
						  (NP (N Wooll#wool_n))))))))))
	  (PUNC ,)
	  (CP-CAR (WPP-1 (P for#for_prep)
			 (WNP (WPRO w=ch=#which_adj)))
		  (C 0)
		  (IP-SUB (ADVP (ADV neverthelesse#nevertheless_adv))
			  (NP-SBJ (Q no#no_adj)
				  (N duty#duty_n)
				  (PP *T*-1))
			  (PUNC ,)
			  (PP (P tho'#though_adv)
			      (CP-ADV (C 0)
				      (IP-SUB (PP (P by#by_prep)
						  (NP (D y=e=#the_adj) (N Statute#statute_n1)))
					      (NP-SBJ (PRO it#it_pron))
					      (MD might#may_v1)
					      (BE *)
					      (VAN *))))
			  (PUNC ,)
			  (BEP is#be_v)
			  (VAN exacted#exact_v)
			  (PP (P by#by_prep)
			      (NP (D y=e=#the_adj) (ADJ Chiefe#chief_adj) (N Govern=r=#governor_n)))))
	  (PUNC ,))
  (ID MEMO-1675-E3-P2,278.8))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P for#for_prep)
	      (NP (D y=e=#the_adj) (ADJ present#present_adj)))
	  (NP-SBJ (D y=e=#the_adj) (NS Licences#licence_n))
	  (BEP are#be_v)
	  (VAN allowd#allow_v)
	  (FW gratis#NA)
	  (PUNC .))
  (ID MEMO-1675-E3-P2,278.9))

( (CP-THT (C That#that_conj)
	  (IP-SUB (NP-SBJ (Q some#some_pron) (ONE one#one_adj) (N person#person_n))
		  (BEP be#be_v)
		  (VAN employd#employ_v)
		  (PP (P in#in_prep)
		      (NP (Q each#each_adj)
			  (PP (P of#of_prep)
			      (NP (D y=e=#the_adj)
				  (NS Ports#port_n1)
				  (ADVP-LOC (ADV abroad#abroad_adv))
				  (CP-REL (WADVP-1 (WADV where#where_adv))
					  (C 0)
					  (IP-SUB (ADVP-LOC *T*-1)
						  (NP-SBJ (ADJP (ADJ English#english_adj) (CONJ or#or_conj1) (ADJ Irish#irish_adj))
							  (N Wooll#wool_n))
						  (BEP is#be_v)
						  (ADVP (ADV usually#usually_adv))
						  (VAN Landed#land_v)))))))
		  (IP-INF-PRP (IP-INF (TO to#to_prep)
				      (VB observe#observe_v)
				      (CP-QUE-SUB (WNP-2 (WD what#what_pron) (N Wooll#wool_n))
						  (C 0)
						  (IP-SUB (NP-SBJ *T*-2)
							  (VBP comes#come_v)
							  (RP over#over_adv))))
			      (PUNC ,)
			      (CONJP (CONJ &#and_conj1)
				     (IP-INF (TO to#to_prep)
					     (VB returne#return_v1)
					     (NP-OB1 (D an#a_adj)
						     (N Acc=t=#account_n)
						     (PP *ICH*-4))
					     (PUNC ,)
					     (CONJ-3 either#NA)
					     (PP (P by#by_prep)
						 (NP (CONJ *ICH*-3)
						     (D y=e=#the_adj)
						     (N Lord#lord_n)
						     (N Trea~r#treasurer_n)
						     (CONJP (CONJ or#or_conj1)
							    (NP (ONE one#one_adj)
								(PP (P of#of_prep)
								    (NP (D y=e=#the_adj) (NS Secretarys#secretar_n)))))))
					     (PUNC ,)
					     (PP-4 (P of#of_prep)
						   (NP (NP (D y=e=#the_adj)
							   (NS proportions#proportion_n)
							   (PP (P of#of_prep)
							       (NP (N Wooll#wool_n)))
							   (CP-REL (WNP-5 0)
								   (C that#that_conj)
								   (IP-SUB (NP-SBJ *T*-5)
									   (BEP are#be_v)
									   (ADVP-LOC (ADV there#there_adv))
									   (VAN unladen#unlade_v))))
						       (PUNC ,)
						       (CONJP (CP-QUE-SUB (WNP-6 (WD what#what_pron) (NS Ships#ship_n1))
									  (C 0)
									  (IP-SUB (NP-PRD *T*-6)
										  (NP-SBJ (PRO they#they_pron)
											  (CP-REL *ICH*-7))
										  (BEP are#be_v)
										  (CP-REL-7 (WNP-8 0)
											    (C that#that_conj)
											    (IP-SUB (NP-SBJ *T*-8)
												    (VBP bring#bring_v)
												    (NP-OB1 (PRO it#it_pron)))))))
						       (PUNC ,)
						       (CONJP (CP-QUE-SUB (WNP-9 (WPRO who#who_pron))
									  (C 0)
									  (IP-SUB (NP-PRD *T*-9)
										  (NP-SBJ (D y=e=#the_adj)
											  (N Master#master_n1)
											  (PP (P of#of_prep)
											      (NP (D y=e=#the_adj) (ADJ s=d=#said_adj) (N Ship#ship_n1))))
										  (BEP is#be_v))))
						       (PUNC ,)
						       (CONJP (CONJ &#and_conj1)
							      (CP-QUE-SUB (WPP-10 (P from#from_prep)
										  (WNP (WD what#what_pron)
										       (N part#part_n1)
										       (PP (P of#of_prep)
											   (NP (NP-POS (PRO$ his#his_adj) (N$ Ma~ties#majesty_n))
											       (NS Dominions#dominion_n)))))
									  (C 0)
									  (IP-SUB (PP *T*-10)
										  (NP-SBJ (PRO it#it_pron))
										  (VBP comes#come_v))))))))))
	  (PUNC .))
  (ID MEMO-1675-E3-P2,278.10))

( (IP-MAT (NP-SBJ-1 (PRO It#it_pron))
	  (BEP is#be_v)
	  (VAN supposed#suppose_v)
	  (CP-THT-1 (C that#that_conj)
		    (IP-SUB (IP-SUB (NP-SBJ (NUM six#six_adj) (NS persons#person_n))
				    (MD may#may_v1)
				    (DO doe#do_v)
				    (NP-OB1 (D this#this_pron) (N worke#work_n))
				    (PUNC ,)
				    (IP-PPL-ABS (NP-SBJ-2 (EX there#there_adv))
						(BAG being#be_v)
						(NP-2 (NUMP (PP (NEG not#not_adv)
								(P above#above_adv)
								(NP (D that#that_pron1)
								    (N number#number_n)
								    (PP (P of#of_prep)
									(NP (NS Ports#port_n1)
									    (CP-REL (WPP-3 (P to#to_prep)
											   (WNP (WPRO w=ch=#which_adj)))
										    (C 0)
										    (IP-SUB (PP *T*-3)
											    (NP-SBJ (PRO$ our#our_pron) (N Wooll#wool_n))
											    (ADVP (ADV usually#usually_adv))
											    (VBP goes#go_v)))))))))))
			    (PUNC ,)
			    (CONJP (CONJ and#and_conj1)
				   (IP-SUB (NP-SBJ (NUM 100#NA)
						   (CODE <font>)
						   (NS l.#pound_n1)
						   (CODE <$$font>)
						   (NP-MSR (D a#a_adj) (N year#year_n))
						   (PP (P to#to_prep)
						       (NP (D a#a_adj) (N man#man_n1))))
					   (MD may#may_v1)
					   (VB suffice#suffice_v)))))
	  (PUNC .))
  (ID MEMO-1675-E3-P2,278.11))

( (IP-MAT (NP-SBJ (D This#this_pron))
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-SBJ *T*-1)
			      (BEP is#be_v)
			      (VAN conceived#conceive_v))))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADVR so#so_adv)
		    (ADJ effectuall#effectual_adj)
		    (PP (P for#for_prep)
			(NP (D y=e=#the_adj)
			    (N discouery#discovery_n)
			    (PP (P of#of_prep)
				(NP (D y=e=#the_adj)
				    (ADJ fraudulent#fraudulent_adj)
				    (N Exportacon#exportation_n)
				    (PP (P of#of_prep)
					(NP (N Wooll#wool_n)))))))
		    (PUNC ,)
		    (PP (P as#as_adv)
			(CP-DEG (C 0)
				(IP-SUB (PP (P if#if_conj)
					    (CP-ADV (C 0)
						    (IP-SUB (IP-SUB-2 (NP-SBJ (PRO it#it_pron))
								      (BEP be#be_v)
								      (VAN put#put_v)
								      (PP (P in#in_prep)
									  (NP (N practice#practice_n))))
							    (PUNC ,)
							    (CONJP (CONJ &#and_conj1)
								   (IP-SUB=2 (NP-SBJ (ADJ fitt#fit_adj) (NS men#man_n1))
									     (VAN employd#employ_v)
									     (PP (ADV+P therein#therein_adv))
									     (FP only#only_adj)
									     (PP (P for#for_prep)
										 (NP (NUMP (NUM 4#four_adj) (CONJ or#or_conj1) (NUM 4#four_adj))
										     (NS years#year_n))))))))
					(PUNC ,)
					(NP-SBJ (PRO it#it_pron))
					(MD will#will_v1)
					(ADVP (ADV utterly#utterly_adv))
					(VB breake#break_v)
					(NP-OB1 (D those#those_pron)
						(CP-REL (WNP-3 0)
							(C that#that_conj)
							(IP-SUB (NP-SBJ *T*-3)
								(VBP follow#follow_v)
								(NP-OB1 (D this#this_pron)
									(ADJ illegall#illegal_adj)
									(N Trade#trade_n)
									(PUNC ,)
									(CP-REL (WNP-4 (WPRO w=ch=#which_adj))
										(C 0)
										(IP-SUB (IP-PPL-ABS (NP-SBJ *T*-4)
												    (BAG being#be_v)
												    (ADVP-TMP (ADV once#once_adv))
												    (DAN done#do_v))
											(NP-SBJ (Q every#every_adj) (ONE one#one_adj))
											(MD will#will_v1)
											(ADVP (ADV probably#probably_adv))
											(BE be#be_v)
											(ADJP-PRD (ADVR soe#so_adv)
												  (ADJ cautions#cautious_adj)
												  (CODE {COM:sic})
												  (PP (P as#as_adv)
												      (CP-DEG (C 0)
													      (IP-SUB (NP-SBJ (PRO they#they_pron))
														      (MD will#will_v1)
														      (NEG not#not_adv)
														      (ADVP (ADV readily#readily_adv))
														      (VB venture#venture_v)
														      (PP (P upon#upon_prep)
															  (NP (D y=e=#the_adj) (ADJ like#like_adj) (NS practices#practice_n)))))))))))))))))
	  (PUNC ,))
  (ID MEMO-1675-E3-P2,278.12))

( (IP-MAT (CONJ &#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (NP-SBJ (D this#this_pron)
		  (N sort#sort_n2)
		  (PP (P of#of_prep)
		      (NP (N Traffique#traffic_n))))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (PP (P at#at_prep)
	      (NP (D an#a_adj) (N end#end_n)))
	  (PUNC ,))
  (ID MEMO-1675-E3-P2,278.13))

( (IP-MAT (CONJ &#and_conj1)
	  (ADVP (ADV consequently#consequently_adv))
	  (NP-SBJ (D y=e=#the_adj) (N Expence#expense_n))
	  (PP (P to#to_prep)
	      (NP (D these#these_pron) (NS Inform=rs=#informer_n)))
	  (MD will#will_v1)
	  (ALSO also#also_adv)
	  (VB determine#determine_v)
	  (PUNC .))
  (ID MEMO-1675-E3-P2,278.14))
