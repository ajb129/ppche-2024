( (CODE <BEGIN_record-1551-e1-p2>))

( (CODE <P_2,B1R>))

( (CODE <heading>))

( (NP (D THE#the_adj)
      (NS THEOREMES#theorem_n)
      (PP (P OF#of_prep)
	  (NP (N GEOMETRY#geometry_n)))
      (PUNC ,)
      (CP-REL (WPP-1 (P BEFORE#before_adv)
		     (CODE <font>)
		     (WNP (WPRO WHICHE#which_adj)))
	      (C 0)
	      (IP-SUB (PP *T*-1)
		      (NP-SBJ-2 *exp*)
		      (BEP ARE#be_v)
		      (VAN SET#sit_v)
		      (ADVP (ADV FORTHE#forth_adv))
		      (CODE <$$font>)
		      (CODE <font>)
		      (NP-2 (ADJ CERTAINE#certain_adj)
			    (ADJ GRAUNTABLE#grantable_adj)
			    (NS REQUESTES#request_n1)
			    (CP-REL (WNP-3 (WPRO WHICHE#which_adj))
				    (C 0)
				    (IP-SUB (NP-SBJ *T*-3)
					    (VBP SERUE#serve_v1)
					    (PP (P FOR#for_prep)
						(NP (NS DEMONSTRATIONS#demonstration_n)
						    (CODE <$$font>)
						    (ADJP (ADJ MATHEMATICALL#mathematical_adj)))))))))
      (PUNC .))
  (ID RECORD-1551-E1-P2,2,B1R.4))

( (CODE <$$heading>))

( (CP-THT (C That#that_conj)
	  (IP-SUB (NP-MSR (PP (P fro~#from_prep)
			      (NP (Q any#any_adj) (N pricke#prick_n)))
			  (PP (P to#to_prep)
			      (NP (ONE one#one_adj) (OTHER other#other_adj))))
		  (PUNC ,)
		  (NP-SBJ-1 (EX there#there_adv))
		  (MD may#may_v1)
		  (BE be#be_v)
		  (VAN drawen#draw_v)
		  (NP-1 (D a#a_adj)
			(ADJ right#right_adj)
			(N line#line_n2)
			(PUNC .)
			(PP (P As#as_adv)
			    (PP (P for#for_prep)
				(NP (N example#example_n))))))
	  (PUNC .)
	  (CODE {COM:figure_omitted}))
  (ID RECORD-1551-E1-P2,2,B1R.6))

( (IP-MAT (IP-PPL-ABS (IP-PPL-1 (NP-SBJ (N A#NA))
				(BAG being#be_v)
				(NP-PRD (D the#the_adj) (ONE one#one_adj) (N pricke#prick_n)))
		      (PUNC ,)
		      (CONJP (CONJ and#and_conj1)
			     (IP-PPL=1 (NP-SBJ (N B.#NA))
				       (NP-OB1 (D the#the_adj) (OTHER other#other_adj)))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD maye#may_v1)
	  (VB drawe#draw_v)
	  (PP (P betwene#between_prep)
	      (NP (PRO them#them_pron)))
	  (NP-MSR (PP (P from#from_prep)
		      (NP (D the#the_adj) (ONE one#one_adj)))
		  (PP (P to#to_prep)
		      (NP (D the#the_adj) (OTHER other#other_adj))))
	  (PUNC ,)
	  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
		      (BEP is#be_v)
		      (IP-INF (TO to#to_prep)
			      (VB say#say_v1)
			      (PUNC ,)
			      (NP-MSR (NP-MSR (PP (P from#from_prep)
						  (NP (N A.#NA)))
					      (NP (P vnto#unto_prep)
						  (NP (N B#NA))))
				      (PUNC ,)
				      (CONJP (CONJ and#and_conj1)
					     (NP-MSR (PP (P from#from_prep)
							 (NP (N B.#NA)))
						     (PP (P to#to_prep)
							 (NP (N A.#NA)))))))))
  (ID RECORD-1551-E1-P2,2,B1R.7))

( (CP-THT (C That#that_conj)
	  (IP-SUB (NP-SBJ (Q any#any_adj)
			  (ADJ right#right_adj)
			  (N line#line_n2)
			  (PP (P of#of_prep)
			      (NP (ADJ measurable#measurable_adj) (N length#length_n))))
		  (MD may#may_v1)
		  (BE be#be_v)
		  (VAN drawen#draw_v)
		  (ADVP (ADV forth#forth_adv))
		  (ADJP-SPR (ADJR longer#long_adj1) (PUNC ,) (CONJ and#and_conj1) (ADJ straight#straight_adj)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B1R.8))

( (NP (N Example#example_n)
      (PP (P of#of_prep)
	  (NP (N A.B#NA)))
      (PUNC ,)
      (CP-REL (WNP-1 (WPRO which#which_adj))
	      (C 0)
	      (IP-SUB (IP-SUB-2 (PP (P as#as_adv)
				    (CP-CMP (WADVP-3 0)
					    (C 0)
					    (IP-SUB (ADVP *T*-3)
						    (NP-SBJ-RSP=1 (PRO it#it_pron))
						    (BEP is#be_v)
						    (NP-PRD (D a#a_adj)
							    (N line#line_n2)
							    (PP (P of#of_prep)
								(NP (ADJ measurable#measurable_adj) (N lengthe#length_n)))))))
				(PUNC ,)
				(ADVP (ADV so#so_adv))
				(MD may#may_v1)
				(NP-SBJ-RSP=1 (PRO it#it_pron))
				(BE be#be_v)
				(VAN drawen#draw_v)
				(ADVP (ADV forth#forth_adv))
				(ADJP-SPR (ADJR longer#long_adj1))
				(PUNC ,)
				(PP (P as#as_adv)
				    (FRAG (PP (P for#for_prep)
					      (NP (N example#example_n)))
					  (PP (P vnto#unto_prep)
					      (NP (N C#NA))))))
		      (PUNC ,)
		      (CODE {COM:figure_omitted})
		      (CONJP (CONJ and#and_conj1)
			     (IP-SUB=2 (NP (D that#that_pron1))
				       (PP (P in#in_prep)
					   (NP (ADJ true#true_adj) (N streightenes#straitness_n)))
				       (PP (P without#without_adv)
					   (NP (N crokinge#crooking_n)))))))
      (PUNC .))
  (ID RECORD-1551-E1-P2,2,B1R.9))

( (CP-THT (C That#that_conj)
	  (IP-SUB (PP (P vpon#upon_prep)
		      (NP (Q any#any_adj) (N centre#centre_n1)))
		  (PUNC ,)
		  (NP-SBJ-1 (EX there#there_adv))
		  (MD may#may_v1)
		  (BE be#be_v)
		  (VAN made#make_v1)
		  (NP-1 (D a#a_adj)
			(N circle#circle_n)
			(PP (P of#of_prep)
			    (NP (Q anye#any_adj)
				(N qua~titee#quantity_n)
				(CP-REL (WNP-2 0)
					(C that#that_conj)
					(IP-SUB (NP-OB1 *T*-2)
						(NP-SBJ (D a#a_adj) (N man#man_n1))
						(VBP wyll#will_v2)))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B1R.10))

( (IP-IMP (VBI Let#let_v1)
	  (IP-INF (NP-SBJ (D the#the_adj) (N centre#centre_n1))
		  (BE be#be_v)
		  (VAN set#set_v1)
		  (PP (P to#to_prep)
		      (NP (D A#a_adj))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B1R.11))

( (CODE {COM:figure_omitted}))

( (CP-QUE-MAT (WNP-1 (WPRO what#what_pron))
	      (IP-SUB (NP-SBJ *T*-1)
		      (MD shal#shall_v)
		      (VB hinder#hinder_v)
		      (NP-OB1 (D a#a_adj) (N man#man_n1))
		      (IP-INF (TO to#to_prep)
			      (VB drawe#draw_v)
			      (NP-OB1 (D a#a_adj)
				      (N circle#circle_n)
				      (PP *ICH*-2))
			      (PP (P about#about_adv)
				  (NP (PRO it#it_pron)))
			      (PUNC ,)
			      (PP-2 (P of#of_prep)
				    (NP (CP-FRL (WNP-3 (WD what#what_pron) (N quantitee#quantity_n))
						(C that#that_conj)
						(IP-SUB (NP-OB1 *T*-3)
							(NP-SBJ (PRO he#he_pron))
							(VBP lusteth#lust_v)))))
			      (PUNC ,)
			      (PP (PP (P as#as_adv)
				      (CP-ADV (WADVP-4 0)
					      (C 0)
					      (IP-SUB (ADVP *T*-4)
						      (NP-SBJ (PRO you#you_pron))
						      (VBP se#see_v)
						      (NP-OB1 (D the#the_adj) (N forme#form_n))
						      (ADVP-LOC (ADV here#here_adv)))))
				  (PUNC :)
				  (CONJP (CONJ other#other_conj)
					 (ADJP (ADJR bygger#big_adj)
					       (CONJP (CONJ or#or_conj1) (QR lesse#less_adj))
					       (PUNC ,)
					       (PP (P as#as_adv)
						   (CP-ADV (WADVP-5 0)
							   (C 0)
							   (IP-SUB (ADVP *T*-5)
								   (NP-SBJ-6 (PRO it#it_pron))
								   (MD shall#shall_v)
								   (VB lyke#like_v1)
								   (NP-OB2 (PRO him#him_pron))
								   (IP-INF-6 (TO to#to_prep) (DO doo#do_v))))))))))
	      (PUNC ?))
  (ID RECORD-1551-E1-P2,2,B1R.13))

( (CODE <P_2,B1V>))

( (CP-THT (C That#that_conj)
	  (IP-SUB (NP-SBJ (Q all#all_adj) (ADJ right#right_adj) (NS angles#angle_n2))
		  (BEP be#be_v)
		  (ADJP-PRD (ADJ equall#equal_adj)
			    (NP-ADV (NP (Q eche#each_adj))
				    (PP (P to#to_prep)
					(NP (OTHER other#other_adj))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B1V.15))

( (IP-IMP (VBI Set#set_v1)
	  (PP (P for#for_prep)
	      (NP (D an#a_adj) (N example#example_n)))
	  (NP-OB1 (N A.#NA)
		  (CONJ and#and_conj1)
		  (N B#NA)
		  (PUNC ,)
		  (CODE {COM:figure_omitted})
		  (CP-REL (WPP-1 (P of#of_prep)
				 (WNP (WD which#which_adj) (NUM two#two_adj)))
			  (C 0)
			  (IP-SUB (PP (P though#though_adv)
				      (CP-ADV (C 0)
					      (IP-SUB (NP-SBJ (N A.#NA))
						      (VBP seme#seem_v2)
						      (NP-PRD (D the#the_adj)
							      (ADJR greater#great_adj)
							      (N angle#angle_n2)
							      (PP *T*-1))
						      (PP (P to#to_prep)
							  (NP (Q some#some_pron)
							      (NS men#man_n1)
							      (PP (P of#of_prep)
								  (NP (ADJ small#small_adj) (N experience#experience_n))))))))
				  (PUNC ,)
				  (NP-SBJ (PRO it#it_pron))
				  (VBP happeneth#happen_v)
				  (PP (FP only#only_adj)
				      (P bicause#because_adv)
				      (CP-ADV (C that#that_conj)
					      (IP-SUB (NP-SBJ (D the#the_adj)
							      (NS lines#line_n2)
							      (PP (P aboute#about_adv)
								  (NP (N A#NA))))
						      (PUNC ,)
						      (BEP are#be_v)
						      (ADJP-PRD (ADJR longer#long_adj1)
								(PP (P the~#than_conj)
								    (NP (D the#the_adj)
									(NS lines#line_n2)
									(PP (P about#about_adv)
									    (NP (N B#NA)))))))))
				  (PUNC ,)
				  (PP (P as#as_adv)
				      (CP-ADV (WNP-2 0)
					      (C 0)
					      (IP-SUB (NP-OB1 *T*-2)
						      (NP-SBJ (PRO you#you_pron))
						      (MD may#may_v1)
						      (VB proue#prove_v)
						      (PP (P by#by_prep)
							  (IP-PPL (VAG drawing#draw_v)
								  (NP-OB1 (PRO them#them_pron))
								  (ADJP-SPR (ADJR longer#long_adj1))))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B1V.16))

( (IP-MAT (CONJ for#for_prep)
	  (ADVP (ADV so#so_adv))
	  (MD shal#shall_v)
	  (NP-SBJ (N B.#NA))
	  (VB seme#seem_v2)
	  (NP-PRD (D the#the_adj) (ADJR greater#great_adj) (N angle#angle_n2))
	  (PP (P yf#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP make#make_v1)
			      (IP-SMC (NP-SBJ (PRO$ his#his_adj) (NS lines#line_n2))
				      (ADJP-PRD (ADJR longer#long_adj1)
						(PP (P then#than_conj)
						    (NP (D the#the_adj)
							(NS lines#line_n2)
							(CP-REL (WNP-1 0)
								(C that#that_conj)
								(IP-SUB (NP-SBJ *T*-1)
									(VBP make#make_v1)
									(NP-OB1 (D the#the_adj)
										(N angle#angle_n2)
										(NP-PRN (N A.#NA)))))))))))))
  (ID RECORD-1551-E1-P2,2,B1V.17))

( (IP-MAT (CONJ And#and_conj1)
	  (IP-INF-PRP (TO to#to_prep)
		      (VB proue#prove_v)
		      (NP-OB1 (PRO it#it_pron))
		      (PP (P by#by_prep)
			  (NP (N demonstration#demonstration_n))))
	  (PUNC ,)
	  (NP-SBJ (PRO I#i_pron))
	  (VBP say#say_v1)
	  (ADVP (ADV thus#thus_adv))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B1V.18))

( (IP-MAT (PP-LFD (P If#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (Q any#any_adj) (NUM ij.#two_adj) (ADJ right#right_adj) (NS corners#corner_n1))
				  (BEP be#be_v)
				  (NEG not#not_adv)
				  (ADJP-PRD (ADJ equal#equal_adj)))))
	  (PUNC ,)
	  (ADVP-RSP (ADV then#then_adv))
	  (NP-SBJ (ONE one#one_adj) (ADJ right#right_adj) (N corner#corner_n1))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJR greater#great_adj)
		    (PP (P then#than_conj)
			(NP (D an#a_adj) (OTHER other#other_adj))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B1V.19))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (D that#that_pron1)
		  (N corner#corner_n1)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP is#be_v)
				  (ADJP-PRD (ADJR greater#great_adj)
					    (PP (P then#than_conj)
						(NP (D a#a_adj) (ADJ right#right_adj) (N angle#angle_n2)))))))
	  (PUNC ,)
	  (BEP is#be_v)
	  (NP-PRD (D a#a_adj) (ADJ blunt#blunt_adj) (N corner#corner_n1))
	  (PUNC <paren>)
	  (PP-PRN (P by#by_prep)
		  (NP (PRO$ his#his_adj) (N definition#definition_n)))
	  (PUNC <$$paren>))
  (ID RECORD-1551-E1-P2,2,B1V.20))

( (IP-MAT (ADVP (ADV so#so_adv))
	  (MD must#must_v1)
	  (NP-SBJ (ONE one#one_adj) (N corner#corner_n1))
	  (BE be#be_v)
	  (NP-PRD (CONJ both#both_pron)
		  (NP (D a#a_adj) (ADJ right#right_adj) (N corner#corner_n1))
		  (CONJP (CONJ and#and_conj1)
			 (NP (D a#a_adj) (ADJ blunt#blunt_adj) (N corner#corner_n1))
			 (ALSO also#also_adv)))
	  (PUNC ,)
	  (CP-CAR (WNP-1 (WPRO whiche#which_adj))
		  (C 0)
		  (IP-SUB (NP-SBJ *T*-1)
			  (BEP is#be_v)
			  (NEG not#not_adv)
			  (ADJP-PRD (ADJ possible#possible_adj))))
	  (PUNC :))
  (ID RECORD-1551-E1-P2,2,B1V.21))

( (IP-MAT (CONJ And#and_conj1)
	  (ADVP (ADV againe#again_adv))
	  (PUNC :)
	  (NP-SBJ (D the#the_adj) (ADJR lesser#lesser_adj) (ADJ right#right_adj) (N corner#corner_n1))
	  (MD must#must_v1)
	  (BE be#be_v)
	  (NP-PRD (D a#a_adj) (ADJ sharpe#sharp_adj) (N corner#corner_n1))
	  (PUNC ,)
	  (PP (P by#by_prep)
	      (NP (PRO$ his#his_adj) (N definition#definition_n)))
	  (PUNC ,)
	  (PP (P bicause#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (BEP is#be_v)
			      (NP-PRD (QR lesse#less_adj)
				      (PP (P then#than_conj)
					  (NP (D a#a_adj) (ADJ right#right_adj) (N angle#angle_n2)))))))
	  (PUNC ,)
	  (CP-CAR (WNP-1 (WD which#which_adj) (N thing#thing_n1))
		  (C 0)
		  (IP-SUB (NP-SBJ *T*-1)
			  (BEP is#be_v)
			  (ADJP-PRD (ADJ impossible#impossible_adj))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B1V.22))

( (IP-MAT (PP (ADV+P Therefore#therefore_adv))
	  (NP-SBJ (PRO I#i_pron))
	  (VBP conclude#conclude_v)
	  (CP-THT (C that#that_conj)
		  (IP-SUB (NP-SBJ (Q all#all_adj) (ADJ right#right_adj) (NS angles#angle_n2))
			  (BEP be#be_v)
			  (ADJP-PRD (ADJ equall#equal_adj))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B1V.23))

( (IP-MAT (PP (P Yf#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB-1 (NP-SBJ (ONE one#one_adj) (ADJ right#right_adj) (N line#line_n2))
					(DOP do#do_v)
					(VB crosse#croose_v)
					(NP-OB1 (NUM two#two_adj) (OTHER other#other_adj) (ADJ right#right_adj) (NS lines#line_n2)))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB=1 (VB make#make_v1)
					       (IP-SMC (NP-SBJ (NUM ij.#two_adj)
							       (ADJ inner#inner_adj)
							       (NS corners#corner_n1)
							       (PP (P of#of_prep)
								   (NP (ONE one#one_adj) (N side#side_n1))))
						       (ADJP-PRD (ADJR lesser#lesser_adj)
								 (PP (P the~#than_conj)
								     (NP (NUM ij.#two_adj) (ADJ righte#right_adj) (NS corners#corner_n1))))))))))
	  (PUNC ,)
	  (NP-SBJ-2 (PRO it#it_pron))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ certaine#certain_adj))
	  (PUNC ,)
	  (CP-THT-2 (C that#that_conj)
		    (IP-SUB (IP-SUB-3 (PP (P if#if_conj)
					  (CP-ADV (C 0)
						  (IP-SUB (NP-SBJ (D those#those_pron) (NUM two#two_adj) (NS lines#line_n2))
							  (BEP be#be_v)
							  (VAN drawen#draw_v)
							  (ADVP (ADV forth#forth_adv))
							  (ADVP (ADV right#right_adv))
							  (PP (P on#on_prep)
							      (NP (D that#that_pron1)
								  (N side#side_n1)
								  (CP-REL (WNP-4 0)
									  (C that#that_conj)
									  (IP-SUB (NP-LOC *T*-4)
										  (NP-SBJ (D the#the_adj) (ADJ sharpe#sharp_adj) (ADJ inner#inner_adj) (NS corners#corner_n1))
										  (BEP be#be_v))))))))
				      (PUNC ,)
				      (NP-SBJ (PRO they#they_pron))
				      (MD wil#will_v1)
				      (PP (P at#at_prep)
					  (NP (N le~gth#length_n)))
				      (VB mete#meet_v)
				      (ADVP (ADV togither#together_adv)))
			    (PUNC ,)
			    (CONJP (CONJ and#and_conj1)
				   (IP-SUB=3 (VB crosse#croose_v)
					     (NP-OB1 (ONE on#one_adj)
						     (NP (D an#a_adj) (OTHER other#other_adj)))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B1V.24))

( (IP-MAT (IP-PPL-ABS (IP-PPL (NP-SBJ (D The#the_adj) (NUM ij.#two_adj) (NS lines#line_n2))
			      (BAG beinge#be_v)
			      (PP (P as#as_adv)
				  (NP (N A.B.#NA) (CONJ and#and_conj1) (N C.D#NA))))
		      (PUNC ,)
		      (CONJP (CONJ and#and_conj1)
			     (IP-PPL (NP-SBJ (D the#the_adj) (ADJ third#third_adj) (N line#line_n2))
				     (VAG crossing#cross_v)
				     (NP-OB1 (PRO them#them_pron))
				     (PP (P as#as_adv)
					 (CP-ADV (WADVP-1 0)
						 (C 0)
						 (IP-SUB (ADVP *T*-1)
							 (DOP dooth#do_v)
							 (VB *)
							 (ADVP-LOC (ADV heere#here_adv))
							 (NP-SBJ (N E.F#NA)))))
				     (PUNC ,)
				     (IP-PPL (VAG making#make_v1)
					     (IP-SMC (NP-SBJ (NUM ij#two_adj) (ADJ inner#inner_adj) (NS corners#corner_n1))
						     (CODE {SIC:cornes})
						     (PUNC <paren>)
						     (PP-PRN (P as#as_adv)
							     (CP-ADV (WNP-2 0)
								     (C 0)
								     (IP-SUB (NP-SBJ *T*-2)
									     (BEP ar#be_v)
									     (NP-PRD (N G.H.#NA)))))
						     (PUNC <$$paren>)
						     (ADJP-PRD (ADJR lesser#lesser_adj)
							       (PP (P then#than_conj)
								   (NP (NUM two#two_adj) (ADJ right#right_adj) (NS corners#corner_n1))))
						     (PUNC ,)
						     (CODE {COM:figure_omitted})
						     (PP (P sith#sith_adv)
							 (CP-ADV (C 0)
								 (IP-SUB (NP-SBJ (Q ech#each_adj)
										 (PP (P of#of_prep)
										     (CODE <P_2,B2R>)
										     (NP (PRO them#them_pron))))
									 (BEP is#be_v)
									 (NP-PRD (QR lesse#less_adj)
										 (PP (P then#than_conj)
										     (NP (D a#a_adj) (ADJ right#right_adj) (N corner#corner_n1))))
									 (PUNC ,)
									 (PP (P as#as_adv)
									     (CP-ADV (WNP-3 0)
										     (C 0)
										     (IP-SUB (NP-OB1 *T*-3)
											     (NP-SBJ (PRO$ your#your_pron) (NS eyes#eye_n1))
											     (MD maye#may_v1)
											     (VB iudge#judge_v))))))))))))
	  (PUNC ,)
	  (ADVP (ADV then#then_adv))
	  (VBP say#say_v1)
	  (NP-SBJ (PRO I#i_pron))
	  (PUNC ,)
	  (CP-THT (C 0)
		  (IP-SUB (IP-SUB-4 (PP (P if#if_conj)
					(CP-ADV (C 0)
						(IP-SUB (NP-SBJ (D those#those_pron)
								(NUM ij.#two_adj)
								(NS lines#line_n2)
								(NP-PRN (N A.B.#NA) (CONJ and#and_conj1) (N C.D.#NA)))
							(BEP be#be_v)
							(VAN drawen#draw_v)
							(PP (P in#in_prep)
							    (NP (N lengthe#length_n)))
							(PP (P on#on_prep)
							    (NP (D that#that_pron1)
								(N side#side_n1)
								(CP-REL (WNP-5 0)
									(C that#that_conj)
									(IP-SUB (NP-LOC *T*-5)
										(NP-SBJ (N G.#NA) (CONJ and#and_conj1) (N H.#NA))
										(BEP are#be_v))))))))
				    (PUNC ,)
				    (NP-SBJ (PRO the#they_pron))
				    (CODE {COM:sic})
				    (MD will#will_v1)
				    (PP (P at#at_prep)
					(NP (N length#length_n)))
				    (VB meet#meet_v))
			  (CONJP (CONJ and#and_conj1)
				 (IP-SUB=4 (VB crosse#croose_v)
					   (NP-OB1 (ONE one#one_adj)
						   (NP (D an#a_adj) (OTHER other#other_adj)))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2R.25))

( (IP-MAT (NP-SBJ (NUM Two#two_adj) (ADJ right#right_adj) (NS lines#line_n2))
	  (VBP make#make_v1)
	  (NP-OB1 (Q no#no_adj) (ADJ platte#plat_adj) (N forme#form_n))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2R.26))

( (IP-MAT (NP-SBJ (D A#a_adj) (ADJ platte#plat_adj) (N forme#form_n))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-OB1 *T*-1)
			      (NP-SBJ (PRO you#you_pron))
			      (VBD harde#hear_v)
			      (ADVP-TMP (ADV before#before_adv)))))
	  (PUNC ,)
	  (HVP hath#have_v)
	  (NP-OB1 (CONJ bothe#both_pron) (N length#length_n) (CONJ and#and_conj1) (N bredthe#breadth_n))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B2R.27))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (BEP is#be_v)
	  (VAN inclosed#enclose_v)
	  (PP (P with#with_prep)
	      (NP (NS lines#line_n2)))
	  (PP (P as#as_adv)
	      (PP (P with#with_prep)
		  (NP (PRO$ his#his_adj) (NS boundes#bound_n1))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B2R.28))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (NUM ij.#two_adj) (ADJ right#right_adj) (NS lines#line_n2))
	  (MD can@#can_v1)
	  (NEG @not#not_adv)
	  (VB inclose#enclose_v)
	  (NP-OB1 (Q al#all_adj)
		  (D the#the_adj)
		  (NS bondes#bound_n1)
		  (PP (P of#of_prep)
		      (NP (Q any#any_adj) (ADJ platte#plat_adj) (N forme#form_n))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2R.29))

( (IP-IMP (VBI Take#take_v)
	  (PP (P for#for_prep)
	      (NP (D an#a_adj) (N example#example_n)))
	  (ADVP-TMP (ADV firste#first_adj))
	  (NP-OB1 (D these#these_pron)
		  (NUM two#three_adj)
		  (ADJ right#right_adj)
		  (NS lines#line_n2)
		  (NP-PRN (N AB.#NA) (CONJ and#and_conj1) (N A.C.#NA))
		  (CP-REL (WNP-1 (WPRO whiche#which_adj))
			  (C 0)
			  (IP-SUB (IP-SUB (NP-SBJ *T*-1)
					  (VBP meete#meet_v)
					  (ADVP (ADV togither#together_adv))
					  (PP (P in#in_prep)
					      (NP (N A#NA))))
				  (PUNC ,)
				  (CODE {COM:figure_omitted})
				  (CONJP (CONJ but#but_prep)
					 (IP-SUB (NP-SBJ-2 *T*-1)
						 (ADVP (ADV yet#yet_adv))
						 (MD can@#can_v1)
						 (NEG @not#not_adv)
						 (BE be#be_v)
						 (VAN called#call_v)
						 (IP-SMC (NP-SBJ *-2)
							 (NP-PRD (D a#a_adj) (ADJ platte#plat_adj) (N forme#form_n)))
						 (PUNC ,)
						 (PP (P bicause#because_adv)
						     (CP-ADV (C 0)
							     (IP-SUB (NP-SBJ-3 (EX there#there_adv))
								     (BEP is#be_v)
								     (NP-3 (Q no#no_adj) (N bond#bound_n1))
								     (NP-MSR (PP (P from#from_prep)
										 (NP (N B.#NA)))
									     (PP (P to#to_prep)
										 (NP (N C#NA))))))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B2R.30))

( (IP-MAT (CONJ but#but_prep)
	  (PP-LFD (P if#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (PRO you#you_pron))
				  (MD will#will_v1)
				  (VB drawe#draw_v)
				  (NP-OB1 (D a#a_adj)
					  (N line#line_n2)
					  (PP (P betwene#between_prep)
					      (NP (PRO them#them_pron) (NUM twoo#two_adj))))
				  (PUNC ,)
				  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
					      (BEP is#be_v)
					      (NP-MSR (PP (P frome#from_prep)
							  (NP (N B.#NA)))
						      (PP (P to#to_prep)
							  (NP (N C#NA))))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV then#then_adv))
	  (MD will#will_v1)
	  (NP-SBJ (PRO it#it_pron))
	  (BE be#be_v)
	  (NP-PRD (D a#a_adj) (ADJ platte#plat_adj) (N forme#form_n))
	  (PUNC ,)
	  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
		      (BEP is#be_v)
		      (IP-INF (TO to#to_prep)
			      (VB say#say_v1)
			      (PUNC ,)
			      (NP-OB1 (D a#a_adj) (N triangle#triangle_n))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B2R.31))

( (IP-MAT (CONJ but#but_prep)
	  (ADVP (ADV then#then_adv))
	  (BEP are#be_v)
	  (NP-SBJ-1 (EX there#there_adv))
	  (NP-1 (NP (NUM iij.#three_adj) (NS lines#line_n2))
		(PUNC ,)
		(CONJP (CONJ and#and_conj1)
		       (NP (NEG not#not_adv) (FP only#only_adj) (NUM ij#two_adj))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2R.32))

( (IP-MAT (NP-ADV (N Likewise#likewise_adv))
	  (MD may#may_v1)
	  (NP-SBJ (PRO you#you_pron))
	  (VB say#say_v1)
	  (PP (P of#of_prep)
	      (NP (N D.E.#NA)
		  (CONJ and#and_conj1)
		  (N F.G#NA)
		  (PUNC ,)
		  (CODE {COM:figure_omitted})
		  (CP-REL (WNP-1 (WPRO whiche#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (DOP doo#do_v)
				  (NEG not#not_adv)
				  (CODE {TEXT:missing_"not"})
				  (CODE {COM:"not"_is_required_since_the_lines_de_and_fg_are_parallel_in_the_figure})
				  (VB make#make_v1)
				  (NP-OB1 (D a#a_adj) (ADJ platte#plat_adj) (N forme#form_n))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B2R.33))

( (IP-MAT (CONJ nother#nother_adv1)
	  (ADVP (ADV yet#yet_adv))
	  (MD can#can_v1)
	  (NP-SBJ (PRO they#they_pron))
	  (VB make#make_v1)
	  (NP-OB1 (Q any#any_adj))
	  (PP (P without#without_adv)
	      (NP (N helpe#help_n)
		  (PP (P of#of_prep)
		      (NP (NUM two#two_adj)
			  (NS lines#line_n2)
			  (QP (QR more#more_adj))
			  (PUNC ,)
			  (CP-REL (WPP-1 (WADV+P whereof#whereof_adv))
				  (C 0)
				  (IP-SUB (IP-SUB-2 (NP-SBJ (D the#the_adj)
							    (ONE one#one_adj)
							    (PP *T*-1))
						    (MD must#must_v1)
						    (BE be#be_v)
						    (VAN drawen#draw_v)
						    (NP-MSR (PP (P from#from_prep)
								(NP (N D.#NA)))
							    (PP (P to#to_prep)
								(NP (N F#NA)))))
					  (PUNC ,)
					  (CONJP (CONJ and#and_conj1)
						 (IP-SUB=2 (NP-SBJ (D the#the_adj) (OTHER other#other_adj))
							   (NP-MSR (PP (P frome#from_prep)
								       (NP (N E.#NA)))
								   (PP (P to#to_prep)
								       (NP (N G#NA))))))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B2R.34))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV then#then_adv))
	  (MD will#will_v1)
	  (NP-SBJ (PRO it#it_pron))
	  (BE be#be_v)
	  (NP-PRD (D a#a_adj) (ADJ longe#long_adj1) (N square#square_n))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2R.35))

( (IP-MAT (ADVP (ADV So#so_adv))
	  (ADVP (ADV then#then_adv))
	  (PP (P of#of_prep)
	      (NP (NUM two#two_adj) (ADJ right#right_adj) (NS lines#line_n2)))
	  (MD can#can_v1)
	  (BE bee#be_v)
	  (VAN made#make_v1)
	  (NP-SBJ (Q no#no_adj) (ADJ platte#plat_adj) (N forme#form_n))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2R.36))

( (IP-MAT (CONJ But#but_prep)
	  (PP (P of#of_prep)
	      (NP (NUM ij.#two_adj) (ADJ croked#crooked_adj) (NS lines#line_n2)))
	  (BEP be#be_v)
	  (VAN made#make_v1)
	  (NP-SBJ (D a#a_adj) (ADJ platte#plat_adj) (N forme#form_n))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-OB1 *T*-1)
			      (NP-SBJ (PRO you#you_pron))
			      (VBP se#see_v)
			      (PP (P in#in_prep)
				  (NP (D the#the_adj) (N eye#eye_n1) (N form#form_n))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2R.37))

( (IP-MAT (CONJ And#and_conj1)
	  (ALSO also#also_adv)
	  (PP (P of#of_prep)
	      (NP (NP (ONE one#one_adj) (N rightline#ratline_n1))
		  (PUNC ,)
		  (CONJP (CONJ &#and_conj1)
			 (NP (ONE one#one_adj) (ADJ croked#crooked_adj) (N line#line_n2)))))
	  (PUNC ,)
	  (MD maye#may_v1)
	  (NP-SBJ (D a#a_adj) (ADJ platte#plat_adj) (N fourme#form_n))
	  (BE bee#be_v)
	  (VAN made#make_v1)
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-OB1 *T*-1)
			      (NP-SBJ (D the#the_adj)
				      (N semicircle#semicircle_n)
				      (NP-PRN (N F.#NA)))
			      (DOP doothe#do_v)
			      (VB sette#seat_v)
			      (ADVP (ADV forth#forth_adv)))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2R.38))

( (CODE {COM:figure_omitted}))

( (CODE <P_2,B2V>))

( (CODE <heading>))

( (NP (ADJ CERTAYN#certain_adj)
      (ADJ COMMON#common_adj)
      (NS SENTENCES#sentence_n)
      (ADJP (ADJP (ADJ MANIFEST#manifest_adj)
		  (PP (P TO#to_prep)
		      (CODE <font>)
		      (NP (N SENCE#sense_n))))
	    (PUNC ,)
	    (CONJP (CONJ AND#and_conj1)
		   (RRC (VAN ACKNOWLEDGED#acknowledge_v)
			(PP (P OF#of_prep)
			    (NP (Q ALL#all_adj) (NS MEN#man_n1))))))
      (CODE <$$font>)
      (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2V.42))

( (NP (D THE#the_adj) (ADJ FIRSTE#first_adj) (ADJ COMMON#common_adj) (N SENTENCE#sentence_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2V.43))

( (CODE <$$heading>))

( (IP-MAT (NP-LFD-1 (CP-FRL (WNP-2 (WD What#what_pron) (ADV so#so_adv) (ADV euer#ever_adv) (NS things#thing_n1))
			    (C 0)
			    (IP-SUB (NP-SBJ *T*-2)
				    (BEP be#be_v)
				    (ADJP-PRD (ADJ equal#equal_adj)
					      (PP (P to#to_prep)
						  (NP (ONE one#one_adj) (OTHER other#other_adj) (N thinge#thing_n1)))))))
	  (PUNC ,)
	  (NP-SBJ-RSP=1 (D those#those_pron) (ADJ same#same_adj))
	  (BEP bee#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P betwene#between_prep)
			(NP (PRO them#them_pron) (N selues#self_pron))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2V.45))

( (IP-MAT (NP-OB1 (NS Examples#example_n)
		  (PP (ADV+P therof#thereof_adv)))
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB take#take_v)
	  (PP (CONJ both#both_pron)
	      (PP (P in#in_prep)
		  (NP (N greatnes#greatness_n)))
	      (CONJP (CONJ and#and_conj1)
		     (ALSO also#also_adv)
		     (PP (P in#in_prep)
			 (NP (N numbre#number_n)))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2V.46))

( (IP-MAT (ADVP-TMP (ADV First#first_adj))
	  (PUNC <paren>)
	  (PP-PRN (PP (P though#though_adv)
		      (CP-ADV (C 0)
			      (IP-SUB (NP-SBJ (PRO it#it_pron))
				      (VBP pertaine#pertain_v)
				      (NEG not#not_adv)
				      (ADVP (ADV proprely#properly_adv))
				      (PP (P to#to_prep)
					  (NP (N geometry#geometry_n))))))
		  (PUNC ,)
		  (CONJP (CONJ but#but_prep)
			 (IP-INF-PRP (TO to#to_prep)
				     (VB helpe#help_v)
				     (NP-OB2 (D the#the_adj)
					     (N vnderstandinge#understanding_n)
					     (PP (P of#of_prep)
						 (NP (D the#the_adj)
						     (NS rules#rule_n1)
						     (PUNC ,)
						     (CP-REL (WNP-1 (WPRO whiche#which_adj))
							     (C 0)
							     (IP-SUB (NP-SBJ *T*-1)
								     (MD may#may_v1)
								     (BE bee#be_v)
								     (VAN wrought#work_v)
								     (PP (P by#by_prep)
									 (NP (Q both#both_pron) (NS artes#art_n1)))))))))))
	  (PUNC <$$paren>)
	  (ADVP (ADV thus#thus_adv))
	  (MD may#may_v1)
	  (NP-SBJ (PRO you#you_pron))
	  (VB perceaue#perceive_v)
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2V.47))

( (IP-MAT (PP-LFD (P If#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (NP (D the#the_adj)
					      (N summe#sum_n1)
					      (PP (P of#of_prep)
						  (NP (N mounye#money_n)
						      (PP (P in#in_prep)
							  (NP (PRO$ my#my_adj) (N purse#purse_n))))))
					  (PUNC ,)
					  (CONJP (CONJ and#and_conj1)
						 (NP (D the#the_adj)
						     (N mony#money_n)
						     (PP (P in#in_prep)
							 (NP (PRO$ your#your_pron) (N purse#purse_n))))))
				  (BEP be#be_v)
				  (ADJP-PRD (ADJ equall#equal_adj)
					    (PP *ICH*-1))
				  (QP (Q eche#each_adj)
				      (PP (P of#of_prep)
					  (NP (PRO them#them_pron))))
				  (PP-1 (P to#to_prep)
					(NP (D the#the_adj)
					    (N mony#money_n)
					    (CP-REL (WNP-2 0)
						    (C that#that_conj)
						    (IP-SUB (NP-OB1 *T*-2)
							    (NP-SBJ (Q any#any_adj) (OTHER other#other_adj) (N man#man_n1))
							    (HVP hathe#have_v))))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV then#then_adv))
	  (MD must#must_v1)
	  (ADVP (ADV needes#needs_adv))
	  (NP-SBJ (NP (PRO$ your#your_pron) (N mony#money_n))
		  (CONJP (CONJ and#and_conj1)
			 (NP (PRO$ mine#mine_adj))))
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj))
	  (ADVP (ADV togyther#together_adv))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2V.48))

( (IP-MAT (NP-ADV (N Likewise#likewise_adv))
	  (PUNC ,)
	  (PP-LFD (P if#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (Q anye#any_adj)
					  (NUM ij.#two_adj)
					  (NS quantities#quantity_n)
					  (PUNC ,)
					  (PP (P as#as_adv)
					      (NP (N A#NA) (CONJ and#and_conj1) (N B#NA))))
				  (PUNC ,)
				  (BEP be#be_v)
				  (ADJP-PRD (ADJ equal#equal_adj)
					    (PP (P to#to_prep)
						(NP (D an#a_adj)
						    (OTHER other#other_adj)
						    (PUNC ,)
						    (PP (P as#as_adv)
							(PP (RP vn#on_prep)
							    (P to#to_prep)
							    (NP (N C#NA))))))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV then#then_adv))
	  (MD muste#must_v1)
	  (ADVP (ADV nedes#needs_adv))
	  (NP-SBJ (N A.#NA) (CONJ and#and_conj1) (N B.#NA))
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (NP-ADV (NP (Q eche#each_adj))
			    (PP (P to#to_prep)
				(NP (OTHER other#other_adj)))))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (IP-SMC (IP-SMC (NP-SBJ (N A.#NA))
			      (ADJP-PRD (ADJ equall#equal_adj)
					(PP (P to#to_prep)
					    (NP (N B#NA)))))
		      (PUNC ,)
		      (CONJP (CONJ and#and_conj1)
			     (IP-SMC (NP-SBJ (N B.#NA))
				     (ADJP-PRD (ADJ equall#equal_adj)
					       (PP (P to#to_prep)
						   (NP (N A#NA))))))))
	  (PUNC ,)
	  (CP-CAR (WNP-1 (WD whiche#which_adj) (N thinge#thing_n1))
		  (IP-IMP (IP-INF-PRP (NP-OB1 *T*-1)
				      (ADVP (D the#the_adj) (ADVR better#better_adj))
				      (TO to#to_prep)
				      (VB peceaue#perceive_v))
			  (PUNC ,)
			  (VBI tourne#turn_v)
			  (NP-OB1 (D these#these_pron) (NS quantities#quantity_n))
			  (PP (P into#into_prep)
			      (NP (N numbre#number_n)))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B2V.49))

( (IP-MAT (IP-MAT-1 (ADVP (ADV so#so_adv))
		    (MD shall#shall_v)
		    (NP-SBJ (N A.#NA) (CONJ and#and_conj1) (N B.#NA))
		    (VB make#make_v1)
		    (NP-OB1 (NUM sixteene#sixteen_adj)))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (NP-SBJ (N C.#NA))
			   (NP-OB1 (QP (ADVR as#as_adv) (Q many#many_adj)))))
	  (PUNC .)
	  (CODE {COM:figure_omitted})
	  (PP (P As#as_adv)
	      (CP-ADV (WNP-2 0)
		      (C 0)
		      (IP-SUB (NP-OB1 *T*-2)
			      (NP-SBJ (PRO you#you_pron))
			      (MD may#may_v1)
			      (VB perceaue#perceive_v)
			      (PP (P by#by_prep)
				  (IP-PPL (VAG multipliyng#multiply_v)
					  (NP-OB1 (D the#the_adj)
						  (N numbre#number_n)
						  (PP (P of#of_prep)
						      (NP (PRO$ their#their_adj) (NS sides#side_n1))))
					  (ADVP (ADV togither#together_adv)))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2V.50))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ SECONDE#second_adj) (ADJ COMMON#common_adj) (N SENTENCE#sentence_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,B2V.52))

( (CODE <$$heading>))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP adde#add_v)
			      (NP-OB1 (ADJ equall#equal_adj) (NS portions#portion_n))
			      (PP (P to#to_prep)
				  (NP (NS thinges#thing_n1)
				      (CP-REL (WNP-1 0)
					      (C that#that_conj)
					      (IP-SUB (NP-SBJ *T*-1)
						      (BEP be#be_v)
						      (ADJP-PRD (ADJ equall#equal_adj)))))))))
	  (PUNC ,)
	  (NP-SBJ (CP-FRL (WNP-2 (WPRO what#what_pron))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-2)
				  (ADVP (ADV so#so_adv))
				  (VBP amounteth#amount_v)
				  (PP (P of#of_prep)
				      (NP (PRO them#them_pron))))))
	  (CODE <P_2,B3R>)
	  (MD shall#shall_v)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3R.54))

( (NP (N Example#example_n) (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B3R.55))

( (IP-MAT (PP (P Yf#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (NP-SBJ (PRO you#you_pron) (CONJ and#and_conj1) (PRO I#i_pron))
				      (HVP haue#have_v)
				      (NP-OB1 (ADJ like#like_adj)
					      (NS summes#sum_n1)
					      (PP (P of#of_prep)
						  (NP (N mony#money_n)))))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB (NP-SBJ *con*)
					     (ADVP-TMP (ADV then#then_adv))
					     (VBP receaue#receive_v)
					     (QP (Q eche#each_adj)
						 (PP (P of#of_prep)
						     (NP (PRO vs#us_pron))))
					     (NP-OB1 (ADJ like#like_adj)
						     (NS summes#sum_n1)
						     (QP (QR more#more_adj))))))))
	  (PUNC ,)
	  (ADVP (ADV then#then_adv))
	  (NP-SBJ (PRO$ our#our_pron) (NS summes#sum_n1))
	  (MD wil#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ like#like_adj))
	  (ADVP-TMP (ADV styll#still_adv))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3R.56))

( (IP-MAT (ALSO Also#also_adv)
	  (PP-LFD (P if#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (N A.#NA) (CONJ and#and_conj1) (N B.#NA))
				  (PUNC <paren>)
				  (PP-PRN (P as#as_adv)
					  (PP (P in#in_prep)
					      (NP (D the#the_adj) (ADJ former#former_adj) (N example#example_n))))
				  (PUNC <$$paren>)
				  (BEP bee#be_v)
				  (ADJP-PRD (ADJ equall#equal_adj)))))
	  (PUNC ,)
	  (ADVP-RSP (ADV then#then_adv))
	  (PP (P by#by_prep)
	      (IP-PPL (VAG adding#add_v)
		      (NP-OB1 (D an#a_adj) (ADJ equal#equal_adj) (N portion#portion_n))
		      (PP (P to#to_prep)
			  (NP (PRO them#them_pron)
			      (QP (Q both#both_pron))))))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (FRAG (PP (P to#to_prep)
			(NP (Q ech#each_adj)
			    (PP (P of#of_prep)
				(NP (PRO them#them_pron)))))
		    (PUNC ,)
		    (NP (D the#the_adj)
			(N quarter#quarter_n)
			(PP (P of#of_prep)
			    (NP (N A.#NA))))))
	  (PUNC <paren>)
	  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
		      (BEP is#be_v)
		      (NP-PRD (NUM foure#four_adj)))
	  (PUNC <$$paren>)
	  (NP-SBJ (PRO they#they_pron))
	  (MD will#will_v1)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj))
	  (ADVP-TMP (ADV still#still_adv))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3R.57))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ THIRDE#third_adj) (ADJ COMMON#common_adj) (N SENTENCE#sentence_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3R.59))

( (CODE <$$heading>))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP abate#abate_v1)
			      (NP-OB1 (ADJ euen#even_adj1) (NS portions#portion_n))
			      (PP (P from#from_prep)
				  (NP (NS things#thing_n1)
				      (CP-REL (WNP-1 0)
					      (C that#that_conj)
					      (IP-SUB (NP-SBJ *T*-1)
						      (BEP are#be_v)
						      (ADJP-PRD (ADJ equal#equal_adj)))))))))
	  (PUNC ,)
	  (NP-SBJ (D those#those_pron)
		  (NS partes#part_n1)
		  (CP-REL (WNP-2 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-2)
				  (VBP remain#remain_v))))
	  (MD shall#shall_v)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj))
	  (ALSO also#also_adv)
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3R.61))

( (IP-MAT (NP-OB1 (D This#this_pron))
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB perceaue#perceive_v)
	  (PP (P by#by_prep)
	      (NP (D the#the_adj) (ADJ laste#last_adv) (N example#example_n)))
	  (PUNC .)
	  (PP (P For#for_prep)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (NP-SBJ (CP-FRL (WNP-1 0)
					      (C that#that_conj)
					      (IP-SUB (NP-SBJ *T*-1)
						      (BED was#be_v)
						      (VAN added#add_v)
						      (ADVP-LOC (ADV there#there_adv)))))
			      (PUNC ,)
			      (BEP is#be_v)
			      (VAN subtracted#subtract_v)
			      (ADVP-LOC (ADV heere#here_adv)))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3R.62))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (NP-SBJ (D the#the_adj) (ONE one#one_adj))
	  (DOP doothe#do_v)
	  (VB approue#approve_v1)
	  (NP-OB1 (D the#the_adj) (OTHER other#other_adj))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3R.63))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ FOURTH#NA) (ADJ COMMON#common_adj) (N SENTENCE#sentence_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3R.65))

( (CODE <$$heading>))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO you#you_pron))
			      (VBP abate#abate_v1)
			      (NP-OB1 (ADJ equalle#equal_adj) (NS partes#part_n1))
			      (PP (P from#from_prep)
				  (NP (ADJ vnequal#unequal_adj) (NS thinges#thing_n1))))))
	  (PUNC ,)
	  (NP-SBJ (D the#the_adj) (NS remainers#remainer_n1))
	  (MD shall#shall_v)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ vnequall#unequal_adj))
	  (PUNC .)
	  (PP (P As#as_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (PP (P bicause#because_adv)
				  (CP-ADV (C that#that_conj)
					  (IP-SUB (NP-SBJ (NUMP (NUM a_hundreth_and_eight#NA)
								(CONJP (CONJ and#and_conj1) (NUM forty#forty_adj))))
						  (BEP be#be_v)
						  (ADJP-PRD (ADJ vnequal#unequal_adj)))))
			      (PP (P if#if_conj)
				  (CP-ADV (C 0)
					  (IP-SUB (NP-SBJ (PRO I#i_pron))
						  (VBP take#take_v)
						  (NP-OB1 (NUM tenne#ten_adj))
						  (PP (P from#from_prep)
						      (NP (PRO them#them_pron)
							  (QP (Q both#both_pron)))))))
			      (PUNC ,)
			      (NP-SBJ-1 (EX there#there_adv))
			      (MD will#will_v1)
			      (VB remayne#remain_v)
			      (NP-1 (NUMP (NUM nynetye_and_eight#NA))
				    (CONJP (CONJ and#and_conj1)
					   (NUMP (NUM thirty#thirty_adj)))
				    (PUNC ,)
				    (CP-REL (WNP-2 (WPRO which#which_adj))
					    (C 0)
					    (IP-SUB (NP-SBJ *T*-2)
						    (BEP are#be_v)
						    (ALSO also#also_adv)
						    (ADJP-PRD (ADJ vnequall#unequal_adj))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B3R.67))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-ADV (N likewise#likewise_adv))
	  (PP (P in#in_prep)
	      (NP (NS quantities#quantity_n)))
	  (NP-SBJ (PRO it#it_pron))
	  (BEP is#be_v)
	  (IP-INF (TO to#to_prep) (BE be#be_v) (VAN iudged#judge_v))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3R.68))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ FIFTE#NA) (ADJ COMMON#common_adj) (N SENTENCE#sentence_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3R.70))

( (CODE <$$heading>))

( (IP-MAT (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (ADJ euen#even_adj1) (NS portions#portion_n))
			      (BEP are#be_v)
			      (VAN added#add_v)
			      (PP (P to#to_prep)
				  (NP (ADJ vnequalle#unequal_adj) (NS thinges#thing_n1))))))
	  (PUNC ,)
	  (NP-SBJ (D those#those_pron)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (VBP amounte#amount_v))))
	  (MD shal@#shall_v)
	  (BE @be#be_v)
	  (ADJP-PRD (ADJ vnequall#unequal_adj))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3R.72))

( (CODE <P_2,B3V>))

( (IP-MAT (ADVP (ADV So#so_adv))
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB-1 (NP-SBJ (PRO you#you_pron))
					(VBP adde#add_v)
					(NP-OB1 (NUM twenty#twenty_adj))
					(PP (P to#to_prep)
					    (NP (NUM fifty#fifty_adj))))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB=1 (NP-ADV (ADJ lyke#like_adj) (NS ways#way_n1))
					       (PP (P to#to_prep)
						   (NP (NUM nynty#ninety_adj))))))))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD shall#shall_v)
	  (VB make#make_v1)
	  (NP-OB1 (NP (NUM seuenty#seventy_adj))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1) (NUM a_hundred_and_ten#NA))
		  (CP-REL (WNP-2 (WPRO whiche#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-2)
				  (BEP are#be_v)
				  (ADJP-PRD (QP (Q no#no_adj) (QR lesse#less_adj))
					    (ADJ vnequall#unequal_adj)
					    (PUNC ,)
					    (PP (P than#than_conj)
						(CP-CMP (WADJP-3 0)
							(C 0)
							(IP-SUB (ADJP-PRD *T*-3)
								(BED were#be_v)
								(NP-SBJ (NUM fifty#fifty_adj) (CONJ and#and_conj1) (NUM nynty#ninety_adj)))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3V.74))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ SYXT#NA) (ADJ COMMON#common_adj) (N SENTENCE#sentence_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3V.76))

( (CODE <$$heading>))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (NUM two#two_adj) (NS thinges#thing_n1))
			      (BEP be#be_v)
			      (ADJP-PRD (ADJ double#double_adj1)
					(PP (P to#to_prep)
					    (NP (Q any#any_adj) (OTHER other#other_adj)))))))
	  (PUNC ,)
	  (NP-SBJ (D those#those_pron) (ADJ same#same_adj) (NUM two#two_adj) (NS thinges#thing_n1))
	  (BEP are#be_v)
	  (ADJP-PRD (ADJ equal#equal_adj))
	  (ADVP (ADV togither#together_adv))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3V.78))

( (CODE {COM:figures_omitted}))

( (IP-MAT (PP-LFD (P Bicause#because_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (N A.#NA) (CONJ and#and_conj1) (N B.#NA))
				  (BEP are#be_v)
				  (QP (Q eche#each_adj)
				      (PP (P of#of_prep)
					  (NP (PRO them#them_pron))))
				  (ADJP-PRD (ADJ double#double_adj1)
					    (PP (P to#to_prep)
						(NP (N C#NA)))))))
	  (PUNC ,)
	  (PP-RSP (ADV+P therefore#therefore_adv))
	  (MD must#must_v1)
	  (NP-SBJ (N A.#NA) (CONJ and#and_conj1) (N B.#NA))
	  (ADVP (ADV nedes#needs_adv))
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj))
	  (ADVP (ADV togither#together_adv))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3V.80))

( (IP-MAT (CONJ For#for_prep)
	  (PP (P as#as_adv)
	      (CP-CMP (WADVP-1 0)
		      (C 0)
		      (IP-SUB (ADVP *T*-1)
			      (NP-SBJ (NP-MSR (NUM v.#five_v) (NS times#time_n))
				      (NUM viij.#eight_adj))
			      (VBP maketh#make_v1)
			      (NP-OB1 (NUM xl.#forty_adj)
				      (CP-REL (WNP-2 (WPRO which#which_adj))
					      (C 0)
					      (IP-SUB (NP-SBJ *T*-2)
						      (BEP is#be_v)
						      (ADJP-PRD (ADJ double#double_adj1)
								(PP (P to#to_prep)
								    (NP (NP-MSR (NUM iiij.#four_adj) (NS times#time_n))
									(NUM v#five_v)
									(PUNC ,)
									(IP-MAT-PRN (NP-SBJ (D that#that_pron1))
										    (BEP is#be_v)
										    (NP-PRD (NUM xx#twenty_adj))))))))))))
	  (ADVP (ADV so#so_adv))
	  (NP-SBJ (NP-MSR (NUM iiij.#four_adj) (NS times#time_n))
		  (NUM x#ten_adj))
	  (PUNC ,)
	  (NP-ADV (N likewise#likewise_adv))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ double#double_adj1)
		    (PP (P to#to_prep)
			(NP (NUM xx#twenty_adj))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3V.81))

( (IP-MAT (PUNC <paren>)
	  (CONJ for#for_prep)
	  (NP-SBJ (PRO it#it_pron))
	  (VBP maketh#make_v1)
	  (NP-OB1 (NUM fortie#forty_adj))
	  (PUNC <$$paren>))
  (ID RECORD-1551-E1-P2,2,B3V.82))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (ADV+P therefore#therefore_adv))
	  (NP-SBJ *con*)
	  (MD must#must_v1)
	  (ADVP (ADV neades#needs_adv))
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (NUM forty#forty_adj))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3V.83))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ SEUENTH#NA) (ADJ COMMON#common_adj) (N SENTENCE#sentence_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3V.85))

( (CODE <$$heading>))

( (IP-MAT (PP-LFD (P If#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (Q any#any_adj) (NUM two#two_adj) (NS thinges#thing_n1))
				  (BEP be#be_v)
				  (NP-PRD (D the#the_adj)
					  (NS halfes#half_n)
					  (PP (P of#of_prep)
					      (NP (ONE one#one_adj) (OTHER other#other_adj) (N thing#thing_n1)))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV than#then_adv))
	  (BEP are#be_v)
	  (NP-SBJ (PRO thei#they_pron) (NUM .ij.#two_adj))
	  (ADJP-PRD (ADJ equall#equal_adj))
	  (ADVP (ADV togither#together_adv))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3V.87))

( (IP-MAT (ADVP (ADV So#so_adv))
	  (BEP are#be_v)
	  (NP-SBJ (N D.#NA) (CONJ and#and_conj1) (N C.#NA))
	  (PP (P in#in_prep)
	      (NP (D the#the_adj) (ADJ laste#last_adv) (N example#example_n)))
	  (ADJP-PRD (ADJ equal#equal_adj))
	  (ADVP (ADV togyther#together_adv))
	  (PUNC ,)
	  (PP (P bicause#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (QP (Q eche#each_adj)
				  (PP (P of#of_prep)
				      (NP (PRO them#them_pron))))
			      (NP-PRD (D the#the_adj)
				      (NUM halfe#half_adj)
				      (PP (PP (P of#of_prep)
					      (NP (N A#NA)))
					  (PUNC ,)
					  (CONJP (CONJ other#other_conj)
						 (PP (P of#of_prep)
						     (NP (N B#NA))))))
			      (PUNC ,)
			      (PP (P as#as_adv)
				  (CP-ADV (WNP-1 0)
					  (C 0)
					  (IP-SUB (NP-OB1 *T*-1)
						  (NP-SBJ (PRO$ their#their_adj) (N numbre#number_n))
						  (VBP declareth#declare_v)))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3V.88))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM EYGHT#eight_adj) (ADJ COMMON#common_adj) (N SENTENCE#sentence_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,B3V.90))

( (CODE <$$heading>))

( (IP-MAT (PP-LFD (P If#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (IP-SUB (NP-SBJ (Q any#any_adj) (ONE one#one_adj) (N quantitee#quantity_n))
					  (BEP be#be_v)
					  (VAN laide#lay_v1)
					  (PP (P on#on_prep)
					      (NP (D an#a_adj) (OTHER other#other_adj))))
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (IP-SUB (NP-SBJ (PRO thei#they_pron))
						 (VBP agree#agree_v)
						 (PUNC ,)
						 (PP (P so#so_adv)
						     (CP-ADV (C that#that_conj)
							     (IP-SUB (NP-SBJ (D the#the_adj) (ONE one#one_adj))
								     (CODE <P_2,B4R>)
								     (VBP excedeth#exceed_v)
								     (NEG not#not_adv)
								     (NP-OB1 (D the#the_adj) (OTHER other#other_adj))))))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV then#then_adv))
	  (BEP are#be_v)
	  (NP-SBJ (PRO they#they_pron))
	  (ADJP-PRD (ADJ equall#equal_adj))
	  (ADVP (ADV togither#together_adv))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B4R.92))

( (PP (P As#as_adv)
      (CP-ADV (C 0)
	      (IP-SUB (PP (P if#if_conj)
			  (CP-ADV (C 0)
				  (IP-SUB (NP-SBJ (D this#this_pron)
						  (N figure#figure_n)
						  (NP-PRN (N A.B.C.#abc_n1)))
					  (CODE {COM:figure_omitted})
					  (BEP be#be_v)
					  (VAN layed#lay_v1)
					  (PP (P on#on_prep)
					      (NP (D that#that_pron1)
						  (OTHER other#other_adj)
						  (NP-PRN (N D.E.F#NA))))
					  (PUNC ,)
					  (CODE {COM:figure_omitted})
					  (PP (P so#so_adv)
					      (CP-ADV (C that#that_conj)
						      (IP-SUB (IP-SUB-1 (NP-SBJ (N A.#NA))
									(BEP be#be_v)
									(VAN layed#lay_v1)
									(PP (P to#to_prep)
									    (NP (N D#NA))))
							      (PUNC ,)
							      (CONJP (IP-SUB=1 (NP-SBJ (N B.#NA))
									       (PP (P to#to_prep)
										   (NP (N E#NA)))))
							      (PUNC ,)
							      (CONJP (CONJ and#and_conj1)
								     (IP-SUB=1 (NP-SBJ (N C.#NA))
									       (PP (P to#to_prep)
										   (NP (N F#NA)))))))))))
		      (PUNC ,)
		      (NP-SBJ (PRO you#you_pron))
		      (MD shall#shall_v)
		      (VB see#see_v)
		      (IP-INF (IP-INF (NP-SBJ (PRO them#them_pron))
				      (VB agre#agree_v)
				      (PP (P in#in_prep)
					  (NP (NS sides#side_n1)))
				      (ADVP (ADV exactlye#exactly_adv)))
			      (CONJP (CONJ and#and_conj1)
				     (IP-INF (NP-SBJ (D the#the_adj) (ONE one#one_adj))
					     (NEG not#not_adv)
					     (TO to#to_prep)
					     (VB excede#exceed_v)
					     (NP-OB1 (D the#the_adj) (OTHER other#other_adj)))))))
      (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B4R.93))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (D the#the_adj)
		  (N line#line_n2)
		  (NP-PRN (N A.B.#NA)))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (N D.E#NA))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B4R.94))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj)
		  (ADJ third#third_adj)
		  (N lyne#line_n2)
		  (NP-PRN (N C.A#NA)))
	  (PUNC ,)
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ equal#equal_adj)
		    (PP (P to#to_prep)
			(NP (N F.D#NA))))
	  (PP (P so#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (NP-SBJ (Q euery#every_adj)
				      (N side#side_n1)
				      (PP (P in#in_prep)
					  (NP (D the#the_adj) (ONE one#one_adj))))
			      (BEP is#be_v)
			      (ADJP-PRD (ADJ equall#equal_adj)
					(PP (P to#to_prep)
					    (NP (Q some#some_pron)
						(ONE one#one_adj)
						(N side#side_n1)
						(PP (P of#of_prep)
						    (NP (D the#the_adj) (OTHER other#other_adj))))))
			      (PUNC .)
			      (CP-CAR (WPP-1 (WADV+P wherfore#wherefore_adv))
				      (C 0)
				      (IP-SUB (PP *T*-1)
					      (NP-SBJ-2 (PRO it#it_pron))
					      (BEP is#be_v)
					      (ADJP-PRD (ADJ playne#plain_adj2))
					      (PUNC ,)
					      (CP-THT-2 (C that#that_conj)
							(IP-SUB (NP-SBJ (D the#the_adj) (NUM two#two_adj) (NS triangles#triangle_n))
								(BEP are#be_v)
								(ADJP-PRD (ADJ equall#equal_adj))
								(ADVP (ADV togither#together_adv)))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B4R.95))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ NYNTH#NA) (ADJ COMMON#common_adj) (N SENTENCE#sentence_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,B4R.97))

( (CODE <$$heading>))

( (IP-MAT (NP-SBJ (Q Euery#every_adj) (ADJ whole#whole_adj) (N thing#thing_n1))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJR greater#great_adj)
		    (PP (P than#than_conj)
			(NP (Q any#any_adj)
			    (PP (P of#of_prep)
				(NP (PRO$ his#his_adj) (NS partes#part_n1))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B4R.99))

( (IP-MAT (NP-SBJ (D This#this_pron) (N sentence#sentence_n))
	  (VBP nedeth#need_v2)
	  (NP-OB1 (Q none#none_pron) (N example#example_n))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B4R.100))

( (IP-MAT (CONJ For#for_prep)
	  (NP-SBJ (D the#the_adj) (N thyng#thing_n1))
	  (BEP is#be_v)
	  (ADJP-PRD (QR more#more_adj)
		    (ADJR playner#plain_adj2)
		    (PP (P then#than_conj)
			(NP (Q any#any_adj) (N declaration#declaration_n))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B4R.101))

( (IP-MAT (ADVP (ADV yet#yet_adv))
	  (IP-PPL (VAG considering#consider_v)
		  (NP-OB1 (D that#that_pron1)
			  (OTHER other#other_adj)
			  (ADJ commen#common_adj)
			  (N sentence#sentence_n)
			  (CP-REL (WNP-1 0)
				  (C that#that_conj)
				  (IP-SUB (NP-SBJ *T*-1)
					  (VBP foloweth#follow_v)
					  (ADVP-TMP (ADVS nexte#next_adj))))
			  (CP-THT-PRN (C that#that_conj)
				      (PUNC .)
				      (CODE <heading>)
				      (META (NP (D THE#the_adj) (ADJ TENTHE#NA) (ADJ COMMON#common_adj) (N SENTENCE#sentence_n)))
				      (PUNC .)
				      (CODE <$$heading>)
				      (IP-SUB (NP-SBJ (Q Euery#every_adj) (ADJ whole#whole_adj) (N thinge#thing_n1))
					      (BEP is#be_v)
					      (ADJP-PRD (ADJ equall#equal_adj)
							(PP (P to#to_prep)
							    (NP (Q all#all_adj)
								(PRO$ his#his_adj)
								(NS partes#part_n1)
								(RRC (VAN taken#take_v)
								     (ADVP (ADV togither#together_adv))))))))))
	  (PUNC .)
	  (NP-SBJ-2 (PRO It#it_pron))
	  (MD shall#shall_v)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ mete#meet_adj))
	  (IP-INF-2 (TO to#to_prep)
		    (VB expresse#express_v1)
		    (NP-OB1 (Q both#both_pron))
		    (PP (P w=t=#with_prep)
			(NP (ONE one#one_adj) (N example#example_n))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B4R.102))

( (IP-MAT (CONJ for#for_prep)
	  (PP (P of#of_prep)
	      (NP (D thys#this_pron) (ADJ last#last_adv) (N se~tence#sentence_n)))
	  (NP-SBJ (Q many#many_adj) (NS me~#man_n1))
	  (PP (P at#at_prep)
	      (NP (D the#the_adj) (ADJ first#first_adj) (N hearing#hearing_n)))
	  (DOP do#do_v)
	  (VB make#make_v1)
	  (NP-OB1 (D a#a_adj) (N doubt#doubt_n1))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B4R.103))

( (IP-MAT (PP (ADV Ther#there_adv) (P fore#for_prep))
	  (PP (P as#as_adv)
	      (CP-CMP (WADVP-1 0)
		      (C 0)
		      (IP-SUB (ADVP *T*-1)
			      (PP (P in#in_prep)
				  (NP (D this#this_pron)
				      (N example#example_n)
				      (PP (P of#of_prep)
					  (NP (D the#the_adj)
					      (N circle#circle_n)
					      (RRC (VAN deuided#divide_v)
						   (PP (P into#into_prep)
						       (NP (ADJ su~dry#sundry_adj) (NS partes#part_n1))))))))
			      (CODE <P_2,B4V>)
			      (CODE {COM:figure_omitted})
			      (NP-SBJ-2 (PRO it#it_pron))
			      (DOP doeth#do_v)
			      (VB appere#appear_v)
			      (CP-THT-2 (C that#that_conj)
					(IP-SUB (NP-SBJ (Q no#no_adj) (N parte#part_n1))
						(MD can#can_v1)
						(BE be#be_v)
						(ADJP-PRD (ADVR so#so_adv)
							  (ADJ great#great_adj)
							  (PP (P as#as_adv)
							      (NP (D the#the_adj) (ADJ whole#whole_adj) (N circle#circle_n))))
						(PUNC ,)
						(PUNC <paren>)
						(IP-PPL (VAG accordyng#accord_v)
							(PP (P to#to_prep)
							    (NP (D the#the_adj)
								(N meanyng#meaning_n2)
								(PP (P of#of_prep)
								    (NP (D the#the_adj) (NUM eight#eight_adj) (N sentence#sentence_n)))))))))))
	  (PUNC <$$paren>)
	  (ADVP (ADV so#so_adv))
	  (ADVP (ADV yet#yet_adv))
	  (NP-SBJ-3 (PRO it#it_pron))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ certain#certain_adj))
	  (PUNC ,)
	  (CP-THT-3 (C that#that_conj)
		    (IP-SUB (NP-SBJ (Q all#all_adj) (D those#those_pron) (NUM eight#eight_adj) (NS partes#part_n1))
			    (ADVP (ADV together#together_adv))
			    (BEP be#be_v)
			    (ADJP-PRD (ADJ equall#equal_adj)
				      (PP (P vnto#unto_prep)
					  (NP (D the#the_adj) (ADJ whole#whole_adj) (N circle#circle_n))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B4V.104))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-SBJ (D this#this_pron))
	  (BEP is#be_v)
	  (NP-PRD (D the#the_adj)
		  (N meanyng#meaning_n2)
		  (PP (P of#of_prep)
		      (NP (D that#that_pron1)
			  (ADJ common#common_adj)
			  (N sentence#sentence_n)
			  (PUNC <paren>)
			  (CP-REL (WNP-1 (WPRO whiche#which_adj))
				  (C 0)
				  (IP-SUB (IP-SUB (NP-OB1 *T*-1)
						  (NP-SBJ (Q many#many_adj))
						  (VBP vse#use_v))
					  (PUNC ,)
					  (CONJP (CONJ and#and_conj1)
						 (IP-SUB (NP-OB1 *T*-1)
							 (NP-SBJ (Q fewe#few_adj))
							 (DOP do#do_v)
							 (ADVP (ADV rightly#rightly_adv))
							 (VB understand#understand_v)))))
			  (PUNC <$$paren>)
			  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
				      (BEP is#be_v)
				      (PUNC ,)
				      (CP-THT (C that#that_conj)
					      (CODE <font>)
					      (IP-SUB (IP-SUB (NP-SBJ (Q All#all_adj)
								      (D the#the_adj)
								      (NS partes#part_n1)
								      (PP (P of#of_prep)
									  (NP (Q any#any_adj) (N thing#thing_n1))))
							      (BEP are#be_v)
							      (NP-PRD (Q+N nothing#nothing_pron)
								      (ADJP (ADJ els#else_adv))
								      (PUNC ,)
								      (PP (P but#but_prep)
									  (NP (D the#the_adj) (N whole#whole_adj)))))
						      (PUNC .)
						      (CODE <$$font>)
						      (CONJP (CONJ And#and_conj1)
							     (IP-SUB (NP-ADV (ADJ contrary#contrary_adj) (NS waies#way_n1))
								     (PUNC :)
								     (CODE <font>)
								     (NP-SBJ (D The#the_adj) (N whole#whole_adj))
								     (BEP is#be_v)
								     (NP-PRD (Q+N nothing#nothing_pron)
									     (ADJP (ADJ els#else_adv))
									     (PUNC ,)
									     (PP (P but#but_prep)
										 (NP (Q all#all_adj)
										     (PRO$ his#his_adj)
										     (NS partes#part_n1)
										     (RRC (VAN taken#take_v)
											  (ADVP (ADV togither#together_adv))))))))
						      (PUNC .)
						      (CODE <$$font>)
						      (CP-CAR (WNP-2 (WD whiche#which_adj) (NS saiynges#saying_n1))
							      (C 0)
							      (IP-SUB (NP-SBJ (Q some#some_pron))
								      (HVP haue#have_v)
								      (VBN vnderstand#understand_v)
								      (IP-INF (NP-SBJ *T*-2)
									      (TO to#to_prep)
									      (VB meane#mean_v1)
									      (ADVP (ADV thus#thus_adv)
										    (PUNC :)
										    (CP-THT-PRN (C that#that_conj)
												(IP-SUB (NP-SBJ (Q all#all_adj) (D the#the_adj) (NS partes#part_n1))
													(BEP are#be_v)
													(PP (P of#of_prep)
													    (NP (D the#the_adj)
														(ADJ same#same_adj)
														(N kind#kind_n)
														(CP-REL (WNP-3 0)
															(C that#that_conj)
															(IP-SUB (NP-PRD *T*-3)
																(NP-SBJ (D the#the_adj) (ADJ whole#whole_adj) (N thyng#thing_n1))
																(BEP is#be_v)))))))))))))))))
	  (PUNC :))
  (ID RECORD-1551-E1-P2,2,B4V.105))

( (IP-MAT (CONJ but#but_prep)
	  (CP-THT-1 (C that#that_conj)
		    (IP-SUB (NP-SBJ (D that#that_pron1) (N meanyng#meaning_n2))
			    (BEP is#be_v)
			    (ADJP-PRD (ADJ false#false_adj))))
	  (PUNC ,)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (DOP doth#do_v)
	  (ADVP (ADV plainly#plainly_adv1))
	  (VB appere#appear_v)
	  (PP (P by#by_prep)
	      (NP (D this#this_pron)
		  (N figure#figure_n)
		  (NP-PRN (N A.B#NA))
		  (PUNC ,)
		  (CODE {COM:figure_omitted})
		  (CP-REL (WNP-2 (WPRO$ whose#whose_pron)
				 (NS partes#part_n1)
				 (NP-PRN (N A.#NA) (CONJ and#and_conj1) (N B#NA)))
			  (C 0)
			  (PUNC ,)
			  (IP-SUB (IP-SUB (NP-SBJ *T*-2)
					  (BEP are#be_v)
					  (NP-PRD (NS triangles#triangle_n)))
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (IP-SUB (NP-SBJ (D the#the_adj) (ADJ whole#whole_adj) (N figure#figure_n))
						 (BEP is#be_v)
						 (NP-PRD (D a#a_adj) (N square#square_n))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B4V.106))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (NP-SBJ (PRO they#they_pron))
	  (BEP are#be_v)
	  (NEG not#not_adv)
	  (PP (P of#of_prep)
	      (NP (ONE one#one_adj) (N kind#kind_n)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B4V.107))

( (IP-MAT (CONJ But#but_prep)
	  (CONJ and#and_conj1)
	  (PP-LFD (P if#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (PRO they#they_pron))
				  (VBP applie#apply_v)
				  (NP-OB1 (PRO it#it_pron))
				  (PP (P to#to_prep)
				      (NP (D the#the_adj)
					  (N matter#matter_n1)
					  (CONJP (CONJ or#or_conj1)
						 (NX (N substance#substance_n)))
					  (PP (P of#of_prep)
					      (NP (NS thinges#thing_n1)))))
				  (PUNC <paren>)
				  (PP-PRN (P as#as_adv)
					  (CP-ADV (WNP-1 0)
						  (C 0)
						  (IP-SUB (NP-OB1 *T*-1)
							  (NP-SBJ (Q some#some_pron))
							  (DOP do#do_v)
							  (VB *)))))))
	  (PUNC <$$paren>)
	  (ADVP-RSP (ADV then#then_adv))
	  (NP-SBJ (PRO it#it_pron))
	  (BEP is#be_v)
	  (ADJP-PRD (QS moste#most_adj) (ADJ false#false_adj))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B4V.108))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (Q euery#every_adj) (ADJ compound#compound_adj) (N thyng#thing_n1))
	  (BEP is#be_v)
	  (VAN made#make_v1)
	  (PP (P of#of_prep)
	      (NP (NS partes#part_n1)
		  (PP (P of#of_prep)
		      (NP (ADJ diuerse#diverse_adj)
			  (N matter#matter_n1)
			  (CONJP (CONJ and#and_conj1)
				 (NX (N substance#substance_n)))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B4V.109))

( (IP-IMP (VBI Take#take_v)
	  (PP (P for#for_prep)
	      (NP (N example#example_n)))
	  (NP-OB1 (NP (D a#a_adj) (N man#man_n1))
		  (PUNC ,)
		  (CONJP (NP (D a#a_adj) (N house#house_n1)))
		  (PUNC ,)
		  (CONJP (NP (D a#a_adj) (N boke#book_n)))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (NP (Q all#all_adj) (OTHER other#other_adj) (ADJ compound#compound_adj) (NS thinges#thing_n1))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B4V.110))

( (IP-MAT (NP-SBJ (Q Some#some_pron))
	  (VBP vnderstand#understand_v)
	  (NP-OB1 (PRO it#it_pron))
	  (ADVP (ADV thus#thus_adv)
		(PUNC ,)
		(CP-THT-PRN (C that#that_conj)
			    (IP-SUB (NP-SBJ (D the#the_adj) (NS partes#part_n1))
				    (ADVP (Q all#all_adj) (ADV together#together_adv))
				    (MD can#can_v1)
				    (VB make#make_v1)
				    (NP-OB1 (Q none#none_pron)
					    (OTHER other#other_adj)
					    (N forme#form_n)
					    (PUNC ,)
					    (PP (P but#but_prep)
						(NP (D that#that_pron1)
						    (CP-REL (WNP-1 0)
							    (C that#that_conj)
							    (IP-SUB (NP-OB1 *T*-1)
								    (NP-SBJ (D the#the_adj) (N whole#whole_adj))
								    (DOP doth#do_v)
								    (VB shewe#show_v))))))
				    (PUNC ,)
				    (CP-CAR (WNP-2 (WPRO whiche#which_adj))
					    (C 0)
					    (IP-SUB (NP-SBJ *T*-2)
						    (BEP is#be_v)
						    (ALSO also#also_adv)
						    (ADJP-PRD (ADJ false#false_adj)))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B4V.111))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (PRO I#i_pron))
	  (VBP make#make_v1)
	  (NP-OB1 (NUM fiue_hundred#NA)
		  (ADJ diuerse#diverse_adj)
		  (NS figures#figure_n)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (NS partes#part_n1)
			  (PP (P of#of_prep)
			      (NP (Q some#some_pron) (ONE one#one_adj) (N figure#figure_n))))))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-OB1 *T*-1)
			      (NP-SBJ (PRO you#you_pron))
			      (MD shall#shall_v)
			      (ADVP (ADVR better#better_adj))
			      (VB perceiue#perceive_v)
			      (PP (P in#in_prep)
				  (NP (D the#the_adj) (ADJ third#third_adj) (N boke#book_n))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B4V.112))

( (IP-IMP (CONJ And#and_conj1)
	  (PP (P in#in_prep)
	      (NP (D the#the_adj) (ADJ meane#mean_adj2) (N seaso~#season_n)))
	  (VBI take#take_v)
	  (PP (P for#for_prep)
	      (NP (D an#a_adj) (N exa~ple#example_n)))
	  (NP-OB1 (D this#this_pron)
		  (ADJ square#square_adj)
		  (N figure#figure_n)
		  (RRC (VAG folowing#follow_v))
		  (NP-PRN (N A.B.C.D#NA))
		  (PUNC ,)
		  (CODE {COM:figures_on_next_page_omitted})
		  (CP-REL (WNP-1 (WPRO w=ch=#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP is#be_v)
				  (VAN deuided#divide_v)
				  (PP (FP but#but_prep)
				      (P into#into_prep)
				      (NP (NUM two#two_adj) (NS parts#part_n1))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B4V.113))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV yet#yet_adv))
	  (PUNC <paren>)
	  (PP-PRN (P as#as_adv)
		  (CP-ADV (WNP-1 0)
			  (C 0)
			  (IP-SUB (NP-OB1 *T*-1)
				  (NP-SBJ (PRO you#you_pron))
				  (VBP se#see_v))))
	  (PUNC <$$paren>)
	  (NP-SBJ (PRO I#i_pron))
	  (HVP haue#have_v)
	  (VBN made#make_v1)
	  (NP-OB1 (NUM fiue#five_v)
		  (NS figures#figure_n)
		  (QP (QR more#more_adj))
		  (PP (P beside#beside_adv)
		      (NP (D the#the_adj) (ADJ firste#first_adj))))
	  (PUNC ,)
	  (PP (P with#with_prep)
	      (NP (FP onely#only_adj)
		  (ADJ diuerse#diverse_adj)
		  (N ioynyng#joining_n)
		  (PP (P of#of_prep)
		      (NP (D those#those_pron) (NUM two#two_adj) (NS partes#part_n1)))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,B4V.114))

( (IP-MAT (CONJ But#but_prep)
	  (PP (P of#of_prep)
	      (NP (D this#this_pron)))
	  (MD shall#shall_v)
	  (NP-SBJ (PRO I#i_pron))
	  (VB speake#speak_v)
	  (ADVP (QR more#more_adj) (ADV largely#largely_adv))
	  (PP (P in#in_prep)
	      (NP (D an#a_adj) (OTHER other#other_adj) (N place#place_n1)))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B4V.115))

( (IP-IMP (PP (P in#in_prep)
	      (NP (D the#the_adj) (ADJ mean#mean_adj2) (N season#season_n)))
	  (VBI content#content_v)
	  (NP-RFL (PRO$ your#your_pron) (N self#self_pron))
	  (PP (P with#with_prep)
	      (NP (D these#these_pron)
		  (NS principles#principle_n)
		  (PUNC ,)
		  (CP-REL (WNP-1 (WPRO whiche#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP are#be_v)
				  (ADJP-PRD (ADJ certain#certain_adj)
					    (PP (P of#of_prep)
						(NP (D the#the_adj)
						    (ADJ chiefe#chief_adj)
						    (NS groundes#ground_n)
						    (CP-REL (WPP-2 (WADV+P wheron#whereon_adv))
							    (C 0)
							    (IP-SUB (PP *T*-2)
								    (NP-SBJ (Q all#all_adj)
									    (NS demonstrations#demonstration_n)
									    (ADJP (ADJ mathematical#mathematical_adj))
									    (CP-REL *ICH*-3))
								    (BEP are#be_v)
								    (VAN fourmed#form_v1)
								    (CP-REL-3 (WPP-4 (P of#of_prep)
										     (WNP (WPRO which#which_adj)))
									      (IP-IMP (PP-LFD (P though#though_adv)
											      (CP-ADV (C 0)
												      (IP-SUB (NP-SBJ (D the#the_adj)
														      (QS moste#most_adj)
														      (N parte#part_n1)
														      (PP *T*-4))
													      (VBP seeme#seem_v2)
													      (ADJP-PRD (ADVR so#so_adv)
															(ADJ plaine#plain_adj2)
															(PUNC ,)
															(CP-DEG (C that#that_conj)
																(IP-SUB (NP-SBJ (Q no#no_adj) (N childe#child_n))
																	(DOP doth#do_v)
																	(VB doubte#doubt_v)
																	(PP (P of#of_prep)
																	    (NP (PRO them#them_pron)))))))))
										      (PUNC ,)
										      (VBI thinke#think_v2)
										      (NEG not#not_adv)
										      (PP-RSP (ADV+P therfore#therefore_adv))
										      (CP-THT (C that#that_conj)
											      (IP-SUB (NP-SBJ (D the#the_adj)
													      (N art#art_n1)
													      (CP-REL (WPP-5 (P vnto#unto_prep)
															     (WNP (WPRO whiche#which_adj)))
														      (C 0)
														      (IP-SUB (PP *T*-5)
															      (NP-SBJ (PRO they#they_pron))
															      (VBP serue#serve_v1))))
												      (PUNC ,)
												      (BEP is#be_v)
												      (ADJP-PRD (ADJ simple#simple_adj) (PUNC ,) (CONJ other#other_conj) (ADJ childishe#childish_adj)))))))))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,B4V.116))

( (IP-IMP (CONJ but#but_prep)
	  (ADVP (ADVR rather#rather_adv))
	  (VBI consider#consider_v)
	  (PUNC ,)
	  (CP-QUE-SUB (WADJP-1 (WADV howe#how_adv) (ADJ certayne#certain_adj))
		      (C 0)
		      (CODE <P_2,C1R>)
		      (IP-SUB (ADJP-PRD *T*-1)
			      (NP-SBJ (D the#the_adj)
				      (NS profes#proof_n)
				      (PP (P of#of_prep)
					  (NP (D that#that_pron1)
					      (N arte#art_n1)
					      (CP-REL *ICH*-2))))
			      (BEP is#be_v)
			      (PUNC ,)
			      (CP-REL-2 (WNP-3 0)
					(C y=t=#that_conj)
					(IP-SUB (NP-SBJ *T*-3)
						(HVP hath#have_v)
						(PP (P for#for_prep)
						    (NP (PRO$ his#his_adj) (NS grou~des#ground_n)))
						(NP-OB1 (NP (SUCH soche#such_adj) (ADJ playne#plain_adj2) (NS truthes#truth_n))
							(PUNC ,)
							(CONJP (CONJ &#and_conj1)
							       (NP (PP (P as#as_adv)
								       (CP-ADV (WNP-4 0)
									       (C 0)
									       (IP-SUB (NP-OB1 *T*-4)
										       (NP-SBJ (PRO I#i_pron))
										       (MD may#may_v1)
										       (VB say#say_v1))))
								   (PUNC ,)
								   (SUCH such#such_adj)
								   (ADJP (ADJ vndowbtfull#undoubtful_adj) (CONJ and#and_conj1) (ADJ sensible#sensible_adj))
								   (NS principles#principle_n))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C1R.117))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-SBJ (D this#this_pron))
	  (BEP is#be_v)
	  (NP-PRD (D the#the_adj)
		  (N cause#cause_n)
		  (CP-REL (WADVP-1 (WADV why#why_adv))
			  (C 0)
			  (IP-SUB (ADVP *T*-1)
				  (NP-SBJ (Q all#all_adj) (ADJ learned#learned_adj) (NS menne#man_n1))
				  (DOP dooth#do_v)
				  (VB approue#approve_v1)
				  (NP-OB1 (D the#the_adj)
					  (N certenty#certainty_n)
					  (PP (PP (P of#of_prep)
						  (NP (N geometry#geometry_n)))
					      (PUNC ,)
					      (CONJP (CONJ and#and_conj1)
						     (PP (ADVP (ADV co~sequently#consequently_adv))
							 (P of#of_prep)
							 (NP (D the#the_adj)
							     (OTHER other#other_adj)
							     (NS artes#art_n1)
							     (ADJP (ADJ mathematical#mathematical_adj))
							     (PUNC ,)
							     (CP-REL (WNP-2 (WPRO which#which_adj))
								     (C 0)
								     (IP-SUB (NP-SBJ *T*-2)
									     (HVP haue#have_v)
									     (NP-OB1 (D the#the_adj) (NS grounds#ground_n))))
							     (PUNC <paren>)
							     (PP (P as#as_adv)
								 (NP (N Arithmetike#arithmetic_n1) (PUNC ,) (N musike#music_n) (CONJ and#and_conj1) (N astronomy#astronomy_n))))))))
				  (PUNC <$$paren>)
				  (PP (P aboue#above_adv)
				      (NP (Q all#all_adj)
					  (OTHER other#other_adj)
					  (NS artes#art_n1)
					  (CONJP (CONJ and#and_conj1)
						 (NX (NS sciences#science_n)))
					  (PUNC ,)
					  (CP-REL (WNP-3 0)
						  (C that#that_conj)
						  (IP-SUB (NP-SBJ *T*-3)
							  (BEP be#be_v)
							  (VAN vsed#use_v)
							  (PP (P amo~gest#amongst_prep)
							      (NP (NS men#man_n1))))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C1R.118))

( (IP-MAT (NP-OB1 (D This#this_pron) (Q muche#much_adj))
	  (HVP haue#have_v)
	  (NP-SBJ (PRO I#i_pron))
	  (VBN sayd#say_v1)
	  (PP (P of#of_prep)
	      (NP (D the#the_adj) (ADJ first#first_adj) (NS principles#principle_n)))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C1R.119))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP-TMP (ADV now#now_adv))
	  (MD will#will_v1)
	  (NP-SBJ (PRO I#i_pron))
	  (VB go#go_v)
	  (RP on#on_adv)
	  (PP (P with#with_prep)
	      (NP (D the#the_adj)
		  (NS theoremes#theorem_n)
		  (PUNC ,)
		  (CP-REL (WNP-1 (WPRO whiche#which_adj))
			  (C 0)
			  (IP-SUB (NP-OB1 *T*-1)
				  (NP-SBJ (PRO I#i_pron))
				  (DOP do#do_v)
				  (FP only#only_adj)
				  (PP (P by#by_prep)
				      (NP (NS examples#example_n)))
				  (VB declae#declare_v)))))
	  (CODE {COM:sic})
	  (PUNC ,)
	  (IP-PPL (VAG minding#mind_v)
		  (IP-INF (TO to#to_prep)
			  (VB reserue#reserve_v1)
			  (NP-OB1 (D the#the_adj) (NS proofes#proof_n))
			  (PP (P to#to_prep)
			      (NP (D a#a_adj)
				  (ADJ peculiar#peculiar_adj)
				  (N boke#book_n)
				  (CP-REL (WNP-2 (WPRO which#which_adj))
					  (C 0)
					  (IP-SUB (NP-OB1 *T*-2)
						  (NP-SBJ (PRO I#i_pron))
						  (MD will#will_v1)
						  (ADVP-TMP (ADV then#then_adv))
						  (VB set#set_v1)
						  (ADVP (ADV forth#forth_adv))
						  (PUNC ,)
						  (PP (P when#when_adv)
						      (CP-ADV (C 0)
							      (IP-SUB (NP-SBJ (PRO I#i_pron))
								      (VBP perceaue#perceive_v)
								      (IP-INF (NP-SBJ (D this#this_pron))
									      (TO to#to_prep)
									      (BE be#be_v)
									      (ADVP (ADV thankfully#thankfully_adv))
									      (VAN taken#take_v)
									      (PP (P of#of_prep)
										  (NP (D the#the_adj)
										      (NS readers#reader_n)
										      (PP (P of#of_prep)
											  (NP (PRO it#it_pron)))))))))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C1R.120))

( (CODE <heading>))

( (NP (D THE#the_adj)
      (NS THEOREMES#theorem_n)
      (PP (P OF#of_prep)
	  (NP (N GEOMETRY#geometry_n)))
      (RRC (ADVP (ADV BRIEFLYE#briefly_adv))
	   (VAN DECLARED#declare_v)
	   (PP (P BY#by_prep)
	       (NP (ADJ SHORTE#short_adj) (NS EXAMPLES#example_n))))
      (PUNC .))
  (ID RECORD-1551-E1-P2,2,C1R.122))

( (CODE <$$heading>))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ FIRSTE#first_adj) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,C1R.125))

( (CODE <$$heading>))

( (IP-MAT (PP-LFD (P When#when_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (NUM .ij.#two_adj) (NS triangles#triangle_n))
				  (BEP be#be_v)
				  (ADVP (ADVR so#so_adv)
					(CP-DEG *ICH*-1))
				  (VAN drawen#draw_v)
				  (PUNC ,)
				  (CP-DEG-1 (CP-DEG (C that#that_conj)
						    (IP-SUB (NP-SBJ (D the#the_adj)
								    (ONE one#one_adj)
								    (PP (P of#of_prep)
									(NP (PRO the~#them_pron))))
							    (HVP hath#have_v)
							    (NP-OB1 (NUM ij.#two_adj)
								    (NS sides#side_n1)
								    (ADJP (ADJ equal#equal_adj)
									  (PP (P to#to_prep)
									      (NP (NUM ij#two_adj)
										  (NS sides#side_n1)
										  (PP (P of#of_prep)
										      (NP (D the#the_adj) (CODE <P_2,C1V>) (OTHER other#other_adj) (N triangle#triangle_n)))))))))
					    (PUNC ,)
					    (CONJP (CONJ and#and_conj1)
						   (CP-DEG (C that#that_conj)
							   (IP-SUB (NP-SBJ (D the#the_adj)
									   (NS angles#angle_n2)
									   (RRC (VAN enclosed#enclose_v)
										(PP (P with#with_prep)
										    (NP (D those#those_pron) (NS sides#side_n1)))))
								   (PUNC ,)
								   (BEP bee#be_v)
								   (ADJP-PRD (ADJ equal#equal_adj))
								   (ALSO also#also_adv)
								   (PP (P in#in_prep)
								       (NP (Q bothe#both_pron) (NS triangles#triangle_n))))))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV then#then_adv))
	  (BEP is#be_v)
	  (NP-SBJ (D the#the_adj)
		  (ADJ thirde#third_adj)
		  (N side#side_n1)
		  (PP *ICH*-2))
	  (NP-ADV (N likewise#likewise_adv))
	  (ADJP-PRD (ADJ equall#equal_adj))
	  (PP-2 (P in#in_prep)
		(NP (PRO them#them_pron)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C1V.127))

( (IP-MAT (IP-MAT-1 (CONJ And#and_conj1)
		    (NP-SBJ (D the#the_adj) (ADJ whole#whole_adj) (NS triangles#triangle_n))
		    (BEP be#be_v)
		    (PP (P of#of_prep)
			(NP (ONE one#one_adj) (N greatnes#greatness_n))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (NP-SBJ (Q euery#every_adj)
				   (N angle#angle_n2)
				   (PP (P in#in_prep)
				       (NP (D the#the_adj) (ONE one#one_adj))))
			   (ADJP-PRD (ADJ equall#equal_adj)
				     (PP (P to#to_prep)
					 (NP (PRO$ his#his_adj)
					     (N matche#match_n1)
					     (N angle#angle_n2)
					     (PP (P in#in_prep)
						 (NP (D the#the_adj) (OTHER other#other_adj))))))
			   (PUNC ,)
			   (IP-MAT-PRN (NP-SBJ (PRO I#i_pron))
				       (VBP meane#mean_v1)
				       (NP-OB1 (D those#those_pron)
					       (NS angles#angle_n2)
					       (CP-REL (WNP-2 0)
						       (C that#that_conj)
						       (IP-SUB (NP-SBJ *T*-2)
							       (BEP be#be_v)
							       (VAN inclosed#enclose_v)
							       (PP (P with#with_prep)
								   (NP (ADJ like#like_adj) (NS sides#side_n1)))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C1V.128))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,C1V.129))

( (IP-MAT (NP-SBJ (D This#this_pron)
		  (N triangle#triangle_n)
		  (NP-PRN (N A.B.C.#abc_n1)))
	  (HVP hath#have_v)
	  (NP-OB1 (NUM ij.#two_adj)
		  (NS sides#side_n1)
		  (PUNC <paren>)
		  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
			      (BEP is#be_v)
			      (IP-INF (TO to#to_prep)
				      (VB say#say_v1)
				      (PUNC <$$paren>)
				      (NP-OB1 (N C.A.#NA) (CONJ and#and_conj1) (N C.B#NA))))
		  (PUNC ,)
		  (ADJP (ADJ equal#equal_adj)
			(PP (P to#to_prep)
			    (NP (NUM ij.#two_adj)
				(NS sides#side_n1)
				(PP (P of#of_prep)
				    (NP (D the#the_adj)
					(OTHER other#other_adj)
					(N triangle#triangle_n)
					(NP-PRN (N F.G.H#NA))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C1V.130))

( (CODE {COM:figures_omitted}))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (N A.C.#NA))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (N F.G#NA))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C1V.132))

( (IP-MAT (IP-MAT-1 (CONJ and#and_conj1)
		    (NP-SBJ (N B.C.#NA))
		    (BEP is#be_v)
		    (ADJP-PRD (ADJ equall#equal_adj)
			      (PP (P to#to_prep)
				  (NP (N G.H.#NA)))))
	  (CONJP (CONJ And#and_conj1)
		 (ALSO also#also_adv)
		 (IP-MAT=1 (NP (D the#the_adj)
			       (N angle#angle_n2)
			       (NP-PRN (N C.#NA))
			       (RRC (VAN contayned#contain_v)
				    (PP (P beetweene#between_prep)
					(NP (N F.G#NA) (PUNC ,) (CONJ and#and_conj1) (N G.H#NA)))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C1V.133))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (Q both#both_pron)
		  (PP (P of#of_prep)
		      (NP (PRO them#them_pron))))
	  (VBP answere#answer_v)
	  (PP (P to#to_prep)
	      (NP (D the#the_adj)
		  (NUM eight#eight_adj)
		  (N parte#part_n1)
		  (PP (P of#of_prep)
		      (NP (D a#a_adj) (N circle#circle_n)))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C1V.134))

( (IP-MAT (PP (ADV Ther#there_adv) (P fore#for_prep))
	  (DOP doth#do_v)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (VB remayne#remain_v)
	  (CP-THT-1 (C that#that_conj)
		    (IP-SUB (IP-SUB (NP-SBJ (N A.B.#NA)
					    (CP-REL (WNP-2 (WPRO whiche#which_adj))
						    (C 0)
						    (IP-SUB (NP-SBJ *T*-2)
							    (BEP is#be_v)
							    (NP-PRD (D the#the_adj) (ADJ thirde#third_adj) (N lyne#line_n2))
							    (PP (P in#in_prep)
								(NP (D the#the_adj) (ADJ firste#first_adj) (N triangle#triangle_n))))))
				    (PUNC ,)
				    (DOP doth#do_v)
				    (VB agre#agree_v)
				    (PP (P in#in_prep)
					(NP (N lengthe#length_n)))
				    (PP (P with#with_prep)
					(NP (N F.H#NA)
					    (PUNC ,)
					    (CP-REL (WNP-3 (WPRO w=ch=#which_adj))
						    (C 0)
						    (IP-SUB (NP-SBJ *T*-3)
							    (BEP is#be_v)
							    (NP-PRD (D the#the_adj) (ADJ third#third_adj) (N line#line_n2))
							    (PP (P in#in_prep)
								(NP (D y=e=#the_adj)
								    (ADJ seco~d#second_adj)
								    (CODE {SIC:y=e=se_co~d})
								    (N tria~gle#triangle_n))))))))
			    (CONJP (CONJ &#and_conj1)
				   (IP-SUB-4 (NP-SBJ (D y=t=#that_pron1)
						     (ADJ hole#whole_adj)
						     (N tria~gle#triangle_n)
						     (NP-PRN (N A.B.C.#abc_n1)))
					     (MD must#must_v1)
					     (ADVP (ADV nedes#needs_adv))
					     (BE be#be_v)
					     (ADJP-PRD (ADJ equal#equal_adj)
						       (PP (P to#to_prep)
							   (NP (D y=e=#the_adj)
							       (ADJ hole#whole_adj)
							       (N triangle#triangle_n)
							       (NP-PRN (N F.G.H.#NA)))))))
			    (CONJP (CONJ And#and_conj1)
				   (IP-SUB=4 (NP-SBJ (Q euery#every_adj) (N corner#corner_n1))
					     (ADJP-PRD (ADJ equall#equal_adj)
						       (PP (P to#to_prep)
							   (NP (PRO$ his#his_adj) (N match#match_n1))))
					     (PUNC ,)
					     (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
							 (BEP is#be_v)
							 (IP-INF (TO to#to_prep)
								 (VB say#say_v1)
								 (PUNC ,)
								 (IP-ABS (IP-ABS (NP-SBJ (N A.#NA))
										 (ADJP-PRD (ADJ equall#equal_adj)
											   (PP (P to#to_prep)
											       (NP (N F#NA)))))
									 (PUNC ,)
									 (CONJP (IP-ABS (NP-SBJ (N B.#NA))
											(PP (P to#to_prep)
											    (NP (N H#NA)))))
									 (PUNC ,)
									 (CONJP (CONJ and#and_conj1)
										(IP-ABS (NP-SBJ (N C.#NA))
											(PP (P to#to_prep)
											    (NP (N G#NA))))))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C1V.135))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ-1 (D those#those_pron)
		    (CP-REL *ICH*-2))
	  (BEP bee#be_v)
	  (VAN called#call_v)
	  (IP-SMC (NP-SBJ *-1)
		  (CODE <font>)
		  (NP-PRD (N match#match_n1) (NS corners#corner_n1)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (CP-REL-2 (WNP-3 (WPRO which#which_adj))
		    (C 0)
		    (IP-SUB (IP-SUB (NP-SBJ *T*-3)
				    (BEP are#be_v)
				    (VAN inclosed#enclose_v)
				    (PP (P with#with_prep)
					(NP (ADJ like#like_adj) (NS sides#side_n1))))
			    (PUNC ,)
			    (CONJP (CONJ other#other_conj)
				   (ELSE els#else_adv)
				   (IP-SUB (NP-SBJ *con*)
					   (DOP do#do_v)
					   (VB lye#lie_v1)
					   (PP (P against#against_prep)
					       (NP (ADJ like#like_adj) (NS sides#side_n1)))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C1V.136))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ SECOND#second_adj) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,C1V.138))

( (CODE <$$heading>))

( (IP-MAT (PP (P In#in_prep)
	      (NP (ADJ twileke#take_v) (NS triangles#triangle_n)))
	  (NP-SBJ (D the#the_adj)
		  (NUM ij.#two_adj)
		  (NS corners#corner_n1)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP be#be_v)
				  (CODE <P_2,C2R>)
				  (PP (P about#about_adv)
				      (NP (D the#the_adj)
					  (N groud#ground_n)
					  (CODE {COM:sic})
					  (N line#line_n2))))))
	  (PUNC ,)
	  (BEP are#be_v)
	  (ADJP-PRD (ADJ equal#equal_adj))
	  (ADVP (ADV togither#together_adv))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C2R.140))

( (IP-MAT (CONJ And#and_conj1)
	  (PP-LFD (P if#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (D the#the_adj)
					  (NS sides#side_n1)
					  (CP-REL (WNP-1 0)
						  (C that#that_conj)
						  (IP-SUB (NP-SBJ *T*-1)
							  (BEP be#be_v)
							  (ADJP-PRD (ADJ equal#equal_adj)))))
				  (PUNC ,)
				  (BEP be#be_v)
				  (VAN drawe~#draw_v)
				  (RP out#out_adv)
				  (PP (P in#in_prep)
				      (NP (N le~gth#length_n))))))
	  (ADVP-RSP (ADV the~#then_adv))
	  (MD wil#will_v1)
	  (NP-SBJ (D the#the_adj)
		  (NS corners#corner_n1)
		  (CP-REL (WNP-2 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-2)
				  (BEP are#be_v)
				  (PP (P vnder#under_prep)
				      (NP (D the#the_adj) (N ground#ground_n) (NS lines#line_n2))))))
	  (PUNC ,)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equal#equal_adj))
	  (ALSO also#also_adv)
	  (ADVP (ADV togither#together_adv))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C2R.141))

( (NP (CODE <font>) (N Example#example_n) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,C2R.142))

( (IP-MAT (NP-SBJ (N A.B.C.#abc_n1))
	  (BEP is#be_v)
	  (NP-PRD (D a#a_adj) (ADJ twileke#take_v) (N triangle#triangle_n))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C2R.143))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (D the#the_adj)
		  (ONE one#one_adj)
		  (N side#side_n1)
		  (NP-PRN (N A.C#NA)))
	  (PUNC ,)
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ equal#equal_adj)
		    (PP (P to#to_prep)
			(NP (D the#the_adj)
			    (OTHER other#other_adj)
			    (N side#side_n1)
			    (NP-PRN (N B.C.#NA))))))
  (ID RECORD-1551-E1-P2,2,C2R.144))

( (CODE {COM:figure_omitted}))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (ADV+P therfore#therefore_adv))
	  (NP-SBJ (PRO I#i_pron))
	  (VBP saye#say_v1)
	  (CP-THT (C that#that_conj)
		  (IP-SUB (NP-SBJ (D the#the_adj)
				  (ADJ inner#inner_adj)
				  (NS corners#corner_n1)
				  (NP-PRN (N A.#NA) (CONJ and#and_conj1) (N B#NA))
				  (PUNC ,)
				  (CP-REL (WNP-1 (WPRO which#which_adj))
					  (C 0)
					  (IP-SUB (NP-SBJ *T*-1)
						  (BEP are#be_v)
						  (PP (P about#about_adv)
						      (NP (D the#the_adj) (N ground#ground_n) (NS lines#line_n2))))))
			  (PUNC ,)
			  (PUNC <paren>)
			  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
				      (BEP is#be_v)
				      (NP-PRD (N A.B.#NA)))
			  (PUNC <$$paren>)
			  (BEP be#be_v)
			  (ADJP-PRD (ADJ equall#equal_adj))
			  (ADVP (ADV to_gither#together_adv))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C2R.146))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-MSR (ADJR farther#farther_adv))
	  (PP-LFD (P if#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (N C.A.#NA) (CONJ and#and_conj1) (N C.B.#NA))
				  (BEP bee#be_v)
				  (VAN drawen#draw_v)
				  (ADVP (ADV forthe#forth_adv))
				  (PP (P vnto#unto_prep)
				      (NP (N D#NA) (CONJ and#and_conj1) (N E.#NA)))
				  (PP (P as#as_adv)
				      (CP-ADV (C 0)
					      (IP-SUB (NP-SBJ (PRO you#you_pron))
						      (VBP se#see_v)
						      (CP-THT (C that#that_conj)
							      (IP-SUB (NP-SBJ (PRO I#i_pron))
								      (HVP haue#have_v)
								      (VBN drawen#draw_v)
								      (NP-OB1 (PRO them#them_pron))))))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV then#then_adv))
	  (VBP saye#say_v1)
	  (NP-SBJ (PRO I#i_pron))
	  (CP-THT (C that#that_conj)
		  (IP-SUB (NP-SBJ (D the#the_adj) (NUM two#two_adj) (ADJ vtter#utter_adj) (NS angles#angle_n2))
			  (PP (P vnder#under_prep)
			      (NP (N A.#NA) (CONJ and#and_conj1) (N B#NA)))
			  (PUNC ,)
			  (BEP are#be_v)
			  (ADJP-PRD (ADJ equal#equal_adj))
			  (ALSO also#also_adv)
			  (ADVP (ADV togither#together_adv))
			  (PUNC :)
			  (PP (P as#as_adv)
			      (CP-ADV (WNP-1 0)
				      (C 0)
				      (IP-SUB (NP-OB1 *T*-1)
					      (NP-SBJ (D the#the_adj) (N theorem#theorem_n))
					      (VBD said#say_v1))))
			  (PUNC .)
			  (CP-CAR (WNP-2 (D The#the_adj)
					 (N profe#proof_n)
					 (WPP (WADV+P wherof#whereof_adv)
					      (PUNC ,)
					      (PP (P as#as_adv)
						  (PP (P of#of_prep)
						      (NP (Q al#all_adj) (D the#the_adj) (N rest#rest_n3))))))
				  (C 0)
				  (PUNC ,)
				  (IP-SUB (NP-SBJ *T*-2)
					  (MD shal#shall_v)
					  (VB apeare#appear_v)
					  (PP (P in#in_prep)
					      (NP (NPR Euclide#NA)
						  (PUNC ,)
						  (CP-REL (WNP-3 (WPRO whome#whom_pron))
							  (C 0)
							  (IP-SUB (NP-SBJ (PRO I#i_pron))
								  (VBP intende#intend_v)
								  (IP-INF (NP-SBJ *T*-3)
									  (TO to#to_prep)
									  (VB set#set_v1)
									  (ADVP (ADV foorth#forth_adv))
									  (PP (P in#in_prep)
									      (NP (NPR english#NA)))
									  (PP (P with#with_prep)
									      (NP (ADJ sondry#sundry_adj) (ADJ new#new_adj) (NS additions#addition_n)))
									  (PUNC ,)
									  (PP (P if#if_conj)
									      (CP-ADV (C 0)
										      (IP-SUB (NP-SBJ (PRO I#i_pron))
											      (MD may#may_v1)
											      (VB perceaue#perceive_v)
											      (CP-THT (C that#that_conj)
												      (IP-SUB (NP-SBJ (PRO it#it_pron))
													      (MD wil#will_v1)
													      (BE be#be_v)
													      (ADVP (ADV thankfully#thankfully_adv))
													      (VAN taken#take_v)))))))))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C2R.147))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ THIRDE#third_adj) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,C2R.149))

( (CODE <$$heading>))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (PP (P in#in_prep)
				  (NP (Q annye#any_adj) (N triangle#triangle_n)))
			      (NP-SBJ-1 (EX there#there_adv))
			      (BEP bee#be_v)
			      (NP-1 (NUM twoo#two_adj) (NS angles#angle_n2))
			      (ADJP-PRD (ADJ equall#equal_adj))
			      (ADVP (ADV togither#together_adv)))))
	  (PUNC ,)
	  (ADVP (ADV then#then_adv))
	  (MD shall#shall_v)
	  (NP-SBJ (D the#the_adj)
		  (NS sides#side_n1)
		  (PUNC ,)
		  (CP-REL (WNP-2 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-2)
				  (VBP lie#lie_v1)
				  (PP (P against#against_prep)
				      (NP (D those#those_pron) (NS angles#angle_n2))))))
	  (PUNC ,)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equal#equal_adj))
	  (ALSO also#also_adv)
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C2R.151))

( (NP (CODE <font>) (N Example#example_n) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,C2R.152))

( (IP-MAT (NP-SBJ (D This#this_pron)
		  (N triangle#triangle_n)
		  (NP-PRN (N A.B.C.#abc_n1)))
	  (CODE {COM:figure_omitted})
	  (HVP hath#have_v)
	  (NP-OB1 (NUM two#two_adj)
		  (NS corners#corner_n1)
		  (ADJP (ADJ equal#equal_adj)
			(NP-ADV (NP (Q eche#each_adj))
				(PP (P to#to_prep)
				    (NP (OTHER other#other_adj))))))
	  (PUNC ,)
	  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
		      (BEP is#be_v)
		      (NP-PRD (N A.#NA) (CONJ and#and_conj1) (N B#NA))
		      (PUNC ,)
		      (PP (P as#as_adv)
			  (CP-ADV (WNP-1 0)
				  (C 0)
				  (IP-SUB (NP-OB1 *T*-1)
					  (NP-SBJ (PRO I#i_pron))
					  (DOP do#do_v)
					  (PP (P by#by_prep)
					      (NP (N supposition#supposition_n)))
					  (VB limite#limit_v)))))
	  (PUNC ,)
	  (CP-CAR (WPP-2 (WADV+P wherfore#wherefore_adv))
		  (C 0)
		  (IP-SUB (PP *T*-2)
			  (NP-SBJ-3 (PRO it#it_pron))
			  (VBP foloweth#follow_v)
			  (CP-THT-3 (C that#that_conj)
				    (IP-SUB (NP-SBJ (D the#the_adj)
						    (N side#side_n1)
						    (NP-PRN (N A.C#NA)))
					    (PUNC ,)
					    (BEP is#be_v)
					    (ADJP-PRD (ADJ equal#equal_adj)
						      (PP (P to#to_prep)
							  (NP (D that#that_pron1)
							      (OTHER other#other_adj)
							      (N side#side_n1)
							      (NP-PRN (N B.C#NA)))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C2R.153))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (D the#the_adj)
		  (N side#side_n1)
		  (NP-PRN (N A.C#NA)))
	  (PUNC ,)
	  (VBP lieth#lie_v1)
	  (PP (P againste#against_prep)
	      (NP (D the#the_adj)
		  (N angle#angle_n2)
		  (NP-PRN (N B#NA))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C2R.154))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj)
		  (N side#side_n1)
		  (NP-PRN (N B.C#NA)))
	  (PUNC ,)
	  (VBP lieth#lie_v1)
	  (PP (P against#against_prep)
	      (NP (D the#the_adj)
		  (N angle#angle_n2)
		  (NP-PRN (N A#NA))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C2R.155))

( (CODE <P_2,C2V>))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ FOURTH#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,C2V.158))

( (CODE <$$heading>))

( (IP-MAT (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (NP-SBJ (NUM two#two_adj) (NS lines#line_n2))
				      (BEP are#be_v)
				      (VAN drawen#draw_v)
				      (PP (P fro~#from_prep)
					  (NP (D the#the_adj)
					      (NS endes#end_n)
					      (PP (P of#of_prep)
						  (NP (Q anie#any_adj) (ONE one#one_adj) (N line#line_n2))))))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB (NP-SBJ *con*)
					     (VBP meet#meet_v)
					     (PP (P in#in_prep)
						 (NP (Q anie#any_adj) (N pointe#point_n1))))))))
	  (PUNC ,)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (BEP is#be_v)
	  (NEG not#not_adv)
	  (ADJP-PRD (ADJ possible#possible_adj))
	  (IP-INF-1 (TO to#to_prep)
		    (VB draw#draw_v)
		    (NP-OB1 (NUM two#two_adj)
			    (OTHER other#other_adj)
			    (NS lines#line_n2)
			    (PP (P of#of_prep)
				(NP (ADJ like#like_adj) (N lengthe#length_n)))
			    (CP-REL *ICH*-2))
		    (NP-ADV (NP (Q ech#each_adj))
			    (PP (P to#to_prep)
				(NP (PRO$ his#his_adj) (N match#match_n1))))
		    (CP-REL-2 (WNP-3 0)
			      (C that#that_conj)
			      (IP-SUB (IP-SUB-4 (NP-SBJ *T*-3)
						(MD shal#shall_v)
						(VB begi~#begin_v1)
						(PP (P at#at_prep)
						    (NP (D the#the_adj) (ADJ same#same_adj) (NS pointes#point_n1))))
				      (PUNC ,)
				      (CONJP (CONJ and#and_conj1)
					     (IP-SUB=4 (VB end#end_v1)
						       (PP (P in#in_prep)
							   (NP (Q anie#any_adj)
							       (OTHER other#other_adj)
							       (N pointe#point_n1)
							       (PP (P then#than_conj)
								   (CP-CMP (WPP-5 0)
									   (C 0)
									   (IP-SUB (PP *T*-5)
										   (NP-SBJ (D the#the_adj) (NUM twoo#two_adj) (ADJ first#first_adj))
										   (DOD did#do_v)
										   (VB *)))))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C2V.160))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,C2V.161))

( (CODE {COM:figure_omitted}))

( (IP-MAT (NP-SBJ (D The#the_adj) (ADJ first#first_adj) (N line#line_n2))
	  (BEP is#be_v)
	  (NP-PRD (N A.B#NA)
		  (PUNC ,)
		  (CP-REL (WPP-1 (P on#on_prep)
				 (WNP (WPRO which#which_adj)))
			  (C 0)
			  (IP-SUB (PP *T*-1)
				  (NP-SBJ (PRO I#i_pron))
				  (HVP haue#have_v)
				  (VBN erected#erect_v)
				  (NP-OB1 (NUM two#two_adj)
					  (OTHER other#other_adj)
					  (NS lines#line_n2)
					  (NP-PRN (N A.C#NA) (PUNC ,) (CONJ and#and_conj1) (N B.C#NA))
					  (PUNC ,)
					  (CP-REL (WNP-2 0)
						  (C that#that_conj)
						  (IP-SUB (NP-SBJ *T*-2)
							  (VBP meete#meet_v)
							  (PP (P in#in_prep)
							      (NP (D the#the_adj)
								  (N pricke#prick_n)
								  (NP-PRN (N C#NA))))
							  (PUNC ,)
							  (CP-CAR (WPP-3 (WADV+P wherefore#wherefore_adv))
								  (C 0)
								  (IP-SUB (PP *T*-3)
									  (NP-SBJ (PRO I#i_pron))
									  (VBP say#say_v1)
									  (PUNC ,)
									  (CP-THT (CP-THT (C 0)
											  (IP-SUB (NP-SBJ-4 (PRO it#it_pron))
												  (BEP is#be_v)
												  (NEG not#not_adv)
												  (ADJP-PRD (ADJ possible#possible_adj))
												  (IP-INF-4 (TO to#to_prep)
													    (VB draw#draw_v)
													    (NP-OB1 (NUM ij.#two_adj)
														    (OTHER other#other_adj)
														    (NS lines#line_n2)
														    (CP-REL *ICH*-5))
													    (PP (P from#from_prep)
														(NP (N A.#NA) (CONJ and#and_conj1) (N B.#NA)))
													    (CP-REL-5 (WNP-6 (WPRO which#which_adj))
														      (C 0)
														      (IP-SUB (NP-SBJ *T*-6)
															      (MD shal#shall_v)
															      (VB mete#meet_v)
															      (PP (P in#in_prep)
																  (NP (ONE one#one_adj) (N point#point_n1)))
															      (PUNC <paren>)
															      (PP-PRN (P as#as_adv)
																      (CP-ADV (WADVP-7 0)
																	      (C 0)
																	      (IP-SUB (ADVP *T*-7)
																		      (NP-SBJ (PRO you#you_pron))
																		      (VBP se#see_v)
																		      (IP-INF (NP-SBJ (N A.D.#NA) (CONJ and#and_conj1) (N B.D.#NA))
																			      (VB mete#meet_v)
																			      (PP (P in#in_prep)
																				  (NP (N D.#NA))))))))))))
										  (PUNC <$$paren>)
										  (CONJP (CONJ but#but_prep)
											 (CP-THT (C that#that_conj)
												 (IP-SUB (NP-SBJ (D the#the_adj) (N match#match_n1) (NS lines#line_n2))
													 (MD shal@#shall_v)
													 (BE @be#be_v)
													 (ADJP-PRD (ADJ vnequal#unequal_adj))))))))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C2V.163))

( (IP-MAT (NP-SBJ (PRO I#i_pron))
	  (VBP mean#mean_v1)
	  (PP (P by#by_prep)
	      (CODE <font>)
	      (NP (N match#match_n1) (NS lines#line_n2)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-OB1 (D the#the_adj)
		  (NUM two#two_adj)
		  (NS lines#line_n2)
		  (PP (P on#on_prep)
		      (NP (ONE one#one_adj) (N side#side_n1))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C2V.164))

( (IP-MAT (NP-SBJ (D that#that_pron1))
	  (BEP is#be_v)
	  (NP-PRD (NP (D the#the_adj)
		      (NUM ij.#two_adj)
		      (PP (P on#on_prep)
			  (NP (D the#the_adj) (ADJ right#right_adj) (N hand#hand_n))))
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (NP (D the#the_adj)
			     (NUM ij.#two_adj)
			     (PP (P on#on_prep)
				 (NP (D the#the_adj) (ADJ lefte#left_adj1) (N hand#hand_n))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C2V.165))

( (IP-MAT (CONJ for#for_prep)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-OB1 *T*-1)
			      (NP-SBJ (PRO you#you_pron))
			      (VBP se#see_v)
			      (PP (P in#in_prep)
				  (NP (D this#this_pron) (N example#example_n))))))
	  (NP-SBJ (N A.D.#NA))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJR longer#long_adj1)
		    (PP (P the~#than_conj)
			(NP (N A.C.#NA)))))
  (ID RECORD-1551-E1-P2,2,C2V.166))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (N A.D.#NA))
	  (MD shall#shall_v)
	  (BE bee#be_v)
	  (PP (P of#of_prep)
	      (NP (ONE one#one_adj) (N lengthe#length_n)))
	  (PUNC ,)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (N B.D.#NA) (CONJ and#and_conj1) (N B.C.#NA))
			      (BEP bee#be_v)
			      (ADJP-PRD (ADV like#like_adj) (ADJ longe#long_adj1)))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C2V.167))

( (IP-MAT (CONJ For#for_prep)
	  (PP-LFD (P if#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (ONE one#one_adj)
					  (N couple#couple_n)
					  (PP (P of#of_prep)
					      (NP (N matche#match_n1) (NS lines#line_n2))))
				  (BEP be#be_v)
				  (ADJP-PRD (ADJ equall#equal_adj))
				  (PUNC <paren>)
				  (PP-PRN (P as#as_adv)
					  (CP-ADV (C 0)
						  (IP-SUB (NP-SBJ (D the#the_adj)
								  (ADJ same#same_adj)
								  (N example#example_n)
								  (NP-PRN (N A.E.#NA)))
							  (BEP is#be_v)
							  (ADJP-PRD (ADJ equall#equal_adj)
								    (PP (P to#to_prep)
									(NP (N A.C.#NA)))
								    (PP (P in#in_prep)
									(NP (N length#length_n))))))))))
	  (PUNC <$$paren>)
	  (ADVP-RSP (ADV then#then_adv))
	  (MD must#must_v1)
	  (NP-SBJ (N B.E.#NA))
	  (ADVP (ADV needes#needs_adv))
	  (BE be#be_v)
	  (ADJP-PRD (ADJ vnequall#unequal_adj)
		    (PP (P to#to_prep)
			(NP (N B.C#NA))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C2V.168))

( (IP-MAT (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-OB1 *T*-1)
			      (NP-SBJ (PRO you#you_pron))
			      (VBP see#see_v))))
	  (PUNC ,)
	  (NP-SBJ (PRO it#it_pron))
	  (BEP is#be_v)
	  (ADVP-LOC (ADV here#here_adv))
	  (ADJP-PRD (ADJR shorter#short_adj))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C2V.169))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ FIFTE#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,C2V.171))

( (CODE <heading>))

( (IP-MAT (PP-LFD (P If#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (NUM two#two_adj) (NS tria~gles#triangle_n))
				  (HVP haue#have_v)
				  (IP-SMC (IP-SMC-1 (NP-SBJ (PRO$ there#their_adj) (NUM ij.#two_adj) (NS sides#side_n1))
						    (ADJP-PRD (ADJ equal#equal_adj)
							      (NP-ADV (NP (ONE one#one_adj))
								      (PP (P to#to_prep)
									  (NP (D an#a_adj) (OTHER other#other_adj))))))
					  (PUNC ,)
					  (CONJP (CONJ and#and_conj1)
						 (IP-SMC=1 (NP-SBJ (PRO$ their#their_adj) (N grou~d#ground_n) (NS lines#line_n2))
							   (ADJP-PRD (ADJ equal#equal_adj))
							   (ALSO also#also_adv)))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV then#then_adv))
	  (CODE <P_2,C3R>)
	  (MD shall#shall_v)
	  (NP-SBJ (PRO$ their#their_adj)
		  (NS corners#corner_n1)
		  (PUNC ,)
		  (CP-REL (WNP-2 (WPRO whiche#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-2)
				  (BEP are#be_v)
				  (VAN contained#contain_v)
				  (PP (P betwene#between_prep)
				      (NP (ADJ like#like_adj) (NS sides#side_n1))))))
	  (PUNC ,)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (NP-ADV (NP (ONE one#one_adj))
			    (PP (P to#to_prep)
				(NP (D the#the_adj) (OTHER other#other_adj)))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C3R.173))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,C3R.174))

( (IP-MAT (PP-LFD (P Because#because_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (D these#these_pron)
					  (NUM two#two_adj)
					  (NS triangles#triangle_n)
					  (NP-PRN (N A.B.C#NA) (PUNC ,) (CONJ and#and_conj1) (N D.E.F.#NA)))
				  (HVP haue#have_v)
				  (NP-OB1 (NUM two#two_adj)
					  (NS sides#side_n1)
					  (ADJP (ADJ equall#equal_adj)
						(NP-ADV (NP (ONE one#one_adj))
							(PP (P to#to_prep)
							    (NP (D an#a_adj) (OTHER other#other_adj)))))))))
	  (PUNC .)
	  (CODE {COM:figure_omitted})
	  (IP-MAT-PRN (CONJ For#for_prep)
		      (NP-SBJ (N A.C.#NA))
		      (BEP is#be_v)
		      (ADJP-PRD (ADJ equall#equal_adj)
				(PP (P to#to_prep)
				    (NP (N D.F#NA)))))
	  (PUNC ,)
	  (IP-MAT-PRN (CONJ and#and_conj1)
		      (NP-SBJ (N B.C.#NA))
		      (BEP is#be_v)
		      (ADJP-PRD (ADJ equall#equal_adj)
				(PP (P to#to_prep)
				    (NP (N E.F#NA)))))
	  (PUNC ,)
	  (IP-MAT-PRN (CONJ and#and_conj1)
		      (ADVP (ADV again#again_adv))
		      (NP-SBJ (PRO$ their#their_adj)
			      (N grou~d#ground_n)
			      (NS lines#line_n2)
			      (NP-PRN (N A.B.#NA) (CONJ and#and_conj1) (N D.E.#NA)))
		      (BEP are#be_v)
		      (ADJP-PRD (ADJ lyke#like_adj)
				(PP (P in#in_prep)
				    (NP (N length#length_n)))))
	  (PUNC ,)
	  (PP-RSP (ADV+P therfore#therefore_adv))
	  (BEP is#be_v)
	  (NP-SBJ (Q eche#each_adj)
		  (N angle#angle_n2)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (ONE one#one_adj) (N triangle#triangle_n))))
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (Q ech#each_adj)
			    (N angle#angle_n2)
			    (PP (P of#of_prep)
				(NP (D the#the_adj) (OTHER other#other_adj))))))
	  (PUNC ,)
	  (IP-PPL (VAG comparyng#compare_v1)
		  (ADVP (ADV together#together_adv))
		  (NP-OB1 (D those#those_pron)
			  (NS angles#angle_n2)
			  (CP-REL (WNP-1 0)
				  (C that#that_conj)
				  (IP-SUB (NP-SBJ *T*-1)
					  (BEP are#be_v)
					  (VAN contained#contain_v)
					  (PP (P within#within_adv)
					      (NP (ADJ lyke#like_adj) (NS sides#side_n1)))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C3R.175))

( (IP-MAT (IP-MAT-1 (ADVP (ADV so#so_adv))
		    (BEP is#be_v)
		    (NP-SBJ (N A.#NA))
		    (ADJP-PRD (ADJ equall#equal_adj)
			      (PP (P to#to_prep)
				  (NP (N D#NA)))))
	  (PUNC ,)
	  (CONJP (IP-MAT=1 (NP-SBJ (N B.#NA))
			   (PP (P to#to_prep)
			       (NP (N E#NA)))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (NP (N C.#NA))
			   (PP (P to#to_prep)
			       (NP (N F#NA)))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C3R.176))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (PRO they#they_pron))
	  (BEP are#be_v)
	  (VAN contayned#contain_v)
	  (PP (P within#within_adv)
	      (NP (ADJ like#like_adj) (NS sides#side_n1)))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-SBJ *T*-1)
			      (ADVP-TMP (ADV before#before_adv))
			      (BEP is#be_v)
			      (VAN said#say_v1))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C3R.177))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ SIXT#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,C3R.179))

( (CODE <$$heading>))

( (IP-MAT (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (Q any#any_adj) (ADJ right#right_adj) (N line#line_n2))
			      (VBP standeth#stand_v)
			      (PP (P on#on_prep)
				  (NP (D an#a_adj) (OTHER other#other_adj))))))
	  (PUNC ,)
	  (NP-SBJ (D the#the_adj)
		  (NUM ij.#two_adj)
		  (NS angles#angle_n2)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-OB1 *T*-1)
				  (NP-SBJ (PRO thei#they_pron))
				  (VBP make#make_v1))))
	  (PUNC ,)
	  (CONJ other#other_conj)
	  (BEP are#be_v)
	  (Q both#both_pron)
	  (NP-PRD (NP (ADJ right#right_adj) (NS angles#angle_n2))
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (ELSE els#else_adv)
			 (ADJP (ADJ equall#equal_adj)
			       (PP (P to#to_prep)
				   (NP (NUM .ij.#two_adj) (ADJ righte#right_adj) (NS angles#angle_n2))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C3R.181))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,C3R.182))

( (IP-MAT (NP-SBJ (N A.B.#NA))
	  (BEP is#be_v)
	  (NP-PRD (D a#a_adj) (ADJ right#right_adj) (N line#line_n2))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C3R.183))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P on#on_prep)
	      (NP (PRO it#it_pron)))
	  (NP-SBJ-1 (EX there#there_adv))
	  (DOP doth#do_v)
	  (VB light#light_v1)
	  (NP-1 (D+OTHER another#another_pron)
		(ADJ right#right_adj)
		(N line#line_n2)
		(PUNC ,)
		(RRC (VAN drawen#draw_v)
		     (PP (P from#from_prep)
			 (NP (N C.#NA))
			 (ADVP (ADV perpendicularly#perpendicularly_adv))
			 (PP (P on#on_prep)
			     (NP (PRO it#it_pron))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C3R.184))

( (CODE {COM:figure_omitted}))

( (IP-MAT (PP (ADV+P therefore#therefore_adv))
	  (VBP saie#say_v1)
	  (NP-SBJ (PRO I#i_pron))
	  (PUNC ,)
	  (CP-THT (C that#that_conj)
		  (IP-SUB (NP-SBJ (D the#the_adj)
				  (NUM .ij.#two_adj)
				  (NS angles#angle_n2)
				  (CP-REL (WNP-1 0)
					  (C that#that_conj)
					  (IP-SUB (NP-OB1 *T*-1)
						  (NP-SBJ (PRO thei#they_pron))
						  (DOP do#do_v)
						  (VB make#make_v1))))
			  (PUNC ,)
			  (BEP are#be_v)
			  (NP-PRD (NUM .ij.#two_adj) (ADJ right#right_adj) (NS angles#angle_n2))
			  (PP (P as#as_adv)
			      (CP-ADV (WNP-2 0)
				      (C 0)
				      (IP-SUB (NP-SBJ *T*-2)
					      (MD maie#may_v1)
					      (BE be#be_v)
					      (VAN iudged#judge_v)
					      (PP (P by#by_prep)
						  (NP (D the#the_adj)
						      (N definition#definition_n)
						      (PP (P of#of_prep)
							  (NP (D a#a_adj) (ADJ right#right_adj) (N angle#angle_n2))))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C3R.186))

( (IP-MAT (CONJ But#but_prep)
	  (PP (P in#in_prep)
	      (NP (D the#the_adj)
		  (ADJ second#second_adj)
		  (N part#part_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (N example#example_n)
			  (PUNC ,)
			  (CP-REL (WADVP-1 (WADV where#where_adv))
				  (C 0)
				  (IP-PPL (ADVP-LOC *T*-1)
					  (NP-SBJ (N A.B.#NA))
					  (BAG beyng#be_v)
					  (ADVP-TMP (ADV still#still_adv))
					  (NP-PRD (D the#the_adj)
						  (ADJ right#right_adj)
						  (N line#line_n2)
						  (PUNC ,)
						  (CP-REL (WPP-2 (P on#on_prep)
								 (WNP (WPRO whiche#which_adj)))
							  (C 0)
							  (IP-SUB (PP *T*-2)
								  (NP-SBJ (N D.#NA))
								  (VBP standeth#stand_v)
								  (CODE <P_2,C3V>)
								  (PP (P in#in_prep)
								      (NP (N slope#slope_n1) (NS wayes#way_n1))))))))))))
	  (PUNC ,)
	  (CONJ but#but_prep)
	  (ADVP (ADV yet#yet_adv))
	  (NP-SBJ (PRO they#they_pron))
	  (BEP are#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (NUM two#two_adj) (ADJ righte#right_adj) (NS angles#angle_n2))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C3V.187))

( (IP-MAT (CONJ for#for_prep)
	  (NP-LFD (QP (ADVR so#so_adv) (Q muche#much_adj))
		  (PP (P as#as_adv)
		      (CP-CMP (WQP-1 0)
			      (C 0)
			      (IP-SUB (NP-SBJ (D the#the_adj) (ONE one#one_adj))
				      (BEP is#be_v)
				      (ADJP-PRD (ADJP (QP *T*-1)
						      (ADVR to#too_adv)
						      (ADJ greate#great_adj))
						(PUNC ,)
						(CONJP (ADJP (QP (QP *T*-1)
								 (QR more#more_adj))
							     (PP (P then#than_conj)
								 (NP (D a#a_adj) (ADJ righte#right_adj) (N angle#angle_n2))))))))))
	  (PUNC ,)
	  (NP-RSP-2 (QP (ADVR so#so_adv) (Q muche#much_adj))
		    (ADVP (ADV iuste#just_adv)))
	  (BEP is#be_v)
	  (NP-SBJ (D the#the_adj) (OTHER other#other_adj))
	  (ADJP-PRD (NP-MSR *ICH*-2)
		    (ADVR to#too_adv)
		    (ADJ little#little_adj))
	  (PUNC ,)
	  (PP (P so#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (NP-SBJ (Q bothe#both_pron))
			      (ADVP (ADV togither#together_adv))
			      (BEP are#be_v)
			      (ADJP-PRD (ADJ equall#equal_adj)
					(PP (P to#to_prep)
					    (NP (NUM two#two_adj) (ADJ right#right_adj) (NS angles#angle_n2))))
			      (PUNC ,)
			      (PP (P as#as_adv)
				  (CP-ADV (WNP-3 0)
					  (C 0)
					  (IP-SUB (NP-OB1 *T*-3)
						  (NP-SBJ (PRO you#you_pron))
						  (MD may#may_v1)
						  (VB perceiue#perceive_v)))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C3V.188))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ SEUENTH#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,C3V.190))

( (CODE <$$heading>))

( (IP-MAT (PP-LFD (P If#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (IP-SUB (NP-SBJ (NUM .ij.#two_adj) (NS lines#line_n2))
					  (BEP be#be_v)
					  (VAN drawen#draw_v)
					  (PP (P to#to_prep)
					      (NP (Q any#any_adj)
						  (ONE one#one_adj)
						  (N pricke#prick_n)
						  (PP (P in#in_prep)
						      (NP (D an#a_adj) (OTHER other#other_adj) (N lyne#line_n2))))))
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (IP-SUB (NP-SBJ (D those#those_pron) (NUM .ij.#two_adj) (NS lines#line_n2))
						 (DOP do#do_v)
						 (VB make#make_v1)
						 (PP (P with#with_prep)
						     (NP (D the#the_adj) (ADJ fyrst#first_adj) (N lyne#line_n2)))
						 (PUNC ,)
						 (NP-OB1 (NP (NUM two#two_adj) (ADJ right#right_adj) (NS angles#angle_n2))
							 (PUNC ,)
							 (CONJP (CONJ other#other_conj)
								(NP (SUCH suche#such_adj)
								    (PP (P as#as_adv)
									(CP-CMP (WNP-1 0)
										(C 0)
										(IP-SUB (NP-SBJ *T*-1)
											(BEP be#be_v)
											(ADJP-PRD (ADJ equall#equal_adj)
												  (PP (P to#to_prep)
												      (NP (NUM two#two_adj) (ADJ right#right_adj) (NS angles#angle_n2))))))))))))
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (FRAG (NP (D that#that_pron1))
					       (PP (P towarde#toward_prep)
						   (NP (ONE one#one_adj) (N hande#hand_n))))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV than#then_adv))
	  (NP-SBJ (D those#those_pron) (NUM two#two_adj) (NS lines#line_n2))
	  (DOP doo#do_v)
	  (VB make#make_v1)
	  (NP-OB1 (ONE one#one_adj) (ADJ streyght#straight_adj) (N lyne#line_n2))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C3V.192))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,C3V.193))

( (IP-MAT (NP-SBJ (N A.B.#NA))
	  (BEP is#be_v)
	  (NP-PRD (D a#a_adj)
		  (ADJ streyght#straight_adj)
		  (N lyne#line_n2)
		  (PUNC ,)
		  (CP-REL (WPP-1 (P on#on_prep)
				 (WNP (WPRO which#which_adj)))
			  (C 0)
			  (IP-SUB (PP *T*-1)
				  (NP-SBJ-2 (EX there#there_adv))
				  (DOP doth#do_v)
				  (VB lyght#light_v1)
				  (NP-2 (NUM two#two_adj) (OTHER other#other_adj) (NS lines#line_n2))
				  (IP-ABS (IP-ABS (NP-SBJ (ONE one#one_adj))
						  (PP (P frome#from_prep)
						      (NP (N D#NA))))
					  (PUNC ,)
					  (CONJP (CONJ and#and_conj1)
						 (IP-ABS (NP-SBJ (D the#the_adj) (OTHER other#other_adj))
							 (PP (P frome#from_prep)
							     (NP (N C#NA)))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C3V.194))

( (CODE {COM:figure_omitted}))

( (IP-MAT (CONJ but#but_prep)
	  (IP-PPL (VAG considerynge#consider_v)
		  (CP-THT (CP-THT (C that#that_conj)
				  (IP-SUB (NP-SBJ (PRO they#they_pron))
					  (VBP meete#meet_v)
					  (PP (P in#in_prep)
					      (NP (ONE one#one_adj)
						  (N pricke#prick_n)
						  (NP-PRN (N E#NA))))))
			  (PUNC ,)
			  (CONJP (CONJ and#and_conj1)
				 (CP-THT (C that#that_conj)
					 (IP-SUB (NP-SBJ (D the#the_adj)
							 (NS angles#angle_n2)
							 (PP (P on#on_prep)
							     (NP (ONE one#one_adj) (N hand#hand_n))))
						 (BEP be#be_v)
						 (ADJP-PRD (ADJ equal#equal_adj)
							   (PP (P to#to_prep)
							       (NP (NUM two#two_adj) (ADJ right#right_adj) (NS corners#corner_n1))))
						 (PUNC <paren>)
						 (PP-PRN (P as#as_adv)
							 (CP-ADV (WNP-1 0)
								 (C 0)
								 (IP-SUB (NP-OB1 *T*-1)
									 (NP-SBJ (D the#the_adj) (ADJ laste#last_adv) (N theoreme#theorem_n))
									 (DOP dothe#do_v)
									 (VB declare#declare_v)))))))))
	  (PUNC <$$paren>)
	  (PP (ADV+P therfore#therefore_adv))
	  (MD maye#may_v1)
	  (NP-SBJ (N D.E.#NA) (CONJ and#and_conj1) (N E.C.#NA))
	  (BE be#be_v)
	  (VAN counted#count_v)
	  (PP (P for#for_prep)
	      (NP (ONE one#one_adj) (ADJ ryght#right_adj) (N lyne#line_n2)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C3V.196))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM EIGHT#eight_adj) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,C3V.198))

( (CODE <$$heading>))

( (IP-MAT (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (NUM two#two_adj) (NS lines#line_n2))
			      (DOP do#do_v)
			      (VB cut#cut_v)
			      (NP-OB1 (ONE one#one_adj)
				      (NP (D an#a_adj) (OTHER other#other_adj)))
			      (NP-ADV (NS crosseways#cross-way_n)))))
	  (NP-SBJ (PRO they#they_pron))
	  (DOP do#do_v)
	  (VB make#make_v1)
	  (IP-SMC (NP-SBJ (PRO$ their#their_adj) (N matche#match_n1) (NS angles#angle_n2))
		  (ADJP-PRD (ADJ equall#equal_adj)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C3V.200))

( (CODE <P_2,C4R>))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,C4R.202))

( (IP-MAT (CP-QUE-SUB (WNP-1 (WPRO What#what_pron))
		      (C 0)
		      (IP-SUB (NP-PRD *T*-1)
			      (NP-SBJ (N matche#match_n1) (NS angles#angle_n2))
			      (BEP are#be_v)))
	  (PUNC ,)
	  (NP-SBJ (PRO I#i_pron))
	  (HVP haue#have_v)
	  (VBN tolde#tell_v)
	  (NP-OB2 (PRO you#you_pron))
	  (PP (P in#in_prep)
	      (NP (D the#the_adj)
		  (N definition#definition_n)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (NS termes#term_n)))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C4R.203))

( (IP-MAT (CONJ And#and_conj1)
	  (ADVP-LOC (ADV here#here_adv))
	  (NP-SBJ (N A#NA) (PUNC ,) (CONJ and#and_conj1) (N B.#NA))
	  (BEP are#be_v)
	  (NP-PRD (N matche#match_n1) (NS corners#corner_n1))
	  (PP (P in#in_prep)
	      (NP (D this#this_pron) (N example#example_n)))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-PRD *T*-1)
			      (BEP are#be_v)
			      (ALSO also#also_adv)
			      (NP-SBJ (N C.#NA) (CONJ and#and_conj1) (N D#NA)))))
	  (PUNC ,)
	  (PP (P so#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (IP-SUB (NP-SBJ (D the#the_adj)
					      (N corner#corner_n1)
					      (NP-PRN (N A#NA)))
				      (PUNC ,)
				      (BEP is#be_v)
				      (ADJP-PRD (ADJ equall#equal_adj)
						(PP (P to#to_prep)
						    (NP (N B#NA)))))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB (NP-SBJ (D the#the_adj)
						     (N angle#angle_n2)
						     (NP-PRN (N C#NA)))
					     (PUNC ,)
					     (BEP is#be_v)
					     (ADJP-PRD (ADJ equall#equal_adj)
						       (PP (P to#to_prep)
							   (NP (N D#NA)))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C4R.204))

( (CODE {COM:figure_omitted}))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ NYNTH#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,C4R.207))

( (CODE <$$heading>))

( (IP-MAT (ADVP-TMP (CP-FRL (WADVP-1 (WADV whan#when_adv) (ADVR so#so_adv) (ADV euer#ever_adv))
			    (C 0)
			    (IP-SUB (ADVP-TMP *T*-1)
				    (PP (P in#in_prep)
					(NP (Q any#any_adj) (N triangle#triangle_n)))
				    (NP-SBJ (D the#the_adj)
					    (N line#line_n2)
					    (PP (P of#of_prep)
						(NP (ONE one#one_adj) (N side#side_n1))))
				    (BEP is#be_v)
				    (VAN drawen#draw_v)
				    (ADVP (ADV forthe#forth_adv))
				    (PP (P in#in_prep)
					(NP (N lengthe#length_n))))))
	  (PUNC ,)
	  (NP-SBJ (D that#that_pron1) (ADJ vtter#utter_adj) (N angle#angle_n2))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJR greater#great_adj)
		    (PP (P than#than_conj)
			(NP (Q any#any_adj)
			    (PP (P of#of_prep)
				(NP (D the#the_adj)
				    (NUM two#two_adj)
				    (ADJ inner#inner_adj)
				    (NS corners#corner_n1)
				    (PUNC ,)
				    (CP-REL (WNP-2 0)
					    (C that#that_conj)
					    (IP-SUB (NP-SBJ *T*-2)
						    (VBP ioyne#join_v1)
						    (NEG not#not_adv)
						    (PP (P with#with_prep)
							(NP (PRO it#it_pron))))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C4R.209))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,C4R.210))

( (IP-MAT (NP-SBJ (D The#the_adj)
		  (N triangle#triangle_n)
		  (NP-PRN (N A.D.C#NA)))
	  (CODE {COM:figure_omitted})
	  (HVP hathe#have_v)
	  (IP-SMC (NP-SBJ (PRO$ hys#his_adj)
			  (N grounde#ground_n)
			  (N lyne#line_n2)
			  (NP-PRN (N A.C.#NA)))
		  (VAN drawen#draw_v)
		  (ADVP (ADV forthe#forth_adv))
		  (PP (P in#in_prep)
		      (NP (N lengthe#length_n)))
		  (PP (P vnto#unto_prep)
		      (NP (N B#NA)))
		  (PUNC ,)
		  (PP (P so#so_adv)
		      (CP-ADV (C that#that_conj)
			      (IP-SUB (NP-SBJ (D the#the_adj)
					      (ADJ vtter#utter_adj)
					      (N corenr#corner_n1)
					      (CP-REL (WNP-1 0)
						      (C that#that_conj)
						      (IP-SUB (NP-OB1 *T*-1)
							      (NP-SBJ (PRO it#it_pron))
							      (VBP maketh#make_v1)
							      (PP (P at#at_prep)
								  (NP (N C#NA))))))
				      (PUNC ,)
				      (BEP is#be_v)
				      (ADJP-PRD (ADJR greater#great_adj)
						(PP (P then#than_conj)
						    (NP (Q any#any_adj)
							(PP (P of#of_prep)
							    (NP (D the#the_adj)
								(NUM two#two_adj)
								(ADJ inner#inner_adj)
								(NS corners#corner_n1)
								(CP-REL (WNP-2 0)
									(C that#that_conj)
									(IP-SUB (IP-SUB (NP-SBJ *T*-2)
											(VBP lye#lie_v1)
											(PP (P againste#against_prep)
											    (NP (PRO it#it_pron))))
										(PUNC ,)
										(CONJP (CONJ and#and_conj1)
										       (IP-SUB (NP-SBJ *T*-2)
											       (VBP ioyne#join_v1)
											       (NEG not#not_adv)
											       (PP (P wyth#with_prep)
												   (NP (PRO it#it_pron)))))))
								(PUNC ,)
								(CP-REL (WNP-3 (WPRO whyche#which_adj))
									(C 0)
									(IP-SUB (NP-SBJ *T*-3)
										(BEP are#be_v)
										(NP-PRD (N A.#NA) (CONJ and#and_conj1) (N D#NA)))))))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C4R.211))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (PRO they#they_pron))
	  (Q both#both_pron)
	  (BEP are#be_v)
	  (ADJP-PRD (ADJR lesser#lesser_adj)
		    (PP (P then#than_conj)
			(NP (D a#a_adj) (ADJ ryght#right_adj) (N angle#angle_n2))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C4R.212))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (BEP be#be_v)
	  (NP-PRD (ADJ sharpe#sharp_adj) (NS angles#angle_n2))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C4R.213))

( (IP-MAT (IP-MAT-1 (CONJ but#but_prep)
		    (NP-SBJ (N C.#NA))
		    (BEP is#be_v)
		    (NP-PRD (D a#a_adj) (ADJ blonte#blunt_adj) (N angle#angle_n2)))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (PP (ADV+P therfore#therefore_adv))
			   (ADJP-PRD (ADJR greater#great_adj)
				     (PP (P then#than_conj)
					 (NP (D a#a_adj) (ADJ ryght#right_adj) (N angle#angle_n2))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C4R.214))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ TENTH#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,C4R.216))

( (CODE <$$heading>))

( (IP-MAT (PP (P In#in_prep)
	      (NP (Q euery#every_adj) (N triangle#triangle_n)))
	  (NP-SBJ (Q any#any_adj)
		  (NUM .ij.#two_adj)
		  (NS corners#corner_n1)
		  (PUNC ,)
		  (CP-REL (WADVP-1 (WADV how#how_adv) (ADV so#so_adv) (ADV euer#ever_adv))
			  (C 0)
			  (IP-SUB (ADVP *T*-1)
				  (NP-SBJ (PRO you#you_pron))
				  (VBP take#take_v)
				  (NP-OB1 (PRO the~#them_pron)))))
	  (PUNC ,)
	  (BEP ar#be_v)
	  (ADJP-PRD (QR lesse#less_adj)
		    (PP (P the~#than_conj)
			(NP (NUM ij.#two_adj) (ADJ right#right_adj) (NS corners#corner_n1))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C4R.218))

( (CODE <P_2,C4V>))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,C4V.220))

( (IP-IMP (IP-IMP (PP (P In#in_prep)
		      (NP (D the#the_adj)
			  (ADJ first#first_adj)
			  (N triangle#triangle_n)
			  (NP-PRN (N E#NA))
			  (PUNC ,)
			  (CODE {COM:figure_omitted})
			  (CP-REL (WNP-1 (WPRO whiche#which_adj))
				  (C 0)
				  (IP-SUB (IP-SUB (NP-SBJ *T*-1)
						  (BEP is#be_v)
						  (NP-PRD (D a#a_adj) (ADJ threlyke#three_adj)))
					  (PUNC ,)
					  (CONJP (CONJ and#and_conj1)
						 (IP-SUB (PP (ADV+P therfore#therefore_adv))
							 (NP-SBJ *con*)
							 (HVP hath#have_v)
							 (IP-SMC (NP-SBJ (Q all#all_adj) (PRO$ his#his_adj) (NS angles#angle_n2))
								 (ADJP-PRD (ADJ sharpe#sharp_adj)))))))))
		  (PUNC ,)
		  (VBI take#take_v)
		  (NP-OB1 (Q anie#any_adj)
			  (NUM twoo#two_adj)
			  (NS corners#corner_n1)
			  (CP-REL (WNP-2 0)
				  (C that#that_conj)
				  (IP-SUB (NP-OB1 *T*-2)
					  (NP-SBJ (PRO you#you_pron))
					  (MD will#will_v1)
					  (VB *)))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT (NP-SBJ (PRO you#you_pron))
			 (MD shall#shall_v)
			 (VB perceiue#perceive_v)
			 (CP-THT (C that#that_conj)
				 (IP-SUB (NP-SBJ (PRO they#they_pron))
					 (BEP be#be_v)
					 (ADJP-PRD (ADJR lesser#lesser_adj)
						   (PP (P then#than_conj)
						       (NP (NUM ij.#two_adj) (ADJ right#right_adj) (NS corners#corner_n1))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,C4V.221))

( (IP-MAT (CONJ for#for_prep)
	  (PP (P in#in_prep)
	      (NP (Q euery#every_adj)
		  (N triangle#triangle_n)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (HVP hath#have_v)
				  (NP-OB1 (Q all#all_adj) (ADJ sharpe#sharp_adj) (NS corners#corner_n1))
				  (PUNC <paren>)
				  (PP-PRN (P as#as_adv)
					  (CP-ADV (WADVP-2 0)
						  (C 0)
						  (IP-SUB (NP-SBJ (PRO you#you_pron))
							  (VBP see#see_v)
							  (IP-INF (ADVP *T*-2)
								  (NP-SBJ (PRO it#it_pron))
								  (TO to#to_prep)
								  (BE be#be_v)
								  (PP (P in#in_prep)
								      (NP (D this#this_pron) (N example#example_n)))))))))))
	  (PUNC <$$paren>)
	  (NP-SBJ (Q euery#every_adj) (N corner#corner_n1))
	  (BEP is#be_v)
	  (ADJP-PRD (QR lesse#less_adj)
		    (PP (P then#than_conj)
			(NP (D a#a_adj) (ADJ right#right_adj) (N corner#corner_n1))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C4V.222))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (ADV+P therfore#therefore_adv))
	  (ALSO also#also_adv)
	  (NP-SBJ (Q euery#every_adj) (NUM two#two_adj) (NS corners#corner_n1))
	  (MD must#must_v1)
	  (ADVP (ADV nedes#needs_adv))
	  (BE be#be_v)
	  (ADJP-PRD (QR lesse#less_adj)
		    (PP (P then#than_conj)
			(NP (NUM two#two_adj) (ADJ right#right_adj) (NS corners#corner_n1))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C4V.223))

( (IP-MAT (ADVP (ADV Furthermore#furthermore_adv))
	  (PP (P in#in_prep)
	      (NP (D that#that_pron1)
		  (OTHER other#other_adj)
		  (N triangle#triangle_n)
		  (RRC (VAN marked#mark_v)
		       (PP (P with#with_prep)
			   (NP (N M#NA))))
		  (PUNC ,)
		  (CODE {COM:figure_omitted})
		  (CP-REL (WNP-1 (WPRO whiche#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (HVP hath#have_v)
				  (NP-OB1 (NP (NUM .ij.#two_adj) (ADJ sharpe#sharp_adj) (NS corners#corner_n1))
					  (CONJP (CONJ and#and_conj1)
						 (NP (ONE one#one_adj)
						     (ADJP (ADJ right#right_adj)))))))))
	  (PUNC ,)
	  (NP-SBJ (Q any#any_adj)
		  (NUM .ij.#two_adj)
		  (PP (P of#of_prep)
		      (NP (PRO them#them_pron))))
	  (ALSO also#also_adv)
	  (BEP are#be_v)
	  (ADJP-PRD (QR lesse#less_adj)
		    (PP (P then#than_conj)
			(NP (NUM two#two_adj) (ADJ ryght#right_adj) (NS angles#angle_n2))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C4V.224))

( (IP-MAT (CONJ For#for_prep)
	  (PP-LFD (P though#though_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (PRO you#you_pron))
				  (VBP take#take_v)
				  (NP-OB1 (D the#the_adj) (ADJ right#right_adj) (N corner#corner_n1))
				  (PP (P for#for_prep)
				      (NP (ONE one#one_adj))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV yet#yet_adv))
	  (NP-SBJ (D the#the_adj)
		  (OTHER other#other_adj)
		  (CP-REL (WNP-1 (WPRO whiche#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP is#be_v)
				  (NP-PRD (D a#a_adj) (ADJ sharpe#sharp_adj) (N corner#corner_n1)))))
	  (PUNC ,)
	  (BEP is#be_v)
	  (ADJP-PRD (QR lesse#less_adj)
		    (PP (P then#than_conj)
			(NP (D a#a_adj) (ADJ right#right_adj) (N corner#corner_n1))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C4V.225))

( (IP-MAT (CONJ And#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (NP-SBJ (PRO it#it_pron))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ true#true_adj))
	  (PP (P in#in_prep)
	      (NP (Q all#all_adj)
		  (NS kindes#kind_n)
		  (PP (P of#of_prep)
		      (NP (NS triangles#triangle_n)))))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-OB1 *T*-1)
			      (NP-SBJ (PRO you#you_pron))
			      (MD maie#may_v1)
			      (VB perceiue#perceive_v)
			      (ADVP (QR more#more_adj) (ADV plainly#plainly_adv1))
			      (PP (P by#by_prep)
				  (NP (D the#the_adj) (NUM .xxij.#NA) (N Theoreme#theorem_n))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C4V.226))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM .XI.#eleven_adj) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,C4V.228))

( (CODE <$$heading>))

( (IP-MAT (PP (P In#in_prep)
	      (NP (Q euery#every_adj) (N triangle#triangle_n)))
	  (PUNC ,)
	  (NP-SBJ (D the#the_adj) (ADJS greattest#great_adj) (N side#side_n1))
	  (VBP lieth#lie_v1)
	  (PP (P against#against_prep)
	      (NP (D the#the_adj) (ADJS greattest#great_adj) (N angle#angle_n2)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C4V.230))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,C4V.231))

( (IP-MAT (PP (P As#as_adv)
	      (PP (P in#in_prep)
		  (NP (D this#this_pron)
		      (N triangle#triangle_n)
		      (NP-PRN (N A.B.C#NA)))))
	  (PUNC ,)
	  (CODE {COM:figure_omitted})
	  (NP-SBJ (D the#the_adj) (ADJS greatest#great_adj) (N angle#angle_n2))
	  (BEP is#be_v)
	  (NP-PRD (N C.#NA)))
  (ID RECORD-1551-E1-P2,2,C4V.232))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-SBJ (N A.B.#NA)
		  (PUNC <paren>)
		  (CP-REL (WNP-1 (WPRO whiche#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP is#be_v)
				  (NP-PRD (D the#the_adj)
					  (N side#side_n1)
					  (CP-REL (WNP-2 0)
						  (C that#that_conj)
						  (IP-SUB (NP-SBJ *T*-2)
							  (VBP lieth#lie_v1)
							  (PP (P against#against_prep)
							      (NP (PRO it#it_pron)))))))))
	  (PUNC <$$paren>)
	  (BEP is#be_v)
	  (NP-PRD (D the#the_adj)
		  (ADJP (ADJS greatest#great_adj) (CONJ and#and_conj1) (ADJS longest#long_adj1))
		  (N side#side_n1))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,C4V.233))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-ADV (ADJ contrary#contrary_adj) (NS waies#way_n1))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-CMP (WADVP-1 0)
		      (C 0)
		      (IP-SUB (ADVP *T*-1)
			      (NP-SBJ (N A.C.#NA))
			      (BEP is#be_v)
			      (NP-PRD (D the#the_adj) (ADJS shortest#short_adj) (N side#side_n1)))))
	  (PUNC ,)
	  (ADVP (ADV so#so_adv))
	  (NP-SBJ (N B.#NA)
		  (PUNC <paren>)
		  (CP-REL (WNP-2 (WPRO whiche#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-2)
				  (BEP is#be_v)
				  (NP-PRD (D the#the_adj)
					  (N angle#angle_n2)
					  (RRC (VAG liyng#lie_v1)
					       (PP (P against#against_prep)
						   (NP (PRO it#it_pron))))))))
	  (PUNC <$$paren>)
	  (BEP is#be_v)
	  (NP-PRD (D the#the_adj)
		  (CODE <P_2,D1R>)
		  (ADJP (ADJS smallest#small_adj) (CONJ and#and_conj1) (ADJS sharpest#sharp_adj))
		  (N angle#angle_n2))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D1R.234))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (D this#this_pron)
		  (CP-THT-PRN *ICH*-1))
	  (DOP doth#do_v)
	  (VB folow#follow_v)
	  (ALSO also#also_adv)
	  (PUNC ,)
	  (CP-THT-PRN-1 (C that#that_conj)
			(FRAG (PP (P as#as_adv)
				  (CP-CMP (WADVP-2 0)
					  (C 0)
					  (IP-SUB (ADVP *T*-2)
						  (NP-SBJ (D the#the_adj) (ADJS longest#long_adj1) (N side#side_n1))
						  (VBP lyeth#lie_v1)
						  (PP (P against#against_prep)
						      (NP (D the#the_adj) (ADJS greatest#great_adj) (N angle#angle_n2))))))
			      (PUNC ,)
			      (ADVP (ADV so#so_adv))
			      (NP (PRO it#it_pron)
				  (CP-REL (WNP-3 0)
					  (C that#that_conj)
					  (IP-SUB (NP-SBJ *T*-3)
						  (VBP foloweth#follow_v)))))))
  (ID RECORD-1551-E1-P2,2,D1R.235))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ TWELFT#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,D1R.237))

( (CODE <$$heading>))

( (IP-MAT (PP (P In#in_prep)
	      (NP (Q euery#every_adj) (N triangle#triangle_n)))
	  (NP-SBJ (D the#the_adj) (ADJS greattest#great_adj) (N angle#angle_n2))
	  (VBP lieth#lie_v1)
	  (PP (P against#against_prep)
	      (NP (D the#the_adj) (ADJS longest#long_adj1) (N side#side_n1)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D1R.239))

( (IP-MAT (CONJ For#for_prep)
	  (NP-SBJ (D these#these_pron) (NUM ij.#two_adj) (NS theoremes#theorem_n))
	  (BEP are#be_v)
	  (NP-PRD (ONE one#one_adj))
	  (PP (P in#in_prep)
	      (NP (N truthe#truth_n)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D1R.240))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ THIRTENTH#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,D1R.242))

( (CODE <$$heading>))

( (IP-MAT (PP (P In#in_prep)
	      (NP (Q euerie#every_adj) (N triangle#triangle_n)))
	  (NP-SBJ (Q anie#any_adj)
		  (NUM ij.#two_adj)
		  (NS sides#side_n1)
		  (ADVP (ADV togither#together_adv)))
	  (ADVP (CP-FRL (WADVP-1 (WADV how#how_adv) (ADV so#so_adv) (ADV euer#ever_adv))
			(C 0)
			(IP-SUB (ADVP *T*-1)
				(NP-SBJ (PRO you#you_pron))
				(VBP take#take_v)
				(NP-OB1 (PRO them#them_pron)))))
	  (PUNC ,)
	  (BEP are#be_v)
	  (ADJP-PRD (ADJR longer#long_adj1)
		    (PP (P the~#than_conj)
			(NP (D the#the_adj) (ADJ thirde#third_adj))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D1R.244))

( (IP-MAT (PP (P For#for_prep)
	      (NP (N example#example_n)))
	  (NP-SBJ (PRO you#you_pron))
	  (MD shal#shall_v)
	  (VB take#take_v)
	  (NP-OB1 (D this#this_pron)
		  (N triangle#triangle_n)
		  (NP-PRN (N A.B.#NA))
		  (CODE {COM:figure_omitted})
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (IP-SUB (NP-SBJ *T*-1)
					  (HVP hath#have_v)
					  (NP-OB1 (D a#a_adj)
						  (ADJP (ADV veery#very_adj) (ADJ blunt#blunt_adj))
						  (N corner#corner_n1)))
				  (PUNC ,)
				  (CONJP (FRAG (CONJ and#and_conj1)
					       (PP (ADV+P therfore#therefore_adv))
					       (NP-SBJ (ONE one#one_adj)
						       (PP (P of#of_prep)
							   (NP (PRO$ his#his_adj) (NS sides#side_n1))))
					       (ADJP-PRD (ADJR greater#great_adj)
							 (NP-MSR (D a#a_adj) (ADJ good#good_adj) (N deale#deal_n1))
							 (PP (P then#than_conj)
							     (NP (Q any#any_adj)
								 (PP (P of#of_prep)
								     (NP (D the#the_adj) (OTHERS other#other_adj)))))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D1R.245))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV yet#yet_adv))
	  (NP-SBJ (D the#the_adj) (NUM ij.#two_adj) (ADJR lesser#lesser_adj) (NS sides#side_n1))
	  (ADVP (ADV togither#together_adv))
	  (BEP ar#be_v)
	  (ADJP-PRD (ADJ greate#great_adj)
		    (CODE {COM:preceding_word_"greate"_emended})
		    (CODE {COM:sic})
		    (PP (P then#than_conj)
			(NP (PRO it#it_pron))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D1R.246))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (P if#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO it#it_pron))
			      (BEP bee#be_v)
			      (ADVP (ADV so#so_adv))
			      (PP (P in#in_prep)
				  (NP (D a#a_adj) (ADJ blunte_angeled#SEE_blunt_adj) (N triangle#triangle_n))))))
	  (PUNC ,)
	  (NP-SBJ (PRO it#it_pron))
	  (MD must#must_v1)
	  (ADVP (ADV nedes#needs_adv))
	  (BE be#be_v)
	  (ADJP-PRD (ADJ true#true_adj))
	  (PP (P in#in_prep)
	      (NP (Q all#all_adj) (OTHERS other#other_adj)))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D1R.247))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ-1 (EX there#there_adv))
	  (BEP is#be_v)
	  (NP-1 (Q no#no_adj)
		(OTHER other#other_adj)
		(N kinde#kind_n)
		(PP (P of#of_prep)
		    (NP (NS triangles#triangle_n)))
		(CP-REL (WNP-2 0)
			(C that#that_conj)
			(IP-SUB (NP-SBJ *T*-2)
				(HVP hathe#have_v)
				(IP-SMC (NP-SBJ (D the#the_adj) (ONE one#one_adj) (N side#side_n1))
					(ADJP-PRD (ADVR so#so_adv)
						  (ADJ greate#great_adj)
						  (PP (P aboue#above_adv)
						      (NP (D the#the_adj) (OTHER other#other_adj) (NS sids#side_n1)))
						  (CODE {COM:sic})
						  (PUNC ,)
						  (PP (P as#as_adv)
						      (NP (PRO they#they_pron)
							  (CP-REL (WNP-3 0)
								  (C y=t=#that_conj)
								  (IP-SUB (NP-SBJ *T*-3)
									  (HVP haue#have_v)
									  (NP-OB1 (ADJ blunt#blunt_adj) (NS corners#corner_n1)))))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D1R.248))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ FOURTENTH#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,D1R.250))

( (CODE <$$heading>))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ-1 (EX there#there_adv))
			      (BEP be#be_v)
			      (VAN drawen#draw_v)
			      (PP (P from#from_prep)
				  (NP (D the#the_adj)
				      (NS endes#end_n)
				      (PP (P of#of_prep)
					  (NP (Q anie#any_adj)
					      (N side#side_n1)
					      (PP (P of#of_prep)
						  (NP (D a#a_adj) (N triangle#triangle_n)))))))
			      (NP-1 (NUM .ij.#two_adj)
				    (NS lines#line_n2)
				    (RRC (VAG metinge#meet_v)
					 (PP (P within#within_adv)
					     (NP (D the#the_adj) (N triangle#triangle_n))))))))
	  (PUNC ,)
	  (NP-SBJ (D those#those_pron) (NUM two#two_adj) (NS lines#line_n2))
	  (MD shall#shall_v)
	  (BE be#be_v)
	  (ADJP-PRD (QR lesse#less_adj)
		    (PP (P then#than_conj)
			(NP (D the#the_adj)
			    (OTHER other#other_adj)
			    (NUM twoo#two_adj)
			    (NS sides#side_n1)
			    (PP (P of#of_prep)
				(NP (D the#the_adj) (N triangle#triangle_n))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D1R.252))

( (IP-MAT (CONJ but#but_prep)
	  (ADVP (ADV yet#yet_adv))
	  (NP-SBJ (D the#the_adj)
		  (CODE <P_2,D1V>)
		  (N corner#corner_n1)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-OB1 *T*-1)
				  (NP-SBJ (PRO thei#they_pron))
				  (VBP make#make_v1))))
	  (PUNC ,)
	  (MD shall#shall_v)
	  (BE bee#be_v)
	  (ADJP-PRD (ADJR greater#great_adj)
		    (PP (P then#than_conj)
			(NP (D that#that_pron1)
			    (N corner#corner_n1)
			    (PP (P of#of_prep)
				(NP (D the#the_adj) (N triangle#triangle_n)))
			    (PUNC ,)
			    (CP-REL (WNP-2 (WPRO whiche#which_adj))
				    (C 0)
				    (IP-SUB (NP-SBJ *T*-2)
					    (VBP standeth#stand_v)
					    (PP (P ouer#over_prep)
						(NP (PRO it#it_pron))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D1V.253))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,D1V.254))

( (IP-MAT (NP-SBJ (N A.B.C.#NA))
	  (BEP is#be_v)
	  (NP-PRD (D a#a_adj)
		  (N triangle#triangle_n)
		  (PUNC .)
		  (CODE {COM:figure_omitted})
		  (CP-REL (WPP-1 (P on#on_prep)
				 (WNP (WPRO$ whose#whose_pron)
				      (N ground#ground_n)
				      (N line#line_n2)
				      (NP-PRN (N A.B.#NA))))
			  (C 0)
			  (IP-SUB (PP *T*-1)
				  (NP-SBJ-2 (EX there#there_adv))
				  (BEP is#be_v)
				  (VAN drawen#draw_v)
				  (NP-2 (NUM ij.#two_adj) (NS lines#line_n2))
				  (PUNC ,)
				  (PP (P from#from_prep)
				      (NP (D the#the_adj)
					  (NUM ij.#two_adj)
					  (NS endes#end_n)
					  (PP (P of#of_prep)
					      (NP (PRO it#it_pron)))))
				  (PUNC ,)
				  (IP-MAT-PRN (NP-SBJ (PRO I#i_pron))
					      (VBP say#say_v1)
					      (PP (P from#from_prep)
						  (NP (N A.#NA) (CONJ and#and_conj1) (N B#NA)))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D1V.255))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO they#they_pron))
	  (VBP meete#meet_v)
	  (PP (P within#within_adv)
	      (NP (D the#the_adj) (N triangle#triangle_n)))
	  (PP (P in#in_prep)
	      (NP (D the#the_adj)
		  (N pointe#point_n1)
		  (NP-PRN (N D#NA))))
	  (PUNC ,)
	  (CP-CAR (WPP-1 (WADV+P wherfore#wherefore_adv))
		  (C 0)
		  (IP-SUB (PP *T*-1)
			  (NP-SBJ (PRO I#i_pron))
			  (VBP say#say_v1)
			  (PUNC ,)
			  (CP-THT (C that#that_conj)
				  (IP-SUB (PP (P as#as_adv)
					      (CP-CMP (WADVP-2 0)
						      (C 0)
						      (IP-SUB (ADVP *T*-2)
							      (NP-SBJ (D those#those_pron)
								      (NUM two#two_adj)
								      (NS lynes#line_n2)
								      (NP-PRN (N A.D.#NA) (CONJ and#and_conj1) (N B.D#NA)))
							      (PUNC ,)
							      (BEP are#be_v)
							      (ADJP-PRD (ADJR lesser#lesser_adj)
									(PP (P then#than_conj)
									    (NP (N A.C.#NA) (CONJ and#and_conj1) (N B.C#NA)))))))
					  (PUNC ,)
					  (ADVP (ADV so#so_adv))
					  (NP-SBJ (D the#the_adj)
						  (N angle#angle_n2)
						  (NP-PRN (N D#NA)))
					  (PUNC ,)
					  (BEP is#be_v)
					  (ADJP-PRD (ADJR greatter#great_adj)
						    (PP (P then#than_conj)
							(NP (D the#the_adj)
							    (N angle#angle_n2)
							    (NP-PRN (N C#NA))
							    (PUNC ,)
							    (CP-REL (WNP-3 (WPRO which#which_adj))
								    (C 0)
								    (IP-SUB (NP-SBJ *T*-3)
									    (BEP is#be_v)
									    (NP-PRD (D the#the_adj)
										    (N angle#angle_n2)
										    (PP (P against#against_prep)
											(NP (PRO it#it_pron)))))))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D1V.256))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ FIFTENTH#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,D1V.258))

( (CODE <$$heading>))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB-1 (NP-SBJ (D a#a_adj) (N triangle#triangle_n))
					(HVP haue#have_v)
					(NP-OB1 (NUM two#two_adj)
						(NS sides#side_n1)
						(ADJP (ADJ equall#equal_adj)
						      (PP (P to#to_prep)
							  (NP (D the#the_adj)
							      (NUM two#two_adj)
							      (NS sides#side_n1)
							      (PP (P of#of_prep)
								  (NP (D an#a_adj) (OTHER other#other_adj) (N triangle#triangle_n))))))))
			      (PUNC ,)
			      (CONJP (CONJ but#but_prep)
				     (IP-SUB=1 (ADVP (ADV yet#yet_adv))
					       (NP-SBJ (D the#the_adj)
						       (N a~gle#angle_n2)
						       (CP-REL (WNP-2 0)
							       (C that#that_conj)
							       (IP-SUB (NP-SBJ *T*-2)
								       (BEP is#be_v)
								       (VAN contained#contain_v)
								       (PP (P betwene#between_prep)
									   (NP (D those#those_pron) (NS sides#side_n1))))))
					       (PUNC ,)
					       (ADJP-PRD (ADJR greater#great_adj)
							 (PP (P then#than_conj)
							     (NP (D the#the_adj)
								 (ADJ like#like_adj)
								 (N angle#angle_n2)
								 (PP (P in#in_prep)
								     (NP (D the#the_adj) (OTHER other#other_adj) (N triangle#triangle_n)))))))))))
	  (PUNC ,)
	  (ADVP (ADV then#then_adv))
	  (BEP is#be_v)
	  (NP-SBJ (PRO$ his#his_adj) (N grounde#ground_n) (N line#line_n2))
	  (ADJP-PRD (ADJR greater#great_adj)
		    (PP (P then#than_conj)
			(NP (D the#the_adj)
			    (N grounde#ground_n)
			    (N line#line_n2)
			    (PP (P of#of_prep)
				(NP (D the#the_adj) (OTHER other#other_adj) (N triangle#triangle_n))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D1V.260))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,D1V.261))

( (IP-MAT (NP-SBJ (N A.B.C.#abc_n1))
	  (BEP is#be_v)
	  (NP-PRD (D a#a_adj)
		  (N triangle#triangle_n)
		  (PUNC ,)
		  (CODE {COM:figure_omitted})
		  (CP-REL (WNP-1 (WPRO$ whose#whose_pron)
				 (NS sides#side_n1)
				 (NP-PRN (N A.C.#NA) (CONJ and#and_conj1) (N B.C#NA)))
			  (C 0)
			  (PUNC ,)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP ar#be_v)
				  (ADJP-PRD (ADJ equall#equal_adj)
					    (PP (P to#to_prep)
						(NP (N E.D.#NA)
						    (CONJ and#and_conj1)
						    (N D.F#NA)
						    (PUNC ,)
						    (NP-PRN (D the#the_adj)
							    (NUM two#two_adj)
							    (NS sides#side_n1)
							    (PP (P of#of_prep)
								(NP (D the#the_adj)
								    (N triangle#triangle_n)
								    (NP-PRN (N D.E.F#NA)))))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D1V.262))

( (CODE {COM:figure_on_next_page_omitted}))

( (IP-MAT (CONJ but#but_prep)
	  (PP (P bicause#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj)
				      (N angle#angle_n2)
				      (PP (P in#in_prep)
					  (NP (N D#NA))))
			      (PUNC ,)
			      (BEP is#be_v)
			      (ADJP-PRD (ADJR greatter#great_adj)
					(PP (P then#than_conj)
					    (NP (D the#the_adj)
						(N angle#angle_n2)
						(NP-PRN (N C.#NA)))))
			      (CP-CAR (WNP-1 (WPRO whiche#which_adj))
				      (C 0)
				      (IP-SUB (NP-SBJ *T*-1)
					      (BEP are#be_v)
					      (NP-PRD (D the#the_adj)
						      (NUM ij.#two_adj)
						      (NS angles#angle_n2)
						      (RRC (VAN contayned#contain_v)
							   (PP (P betwene#between_prep)
							       (NP (D the#the_adj) (ADJ equal#equal_adj) (NS lynes#line_n2))))))))))
	  (PUNC <$$paren>)
	  (CODE {COM:no_matching_open_paren})
	  (CODE <P_2,D2R>)
	  (PP (ADV+P therfore#therefore_adv))
	  (MD muste#must_v1)
	  (NP-SBJ (D the#the_adj)
		  (N ground#ground_n)
		  (N line#line_n2)
		  (NP-PRN (N E.F.#NA)))
	  (ADVP (ADV nedes#needs_adv))
	  (BE bee#be_v)
	  (ADJP-PRD (ADJR greatter#great_adj)
		    (PP (P thenne#than_conj)
			(NP (D the#the_adj)
			    (N grounde#ground_n)
			    (N line#line_n2)
			    (NP-PRN (N A.B#NA)))))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-2 0)
		      (C 0)
		      (IP-SUB (NP-OB1 *T*-2)
			      (NP-SBJ (PRO you#you_pron))
			      (VBP se#see_v)
			      (ADVP (ADV plainely#plainly_adv1)))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D2R.264))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM XVI.#sixteen_adj) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,D2R.266))

( (CODE <$$heading>))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (NP-SBJ (D a#a_adj) (N triangle#triangle_n))
				      (HVP haue#have_v)
				      (NP-OB1 (NUM twoo#two_adj)
					      (NS sides#side_n1)
					      (ADJP (ADJ equalle#equal_adj)
						    (PP (P to#to_prep)
							(NP (D the#the_adj)
							    (NUM two#two_adj)
							    (NS sides#side_n1)
							    (PP (P of#of_prep)
								(NP (D an#a_adj) (OTHER other#other_adj) (N triangle#triangle_n))))))))
			      (PUNC ,)
			      (CONJP (CONJ but#but_prep)
				     (IP-SUB (ADVP (ADV yet#yet_adv))
					     (NP-SBJ *con*)
					     (HVP hathe#have_v)
					     (NP-OB1 (D a#a_adj)
						     (ADJR longer#long_adj1)
						     (N ground#ground_n)
						     (N line#line_n2)
						     (PP (P the~#than_conj)
							 (NP (D that#that_pron1) (OTHER other#other_adj) (N triangle#triangle_n)))))))))
	  (PUNC ,)
	  (ADVP (ADV then#then_adv))
	  (BEP is#be_v)
	  (NP-SBJ (PRO$ his#his_adj)
		  (N angle#angle_n2)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (VBP lieth#lie_v1)
				  (PP (P betwene#between_prep)
				      (NP (D the#the_adj) (ADJ equall#equal_adj) (NS sides#side_n1))))))
	  (PUNC ,)
	  (ADJP-PRD (ADJR greater#great_adj)
		    (PP (P the~#than_conj)
			(NP (D the#the_adj)
			    (ADJ like#like_adj)
			    (N corner#corner_n1)
			    (PP (P in#in_prep)
				(NP (D the#the_adj) (OTHER other#other_adj) (N triangle#triangle_n))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D2R.268))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,D2R.269))

( (IP-MAT (NP-SBJ (D This#this_pron) (N Theoreme#theorem_n))
	  (BEP is#be_v)
	  (NP-PRD (Q+N nothing#nothing_pron)
		  (ADJP (ADJ els#else_adv)
			(PUNC ,)
			(PP (P but#but_prep)
			    (NP (D the#the_adj)
				(N sentence#sentence_n)
				(PP (P of#of_prep)
				    (NP (D the#the_adj)
					(ADJ first#first_adj)
					(N Theoreme#theorem_n)
					(RRC (VAN turned#turn_v)
					     (ADVP-DIR (ADV backward#backward_adv)))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D2R.270))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (ADV+P therefore#therefore_adv))
	  (NP-SBJ *con*)
	  (VBP nedeth#need_v2)
	  (NP-OB1 (Q none#none_pron)
		  (OTHER other#other_adj)
		  (N profe#proof_n)
		  (CONJP (CONJ nother#nother_adv1)
			 (NX (N declaration#declaration_n)))
		  (PUNC ,)
		  (PP (P then#than_conj)
		      (NP (D the#the_adj) (OTHER other#other_adj) (N example#example_n))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D2R.271))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ SEUENTENTH#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,D2R.273))

( (CODE <$$heading>))

( (IP-MAT (PP-LFD (P If#if_conj)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (NUM two#two_adj) (NS triangles#triangle_n))
				  (BEP be#be_v)
				  (PP (P of#of_prep)
				      (NP (SUCH such#such_adj)
					  (N sort#sort_n2)
					  (PUNC ,)
					  (CP-DEG (CP-DEG (C that#that_conj)
							  (IP-SUB (NP-SBJ (NUM two#two_adj)
									  (NS angles#angle_n2)
									  (PP (P of#of_prep)
									      (NP (D the#the_adj) (ONE one#one_adj))))
								  (BEP be#be_v)
								  (ADJP-PRD (ADJ equal#equal_adj)
									    (PP (P to#to_prep)
										(NP (NUM ij.#two_adj)
										    (NS angles#angle_n2)
										    (PP (P of#of_prep)
											(NP (D the#the_adj) (OTHER other#other_adj))))))))
						  (PUNC ,)
						  (CONJP (CONJ and#and_conj1)
							 (CP-DEG (C that#that_conj)
								 (IP-SUB (NP-SBJ (ONE one#one_adj)
										 (N side#side_n1)
										 (PP (P of#of_prep)
										     (NP (D the#the_adj) (ONE one#one_adj))))
									 (BEP be#be_v)
									 (ADJP-PRD (ADJ equal#equal_adj)
										   (PP (P to#to_prep)
										       (NP (ONE on#one_adj)
											   (N side#side_n1)
											   (PP (P of#of_prep)
											       (NP (D the#the_adj) (OTHER other#other_adj))))))
									 (PUNC ,)
									 (CP-QUE-SUB-ADV (WQ whether#whether_pron)
											 (C 0)
											 (IP-SUB (IP-SUB-1 (NP-SBJ (D that#that_pron1) (N side#side_n1))
													   (DOP do#do_v)
													   (VB adioyne#adjoin_v)
													   (PP (P to#to_prep)
													       (NP (ONE one#one_adj)
														   (PP (P of#of_prep)
														       (NP (D the#the_adj) (ADJ equall#equal_adj) (NS corners#corner_n1))))))
												 (PUNC ,)
												 (CONJP (CONJ or#or_conj1)
													(ELSE els#else_adv)
													(IP-SUB=1 (VB lye#lie_v1)
														  (PP (P againste#against_prep)
														      (CODE <P_2,D2V>)
														      (NP (ONE one#one_adj)
															  (PP (P of#of_prep)
															      (NP (PRO them#them_pron))))))))))))))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV then#then_adv))
	  (MD shall#shall_v)
	  (NP-SBJ (D the#the_adj)
		  (OTHER other#other_adj)
		  (NUM twoo#two_adj)
		  (NS sides#side_n1)
		  (PP (P of#of_prep)
		      (NP (D those#those_pron) (NS triangles#triangle_n))))
	  (BE bee#be_v)
	  (ADJP-PRD (ADJ equalle#equal_adj))
	  (ADVP (ADV togither#together_adv))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D2V.275))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj) (ADJ thirde#third_adj) (N corner#corner_n1) (ALSO also#also_adv))
	  (MD shall#shall_v)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj))
	  (PP (P in#in_prep)
	      (NP (D those#those_pron) (NUM two#two_adj) (NS triangles#triangle_n)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D2V.276))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,D2V.277))

( (IP-MAT (PP (P Bicause#because_adv)
	      (CP-ADV (CP-ADV (C that#that_conj)
			      (IP-SUB (NP-SBJ (N A.B.C#NA)
					      (PUNC ,)
					      (NP-PRN (D the#the_adj) (ONE one#one_adj) (N triangle#triangle_n)))
				      (CODE {COM:figure_omitted})
				      (HVP hath#have_v)
				      (NP-OB1 (NUM two#two_adj)
					      (NS corners#corner_n1)
					      (NP-PRN (N A.#NA) (CONJ and#and_conj1) (N B#NA))
					      (PUNC ,)
					      (ADJP (ADJ equal#equal_adj)
						    (PP (P to#to_prep)
							(NP (N D.E#NA)
							    (PUNC ,)
							    (CP-REL (WNP-1 0)
								    (C that#that_conj)
								    (IP-SUB (NP-SBJ *T*-1)
									    (BEP are#be_v)
									    (NP-PRD (NUM twoo#two_adj)
										    (NS corners#corner_n1)
										    (PP (P of#of_prep)
											(NP (D the#the_adj)
											    (OTHER other#other_adj)
											    (N triangle#triangle_n)
											    (PUNC .)
											    (NP-PRN (N D.E.F.#NA)))))))))))))
		      (CODE {COM:figure_omitted})
		      (CONJP (CONJ and#and_conj1)
			     (CP-ADV (C that#that_conj)
				     (IP-SUB (NP-SBJ (PRO they#they_pron))
					     (HVP haue#have_v)
					     (NP-OB1 (ONE one#one_adj)
						     (N side#side_n1)
						     (PP (P in#in_prep)
							 (NP (PRO theym#them_pron)
							     (QP (Q bothe#both_pron))))
						     (ADJP (ADJ equall#equal_adj)))
					     (PUNC ,)
					     (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
							 (BEP is#be_v)
							 (NP-PRD (N A.B#NA)
								 (PUNC ,)
								 (CP-REL (WNP-2 (WPRO which#which_adj))
									 (C 0)
									 (IP-SUB (NP-SBJ *T*-2)
										 (BEP is#be_v)
										 (ADJP-PRD (ADJ equall#equal_adj)
											   (PP (P to#to_prep)
											       (NP (N D.E#NA)))))))))))))
	  (PUNC ,)
	  (PP (ADV+P therefore#therefore_adv))
	  (MD shall#shall_v)
	  (NP-SBJ (Q both#both_pron) (D the#the_adj) (OTHER other#other_adj) (NUM ij.#two_adj) (NS sides#side_n1))
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (NP-ADV (NP (ONE one#one_adj))
			    (PP (P to#to_prep)
				(NP (D an#a_adj) (OTHER other#other_adj)))))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (IP-SMC (NP-SBJ (N A.C.#NA) (CONJ and#and_conj1) (N B.C.#NA))
		      (ADJP-PRD (ADJ equall#equal_adj)
				(PP (P to#to_prep)
				    (NP (N D.F#NA) (CONJ and#and_conj1) (N E.F#NA))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D2V.278))

( (IP-MAT (CONJ and#and_conj1)
	  (ALSO also#also_adv)
	  (NP-SBJ (D the#the_adj)
		  (ADJ thirde#third_adj)
		  (N angle#angle_n2)
		  (PP (P in#in_prep)
		      (NP (PRO them#them_pron)
			  (QP (Q both#both_pron)))))
	  (MD shal@#shall_v)
	  (BE @be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D2V.279))

( (IP-MAT (NP-SBJ (D that#that_pron1))
	  (BEP is#be_v)
	  (PUNC ,)
	  (IP-MAT (NP-SBJ (D the#the_adj)
			  (N angle#angle_n2)
			  (NP-PRN (N C.#NA)))
		  (MD shal#shall_v)
		  (BE be#be_v)
		  (ADJP-PRD (ADJ equall#equal_adj)
			    (PP (P to#to_prep)
				(NP (D the#the_adj)
				    (N angle#angle_n2)
				    (NP-PRN (N F#NA))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D2V.280))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ EIGHTENTH#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,D2V.282))

( (CODE <$$heading>))

( (IP-MAT (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (PP (P on#on_prep)
					  (NP (NUM .ij.#two_adj) (ADJ right#right_adj) (NS lines#line_n2)))
				      (NP-SBJ-1 (EX ther#there_adv))
				      (BEP is#be_v)
				      (VAN drawen#draw_v)
				      (NP-1 (D a#a_adj) (ADJ third#third_adj) (ADJ right#right_adj) (N line#line_n2))
				      (NP-ADV (ADJ crosse#cross_adj) (NS waies#way_n1)))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB (NP-SBJ *con*)
					     (VBP maketh#make_v1)
					     (IP-SMC (NP-SBJ (NUM .ij.#two_adj)
							     (N matche#match_n1)
							     (NS corners#corner_n1)
							     (PP (P of#of_prep)
								 (NP (D the#the_adj) (ONE one#one_adj) (N line#line_n2))))
						     (ADJP-PRD (ADJ equall#equal_adj)
							       (PP (P to#to_prep)
								   (NP (D the#the_adj)
								       (ADJ like#like_adj)
								       (NUM twoo#two_adj)
								       (N matche#match_n1)
								       (NS corners#corner_n1)
								       (PP (P of#of_prep)
									   (NP (D the#the_adj) (OTHER other#other_adj) (N line#line_n2))))))))))))
	  (PUNC ,)
	  (ADVP (ADV then#then_adv))
	  (BEP ar#be_v)
	  (NP-SBJ (D those#those_pron) (NUM two#two_adj) (NS lines#line_n2))
	  (NP-PRD (NP (ADJ gemmow#gemew_n) (NS lines#line_n2))
		  (PUNC ,)
		  (CONJP (CONJ or#or_conj1)
			 (NP (NS paralleles#parallel_n))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D2V.284))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,D2V.285))

( (CODE <P_2,D3R>))

( (IP-MAT (NP-SBJ (D The#the_adj) (NUM .ij.#two_adj) (ADJ fyrst#first_adj) (NS lynes#line_n2))
	  (BEP are#be_v)
	  (NP-PRD (N A.B.#NA) (CONJ and#and_conj1) (N C.D#NA))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D3R.287))

( (IP-MAT (NP-SBJ (D the#the_adj)
		  (ADJ thyrd#third_adj)
		  (N lyne#line_n2)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (VBP crosseth#cross_v)
				  (NP-OB1 (PRO them#them_pron)))))
	  (BEP is#be_v)
	  (NP-PRD (N E.F#NA))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D3R.288))

( (CODE {COM:figure_omitted}))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (P bycause#because_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (NP-SBJ (N E.F.#NA))
			      (VBP maketh#make_v1)
			      (NP-OB1 (NUM ij.#two_adj)
				      (N matche#match_n1)
				      (NS angles#angle_n2)
				      (ADJP *ICH*-1))
			      (PP (P with#with_prep)
				  (NP (N A.B#NA)))
			      (PUNC ,)
			      (ADJP-1 (ADJ equall#equal_adj)
				      (PP (P to#to_prep)
					  (NP (NUM .ij.#two_adj)
					      (OTHER other#other_adj)
					      (ADJ lyke#like_adj)
					      (N matche#match_n1)
					      (NS angles#angle_n2)
					      (PP (P on#on_prep)
						  (NP (N C.D#NA)))))))))
	  (PUNC ,)
	  (PUNC <paren>)
	  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
		      (BEP is#be_v)
		      (IP-INF (TO to#to_prep)
			      (VB say#say_v1)
			      (IP-ABS (IP-ABS (NP-SBJ (N E.G#NA))
					      (PUNC ,)
					      (ADJP-PRD (ADJ equall#equal_adj)
							(PP (P to#to_prep)
							    (NP (N K.F#NA)))))
				      (PUNC ,)
				      (CONJP (CONJ and#and_conj1)
					     (IP-ABS (NP-SBJ (N M.N.#NA))
						     (ADJP-PRD (ADJ equall#equal_adj)
							       (ALSO also#also_adv)
							       (PP (P to#to_prep)
								   (NP (N H#NA) (PUNC ,) (N L.#pound_n1)))))))))
	  (PUNC <$$paren>)
	  (PP (ADV+P therfore#therefore_adv))
	  (BEP are#be_v)
	  (NP-SBJ (D those#those_pron)
		  (NUM ij.#two_adj)
		  (NS lynes#line_n2)
		  (NP-PRN (N A.B.#NA) (CONJ and#and_conj1) (N C.D.#NA)))
	  (NP-PRD (ADJ gemow#gemew_n) (NS lynes#line_n2))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D3R.290))

( (IP-IMP (VBI vnderstand#understand_v)
	  (ADVP-LOC (ADV here#here_adv))
	  (PP (P by#by_prep)
	      (CODE <font>)
	      (NP (ADJ lyke#like_adj) (N matche#match_n1) (NS corners#corner_n1)))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-OB1 (D those#those_pron)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (VBP go#go_v)
				  (NP-DIR (ONE one#one_adj) (N way#way_n1))
				  (PP (P as#as_adv)
				      (CP-ADV (WADVP-2 0)
					      (C 0)
					      (IP-SUB (IP-SUB-3 (ADVP *T*-2)
								(DOP doth#do_v)
								(VB *)
								(NP-SBJ (N E.G#NA) (PUNC ,) (CONJ and#and_conj1) (N K.F#NA)))
						      (PUNC ,)
						      (CONJP (IP-SUB=3 (NP-ADV (ADJ lyke#like_adj) (NS ways#way_n1))
								       (NP (N N.M#NA) (PUNC ,) (CONJ and#and_conj1) (N H.L#NA))))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D3R.291))

( (IP-MAT (CONJ for#for_prep)
	  (PP (P as#as_adv)
	      (CP-CMP (WADVP-1 0)
		      (C 0)
		      (IP-SUB (ADVP *T*-1)
			      (NP-SBJ (NP (N E.G.#NA) (CONJ and#and_conj1) (N H.L#NA))
				      (PUNC ,)
				      (CONJP (CONJ other#other_conj)
					     (NP (N N.M.#NA) (CONJ and#and_conj1) (N K.F.#NA))))
			      (VBP go#go_v)
			      (NEG not#not_adv)
			      (NP-DIR (ONE one#one_adj) (N waie#way_n1)))))
	  (PUNC ,)
	  (ADVP (ADV so#so_adv))
	  (BEP be#be_v)
	  (NEG not#not_adv)
	  (NP-SBJ (PRO they#they_pron))
	  (NP-PRD (ADJ lyke#like_adj) (N match#match_n1) (NS corners#corner_n1))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D3R.292))

( (CODE <heading>))

( (NP (D THE#the_adj) (ADJ NYNTENTH#nineteen_adj) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,D3R.294))

( (CODE <$$heading>))

( (IP-MAT (IP-MAT (PP (P when#when_adv)
		      (CP-ADV (C 0)
			      (IP-SUB (IP-SUB (PP (P on#on_prep)
						  (NP (NUM two#two_adj) (ADJ right#right_adj) (NS lines#line_n2)))
					      (NP-SBJ-1 (EX there#there_adv))
					      (BEP is#be_v)
					      (VAN drawen#draw_v)
					      (NP-1 (D a#a_adj) (ADJ thirde#third_adj) (ADJ right#right_adj) (N line#line_n2))
					      (NP-VOC (NS crossewaies#cross-way_n)))
				      (PUNC ,)
				      (CONJP (CONJ and#and_conj1)
					     (IP-SUB (NP-SBJ *con*)
						     (VBP maketh#make_v1)
						     (IP-SMC (NP-SBJ (D the#the_adj)
								     (NUM ij.#two_adj)
								     (ADJ ouer#over_adj)
								     (NS corners#corner_n1)
								     (PP (P towarde#toward_prep)
									 (NP (ONE one#one_adj) (N hande#hand_n))))
							     (ADJP-PRD (ADJ equall#equal_adj))
							     (ADVP (ADV togither#together_adv))))))))
		  (PUNC ,)
		  (ADVP (ADV then#then_adv))
		  (BEP ar#be_v)
		  (NP-SBJ (ADJ those#thos_n) (NUM .ij.#two_adj) (NS lines#line_n2))
		  (NP-PRD (NS paralleles#parallel_n)))
	  (PUNC .)
	  (CONJP (CONJ And#and_conj1)
		 (IP-MAT (PP (P in#in_prep)
			     (NP (ADJ like#like_adj) (N maner#manner_n)))
			 (PP (P if#if_conj)
			     (CP-ADV (C 0)
				     (IP-SUB (NP-SBJ (NUM two#two_adj)
						     (ADJ inner#inner_adj)
						     (NS corners#corner_n1)
						     (PP (P toward#toward_prep)
							 (NP (ONE one#one_adj) (N hande#hand_n))))
					     (PUNC ,)
					     (BEP be#be_v)
					     (ADJP-PRD (ADJ equall#equal_adj)
						       (PP (P to#to_prep)
							   (NP (NUM .ii.#two_adj) (ADJ right#right_adj) (NS angles#angle_n2)))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D3R.296))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,D3R.297))

( (IP-MAT (PP (P As#as_adv)
	      (CP-CMP (WADVP-1 0)
		      (C 0)
		      (IP-SUB (ADVP *T*-1)
			      (NP-SBJ (D the#the_adj) (N Theoreme#theorem_n))
			      (DOP dothe#do_v)
			      (VB speake#speak_v)
			      (PP (P of#of_prep)
				  (NP (NUM .ij.#two_adj) (ADJ ouer#over_adj) (NS angles#angle_n2))))))
	  (PUNC ,)
	  (ADVP (ADV so#so_adv))
	  (MD muste#must_v1)
	  (NP-SBJ (PRO you#you_pron))
	  (VB vnderstande#understand_v)
	  (ALSO also#also_adv)
	  (PP (P of#of_prep)
	      (NP (NUM .ij.#two_adj) (ADJ nether#nether_adj) (NS angles#angle_n2)))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D3R.298))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (D the#the_adj) (N iudgement#judgement_n))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ lyke#like_adj))
	  (PP (P in#in_prep)
	      (NP (Q bothe#both_pron)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D3R.299))

( (IP-IMP (VBI Take#take_v)
	  (PP (P for#for_prep)
	      (NP (D an#a_adj) (N example#example_n)))
	  (NP-OB1 (D the#the_adj)
		  (N figure#figure_n)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (ADJ last#last_adv) (N theoreme#theorem_n)))
		  (PUNC ,)
		  (CP-REL (WADVP-1 (WADV where#where_adv))
			  (C 0)
			  (IP-SUB (ADVP-LOC *T*-1)
				  (NP-SBJ-2 (N A.B#NA) (PUNC ,) (CONJ and#and_conj1) (N C.D#NA))
				  (PUNC ,)
				  (BEP be#be_v)
				  (VAN called#call_v)
				  (IP-SMC (NP-SBJ *-2)
					  (NP-PRD (NS paralleles#parallel_n)))
				  (ALSO also#also_adv)
				  (PUNC ,)
				  (PP (P bicause#because_adv)
				      (CP-ADV (C 0)
					      (IP-SUB (IP-SUB-3 (NP-SBJ (N E.#NA)
									(CONJ and#and_conj1)
									(N K#NA)
									(PUNC ,)
									(PUNC <paren>)
									(CP-REL (WNP-4 (WPRO whiche#which_adj))
										(C 0)
										(IP-SUB (NP-SBJ *T*-4)
											(BEP are#be_v)
											(NP-PRD (NUM .ij.#two_adj) (ADJ ouer#over_adj) (NS corners#corner_n1)))))
								(PUNC <$$paren>)
								(BEP are#be_v)
								(ADJP-PRD (ADJ equall#equal_adj)))
						      (PUNC ,)
						      (CONJP (CONJ and#and_conj1)
							     (IP-SUB=3 (NP-ADV (ADJ lyke#like_adj) (NS waies#way_n1))
								       (NP-SBJ (N L.#NA) (CONJ and#and_conj1) (N M#NA))))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D3R.300))

( (IP-MAT (CONJ And#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (BEP are#be_v)
	  (PP (P in#in_prep)
	      (NP (ADJ lyke#like_adj) (N maner#manner_n)))
	  (NP-SBJ (D the#the_adj)
		  (ADJ nether#nether_adj)
		  (NS corners#corner_n1)
		  (NP-PRN (NP (N N.#NA) (CONJ and#and_conj1) (N H#NA))
			  (PUNC ,)
			  (CONJP (CONJ and#and_conj1)
				 (NP (N G.#NA) (CONJ and#and_conj1) (N F#NA)))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D3R.301))

( (FRAG (ADVP (ADV Nowe#now_adv))
	(PP (P to#to_prep)
	    (NP (D the#the_adj)
		(ADJ seconde#second_adj)
		(N parte#part_n1)
		(PP (P of#of_prep)
		    (NP (D the#the_adj) (N theoreme#theorem_n)))))
	(PUNC ,))
  (ID RECORD-1551-E1-P2,2,D3R.302))

( (IP-MAT (NP-SBJ-1 (D those#those_pron)
		    (NUM .ij.#two_adj)
		    (NS lynes#line_n2)
		    (NP-PRN (N A.B.#NA) (CONJ and#and_conj1) (N C.D#NA)))
	  (PUNC ,)
	  (MD shall#shall_v)
	  (BE be#be_v)
	  (VAN called#call_v)
	  (IP-SMC (NP-SBJ *-1)
		  (NP-PRD (NS paralleles#parallel_n)))
	  (PUNC ,)
	  (PP (P bicause#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D the#the_adj)
				      (NUM ij.#two_adj)
				      (ADJ inner#inner_adj)
				      (NS corners#corner_n1)
				      (PUNC .)
				      (PP (P As#as_adv)
					  (FRAG (PP (P for#for_prep)
						    (NP (N example#example_n)))
						(NP (D those#those_pron)
						    (NUM two#two_adj)
						    (CP-REL (WNP-2 0)
							    (C that#that_conj)
							    (IP-SUB (NP-SBJ *T*-2)
								    (BEP bee#be_v)
								    (PP (P toward#toward_prep)
									(NP (D the#the_adj) (ADJ right#right_adj) (N hande#hand_n)))
								    (PUNC <paren>)
								    (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
										(BEP is#be_v)
										(NP-PRD (N G.#NA) (CONJ and#and_conj1) (N L.#NA)))))))))
			      (PUNC <$$paren>)
			      (BEP are#be_v)
			      (ADJP-PRD (ADJ equall#equal_adj))
			      (CODE <P_2,D3V>)
			      (PUNC <paren>)
			      (PP-PRN (P by#by_prep)
				      (NP (D the#the_adj)
					  (ADJ fyrst#first_adj)
					  (N parte#part_n1)
					  (PP (P of#of_prep)
					      (NP (D this#this_pron) (ADJ nyntenth#nineteen_adj) (N theoreme#theorem_n)))))))))
  (PUNC <$$paren>))

( (IP-MAT (PP (ADV+P therfore#therefore_adv))
	  (MD muste#must_v1)
	  (NP-SBJ (N G.#NA) (CONJ and#and_conj1) (N L.#NA))
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (NUM two#two_adj) (ADJ ryght#right_adj) (NS angles#angle_n2))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D3V.304))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM XX.#twenty_adj) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,D3V.306))

( (CODE <$$heading>))

( (IP-MAT (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D a#a_adj) (ADJ right#right_adj) (N line#line_n2))
			      (BEP is#be_v)
			      (VAN drawen#draw_v)
			      (ADVP (ADV crosse#cross_adv))
			      (PP (P ouer#over_prep)
				  (NP (NUM .ij.#two_adj) (ADJ right#right_adj) (ADJ gemow#gemew_n) (NS lines#line_n2))))))
	  (PUNC ,)
	  (NP-SBJ (PRO it#it_pron))
	  (VBP maketh#make_v1)
	  (IP-SMC (IP-SMC-1 (NP-SBJ (NUM .ij.#two_adj)
				    (N matche#match_n1)
				    (NS corners#corner_n1)
				    (PP (P of#of_prep)
					(NP (D the#the_adj) (ONE one#one_adj) (N line#line_n2))))
			    (PUNC ,)
			    (ADJP-PRD (ADJ equall#equal_adj)
				      (PP (P to#to_prep)
					  (NP (NUM two#two_adj)
					      (N matche#match_n1)
					      (NS corners#corner_n1)
					      (PP (P of#of_prep)
						  (NP (D the#the_adj) (OTHER other#other_adj) (N line#line_n2)))))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (ALSO also#also_adv)
			 (IP-SMC (NP-SBJ (Q bothe#both_pron)
					 (ADJ ouer#over_adj)
					 (NS corners#corner_n1)
					 (PP (P of#of_prep)
					     (NP (ONE one#one_adj) (N hande#hand_n))))
				 (ADJP-PRD (ADJ equall#equal_adj))
				 (ADVP (ADV togither#together_adv))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (IP-SMC=1 (NP-SBJ (Q bothe#both_pron) (ADJ nether#nether_adj) (NS corners#corner_n1))
				   (NP-ADV (NS likewaies#likeways_adv))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (IP-SMC (ADVP (ADV more_ouer#moreover_adv))
				 (NP-SBJ (NP (NUM two#two_adj) (ADJ inner#inner_adj) (NS corners#corner_n1))
					 (PUNC ,)
					 (CONJP (CONJ and#and_conj1)
						(NP (NUM two#two_adj)
						    (ADJ vtter#utter_adj)
						    (NS corners#corner_n1)
						    (ALSO also#also_adv)
						    (PP (P towarde#toward_prep)
							(NP (ONE one#one_adj) (N hande#hand_n))))))
				 (PUNC ,)
				 (ADJP-PRD (ADJ equall#equal_adj)
					   (PP (P to#to_prep)
					       (NP (NUM two#two_adj) (ADJ right#right_adj) (NS angles#angle_n2)))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D3V.308))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,D3V.309))

( (IP-MAT (IP-MAT-1 (PP-LFD (P Bycause#because_adv)
			    (CP-ADV (C 0)
				    (IP-SUB (NP-SBJ (N A.B.#NA)
						    (CONJ and#and_conj1)
						    (N C.D#NA)
						    (PUNC ,)
						    (PUNC <paren>)
						    (PP (P in#in_prep)
							(NP (D the#the_adj) (ADJ last#last_adv) (N figure#figure_n))))
					    (PUNC <$$paren>)
					    (BEP are#be_v)
					    (NP-PRD (NS paralleles#parallel_n)))))
		    (PUNC ,)
		    (PP-RSP (ADV+P therefore#therefore_adv))
		    (NP-SBJ (D the#the_adj)
			    (NUM two#two_adj)
			    (N matche#match_n1)
			    (NS corners#corner_n1)
			    (PP (P of#of_prep)
				(NP (D the#the_adj) (ONE one#one_adj) (N lyne#line_n2)))
			    (PUNC ,)
			    (PP (P as#as_adv)
				(NP (N E.G.#NA))))
		    (BEP be#be_v)
		    (ADJP-PRD (ADJ equall#equal_adj)
			      (PP (P vnto#unto_prep)
				  (NP (D the#the_adj)
				      (NUM .ij.#two_adj)
				      (N matche#match_n1)
				      (NS corners#corner_n1)
				      (PP (P of#of_prep)
					  (NP (D the#the_adj) (OTHER other#other_adj) (N line#line_n2)))
				      (PUNC ,)
				      (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
						  (BEP is#be_v)
						  (NP-PRD (N K.F#NA)))))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (NP-ADV (NS lykewaies#likewise_adv))
			   (NP-SBJ (N M.N#NA))
			   (PUNC ,)
			   (ADJP-PRD (ADJ equall#equal_adj)
				     (PP (P to#to_prep)
					 (NP (N H.L.#NA))))))
	  (CONJP (CONJ And#and_conj1)
		 (ALSO also#also_adv)
		 (IP-MAT=1 (NP-SBJ (N E.#NA)
				   (CONJ and#and_conj1)
				   (N K.#NA)
				   (NP-PRN (Q bothe#both_pron)
					   (ADJ ouer#over_adj)
					   (NS corners#corner_n1)
					   (PP (P of#of_prep)
					       (NP (D the#the_adj) (ADJ lefte#left_adj1) (N hande#hand_n)))))
			   (ADJP-PRD (ADJ equall#equal_adj))
			   (ADVP (ADV togyther#together_adv))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D3V.310))

( (IP-MAT (IP-MAT-1 (CONJ and#and_conj1)
		    (ADVP (ADV so#so_adv))
		    (BEP are#be_v)
		    (NP-SBJ (N M.#NA)
			    (CONJ and#and_conj1)
			    (N L#NA)
			    (PUNC ,)
			    (NP-PRN (D the#the_adj)
				    (NUM two#two_adj)
				    (ADJ ouer#over_adj)
				    (NS corners#corner_n1)
				    (PP (P on#on_prep)
					(NP (D the#the_adj) (ADJ ryghte#right_adj) (N hande#hand_n)))))
		    (PUNC ,)
		    (IP-MAT-PRN=1 (PP (P in#in_prep)
				      (NP (ADJ lyke#like_adj) (N maner#manner_n)))
				  (NP-SBJ (N N.#NA)
					  (CONJ and#and_conj1)
					  (N H#NA)
					  (PUNC ,)
					  (NP-PRN (D the#the_adj)
						  (NUM two#two_adj)
						  (ADJ nether#nether_adj)
						  (NS corners#corner_n1)
						  (PP (P on#on_prep)
						      (NP (D the#the_adj) (ADJ lefte#left_adj1) (N hande#hand_n))))))
		    (PUNC ,)
		    (ADJP-PRD (ADJ equall#equal_adj)
			      (NP-ADV (NP (Q eche#each_adj))
				      (PP (P to#to_prep)
					  (NP (OTHER other#other_adj))))))
	  (PUNC ,)
	  (CONJP (CONJ and#and_conj1)
		 (IP-MAT=1 (NP-SBJ (N G.#NA)
				   (CONJ and#and_conj1)
				   (N F.#NA)
				   (NP-PRN (D the#the_adj)
					   (NUM two#two_adj)
					   (ADJ nether#nether_adj)
					   (NS angles#angle_n2)
					   (PP (P on#on_prep)
					       (NP (D the#the_adj) (ADJ right#right_adj) (N hande#hand_n)))))
			   (ADJP-PRD (ADJ equall#equal_adj))
			   (ADVP (ADV togither#together_adv))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D3V.311))

( (IP-MAT (CONJ &#and_conj1)
	  (ADVP (ADV Farthermore#farthermore_adv) (ADV yet#yet_adv))
	  (NP-SBJ (N G.#NA)
		  (CONJ and#and_conj1)
		  (N L.#NA)
		  (NP-PRN (D the#the_adj)
			  (NUM .ij.#two_adj)
			  (ADJ inner#inner_adj)
			  (NS angles#angle_n2)
			  (PP (P on#on_prep)
			      (NP (D the#the_adj) (ADJ right#right_adj) (N hande#hand_n)))))
	  (BEP bee#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (NUM two#two_adj) (ADJ right#right_adj) (NS angles#angle_n2))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D3V.312))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (BEP are#be_v)
	  (NP-SBJ (N M.#NA)
		  (CONJ and#and_conj1)
		  (N F.#NA)
		  (NP-PRN (D the#the_adj)
			  (NUM .ij.#two_adj)
			  (ADJ vtter#utter_adj)
			  (NS angles#angle_n2)
			  (PP (P on#on_prep)
			      (NP (D the#the_adj) (ADJ same#same_adj) (N hande#hand_n)))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D3V.313))

( (IP-MAT (PP (P in#in_prep)
	      (NP (ADJ lyke#like_adj) (N manner#manner_n)))
	  (MD shall#shall_v)
	  (NP-SBJ (PRO you#you_pron))
	  (VB say#say_v1)
	  (PP (PP (P of#of_prep)
		  (NP (N N.#NA)
		      (CONJ and#and_conj1)
		      (N K.#NA)
		      (NP-PRN (D the#the_adj)
			      (NUM two#two_adj)
			      (ADJ inner#inner_adj)
			      (NS corners#corner_n1)
			      (PP (P on#on_prep)
				  (NP (D the#the_adj) (ADJ left#left_adj1) (N hand#hand_n))))))
	      (PUNC .)
	      (CONJP (CONJ and#and_conj1)
		     (PP (P of#of_prep)
			 (NP (N E.#NA)
			     (CONJ and#and_conj1)
			     (N H.#NA)
			     (NP-PRN (D the#the_adj)
				     (NUM two#two_adj)
				     (ADJ vtter#utter_adj)
				     (NS corners#corner_n1)
				     (PP (P on#on_prep)
					 (NP (D the#the_adj) (ADJ same#same_adj) (N hande#hand_n))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D3V.314))

( (IP-MAT (CONJ And#and_conj1)
	  (ADVP (ADV thus#thus_adv))
	  (NP-SBJ (PRO you#you_pron))
	  (VBP see#see_v)
	  (IP-INF (NP-SBJ (D the#the_adj)
			  (ADJ agreable#agreeable_adj)
			  (N sentence#sentence_n)
			  (PP (P of#of_prep)
			      (NP (D these#these_pron) (NUM .iij.#three_adj) (NS theoremes#theorem_n))))
		  (TO to#to_prep)
		  (VB tende#tend_v2)
		  (PP (P to#to_prep)
		      (NP (D this#this_pron)
			  (N purpose#purpose_n)
			  (PUNC ,)
			  (IP-INF (TO to#to_prep)
				  (VB declare#declare_v)
				  (PP (P by#by_prep)
				      (NP (D the#the_adj) (NS angles#angle_n2)))
				  (CP-QUE-SUB (CP-QUE-SUB (WADVP-1 (WADV how#how_adv))
							  (IP-INF (ADVP *T*-1)
								  (TO to#to_prep)
								  (VB iudge#judge_v)
								  (NP-OB1 (NS paralleles#parallel_n))))
					      (PUNC ,)
					      (CONJP (CONJ and#and_conj1)
						     (NP-ADV (ADJ contrary#contrary_adj) (NS waies#way_n1))
						     (CP-QUE-SUB (WADVP-2 (WADV howe#how_adv))
								 (C 0)
								 (IP-SUB (ADVP *T*-2)
									 (NP-SBJ (PRO you#you_pron))
									 (MD may#may_v1)
									 (PP (P by#by_prep)
									     (NP (NS paralleles#parallel_n)))
									 (VB iudge#judge_v)
									 (NP-OB1 (D the#the_adj)
										 (N proportion#proportion_n)
										 (PP (P of#of_prep)
										     (NP (D the#the_adj) (NS angles#angle_n2))))))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D3V.315))

( (CODE <P_2,D4R>))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM XXI.#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,D4R.318))

( (CODE <$$heading>))

( (IP-MAT (NP-LFD (CP-FRL (WNP-1 (WD what#what_pron) (ADV so#so_adv) (ADV euer#ever_adv) (NS lines#line_n2))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP be#be_v)
				  (NP-PRD (NS paralleles#parallel_n)
					  (PP (P to#to_prep)
					      (NP (Q any#any_adj) (OTHER other#other_adj) (N line#line_n2)))))))
	  (PUNC ,)
	  (NP-SBJ-RSP (D those#those_pron) (ADJ same#same_adj))
	  (BEP be#be_v)
	  (NP-PRD (NS paralleles#parallel_n))
	  (ADVP (ADV togither#together_adv))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D4R.320))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,D4R.321))

( (IP-MAT (NP-SBJ (N A.B.#NA))
	  (BEP is#be_v)
	  (NP-PRD (NP (D a#a_adj) (ADJ gemow#gemew_n) (N line#line_n2))
		  (PUNC ;)
		  (CONJP (CONJ or#or_conj1)
			 (NP (D a#a_adj) (N parallele#parallel_n)))
		  (PP (P vnto#unto_prep)
		      (NP (N C.D#NA))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D4R.322))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-SBJ (N E.F#NA))
	  (PUNC ,)
	  (NP-ADV (NS lykewaies#likewise_adv))
	  (BEP is#be_v)
	  (NP-PRD (D a#a_adj)
		  (N parallele#parallel_n)
		  (PP (P vnto#unto_prep)
		      (NP (N C.D.#NA))))
	  (CODE {COM:figures_omitted})
	  (CP-CAR (WPP-1 (WADV+P Wherfore#wherefore_adv))
		  (C 0)
		  (IP-SUB (PP *T*-1)
			  (NP-SBJ-2 (PRO it#it_pron))
			  (VBP foloweth#follow_v)
			  (PUNC ,)
			  (CP-THT-2 (C that#that_conj)
				    (IP-SUB (NP-SBJ (N A.B.#NA))
					    (MD must#must_v1)
					    (ADVP (ADV nedes#needs_adv))
					    (BE bee#be_v)
					    (NP-PRD (D a#a_adj)
						    (N parallele#parallel_n)
						    (PP (P vnto#unto_prep)
							(NP (N E.F#NA))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D4R.323))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM .XXIJ.#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,D4R.325))

( (CODE <$$heading>))

( (IP-MAT (PP (P In#in_prep)
	      (NP (Q euery#every_adj) (N triangle#triangle_n)))
	  (PUNC ,)
	  (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (Q any#any_adj) (N side#side_n1))
			      (BEP is#be_v)
			      (VAN drawen#draw_v)
			      (ADVP (ADV forth#forth_adv))
			      (PP (P in#in_prep)
				  (NP (N length#length_n))))))
	  (PUNC ,)
	  (NP-SBJ (D the#the_adj) (ADJ vtter#utter_adj) (N angle#angle_n2))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (D the#the_adj)
			    (NUM ij.#two_adj)
			    (ADJ inner#inner_adj)
			    (NS angles#angle_n2)
			    (CP-REL (WNP-1 0)
				    (C that#that_conj)
				    (IP-SUB (NP-SBJ *T*-1)
					    (VBP lie#lie_v1)
					    (PP (P againste#against_prep)
						(NP (PRO it#it_pron))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D4R.327))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-SBJ (Q all#all_adj)
		  (NUM iij.#three_adj)
		  (ADJ inner#inner_adj)
		  (NS angles#angle_n2)
		  (PP (P of#of_prep)
		      (NP (Q any#any_adj) (N triangle#triangle_n))))
	  (BEP are#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (NUM ij.#two_adj) (ADJ right#right_adj) (NS angles#angle_n2))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D4R.328))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,D4R.329))

( (IP-MAT (IP-PPL-ABS (IP-PPL-1 (NP-SBJ (D The#the_adj) (N triangle#triangle_n))
				(BAG beeyng#be_v)
				(NP-PRD (N A.D.E.#NA)))
		      (CODE {COM:figure_omitted})
		      (CONJP (CONJ and#and_conj1)
			     (IP-PPL=1 (NP-SBJ (D the#the_adj) (N syde#side_n1) (N A.E.#NA))
				       (VAN drawen#draw_v)
				       (ADVP (ADV foorthe#forth_adv))
				       (PP (P vnto#unto_prep)
					   (NP (N B#NA))))))
	  (PUNC ,)
	  (NP-SBJ-2 (EX there#there_adv))
	  (BEP is#be_v)
	  (VAN made#make_v1)
	  (NP-2 (D an#a_adj)
		(ADJ vtter#utter_adj)
		(N corner#corner_n1)
		(PUNC ,)
		(CP-REL (WNP-3 (WPRO which#which_adj))
			(C 0)
			(IP-SUB (NP-SBJ *T*-3)
				(BEP is#be_v)
				(NP-PRD (N C#NA)))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D4R.330))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D this#this_pron)
		  (ADJ vtter#utter_adj)
		  (N corner#corner_n1)
		  (NP-PRN (N C#NA)))
	  (PUNC ,)
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (Q bothe#both_pron)
			    (D the#the_adj)
			    (ADJ inner#inner_adj)
			    (NS corners#corner_n1)
			    (CP-REL (WNP-1 0)
				    (C that#that_conj)
				    (IP-SUB (NP-SBJ *T*-1)
					    (VBP lye#lie_v1)
					    (PP (P agaynst#against_prep)
						(NP (PRO it#it_pron)))))
			    (PUNC ,)
			    (CP-REL (WNP-2 (WPRO whyche#which_adj))
				    (C 0)
				    (IP-SUB (NP-SBJ *T*-2)
					    (BEP are#be_v)
					    (NP-PRD (N A.#NA) (CONJ and#and_conj1) (N D#NA)))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D4R.331))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-SBJ (Q all#all_adj) (NUM thre#three_adj) (ADJ inner#inner_adj) (NS corners#corner_n1))
	  (PUNC ,)
	  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
		      (BEP is#be_v)
		      (IP-INF (TO to#to_prep)
			      (VB say#say_v1)
			      (PUNC ,)
			      (NP-OB1 (N A.D.#NA) (CONJ and#and_conj1) (N E#NA))))
	  (PUNC ,)
	  (BEP are#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (NUM two#two_adj) (ADJ ryght#right_adj) (NS corners#corner_n1))))
	  (PUNC ,)
	  (CP-CAR (WPP-1 (WADV+P whereof#whereof_adv))
		  (C 0)
		  (IP-SUB (PP *T*-1)
			  (NP-SBJ-2 (PRO it#it_pron))
			  (VBP foloweth#follow_v)
			  (PUNC ,)
			  (CODE <font>)
			  (CP-THT-2 (C that#that_conj)
				    (IP-SUB (NP-SBJ (Q all#all_adj)
						    (D the#the_adj)
						    (NUM three#three_adj)
						    (NS corners#corner_n1)
						    (PP (P of#of_prep)
							(NP (Q any#any_adj) (ONE one#one_adj) (N triangle#triangle_n))))
					    (BEP are#be_v)
					    (ADJP-PRD (ADJ equall#equal_adj)
						      (PP (P to#to_prep)
							  (NP (Q all#all_adj)
							      (D the#the_adj)
							      (NUM three#three_adj)
							      (NS corners#corner_n1)
							      (PP (P of#of_prep)
								  (NP (Q euerye#every_adj) (OTHER other#other_adj) (N triangle#triangle_n))))))))))
	  (CODE <$$font>)
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D4R.332))

( (IP-MAT (CONJ For#for_prep)
	  (NP-LFD-1 (CP-FRL (WNP-2 (WD what#what_pron) (ADV so#so_adv) (ADV euer#ever_adv) (NS thynges#thing_n1))
			    (C 0)
			    (IP-SUB (NP-SBJ *T*-2)
				    (BEP are#be_v)
				    (ADJP-PRD (ADJ equalle#equal_adj)
					      (PP (P to#to_prep)
						  (NP (Q anny#any_adj) (ONE one#one_adj) (ADJ thyrde#third_adj) (N thynge#thing_n1)))))))
	  (PUNC ,)
	  (NP-SBJ-RSP=1 (D those#those_pron) (ADJ same#same_adj))
	  (BEP are#be_v)
	  (CODE <P_2,D4V>)
	  (ADJP-PRD (ADJ equalle#equal_adj))
	  (ADVP (ADV togitther#together_adv))
	  (PUNC ,)
	  (PP (P by#by_prep)
	      (NP (D the#the_adj) (ADJ fyrste#first_adj) (ADJ common#common_adj) (N sentence#sentence_n)))
	  (PUNC ,)
	  (PP (P so#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (PP-LFD (P bycause#because_adv)
				      (CP-ADV (C 0)
					      (IP-SUB (IP-SUB (NP-SBJ (Q all#all_adj)
								      (D the#the_adj)
								      (NUM .iij.#three_adj)
								      (NS angles#angle_n2)
								      (PP (P of#of_prep)
									  (NP (Q euery#every_adj) (N triangle#triangle_n))))
							      (BEP are#be_v)
							      (ADJP-PRD (ADJ equall#equal_adj)
									(PP (P to#to_prep)
									    (NP (NUM two#two_adj) (ADJ ryghte#right_adj) (NS angles#angle_n2)))))
						      (PUNC ,)
						      (CONJP (CONJ and#and_conj1)
							     (IP-SUB (NP-SBJ (Q all#all_adj) (ADJ ryghte#right_adj) (NS angles#angle_n2))
								     (BEP bee#be_v)
								     (ADJP-PRD (ADJ equall#equal_adj))
								     (ADVP (ADV togyther#together_adv))
								     (PUNC <paren>)
								     (PP-PRN (P by#by_prep)
									     (NP (D the#the_adj) (ADJ fourth#NA) (N request#request_n1))))))))
			      (PUNC <$$paren>)
			      (PP-RSP (ADV+P therfore#therefore_adv))
			      (MD must#must_v1)
			      (NP-SBJ-3 (PRO it#it_pron))
			      (ADVP (ADV nedes#needs_adv))
			      (VB folow#follow_v)
			      (PUNC ,)
			      (CP-THT-3 (C that#that_conj)
					(IP-SUB (NP-SBJ (Q all#all_adj)
							(D the#the_adj)
							(NUM thre#three_adj)
							(NS corners#corner_n1)
							(PP (P of#of_prep)
							    (NP (Q euery#every_adj) (N triangle#triangle_n))))
						(PUNC <paren>)
						(IP-PPL (VAG accomptyng#account_v)
							(NP-OB1 (PRO them#them_pron))
							(ADVP (ADV togyther#together_adv)))
						(PUNC <$$paren>)
						(BEP are#be_v)
						(ADJP-PRD (ADJ equall#equal_adj)
							  (PP (P to#to_prep)
							      (NP (NUM iij.#three_adj)
								  (NS corners#corner_n1)
								  (PP (P of#of_prep)
								      (NP (Q any#any_adj) (OTHER other#other_adj) (N triangle#triangle_n)))
								  (PUNC ,)
								  (RRC (VAN taken#take_v)
								       (Q all#all_adj)
								       (ADVP (ADV togyther#together_adv)))))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D4V.333))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM .XXIII.#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,D4V.335))

( (CODE <$$heading>))

( (IP-MAT (PP-LFD (PP (P when#when_adv)
		      (CP-ADV (C 0)
			      (IP-SUB (NP-SBJ (Q any#any_adj) (NUM ij.#two_adj) (ADJ right#right_adj) (NS lines#line_n2))
				      (DOP doth#do_v)
				      (VB (VB touche#touch_v) (CONJ and#and_conj1) (VB couple#couple_v))
				      (NP-OB1 (NUM .ij.#two_adj)
					      (OTHER other#other_adj)
					      (ADJ righte#right_adj)
					      (NS lines#line_n2)
					      (PUNC ,)
					      (CP-REL (WNP-1 (WPRO whiche#which_adj))
						      (C 0)
						      (IP-SUB (NP-SBJ *T*-1)
							      (BEP are#be_v)
							      (ADJP-PRD (ADJP (ADJ equall#equal_adj)
									      (PP (P in#in_prep)
										  (NP (N length#length_n))))
									(CONJP (CONJ and#and_conj1)
									       (NP (NS paralleles#parallel_n))))))))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (PP (P if#if_conj)
			     (CP-ADV (C 0)
				     (IP-SUB (NP-SBJ (D those#those_pron) (NUM .ij.#two_adj) (NS lines#line_n2))
					     (BEP bee#be_v)
					     (VAN drawen#draw_v)
					     (PP (P towarde#toward_prep)
						 (NP (ONE one#one_adj) (N hande#hand_n))))))))
	  (PUNC ,)
	  (ADVP-TMP-RSP (ADV then#then_adv))
	  (BEP are#be_v)
	  (NP-SBJ (PRO thei#they_pron))
	  (ALSO also#also_adv)
	  (ADJP-PRD (ADJP (ADJ equall#equal_adj))
		    (CONJP *ICH*-2))
	  (ADVP (ADV together#together_adv))
	  (PUNC ,)
	  (CONJP-2 (CONJ and#and_conj1)
		   (NP (NS paralleles#parallel_n)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D4V.337))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,D4V.338))

( (IP-MAT (NP-SBJ (N A.B.#NA) (CONJ and#and_conj1) (N C.D.#NA))
	  (CODE {COM:figure_omitted})
	  (BEP are#be_v)
	  (NP-PRD (NP (NUM ij.#two_adj) (ADJ ryght#right_adj) (NS lynes#line_n2))
		  (CONJP (CONJ and#and_conj1)
			 (NP (NS paralleles#parallel_n)))
		  (CONJP (CONJ and#and_conj1)
			 (ADJP (ADJ equall#equal_adj)
			       (PP (P in#in_prep)
				   (NP (N length#length_n))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D4V.339))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (PRO they#they_pron))
	  (BEP ar#be_v)
	  (VAN (VAN touched#touch_v) (CONJ and#and_conj1) (VAN ioyned#join_v1))
	  (ADVP (ADV togither#together_adv))
	  (PP (P by#by_prep)
	      (NP (NUM ij.#two_adj)
		  (OTHER other#other_adj)
		  (NS lynes#line_n2)
		  (NP-PRN (N A.C.#NA) (CONJ and#and_conj1) (N B.D#NA))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D4V.340))

( (IP-MAT (IP-PPL-ABS-LFD (IP-PPL (NP-SBJ (D this#this_pron))
				  (BAG beyng#be_v)
				  (ADVP (ADV so#so_adv)))
			  (PUNC ,)
			  (CONJP (CONJ and#and_conj1)
				 (IP-PPL (NP-SBJ (N A.C.#NA) (CONJ and#and_conj1) (N B.D.#NA))
					 (BAG beyng#be_v)
					 (VAN drawen#draw_v)
					 (PP (P towarde#toward_prep)
					     (NP (ONE one#one_adj) (N syde#side_n1)))
					 (PUNC <paren>)
					 (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
						     (BEP is#be_v)
						     (IP-INF (TO to#to_prep)
							     (VB saye#say_v1)
							     (PUNC ,)
							     (FRAG (NP (Q both#both_pron))
								   (PP (P towarde#toward_prep)
								       (NP (D the#the_adj) (ADJ lefte#left_adj1) (N hande#hand_n)))))))))
	  (PUNC <$$paren>)
	  (PP-RSP (ADV+P therefore#therefore_adv))
	  (BEP are#be_v)
	  (NP-SBJ (N A#NA) (PUNC ,) (N C.#NA) (CONJ and#and_conj1) (N B.D.#NA))
	  (ADJP-PRD (CONJ bothe#both_pron)
		    (ADJP (ADJ equall#equal_adj))
		    (CONJP (CONJ and#and_conj1)
			   (ALSO also#also_adv)
			   (NP (NS paralleles#parallel_n))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D4V.341))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM .XXIIIJ.#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,D4V.343))

( (CODE <$$heading>))

( (IP-MAT (PP (P In#in_prep)
	      (NP (Q any#any_adj) (N likeiamme#SEE_like_adj)))
	  (NP-SBJ (D the#the_adj) (NUM two#two_adj) (ADJ contrary#contrary_adj) (NS sides#side_n1))
	  (BEP ar#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj))
	  (ADVP (ADV togither#together_adv))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D4V.345))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (BEP are#be_v)
	  (NP-SBJ (Q eche#each_adj) (NUM .ij.#two_adj) (ADJ contrary#contrary_adj) (NS angles#angle_n2))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,D4V.346))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj)
		  (N bias#bias_n)
		  (N line#line_n2)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP is#be_v)
				  (VAN drawen#draw_v)
				  (PP (P in#in_prep)
				      (NP (PRO it#it_pron))))))
	  (PUNC ,)
	  (DOP doth#do_v)
	  (VB diuide#divide_v)
	  (NP-OB1 (PRO it#it_pron))
	  (PP (P into#into_prep)
	      (NP (NUM two#two_adj) (ADJ equall#equal_adj) (NS portions#portion_n)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,D4V.347))

( (CODE <P_2,E1R>))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,E1R.349))

( (IP-MAT (ADVP-LOC (ADV Here#here_adv))
	  (NP-SBJ-1 *exp*)
	  (BEP are#be_v)
	  (NP-1 (NUM two#two_adj)
		(NS likeiammes#SEE_like_adj)
		(RRC (VAN ioyned#join_v1)
		     (ADVP (ADV togither#together_adv))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E1R.350))

( (CODE {COM:figure_omitted}))

( (IP-MAT (NP-SBJ (D the#the_adj) (ONE one#one_adj))
	  (BEP is#be_v)
	  (NP-PRD (D a#a_adj)
		  (ADJ longe#long_adj1)
		  (N square#square_n)
		  (NP-PRN (N A.B.E#NA)))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E1R.352))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj) (OTHER other#other_adj))
	  (BEP is#be_v)
	  (NP-PRD (D a#a_adj)
		  (ADJ losengelike#SEE_lozenge_n)
		  (NP-PRN (N D.C.E.F.#NA)))
	  (CP-CAR (WNP-1 (WD which#which_adj) (NUM ij.#two_adj) (NS likeiammes#SEE_like_adj))
		  (C 0)
		  (IP-SUB (NP-SBJ *T*-1)
			  (BEP ar#be_v)
			  (VAN proued#prove_v)
			  (IP-SMC (NP-SBJ *T*-1)
				  (ADJP-PRD (ADJ equall#equal_adj))
				  (ADVP (ADV togither#together_adv)))
			  (PUNC ,)
			  (PP (P bycause#because_adv)
			      (CP-ADV (C 0)
				      (IP-SUB (IP-SUB (NP-SBJ (PRO they#they_pron))
						      (HVP haue#have_v)
						      (NP-OB1 (ONE one#one_adj) (N ground#ground_n) (N line#line_n2))
						      (PUNC ,)
						      (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
								  (BEP is#be_v)
								  (PUNC ,)
								  (NP-PRD (N F.E#NA))))
					      (PUNC ,)
					      (CONJP (CONJ And#and_conj1)
						     (IP-SUB (NP-SBJ *con*)
							     (BEP are#be_v)
							     (VAN made#make_v1)
							     (PP (P betwene#between_prep)
								 (NP (ONE one#one_adj)
								     (N payre#pair_n1)
								     (PP (P of#of_prep)
									 (NP (ADJ gemow#gemew_n) (NS lines#line_n2)))))
							     (PUNC ,)
							     (IP-MAT-PRN (NP-SBJ (PRO I#i_pron))
									 (VBP meane#mean_v1)
									 (NP-OB1 (N A.D.#NA) (CONJ and#and_conj1) (N E.H#NA))))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E1R.353))

( (IP-MAT (PP (P By#by_prep)
	      (NP (D this#this_pron) (N Theoreme#theorem_n)))
	  (MD may#may_v1)
	  (NP-SBJ (PRO you#you_pron))
	  (VB know#know_v)
	  (NP-OB1 (D the#the_adj)
		  (N arte#art_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (ADJ righte#right_adj)
			  (N measuringe#measuring_n)
			  (PP (P of#of_prep)
			      (NP (NS likeiammes#SEE_like_adj))))))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-OB1 *T*-1)
			      (PP (P in#in_prep)
				  (NP (PRO$ my#my_adj)
				      (N booke#book_n)
				      (PP (P of#of_prep)
					  (NP (N measuring#measuring_n)))))
			      (NP-SBJ (PRO I#i_pron))
			      (MD wil#will_v1)
			      (ADVP (QR more#more_adj) (ADV plainly#plainly_adv1))
			      (VB declare#declare_v))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E1R.354))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM XXVI.#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,E1R.356))

( (CODE <$$heading>))

( (IP-MAT (NP-SBJ (Q All#all_adj)
		  (NS likeiammes#SEE_like_adj)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (IP-SUB (NP-SBJ *T*-1)
					  (HVP haue#have_v)
					  (NP-OB1 (ADJ equal#equal_adj) (N grounde#ground_n) (NS lines#line_n2)))
				  (CONJP (CONJ and#and_conj1)
					 (IP-SUB (NP-SBJ *T*-1)
						 (BEP are#be_v)
						 (VAN drawen#draw_v)
						 (PP (P betwene#between_prep)
						     (NP (ONE one#one_adj)
							 (N paire#pair_n1)
							 (PP (P of#of_prep)
							     (NP (NS paralleles#parallel_n))))))))))
	  (PUNC ,)
	  (BEP are#be_v)
	  (ADJP-PRD (ADJ equal#equal_adj))
	  (ADVP (ADV togither#together_adv))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E1R.358))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,E1R.359))

( (IP-MAT (ADVP-TMP (ADV Fyrste#first_adj))
	  (NP-SBJ (PRO you#you_pron))
	  (MD muste#must_v1)
	  (VB marke#mark_v)
	  (NP-OB1 (D the#the_adj)
		  (N difference#difference_n1)
		  (PP (P betwene#between_prep)
		      (NP (NP (D this#this_pron) (N Theoreme#theorem_n))
			  (CONJP (CONJ and#and_conj1)
				 (NP (D the#the_adj) (ADJ laste#last_adv))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E1R.360))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (D the#the_adj) (ADJ laste#last_adv) (N Theoreme#theorem_n))
	  (VBD presupposed#presuppose_v)
	  (PP (P to#to_prep)
	      (NP (D the#the_adj) (ADJ diuers#divers_adj) (NS likeiammes#SEE_like_adj)))
	  (NP-OB1 (ONE one#one_adj)
		  (N ground#ground_n)
		  (N line#line_n2)
		  (ADJP (ADJ common#common_adj)
			(PP (P to#to_prep)
			    (NP (PRO them#them_pron)))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E1R.361))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (D this#this_pron) (N theoreme#theorem_n))
	  (DOP doth#do_v)
	  (VB presuppose#presuppose_v)
	  (NP-OB1 (D a#a_adj) (ADJ diuers#divers_adj) (N ground#ground_n) (N line#line_n2))
	  (PP (P for#for_prep)
	      (NP (Q euery#every_adj) (N likeiamme#SEE_like_adj)))
	  (PUNC ,)
	  (IP-PPL (FP only#only_adj)
		  (VAG meaning#mean_v1)
		  (IP-INF (NP-SBJ (PRO them#them_pron))
			  (TO to#to_prep)
			  (BE be#be_v)
			  (ADJP-PRD (ADJ equal#equal_adj)
				    (PP (P in#in_prep)
					(NP (N length#length_n))))
			  (PUNC ,)
			  (PP (P though#though_adv)
			      (CP-ADV (C 0)
				      (IP-SUB (NP-SBJ (PRO they#they_pron))
					      (BEP be#be_v)
					      (ADJP-PRD (ADJ diuers#divers_adj)
							(PP (P in#in_prep)
							    (NP (N numbhe#number_n)))))))))
	  (CODE {COM:sic})
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E1R.362))

( (PP (P As#as_adv)
      (CP-ADV (C 0)
	      (IP-SUB (PP (P for#for_prep)
			  (NP (N example#example_n)))
		      (PUNC .)
		      (PP (P In#in_prep)
			  (NP (D the#the_adj) (ADJ last#last_adv) (N figure#figure_n)))
		      (NP-SBJ-1 (EX ther#there_adv))
		      (BEP are#be_v)
		      (NP-1 (NUM two#two_adj)
			    (NS parallels#parallel_n)
			    (PUNC ,)
			    (NP-PRN (N A.D.#NA) (CONJ and#and_conj1) (N E.H#NA)))))
      (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E1R.363))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P betwene#between_prep)
	      (NP (PRO them#them_pron)))
	  (NP-SBJ-1 *exp*)
	  (BEP are#be_v)
	  (VAN drawen#draw_v)
	  (NP-1 (NUM thre#three_adj) (NS likeiammes#SEE_like_adj))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E1R.364))

( (IP-MAT (NP-SBJ (D the#the_adj) (ADJ firste#first_adj))
	  (BEP is#be_v)
	  (PUNC ,)
	  (NP-PRD (N A.B.E.F#NA))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E1R.365))

( (IP-MAT (NP-SBJ (D the#the_adj) (ADJ second#second_adj))
	  (BEP is#be_v)
	  (NP-PRD (N E.C.D.F#NA))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E1R.366))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj) (ADJ thirde#third_adj))
	  (BEP is#be_v)
	  (NP-PRD (N C.G.H.D#NA))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E1R.367))

( (IP-MAT (NP-SBJ (NP (D The#the_adj) (ADJ firste#first_adj))
		  (CONJP (CONJ and#and_conj1)
			 (NP (D the#the_adj) (ADJ seconde#second_adj))))
	  (HVP haue#have_v)
	  (NP-OB1 (ONE one#one_adj) (N ground#ground_n) (N line#line_n2))
	  (PUNC ,)
	  (PUNC <paren>)
	  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
		      (BEP is#be_v)
		      (NP-PRD (N E.F.#NA)))
	  (PUNC <$$paren>))
  (ID RECORD-1551-E1-P2,2,E1R.368))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (ADV+P therfore#therefore_adv))
	  (PP (P in_so_muche#insomuch_adv)
	      (PP (P as#as_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (PRO they#they_pron))
				  (BEP are#be_v)
				  (PP (P betwene#between_prep)
				      (NP (ONE one#one_adj)
					  (N paire#pair_n1)
					  (PP (P of#of_prep)
					      (NP (NS paralleles#parallel_n)))))))))
	  (PUNC ,)
	  (NP-SBJ (PRO they#they_pron))
	  (BEP are#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (IP-PPL (VAG accordinge#accord_v)
			    (PP (P to#to_prep)
				(NP (D the#the_adj) (NUM fiue_and_twentye#NA) (N Theoreme#theorem_n)))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E1R.369))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (D the#the_adj) (ADJ thirde#third_adj) (N likeiamme#SEE_like_adj))
	  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
		      (BEP is#be_v)
		      (NP-PRD (N C.G.H.D.#NA)))
	  (HVP hathe#have_v)
	  (IP-SMC (NP-SBJ (PRO$ his#his_adj)
			  (N grounde#ground_n)
			  (N line#line_n2)
			  (NP-PRN (N G.H#NA)))
		  (PUNC ,)
		  (ADJP-PRD (ADJP (ADJ seuerall#several_adj)
				  (PP (P frome#from_prep)
				      (CODE <P_2,E1V>)
				      (NP (D the#the_adj) (OTHER other#other_adj))))
			    (PUNC ,)
			    (CONJP (CONJ but#but_prep)
				   (ADVP (ADV yet#yet_adv))
				   (ADJP (ADJ equall#equal_adj)
					 (PP (P vnto#unto_prep)
					     (NP (PRO it#it_pron)))))))
	  (PUNC .)
	  (CP-CAR (WPP-1 (WADV+P wherefore#wherefore_adv))
		  (C 0)
		  (IP-SUB (PP *T*-1)
			  (NP-SBJ (D the#the_adj) (ADJ third#third_adj) (N likeiam#SEE_like_adj))
			  (BEP is#be_v)
			  (ADJP-PRD (ADJ equall#equal_adj)
				    (PP (P to#to_prep)
					(NP (D the#the_adj) (OTHER other#other_adj) (NUM two#two_adj) (ADJ firste#first_adj) (NS likeiammes#SEE_like_adj))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E1V.370))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (P for#for_prep)
	      (NP (D a#a_adj)
		  (N proofe#proof_n)
		  (CP-THT (C that#that_conj)
			  (IP-SUB (NP-SBJ (N G.H.#NA))
				  (IP-PPL (BAG being#be_v)
					  (NP-PRD (D the#the_adj)
						  (N ground#ground_n)
						  (N line#line_n2)
						  (PP (P of#of_prep)
						      (NP (D the#the_adj) (ADJ third#third_adj) (N likeiamme#SEE_like_adj)))))
				  (PUNC ,)
				  (BEP is#be_v)
				  (ADJP-PRD (ADJ equall#equal_adj)
					    (PP (P to#to_prep)
						(NP (N E.F#NA)
						    (PUNC ,)
						    (CP-REL (WNP-1 (WPRO whiche#which_adj))
							    (C 0)
							    (IP-SUB (NP-SBJ *T*-1)
								    (BEP is#be_v)
								    (NP-PRD (D the#the_adj)
									    (N ground#ground_n)
									    (N line#line_n2)
									    (PP (P to#to_prep)
										(NP (Q both#both_pron) (D the#the_adj) (OTHER other#other_adj) (NS likeiams#SEE_like_adj)))))))))))))
	  (PUNC ,)
	  (NP-SBJ (D that#that_pron1))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (ADVP (ADV thus#thus_adv))
	  (VAN declared#declare_v)
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E1V.371))

( (IP-MAT (NP-SBJ (N G.H.#NA))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (N C.D#NA))))
	  (PUNC ,)
	  (IP-PPL (VAG seynge#see_v)
		  (CP-THT (C 0)
			  (IP-SUB (NP-SBJ (PRO they#they_pron))
				  (BEP are#be_v)
				  (NP-PRD (D the#the_adj)
					  (ADJ contrary#contrary_adj)
					  (NS sides#side_n1)
					  (PP (P of#of_prep)
					      (NP (ONE one#one_adj) (N likeiamme#SEE_like_adj)))))))
	  (PUNC <paren>)
	  (PP-PRN (P by#by_prep)
		  (NP (D the#the_adj) (NUM foure_and_twentye#NA) (N theoreme#theorem_n)))
	  (PUNC <$$paren>))
  (ID RECORD-1551-E1-P2,2,E1V.372))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV so#so_adv))
	  (BEP are#be_v)
	  (NP-SBJ (N C.D.#NA) (CONJ and#and_conj1) (N E.F.#NA))
	  (PP (P by#by_prep)
	      (NP (D the#the_adj) (ADJ same#same_adj) (N theoreme#theorem_n)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E1V.373))

( (IP-MAT (PP (ADV+P Therfore#therefore_adv))
	  (IP-PPL (VAG seynge#see_v)
		  (CP-THT (C 0)
			  (IP-SUB (NP-SBJ (Q both#both_pron)
					  (D those#those_pron)
					  (N ground#ground_n)
					  (NS lines#line_n2)
					  (PUNC ,)
					  (NP-PRN (N E.F.#NA) (CONJ and#and_conj1) (N G.H#NA)))
				  (PUNC ,)
				  (BEP are#be_v)
				  (ADJP-PRD (ADJ equall#equal_adj)
					    (PP (P to#to_prep)
						(NP (ONE one#one_adj) (ADJ thirde#third_adj) (N line#line_n2))))
				  (PUNC <paren>)
				  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
					      (BEP is#be_v)
					      (NP-PRD (N C.D.#NA))))))
	  (PUNC <$$paren>)
	  (NP-SBJ (PRO they#they_pron))
	  (MD must#must_v1)
	  (ADVP (ADV nedes#needs_adv))
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj))
	  (ADVP (ADV togyther#together_adv))
	  (PP (P by#by_prep)
	      (NP (D the#the_adj) (ADJ firste#first_adj) (ADJ common#common_adj) (N sentence#sentence_n)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E1V.374))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM XXVII.#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,E1V.376))

( (CODE <$$heading>))

( (IP-MAT (NP-SBJ (Q All#all_adj)
		  (NS triangles#triangle_n)
		  (RRC (RRC (HAG hauinge#have_v)
			    (NP-OB1 (ONE one#one_adj) (N grounde#ground_n) (N lyne#line_n2)))
		       (PUNC ,)
		       (CONJP (CONJ and#and_conj1)
			      (CODE {SIC:an})
			      (RRC (VAG standing#stand_v)
				   (PP (P betwene#between_prep)
				       (NP (ONE one#one_adj)
					   (N paire#pair_n1)
					   (PP (P of#of_prep)
					       (NP (NS parallels#parallel_n)))))))))
	  (PUNC ,)
	  (BEP ar#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj))
	  (ADVP (ADV togither#together_adv))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E1V.378))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,E1V.379))

( (IP-MAT (NP-SBJ (N A.B.#NA) (CONJ and#and_conj1) (N C.F.#NA))
	  (BEP are#be_v)
	  (NP-PRD (NUM twoo#two_adj)
		  (ADJ gemowe#gemew_n)
		  (NS lines#line_n2)
		  (PUNC ,)
		  (CP-REL (WPP-1 (P betweene#between_prep)
				 (WNP (WPRO which#which_adj)))
			  (C 0)
			  (IP-SUB (PP *T*-1)
				  (NP-SBJ-2 (EX there#there_adv))
				  (BEP be#be_v)
				  (VAN made#make_v1)
				  (NP-2 (NUM two#two_adj)
					(NS triangles#triangle_n)
					(PUNC ,)
					(NP-PRN (N A.D.E.#NA) (CONJ and#and_conj1) (N D.E.B#NA))))))
	  (PUNC ,)
	  (PP (P so#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (NP-SBJ (N D.E#NA))
			      (PUNC ,)
			      (BEP is#be_v)
			      (NP-PRD (D the#the_adj)
				      (ADJ common#common_adj)
				      (N ground#ground_n)
				      (N line#line_n2)
				      (PP (P to#to_prep)
					  (NP (PRO them#them_pron)
					      (QP (Q bothe#both_pron))))))))
	  (PUNC .)
	  (CODE {COM:figure_omitted})
	  (CP-CAR (WPP-3 (WADV+P wherfore#wherefore_adv))
		  (C 0)
		  (IP-SUB (PP *T*-3)
			  (NP-SBJ-4 (PRO it#it_pron))
			  (DOP doth#do_v)
			  (VB folow#follow_v)
			  (PUNC ,)
			  (CP-THT-4 (C that#that_conj)
				    (IP-SUB (NP-SBJ (D those#those_pron)
						    (NUM two#two_adj)
						    (NS triangles#triangle_n)
						    (NP-PRN (N A.D.E.#NA) (CONJ and#and_conj1) (N D.E.B.#NA)))
					    (BEP are#be_v)
					    (ADJP-PRD (ADJ equall#equal_adj)
						      (NP-ADV (NP (Q eche#each_adj))
							      (PP (P to#to_prep)
								  (NP (OTHER other#other_adj)))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E1V.380))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM XXVIIJ.#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,E1V.382))

( (CODE <$$heading>))

( (IP-MAT (NP-SBJ (Q All#all_adj)
		  (NS triangles#triangle_n)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (IP-SUB (NP-SBJ *T*-1)
					  (HVP haue#have_v)
					  (NP-OB1 (ADJ like#like_adj) (ADJ long#long_adj1) (N ground#ground_n) (NS lines#line_n2)))
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (IP-SUB (NP-SBJ *T*-1)
						 (BEP bee#be_v)
						 (VAN made#make_v1)
						 (PP (P betweene#between_prep)
						     (NP (ONE one#one_adj)
							 (N paire#pair_n1)
							 (PP (P of#of_prep)
							     (NP (ADJ gemow#gemew_n) (NS lines#line_n2))))))))))
	  (PUNC ,)
	  (BEP are#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj))
	  (ADVP (ADV togither#together_adv))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E1V.384))

( (CODE <P_2,E2R>))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,E2R.386))

( (IP-MAT (NP-OB1 (N Example#example_n)
		  (PP (P of#of_prep)
		      (NP (D this#this_pron) (N Theoreme#theorem_n))))
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB see#see_v)
	  (PP (P in#in_prep)
	      (NP (D the#the_adj)
		  (ADJ last#last_adv)
		  (N figure#figure_n)
		  (PUNC ,)
		  (CP-REL (WADVP-1 (WADV where#where_adv))
			  (C as#as_adv)
			  (IP-SUB (IP-SUB (ADVP-LOC *T*-1)
					  (IP-ABS (NP-SBJ (NUM sixe#six_adj) (NS triangles#triangle_n))
						  (VAN made#make_v1)
						  (PP (P betwene#between_prep)
						      (NP (D those#those_pron)
							  (NUM two#two_adj)
							  (ADJ gemowe#gemew_n)
							  (NS lines#line_n2)
							  (NP-PRN (N A.B.#NA) (CONJ and#and_conj1) (N C.F#NA)))))
					  (PUNC ,)
					  (NP-SBJ (D the#the_adj) (ADJ first#first_adj) (N triangle#triangle_n))
					  (BEP is#be_v)
					  (NP-PRD (N A.C.D#NA)))
				  (PUNC ,)
				  (CONJP (IP-SUB (ADVP-LOC *T*-1)
						 (NP-SBJ (D the#the_adj) (ADJ seconde#second_adj))
						 (BEP is#be_v)
						 (NP-PRD (N A.D.E#NA))))
				  (PUNC ,)
				  (CONJP (IP-SUB (ADVP-LOC *T*-1)
						 (NP-SBJ (D the#the_adj) (ADJ thirde#third_adj))
						 (BEP is#be_v)
						 (NP-PRD (N A.D.B#NA))))
				  (PUNC ,)
				  (CONJP (IP-SUB (ADVP-LOC *T*-1)
						 (NP-SBJ (D the#the_adj) (ADJ fourth#NA))
						 (BEP is#be_v)
						 (NP-PRD (N A.B.E#NA))))
				  (PUNC ,)
				  (CONJP (IP-SUB (ADVP-LOC *T*-1)
						 (NP-SBJ (D the#the_adj) (ADJ fifte#NA))
						 (BEP is#be_v)
						 (NP-PRD (N D.E.B#NA))))
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (IP-SUB (ADVP-LOC *T*-1)
						 (NP-SBJ (D the#the_adj) (ADJ sixte#NA))
						 (BEP is#be_v)
						 (NP-PRD (N B.E.F#NA))))
				  (PUNC ,)
				  (CP-CAR (WPP-2 (P of#of_prep)
						 (WNP (WD which#which_adj) (NUM sixe#six_adj) (NS triangles#triangle_n)))
					  (C 0)
					  (PUNC ,)
					  (IP-SUB (IP-SUB-3 (PP *T*-2)
							    (NP-SBJ (N A.D.E.#NA) (CONJ and#and_conj1) (N D.E.B.#NA))
							    (BEP are#be_v)
							    (ADJP-PRD (ADJ equall#equal_adj))
							    (PP (P bicause#because_adv)
								(CP-ADV (C 0)
									(IP-SUB (NP-SBJ (PRO they#they_pron))
										(HVP haue#have_v)
										(NP-OB1 (ONE one#one_adj) (ADJ common#common_adj) (N grounde#ground_n) (N line#line_n2))))))
						  (PUNC .)
						  (CONJP (CONJ And#and_conj1)
							 (IP-SUB=3 (ADVP (ADV so#so_adv))
								   (NP-ADV (N likewise#likewise_adv))
								   (NP-SBJ (N A.B.E.#NA)
									   (CONJ and#and_conj1)
									   (N A.B.D#NA)
									   (PUNC ,)
									   (CP-REL (WNP-4 (WPRO$ whose#whose_pron) (ADJ commen#common_adj) (N grounde#ground_n) (N line#line_n2))
										   (C 0)
										   (IP-SUB (NP-SBJ *T*-4)
											   (BEP is#be_v)
											   (NP-PRD (N A.B#NA)))))))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E2R.387))

( (IP-MAT (CONJ but#but_prep)
	  (NP-SBJ (N A.C.D.#NA))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ equal#equal_adj)
		    (PP (P to#to_prep)
			(NP (N B.E.F#NA))))
	  (PUNC ,)
	  (IP-PPL (BAG being#be_v)
		  (Q both#both_pron)
		  (PP (P betwene#between_prep)
		      (NP (ONE one#one_adj)
			  (N couple#couple_n)
			  (PP (P of#of_prep)
			      (NP (NS parallels#parallel_n))))))
	  (PUNC ,)
	  (PP (PP (NEG not#not_adv)
		  (P bicause#because_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (PRO thei#they_pron))
				  (HVP haue#have_v)
				  (NP-OB1 (ONE one#one_adj) (N groune#ground_n) (N line#line_n2)))))
	      (PUNC ,)
	      (CONJP (CONJ but#but_prep)
		     (PP (P bicause#because_adv)
			 (CP-ADV (C 0)
				 (IP-SUB (NP-SBJ (PRO they#they_pron))
					 (HVP haue#have_v)
					 (IP-SMC (NP-SBJ (PRO$ their#their_adj) (N ground#ground_n) (NS lines#line_n2))
						 (ADJP-PRD (ADJ equall#equal_adj))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E2R.388))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (N C.D.#NA))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (N E.F#NA))))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-OB1 *T*-1)
			      (NP-SBJ (PRO you#you_pron))
			      (MD may#may_v1)
			      (VB declare#declare_v)
			      (ADVP (ADV thus#thus_adv)))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E2R.389))

( (IP-MAT (NP-SBJ (N C.D#NA))
	  (PUNC ,)
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (N A.B.#NA))))
	  (PUNC <paren>)
	  (PP-PRN (P by#by_prep)
		  (NP (D the#the_adj) (NUM foure_and_twenty#NA) (N Theoreme#theorem_n)))
	  (PUNC <$$paren>))
  (ID RECORD-1551-E1-P2,2,E2R.390))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (PRO thei#they_pron))
	  (BEP are#be_v)
	  (NP-PRD (NUM two#two_adj)
		  (ADJ contrary#contrary_adj)
		  (NS sides#side_n1)
		  (PP (P of#of_prep)
		      (NP (ONE one#one_adj)
			  (N lykeiamme#SEE_like_adj)
			  (PUNC .)
			  (NP-PRN (N A.C.D.B#NA)))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E2R.391))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (N E.F#NA))
	  (PP (P by#by_prep)
	      (NP (D the#the_adj) (ADJ same#same_adj) (N theoreme#theorem_n)))
	  (PUNC ,)
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (N A.B#NA))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E2R.392))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (PRO thei#they_pron))
	  (BEP ar#be_v)
	  (QP (D the#the_adj) (NUM two#two_adj))
	  (NP-PRD (D y=e=#the_adj)
		  (ADJ contrary#contrary_adj)
		  (NS sides#side_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj)
			  (N likeiamme#SEE_like_adj)
			  (PUNC ,)
			  (NP-PRN (N A.E.F.B#NA)))))
	  (PUNC ,)
	  (CP-CAR (WPP-1 (WADV+P wherfore#wherefore_adv))
		  (C 0)
		  (IP-SUB (PP *T*-1)
			  (NP-SBJ (N C.D.#NA))
			  (MD must#must_v1)
			  (ADVP (ADV needes#needs_adv))
			  (BE be#be_v)
			  (ADJP-PRD (ADJ equall#equal_adj)
				    (PP (P to#to_prep)
					(NP (N E.F#NA))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E2R.393))

( (IP-MAT (NP-ADV (ADJ like#like_adj) (N wise#wise_n1))
	  (NP-SBJ (D the#the_adj)
		  (N triangle#triangle_n)
		  (NP-PRN (N A.C.D#NA)))
	  (PUNC ,)
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ equal#equal_adj)
		    (PP (P to#to_prep)
			(NP (N A.B.E#NA))))
	  (PUNC ,)
	  (PP (P bicause#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (NP-SBJ (PRO they#they_pron))
				      (BEP ar#be_v)
				      (VAN made#make_v1)
				      (PP (P betwene#between_prep)
					  (NP (ONE one#one_adj)
					      (N paire#pair_n1)
					      (PP (P of#of_prep)
						  (NP (NS parallels#parallel_n))))))
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB (NP-SBJ *con*)
					     (HVP haue#have_v)
					     (IP-SMC (NP-SBJ (PRO$ their#their_adj) (NS groundlines#ground-line_n))
						     (ADJP-PRD (ADJ like#like_adj))
						     (PUNC ,)
						     (IP-MAT-PRN (NP-SBJ (PRO I#i_pron))
								 (VBP meane#mean_v1)
								 (NP-OB1 (N C.D.#NA) (CONJ and#and_conj1) (N A.B#NA)))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E2R.394))

( (IP-MAT (ADVP (ADV Againe#again_adv))
	  (NP-SBJ (N A.D.E#NA))
	  (PUNC ,)
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ equal#equal_adj)
		    (PP (P to#to_prep)
			(NP (Q eche#each_adj)
			    (PP (P of#of_prep)
				(NP (PRO them#them_pron)
				    (QP (Q both#both_pron)))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E2R.395))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (PRO$ his#his_adj)
		  (N ground#ground_n)
		  (N line#line_n2)
		  (NP-PRN (N D.E#NA)))
	  (PUNC ,)
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (N A.B#NA))))
	  (PUNC ,)
	  (PP (P in_so_muche#insomuch_adv)
	      (PP (P as#as_adv)
		  (CP-ADV (C 0)
			  (IP-SUB (NP-SBJ (PRO they#they_pron))
				  (BEP are#be_v)
				  (NP-PRD (D the#the_adj)
					  (ADJ contrary#contrary_adj)
					  (NS sides#side_n1)
					  (PP (P of#of_prep)
					      (NP (ONE one#one_adj) (N likeiamme#SEE_like_adj))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E2R.396))

( (IP-MAT (NP-SBJ (D that#that_pron1))
	  (BEP is#be_v)
	  (NP-PRD (D the#the_adj)
		  (ADJ long#long_adj1)
		  (N square#square_n)
		  (NP-PRN (N A.B.D.E.#NA))))
  (ID RECORD-1551-E1-P2,2,E2R.397))

( (IP-MAT (CONJ And#and_conj1)
	  (ADVP (ADV thus#thus_adv))
	  (MD may#may_v1)
	  (NP-SBJ (PRO you#you_pron))
	  (VB proue#prove_v)
	  (NP-OB1 (D the#the_adj)
		  (N equalnes#equalness_n)
		  (PP (P of#of_prep)
		      (NP (Q all#all_adj) (D the#the_adj) (N reste#rest_n3))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E2R.398))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM XXIX.#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,E2R.400))

( (CODE <$$heading>))

( (IP-MAT (NP-SBJ (Q Al#all_adj)
		  (ADJ equal#equal_adj)
		  (NS triangles#triangle_n)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (IP-SUB (NP-SBJ *T*-1)
					  (BEP are#be_v)
					  (VAN made#make_v1)
					  (PP (P on#on_prep)
					      (NP (ONE one#one_adj) (N grounde#ground_n) (N line#line_n2))))
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (IP-SUB (NP-SBJ *T*-1)
						 (VBP rise#rise_v)
						 (NP-DIR (ONE one#one_adj) (N waye#way_n1)))))))
	  (PUNC ,)
	  (MD must#must_v1)
	  (ADVP (ADV needes#needs_adv))
	  (BE be#be_v)
	  (PP (P betwene#between_prep)
	      (NP (ONE one#one_adj)
		  (N paire#pair_n1)
		  (PP (P of#of_prep)
		      (NP (NS parallels#parallel_n)))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E2R.402))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,E2R.403))

( (IP-IMP (VBI Take#take_v)
	  (PP (P for#for_prep)
	      (NP (N example#example_n)))
	  (NP-OB1 (N A.D.F#NA)
		  (PUNC ,)
		  (CONJ and#and_conj1)
		  (N D.E.B#NA)
		  (PUNC ,)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (PP (P as#as_adv)
				      (CP-ADV (WNP-2 0)
					      (C 0)
					      (IP-SUB (NP-OB1 *T*-2)
						      (NP-SBJ (D the#the_adj) (NUM xxvij.#NA) (CODE <P_2,E2V>) (N conclusion#conclusion_n))
						      (DOP dooth#do_v)
						      (VB proue#prove_v))))
				  (PUNC <$$paren>)
				  (BEP are#be_v)
				  (ADJP-PRD (ADJ equall#equal_adj))
				  (ADVP (ADV togither#together_adv)))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E2V.404))

( (IP-MAT (CONJ and#and_conj1)
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-OB1 *T*-1)
			      (NP-SBJ (PRO you#you_pron))
			      (VBP see#see_v))))
	  (PUNC ,)
	  (NP-SBJ (PRO they#they_pron))
	  (HVP haue#have_v)
	  (NP-OB1 (ONE on#one_adj)
		  (N ground#ground_n)
		  (N line#line_n2)
		  (NP-PRN (N D.E.#NA))))
  (ID RECORD-1551-E1-P2,2,E2V.405))

( (IP-MAT (CONJ And#and_conj1)
	  (ADVP (ADV againe#again_adv))
	  (NP-SBJ (PRO they#they_pron))
	  (VBP rise#rise_v)
	  (PP (P towarde#toward_prep)
	      (NP (ONE one#one_adj) (N side#side_n1)))
	  (PUNC ,)
	  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
		      (BEP is#be_v)
		      (IP-INF (TO to#to_prep)
			      (VB say#say_v1)
			      (PUNC ,)
			      (PP (ADV vpwarde#upward_adv)
				  (P toward#toward_prep)
				  (NP (D the#the_adj)
				      (N line#line_n2)
				      (NP-PRN (N A.B#NA))))))
	  (PUNC ,)
	  (CP-CAR (WPP-1 (WADV wher#where_adv) (P fore#for_prep))
		  (C 0)
		  (IP-SUB (PP *T*-1)
			  (NP-SBJ (PRO they#they_pron))
			  (MD must#must_v1)
			  (ADVP (ADV needes#needs_adv))
			  (BE be#be_v)
			  (VAN inclosed#enclose_v)
			  (PP (P betweene#between_prep)
			      (NP (ONE one#one_adj)
				  (N paire#pair_n1)
				  (PP (P of#of_prep)
				      (NP (NS parallels#parallel_n)
					  (PUNC ,)
					  (CP-REL (WNP-2 (WPRO which#which_adj))
						  (C 0)
						  (IP-SUB (NP-SBJ *T*-2)
							  (BEP are#be_v)
							  (ADVP-LOC (ADV heere#here_adv))
							  (PP (P in#in_prep)
							      (NP (D this#this_pron) (N example#example_n)))
							  (NP-PRD (N A.B.#NA) (CONJ and#and_conj1) (N D.E#NA))))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E2V.406))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM THIRTY#thirty_adj) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,E2V.408))

( (CODE <$$heading>))

( (IP-MAT (NP-SBJ (ADJ Equal#equal_adj)
		  (NS triangles#triangle_n)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (IP-SUB (NP-SBJ *T*-1)
					  (HVP haue#have_v)
					  (IP-SMC (NP-SBJ (PRO$ their#their_adj)
							  (N ground#ground_n)
							  (CODE {SIC:the_irground})
							  (NS lines#line_n2))
						  (ADJP-PRD (ADJ equal#equal_adj))))
				  (PUNC ,)
				  (CONJP (CONJ and#and_conj1)
					 (IP-SUB (NP-SBJ *T*-1)
						 (BEP be#be_v)
						 (VAN drawe~#draw_v)
						 (PP (P toward#toward_prep)
						     (NP (ONE one#one_adj) (N side#side_n1))))))))
	  (PUNC ,)
	  (BEP are#be_v)
	  (VAN made#make_v1)
	  (PP (P betwene#between_prep)
	      (NP (ONE one#one_adj)
		  (N paire#pair_n1)
		  (PP (P of#of_prep)
		      (NP (NS paralleles#parallel_n)))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E2V.410))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,E2V.411))

( (IP-MAT (NP-SBJ (D The#the_adj)
		  (N example#example_n)
		  (CP-REL (WNP-1 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-1)
				  (VBD declared#declare_v)
				  (NP-OB1 (D the#the_adj) (ADJ last#last_adv) (N theoreme#theorem_n)))))
	  (PUNC ,)
	  (MD maye#may_v1)
	  (ADVP (ADV well#well_adv))
	  (VB serue#serve_v1)
	  (PP (P to#to_prep)
	      (NP (D the#the_adj)
		  (N declaration#declaration_n)
		  (PP (P of#of_prep)
		      (NP (D this#this_pron)))))
	  (ALSO also#also_adv)
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E2V.412))

( (IP-MAT (CONJ For#for_prep)
	  (NP-SBJ (D those#those_pron) (NUM ij.#two_adj) (NS theoremes#theorem_n))
	  (DOP do#do_v)
	  (VB diffre#differ_v)
	  (PP (FP but#but_prep)
	      (P in#in_prep)
	      (NP (D this#this_pron)
		  (ONE one#one_adj)
		  (N pointe#point_n1)
		  (PUNC ,)
		  (CP-THT-PRN (C that#that_conj)
			      (IP-SUB (NP-SBJ (D the#the_adj) (ADJ laste#last_adv) (N theoreme#theorem_n))
				      (VBP meaneth#mean_v1)
				      (PP (P of#of_prep)
					  (NP (NS triangles#triangle_n)
					      (PUNC ,)
					      (CP-REL (WNP-1 0)
						      (C that#that_conj)
						      (IP-SUB (NP-SBJ *T*-1)
							      (HVP haue#have_v)
							      (NP-OB1 (ONE one#one_adj)
								      (N ground#ground_n)
								      (N line#line_n2)
								      (ADJP (ADJ common#common_adj)
									    (PP (P to#to_prep)
										(NP (PRO them#them_pron)
										    (QP (Q both#both_pron))))))))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E2V.413))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D this#this_pron) (N theoreme#theorem_n))
	  (DOP doth#do_v)
	  (VB presuppose#presuppose_v)
	  (IP-INF (NP-SBJ (D the#the_adj) (N grounde#ground_n) (NS lines#line_n2))
		  (TO to#to_prep)
		  (BE bee#be_v)
		  (ADJP-PRD (ADJP (ADJ diuers#divers_adj))
			    (PUNC ,)
			    (CONJP (CONJ but#but_prep)
				   (ADVP (ADV yet#yet_adv))
				   (PP (P of#of_prep)
				       (NP (ONE one#one_adj) (N length#length_n))))))
	  (PUNC ,)
	  (PP (P as#as_adv)
	      (NP (N A.C.D#NA) (PUNC ,) (CONJ and#and_conj1) (N B.E.F#NA)))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E2V.414))

( (IP-MAT (PP (P as#as_adv)
	      (CP-CMP (WADVP-1 0)
		      (C 0)
		      (IP-SUB (ADVP *T*-1)
			      (NP-SBJ-2 (PRO they#they_pron))
			      (BEP are#be_v)
			      (IP-SMC (NP-SBJ *-2)
				      (NP-PRD (NUM ij.#two_adj) (ADJ equall#equal_adj) (NS triangles#triangle_n)))
			      (VAN approued#approve_v1)
			      (PUNC ,)
			      (PP (P by#by_prep)
				  (NP (D the#the_adj) (NUM eighte_and_twentye#NA) (N Theorem#theorem_n))))))
	  (PUNC ,)
	  (ADVP (ADV so#so_adv))
	  (PP (P in#in_prep)
	      (NP (D the#the_adj) (ADJ same#same_adj) (N Theorem#theorem_n)))
	  (NP-SBJ-3 (PRO it#it_pron))
	  (BEP is#be_v)
	  (VAN declared#declare_v)
	  (PUNC ,)
	  (CP-THT-3 (C y=t=#that_conj)
		    (IP-SUB (NP-SBJ (PRO$ their#their_adj) (N grou~d#ground_n) (NS lines#line_n2))
			    (BEP are#be_v)
			    (ADJP-PRD (ADJ equall#equal_adj))
			    (ADVP (ADV togither#together_adv))
			    (PUNC ,)
			    (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
					(BEP is#be_v)
					(NP-PRD (N C.D#NA) (PUNC ,) (CONJ and#and_conj1) (N E.F#NA)))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E2V.415))

( (IP-MAT (ADVP (ADV now#now_adv))
	  (IP-PPL-ABS (IP-PPL (NP-SBJ (D this#this_pron))
			      (BAG beeynge#be_v)
			      (ADJP-PRD (ADJ true#true_adj)))
		      (PUNC ,)
		      (CONJP (CONJ and#and_conj1)
			     (IP-PPL (VAG considering#consider_v)
				     (CP-THT (C that#that_conj)
					     (IP-SUB (NP-SBJ (PRO they#they_pron))
						     (BEP are#be_v)
						     (VAN made#make_v1)
						     (PP (P towarde#toward_prep)
							 (NP (ONE one#one_adj) (N side#side_n1))))))))
	  (PUNC ,)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (VBP foloweth#follow_v)
	  (PUNC ,)
	  (CP-THT-1 (C that#that_conj)
		    (IP-SUB (NP-SBJ (PRO they#they_pron))
			    (BEP are#be_v)
			    (VAN made#make_v1)
			    (PP (P betwene#between_prep)
				(NP (ONE one#one_adj)
				    (N paire#pair_n1)
				    (PP (P of#of_prep)
					(NP (NS parallels#parallel_n))))))))
  (ID RECORD-1551-E1-P2,2,E2V.416))

( (IP-MAT (PP (P when#when_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO I#i_pron))
			      (VBP saye#say_v1)
			      (PUNC ,)
			      (QTP (VAN drawen#draw_v)
				   (PP (P towarde#toward_prep)
				       (NP (ONE one#one_adj) (N side#side_n1)))))))
	  (PUNC ,)
	  (NP-SBJ (PRO I#i_pron))
	  (VBP meane#mean_v1)
	  (CP-THT (C that#that_conj)
		  (IP-SUB (IP-SUB-1 (NP-SBJ (D the#the_adj) (NS triangles#triangle_n))
				    (MD must#must_v1)
				    (BE be#be_v)
				    (VAN drawen#draw_v)
				    (CONJ other#other_conj)
				    (Q both#both_pron)
				    (ADVP-DIR (ADV vpward#upward_adv))
				    (PP (P frome#from_prep)
					(NP (ONE one#one_adj) (N parallel#parallel_n))))
			  (PUNC ,)
			  (CONJP (CONJ other#other_conj)
				 (ELSE els#else_adv)
				 (IP-SUB=1 (Q both#both_pron)
					   (ADVP-DIR (ADV downward#downward_adv))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E2V.417))

( (IP-MAT (ADVP (ADV then#then_adv))
	  (BEP are#be_v)
	  (NP-SBJ (PRO they#they_pron))
	  (VAN drawen#draw_v)
	  (PP (P betwene#between_prep)
	      (NP (NUM two#two_adj)
		  (NS paire#pair_n1)
		  (PP (P of#of_prep)
		      (NP (NS parallels#parallel_n)))))
	  (PUNC ,)
	  (IP-PPL (VAG presupposinge#presuppose_v)
		  (IP-INF (NP-SBJ (ONE one#one_adj))
			  (TO to#to_prep)
			  (BE bee#be_v)
			  (VAN drawen#draw_v)
			  (PP (P by#by_prep)
			      (NP (PRO$ their#their_adj) (N ground#ground_n) (N line#line_n2)))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E2V.418))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV then#then_adv))
	  (DOP do#do_v)
	  (NP-SBJ (PRO they#they_pron))
	  (VB ryse#rise_v)
	  (PP (P toward#toward_prep)
	      (NP (ADJ contrary#contrary_adj) (NS sides#side_n1)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E2V.419))

( (CODE <P_2,E3R>))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM XXXI.#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3R.422))

( (CODE <$$heading>))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (IP-SUB (NP-SBJ (D a#a_adj) (N likeiamme#SEE_like_adj))
				      (HVP haue#have_v)
				      (NP-OB1 (ONE one#one_adj)
					      (N ground#ground_n)
					      (N line#line_n2)
					      (PP (P with#with_prep)
						  (NP (D a#a_adj) (N triangle#triangle_n)))))
			      (PUNC ,)
			      (CONJP (CONJ and#and_conj1)
				     (IP-SUB (NP-SBJ *con*)
					     (BEP be#be_v)
					     (VAN drawen#draw_v)
					     (PP (P betwene#between_prep)
						 (NP (ONE one#one_adj)
						     (N paire#pair_n1)
						     (PP (P of#of_prep)
							 (NP (NS paralleles#parallel_n))))))))))
	  (PUNC ,)
	  (ADVP (ADV then#then_adv))
	  (MD shall#shall_v)
	  (NP-SBJ (D the#the_adj) (N likeiamme#SEE_like_adj))
	  (BE be#be_v)
	  (ADJP-PRD (ADJ double#double_adj1)
		    (PP (P to#to_prep)
			(NP (D the#the_adj) (N triangle#triangle_n))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3R.424))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,E3R.425))

( (IP-MAT (NP-SBJ (N A.H.#NA) (CONJ and#and_conj1) (N B.G.#NA))
	  (BEP are#be_v)
	  (NP-PRD (NUM .ij.#two_adj)
		  (ADJ gemow#gemew_n)
		  (NS lines#line_n2)
		  (PUNC ,)
		  (CP-REL (WPP-1 (P betwene#between_prep)
				 (WNP (WPRO which#which_adj)))
			  (C 0)
			  (IP-SUB (PP *T*-1)
				  (NP-SBJ-2 (EX there#there_adv))
				  (BEP is#be_v)
				  (VAN made#make_v1)
				  (NP-2 (NP (D a#a_adj)
					    (N triangle#triangle_n)
					    (NP-PRN (N B.CG#NA)))
					(PUNC ,)
					(CONJP (CONJ and#and_conj1)
					       (NP (D a#a_adj)
						   (N lykeiamme#SEE_like_adj)
						   (PUNC ,)
						   (NP-PRN (N A.B.G.C#NA))))
					(PUNC ,)
					(CP-REL (WNP-3 (WPRO whiche#which_adj))
						(C 0)
						(IP-SUB (NP-SBJ *T*-3)
							(HVP haue#have_v)
							(NP-OB1 (D a#a_adj) (N grounde#ground_n) (N lyne#line_n2))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E3R.426))

( (IP-MAT (NP-SBJ (D that#that_pron1))
	  (BEP is#be_v)
	  (IP-INF (TO to#to_prep)
		  (VB saye#say_v1)
		  (PUNC ,)
		  (NP-OB1 (N B.G#NA)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3R.427))

( (CODE {COM:figure_omitted}))

( (IP-MAT (PP (ADV+P Therfore#therefore_adv))
	  (DOP doth#do_v)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (VB folow#follow_v)
	  (CP-THT (C that#that_conj)
		  (IP-SUB (NP-SBJ (D the#the_adj)
				  (N lyke_iamme#SEE_like_adj)
				  (NP-PRN (N A.B.G.C.#NA)))
			  (BEP is#be_v)
			  (ADJP-PRD (ADJ double#double_adj1)
				    (PP (P to#to_prep)
					(NP (D the#the_adj)
					    (N triangle#triangle_n)
					    (NP-PRN (N B.C.G#NA)))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3R.429))

( (IP-MAT (CONJ For#for_prep)
	  (NP-SBJ (Q euery#every_adj)
		  (N halfe#half_n)
		  (PP (P of#of_prep)
		      (NP (D that#that_pron1) (N lykeiamme#SEE_like_adj))))
	  (BEP is#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (D the#the_adj) (N triangle#triangle_n))))
	  (PUNC ,)
	  (IP-MAT-PRN (NP-SBJ (PRO I#i_pron))
		      (VBP meane#mean_v1)
		      (NP-OB1 (N A.B.F.E.#NA) (CONJ other#other_conj) (N F.E.C.G.#NA)))
	  (PP (P as#as_adv)
	      (CP-ADV (WADVP-1 0)
		      (C 0)
		      (IP-SUB (ADVP *T*-1)
			      (NP-SBJ (PRO you#you_pron))
			      (MD may#may_v1)
			      (VB coniecture#conjecture_v)
			      (PP (P by#by_prep)
				  (NP (D the#the_adj)
				      (NUM .xi.#eleven_adj)
				      (N conclusion#conclusion_n)
				      (ADJP (ADJ geometrical#geometrical_adj)))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3R.430))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (P as#as_adv)
	      (CP-CMP (WADVP-1 0)
		      (C 0)
		      (IP-SUB (ADVP *T*-1)
			      (NP-SBJ (D this#this_pron) (N Theoreme#theorem_n))
			      (DOP dothe#do_v)
			      (VB speake#speak_v)
			      (PP (P of#of_prep)
				  (NP (D a#a_adj)
				      (N triangle#triangle_n)
				      (CONJP (CONJ and#and_conj1)
					     (NX (N likeiamme#SEE_like_adj)))
				      (CP-REL (WNP-2 0)
					      (C that#that_conj)
					      (IP-SUB (NP-SBJ *T*-2)
						      (HVP haue#have_v)
						      (NP-OB1 (ONE one#one_adj) (N groundelyne#ground-line_n)))))))))
	  (PUNC ,)
	  (ADVP (ADV so#so_adv))
	  (BEP is#be_v)
	  (NP-SBJ (PRO it#it_pron))
	  (ADJP-PRD (ADJ true#true_adj))
	  (ALSO also#also_adv)
	  (PUNC ,)
	  (PP (P yf#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO$ theyr#their_adj) (NS groundelynes#ground-line_n))
			      (BEP be#be_v)
			      (ADJP-PRD (ADJ equall#equal_adj))
			      (PUNC ,)
			      (PP (P though#though_adv)
				  (CP-ADV (C 0)
					  (IP-SUB (NP-SBJ (PRO they#they_pron))
						  (BEP bee#be_v)
						  (ADJP-PRD (ADJ dyuers#divers_adj))))))))
	  (PUNC ,)
	  (PP (P so#so_adv)
	      (CP-ADV (C that#that_conj)
		      (IP-SUB (NP-SBJ (PRO thei#they_pron))
			      (BEP be#be_v)
			      (VAN made#make_v1)
			      (PP (P betwene#between_prep)
				  (NP (ONE one#one_adj)
				      (N payre#pair_n1)
				      (PP (P of#of_prep)
					  (NP (NS paralleles#parallel_n))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3R.431))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (ADV+P hereof#hereof_adv))
	  (MD may#may_v1)
	  (NP-SBJ (PRO you#you_pron))
	  (VB perceaue#perceive_v)
	  (NP-OB1 (D the#the_adj)
		  (N reason#reason_n1)
		  (PUNC ,)
		  (CP-REL (WADVP-1 (WADV why#why_adv))
			  (C 0)
			  (IP-SUB (IP-SUB-2 (ADVP *T*-1)
					    (PP (P in#in_prep)
						(IP-PPL (VAG measuryng#measure_v)
							(NP-OB1 (D the#the_adj)
								(N platte#plat_n2)
								(PP (P of#of_prep)
								    (NP (D a#a_adj) (N triangle#triangle_n))))))
					    (PUNC ,)
					    (NP-SBJ (PRO you#you_pron))
					    (MD must#must_v1)
					    (VB multiply#multiply_v)
					    (NP-OB1 (D the#the_adj) (ADJ perpendicular#perpendicular_adj) (N lyne#line_n2))
					    (PP (P by#by_prep)
						(NP (Q halfe#half_adj) (D the#the_adj) (N grounde#ground_n) (N lyne#line_n2))))
				  (PUNC ,)
				  (CONJP (CONJ or#or_conj1)
					 (ELSE els#else_adv)
					 (IP-SUB=2 (NP-SBJ (D the#the_adj) (ADJ hole#whole_adj) (N grounde#ground_n) (N lyne#line_n2))
						   (PP (P by#by_prep)
						       (NP (Q halfe#half_adj) (D the#the_adj) (ADJ perpendicular#perpendicular_adj))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E3R.432))

( (IP-MAT (CONJ for#for_prep)
	  (PP (P by#by_prep)
	      (NP (Q any#any_adj)
		  (PP (P of#of_prep)
		      (NP (D these#these_pron)
			  (Q bothe#both_pron)
			  (CODE {COM:sic})
			  (NS waies#way_n1)))))
	  (BEP is#be_v)
	  (NP-SBJ-1 (EX there#there_adv))
	  (VAN made#make_v1)
	  (NP-1 (D a#a_adj)
		(N lykiamme#SEE_like_adj)
		(ADJP (ADJ equall#equal_adj)
		      (PP (P to#to_prep)
			  (NP (Q halfe#half_adj)
			      (SUCH suche#such_adj)
			      (D a#a_adj)
			      (ONE one#one_adj)
			      (PP (P as#as_adv)
				  (CP-CMP (WNP-2 0)
					  (C 0)
					  (IP-SUB (IP-SUB-3 (NP-SBJ *T*-2)
							    (MD shulde#shall_v)
							    (BE be#be_v)
							    (VAN made#make_v1)
							    (PP (P on#on_prep)
								(NP (D the#the_adj) (ADJ same#same_adj) (ADJ hole#whole_adj) (N grounde#ground_n) (N lyne#line_n2)))
							    (PP (P with#with_prep)
								(NP (D the#the_adj) (N triangle#triangle_n))))
						  (PUNC ,)
						  (CONJP (CONJ and#and_conj1)
							 (IP-SUB=3 (PP (P betweene#between_prep)
								       (NP (ONE one#one_adj)
									   (N payre#pair_n1)
									   (PP (P of#of_prep)
									       (NP (NS paralleles#parallel_n))))))))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3R.433))

( (IP-MAT (PP (ADV+P Therfore#therefore_adv))
	  (PP-LFD (P as#as_adv)
		  (CP-CMP (WADVP-1 0)
			  (C 0)
			  (IP-SUB (ADVP *T*-1)
				  (NP-SBJ (D that#that_pron1) (N lykeiamme#SEE_like_adj))
				  (BEP is#be_v)
				  (ADJP-PRD (ADJ double#double_adj1)
					    (PP (P to#to_prep)
						(NP (D the#the_adj) (N triangle#triangle_n)))))))
	  (PUNC ,)
	  (ADVP-RSP (ADV so#so_adv))
	  (NP-SBJ (D the#the_adj)
		  (NUM halfe#half_adj)
		  (PP (P of#of_prep)
		      (NP (PRO it#it_pron))))
	  (PUNC ,)
	  (MD must#must_v1)
	  (ADVP (ADV needes#needs_adv))
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (D the#the_adj) (N triangle#triangle_n))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3R.434))

( (IP-IMP (VBI Compare#compare_v1)
	  (NP-OB1 (D the#the_adj) (NUM .xi.#eleven_adj) (N conclusion#conclusion_n))
	  (PP (P with#with_prep)
	      (NP (D this#this_pron) (N theoreme#theorem_n)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3R.435))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM .XXXIJ.#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3R.437))

( (CODE <$$heading>))

( (IP-MAT (PP (P In#in_prep)
	      (NP (Q all#all_adj)
		  (NS likeiammes#SEE_like_adj)
		  (CP-REL (WADVP-1 (WADV where#where_adv))
			  (C 0)
			  (IP-SUB (ADVP-LOC *T*-1)
				  (NP-SBJ-2 (EX there#there_adv))
				  (BEP are#be_v)
				  (NP-2 (QR more#more_adj)
					(PP (P than#than_conj)
					    (CODE <P_2,E3V>)
					    (NP (ONE one#one_adj))))
				  (VAN made#make_v1)
				  (PP (P aboute#about_adv)
				      (NP (ONE one#one_adj) (N bias#bias_n) (N line#line_n2)))))))
	  (PUNC ,)
	  (NP-SBJ (D the#the_adj)
		  (N fill#fill_n1)
		  (NS squares#square_n)
		  (PP (P of#of_prep)
		      (NP (Q euery#every_adj)
			  (PP (P of#of_prep)
			      (NP (PRO them#them_pron))))))
	  (MD must#must_v1)
	  (ADVP (ADV nedes#needs_adv))
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3V.439))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,E3V.440))

( (IP-MAT (ADVP-TMP (ADV Fyrst#first_adj))
	  (PP (P before#before_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO I#i_pron))
			      (VBP declare#declare_v)
			      (NP-OB1 (D the#the_adj) (NS examples#example_n)))))
	  (PUNC ,)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (MD shal#shall_v)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ mete#meet_adj))
	  (IP-INF-1 (TO to#to_prep)
		    (VB shew#show_v)
		    (NP-OB1 (D the#the_adj)
			    (ADJ true#true_adj)
			    (N vndersta~dyng#understanding_n)
			    (PP (P of#of_prep)
				(NP (D this#this_pron) (N theorem#theorem_n)))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3V.441))

( (IP-MAT (PP (ADV+P Therfore#therefore_adv)
	      (PP (P by#by_prep)
		  (NP (D the#the_adj) (CODE <font>) (N Bias#bias_n) (N line#line_n2))))
	  (CODE <$$font>)
	  (PUNC ,)
	  (NP-SBJ (PRO I#i_pron))
	  (VBP meane#mean_v1)
	  (NP-OB1 (D that#that_pron1)
		  (N lyne#line_n2)
		  (PUNC ,)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (PP (P in#in_prep)
				      (NP (Q any#any_adj) (N square#square_n) (N figure#figure_n)))
				  (DOP dooth#do_v)
				  (VB runne#run_v)
				  (NP-MSR (PP (P from#from_prep)
					      (NP (N corner#corner_n1)))
					  (PP (P to#to_prep)
					      (NP (N corner#corner_n1)))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3V.442))

( (IP-MAT (CONJ And#and_conj1)
	  (NP-LFD (Q euery#every_adj)
		  (N square#square_n)
		  (CP-REL (WNP-1 (WPRO which#which_adj))
			  (C 0)
			  (IP-SUB (NP-SBJ *T*-1)
				  (BEP is#be_v)
				  (VAN diuided#divide_v)
				  (PP (P by#by_prep)
				      (NP (D that#that_pron1) (N bias#bias_n) (N line#line_n2)))
				  (PP (P into#into_prep)
				      (NP (ADJ equall#equal_adj) (NS halues#half_n)))
				  (NP-MSR (PP (P from#from_prep)
					      (NP (N corner#corner_n1)))
					  (PP (P to#to_prep)
					      (NP (N corner#corner_n1))))
				  (PUNC <paren>)
				  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
					      (BEP is#be_v)
					      (IP-INF (TO to#to_prep)
						      (VB say#say_v1)
						      (PUNC ,)
						      (PP (P into#into_prep)
							  (NP (NUM .ij.#two_adj) (ADJ equall#equal_adj) (NS triangles#triangle_n))))))))
	  (PUNC <$$paren>)
	  (NP-SBJ-RSP=2 (D those#those_pron))
	  (BEP be#be_v)
	  (VAN counted#count_v)
	  (CODE <font>)
	  (IP-INF (NP-SBJ *-2)
		  (TO to#to_prep)
		  (VB stande#stand_v)
		  (PP (P aboute#about_adv)
		      (NP (ONE one#one_adj) (N bias#bias_n) (N line#line_n2))))
	  (CODE <$$font>)
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E3V.443))

( (IP-MAT-1 (CONJ and#and_conj1)
	    (NP-LFD (D the#the_adj)
		    (OTHER other#other_adj)
		    (NS squares#square_n)
		    (PUNC ,)
		    (CP-REL (WNP-2 (WPRO whiche#which_adj))
			    (C 0)
			    (IP-SUB (NP-SBJ *T*-2)
				    (VBP touche#touch_v)
				    (NP-OB1 (D that#that_pron1) (N bias#bias_n) (N line#line_n2))
				    (PUNC ,)
				    (PP (P with#with_prep)
					(NP (ONE one#one_adj)
					    (PP (P of#of_prep)
						(NP (PRO$ their#their_adj) (NS corners#corner_n1) (FP onely#only_adj))))))))
	    (PUNC ,)
	    (NP-RSP-3 (D those#those_pron))
	    (DOP doo#do_v)
	    (NP-SBJ (PRO I#i_pron))
	    (VB call#call_v)
	    (CODE <font>)
	    (IP-SMC (NP-SBJ *ICH*-3)
		    (NP-PRD (N Fyll#fill_n1) (NS squares#square_n)))
	    (CODE <$$font>)
	    (PUNC ,)
	    (IP-PPL (VAG accordyng#accord_v)
		    (PP (P to#to_prep)
			(NP (D the#the_adj)
			    (ADJ greke#greek_adj)
			    (N name#name_n)
			    (PUNC ,)
			    (CP-REL (WNP-4 (WPRO whiche#which_adj))
				    (C 0)
				    (IP-SUB (NP-SBJ *T*-4)
					    (BEP is#be_v)
					    (CODE <font>)
					    (NP-PRD (FW anapleromata#NA)))))))
	    (CODE <$$font>)
	    (PUNC ,)
	    (IP-MAT-PRN=1 (CONJ and#and_conj1)
			  (VAN called#call_v)
			  (PP (P in#in_prep)
			      (NP (NPR latin#NA)))
			  (IP-SMC (NP-SBJ *)
				  (CODE <font>)
				  (NP-PRD (FW supplementa#NA))))
	    (CODE <$$font>)
	    (PUNC ,)
	    (PP (P bycause#because_adv)
		(CP-ADV (C that#that_conj)
			(IP-SUB (NP-SBJ (PRO they#they_pron))
				(VBP make#make_v1)
				(NP-OB1 (ONE one#one_adj)
					(ADJ generall#general_adj)
					(N square#square_n)
					(PUNC ,)
					(RRC (VAG (VAG includyng#include_v) (CONJ and#and_conj1) (VAG enclosyng#enclose_v))
					     (NP-OB1 (D the#the_adj) (OTHER other#other_adj) (ADJ diuers#divers_adj) (NS squares#square_n)))))))
	    (PUNC ,)
	    (PP (P as#as_adv)
		(CP-ADV (C 0)
			(IP-SUB (IP-SUB (PP (P in#in_prep)
					    (NP (D this#this_pron) (N exa~ple#example_n)))
					(NP-SBJ (N H.C.E.N.#NA))
					(BEP is#be_v)
					(NP-PRD (ONE one#one_adj) (N square#square_n) (N likeiamme#SEE_like_adj)))
				(PUNC ,)
				(CONJP (CONJ and#and_conj1)
				       (IP-SUB (NP-SBJ (N L.M.G.C.#NA))
					       (BEP is#be_v)
					       (NP-PRD (D an#a_adj) (OTHER other#other_adj))))
				(PUNC ,)
				(CODE {COM:figures_omitted})
				(CP-CAR (WNP-5 (WPRO whiche#which_adj))
					(C 0)
					(IP-SUB (NP-SBJ *T*-5)
						(Q bothe#both_pron)
						(BEP are#be_v)
						(VAN made#make_v1)
						(PP (P aboute#about_adv)
						    (NP (ONE one#one_adj) (N bias#bias_n) (N line#line_n2))))))))
	    (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E3V.444))

( (IP-MAT (NP-SBJ (D that#that_pron1))
	  (BEP is#be_v)
	  (NP-PRD (N N.M#NA))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E3V.445))

( (IP-MAT (ADVP (ADV than#then_adv))
	  (NP-SBJ (N K.L.H.C.#NA) (CONJ and#and_conj1) (N C.E.F.G.#NA))
	  (BEP are#be_v)
	  (NP-PRD (NUM .ij.#two_adj) (ADJ fyll#fill_n1) (NS squares#square_n))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,E3V.446))

( (IP-MAT (CONJ for#for_prep)
	  (NP-SBJ (PRO they#they_pron))
	  (DOP doo#do_v)
	  (VB fyll#fill_v)
	  (RP vp#up_adv1)
	  (NP-OB1 (D the#the_adj)
		  (NS sydes#side_n1)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (NUM .ij#two_adj) (ADJ fyrste#first_adj) (ADJ square#square_adj) (NS lykeiammes#SEE_like_adj))))
	  (PUNC ,)
	  (PP (P in#in_prep)
	      (NP (SUCH suche#such_adj)
		  (N sorte#sort_n2)
		  (PUNC ,)
		  (CP-DEG (C that#that_conj)
			  (IP-SUB (PP (P of#of_prep)
				      (NP (Q all#all_adj) (PRO them#them_pron) (NUM foure#four_adj)))
				  (BEP is#be_v)
				  (VAN made#make_v1)
				  (NP-SBJ (ONE one#one_adj)
					  (ADJ greate#great_adj)
					  (ADJ generall#general_adj)
					  (N square#square_n)
					  (NP-PRN (N K.M.F.N#NA)))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3V.447))

( (IP-MAT (ADVP (ADV Nowe#now_adv))
	  (PP (P to#to_prep)
	      (NP (D the#the_adj)
		  (N sentence#sentence_n)
		  (PP (P of#of_prep)
		      (NP (D the#the_adj) (N theoreme#theorem_n)))))
	  (PUNC ,)
	  (NP-SBJ (PRO I#i_pron))
	  (VBP say#say_v1)
	  (PUNC ,)
	  (CP-THT (C that#that_conj)
		  (IP-SUB (NP-SBJ (D the#the_adj)
				  (NUM .ij.#two_adj)
				  (N fill#fill_n1)
				  (NS squares#square_n)
				  (PUNC ,)
				  (NP-PRN (N H.K.L.C.#NA) (CONJ and#and_conj1) (N C.E.F.G.#NA)))
			  (BEP are#be_v)
			  (Q both#both_pron)
			  (ADJP-PRD (ADJ equall#equal_adj))
			  (ADVP (ADV togither#together_adv))
			  (PUNC ,)
			  (PUNC <paren>)
			  (PP-PRN (P as#as_adv)
				  (CP-ADV (C 0)
					  (IP-SUB (NP-SBJ (PRO it#it_pron))
						  (MD shall#shall_v)
						  (BE bee#be_v)
						  (VAN declared#declare_v)
						  (PP (P in#in_prep)
						      (NP (D the#the_adj)
							  (N booke#book_n)
							  (PP (P of#of_prep)
							      (NP (NS proofes#proof_n))))))))))
	  (PUNC <$$paren>)
	  (PP (P bicause#because_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (PRO they#they_pron))
			      (BEP are#be_v)
			      (NP-PRD (D the#the_adj)
				      (N fill#fill_n1)
				      (NS squares#square_n)
				      (PP (P of#of_prep)
					  (NP (NUM two#two_adj) (NS likeiammes#SEE_like_adj)))
				      (RRC (VAN made#make_v1)
					   (PP (P aboute#about_adv)
					       (NP (ONE one#one_adj) (N bias#bias_n) (N line#line_n2)))))
			      (PUNC ,)
			      (PP (P as#as_adv)
				  (CP-ADV (WNP-1 0)
					  (C 0)
					  (IP-SUB (NP-OB1 *T*-1)
						  (NP-SBJ (D the#the_adj) (N exaumple#example_n))
						  (VBP sheweth#show_v)))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3V.448))

( (IP-IMP (VBI Conferre#confer_v)
	  (NP-OB1 (D the#the_adj) (ADJ twelfthe#NA) (N conclusion#conclusion_n))
	  (PP (P with#with_prep)
	      (NP (D this#this_pron) (N theoreme#theorem_n)))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,E3V.449))

( (CODE {COM:insert_helsinki_2}))

( (CODE <P_2,G1R>))

( (CODE <heading>))

( (NP (D THE#the_adj) (NUM XLIJ.#NA) (N THEOREME#theorem_n) (PUNC .))
  (ID RECORD-1551-E1-P2,2,G1R.453))

( (CODE <$$heading>))

( (IP-MAT (PP (P If#if_conj)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D a#a_adj) (ADJ right#right_adj) (N line#line_n2))
			      (BEP be#be_v)
			      (VAN deuided#divide_v)
			      (PP (P as#as_adv)
				  (CP-ADV (WADVP-1 0)
					  (C 0)
					  (IP-SUB (ADVP *T*-1)
						  (NP-SBJ (N chance#chance_n))
						  (VBP happeneth#happen_v)))))))
	  (NP-SBJ (D the#the_adj)
		  (NUM iiij.#four_adj)
		  (ADJ long#long_adj1)
		  (NS squares#square_n)
		  (PUNC ,)
		  (CP-REL (WNP-2 0)
			  (C that#that_conj)
			  (IP-SUB (NP-SBJ *T*-2)
				  (MD may#may_v1)
				  (BE be#be_v)
				  (VAN made#make_v1)
				  (PP (P of#of_prep)
				      (NP (NP (D that#that_pron1) (ADJ whole#whole_adj) (N line#line_n2))
					  (CONJP (CONJ and#and_conj1)
						 (NP (ONE one#one_adj)
						     (PP (P of#of_prep)
							 (NP (PRO$ his#his_adj) (NS partes#part_n1)))))))))
		  (PP (P with#with_prep)
		      (NP (D the#the_adj)
			  (N square#square_n)
			  (PP (P of#of_prep)
			      (NP (D the#the_adj) (OTHER other#other_adj) (N part#part_n1))))))
	  (PUNC ,)
	  (MD shall#shall_v)
	  (BE be#be_v)
	  (ADJP-PRD (ADJ equall#equal_adj)
		    (PP (P to#to_prep)
			(NP (D the#the_adj)
			    (N square#square_n)
			    (CP-REL (WNP-3 0)
				    (C that#that_conj)
				    (IP-SUB (NP-SBJ *T*-3)
					    (BEP is#be_v)
					    (VAN made#make_v1)
					    (PP (P of#of_prep)
						(NP (NP (D the#the_adj) (ADJ whole#whole_adj) (N line#line_n2))
						    (CONJP (CONJ and#and_conj1)
							   (NP (D the#the_adj)
							       (ADJ saide#said_adj)
							       (ADJ first#first_adj)
							       (N portion#portion_n)
							       (RRC (VAN ioyned#join_v1)
								    (PP (P to#to_prep)
									(NP (PRO him#him_pron)))
								    (PP (P in#in_prep)
									(NP (N lengthe#length_n)))
								    (PP (P as#as_adv)
									(NP (ONE one#one_adj) (ADJ whole#whole_adj) (N line#line_n2)))))))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,G1R.455))

( (NP (CODE <font>) (N Example#example_n) (PUNC .) (CODE <$$font>))
  (ID RECORD-1551-E1-P2,2,G1R.456))

( (IP-MAT (NP-SBJ (D The#the_adj) (ADJ firste#first_adj) (N line#line_n2))
	  (BEP is#be_v)
	  (NP-PRD (N A.B#NA))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,G1R.457))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ *con*)
	  (BEP is#be_v)
	  (VAN deuided#divide_v)
	  (PP (P by#by_prep)
	      (NP (N C.#NA)))
	  (PP (P into#into_prep)
	      (NP (NUM two#two_adj) (ADJ vnequall#unequal_adj) (NS partes#part_n1)))
	  (PP (P as#as_adv)
	      (CP-ADV (WNP-1 0)
		      (C 0)
		      (IP-SUB (NP-SBJ *T*-1)
			      (VBP happeneth#happen_v)))))
  (ID RECORD-1551-E1-P2,2,G1R.458))

( (CODE {COM:figure_omitted}))

( (IP-MAT (NP-SBJ (NP (D the#the_adj)
		      (N longsquare#SEE_long_adj1)
		      (PP (P of#of_prep)
			  (NP (PRO yt#it_pron))))
		  (PUNC ,)
		  (CONJP (CONJ and#and_conj1)
			 (NP (PRO$ his#his_adj)
			     (ADJR lesser#lesser_adj)
			     (N portion#portion_n)
			     (NP-PRN (N A.C#NA)))))
	  (PUNC ,)
	  (BEP is#be_v)
	  (NP-MSR (NUM foure#four_adj) (NS times#time_n))
	  (VAN drawen#draw_v)
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,G1R.460))

( (IP-MAT (NP-SBJ (D the#the_adj) (ADJ first#first_adj))
	  (BEP is#be_v)
	  (NP-PRD (N E.G.M.K#NA))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,G1R.461))

( (IP-MAT (NP-SBJ (D the#the_adj) (ADJ seconde#second_adj))
	  (BEP is#be_v)
	  (NP-PRD (N K.M.Q.O#NA))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,G1R.462))

( (IP-MAT (NP-SBJ (D the#the_adj) (ADJ third#third_adj))
	  (BEP is#be_v)
	  (NP-PRD (N H.K.R.S#NA))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,G1R.463))

( (IP-MAT (CONJ and#and_conj1)
	  (NP-SBJ (D the#the_adj) (ADJ fourthe#NA))
	  (BEP is#be_v)
	  (NP-PRD (N K.L.S.T.#NA)))
  (ID RECORD-1551-E1-P2,2,G1R.464))

( (CODE {COM:figure_omitted}))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (WADV where#where_adv)
	      (P as#as_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ-1 (PRO it#it_pron))
			      (VBP appeareth#appear_v)
			      (CP-THT-1 (C that#that_conj)
					(IP-SUB-2 (NP-SBJ (ONE one#one_adj)
							  (PP (P of#of_prep)
							      (NP (D the#the_adj) (ADJ little#little_adj) (NS squares#square_n))))
						  (PUNC <paren>)
						  (IP-MAT-PRN (NP-SBJ (PRO I#i_pron))
							      (VBP meane#mean_v1)
							      (NP-OB1 (N K.L.PO#NA)))
						  (PUNC <$$paren>)
						  (BEP is#be_v)
						  (VAN reckened#reckon_v)
						  (NP-TMP (NUM twise#twice_adv))
						  (PUNC ,)
						  (IP-SUB-PRN=2 (NP-TMP (NUM ones#once_adv))
								(PP (P as#as_adv)
								    (NP (N parcell#parcel_n)
									(PP (P of#of_prep)
									    (NP (D the#the_adj) (ADJ second#second_adj) (ADJ long#long_adj1) (N square#square_n))))))
						  (IP-SUB-PRN=2 (CONJ and#and_conj1)
								(ADVP (ADV agayne#again_adv))
								(PP (P as#as_adv)
								    (NP (N parte#part_n1)
									(PP (P of#of_prep)
									    (NP (D the#the_adj) (CODE <P_2,G1V>) (ADJ thirde#third_adj) (N longsquare#SEE_long_adj1)))))))))))
	  (PUNC ,)
	  (IP-INF-PRP (TO to#to_prep)
		      (VB auoide#avoid_v)
		      (NP-OB1 (N ambiguite#ambiguity_n)))
	  (PUNC ,)
	  (NP-SBJ (PRO you#you_pron))
	  (MD may#may_v1)
	  (VB place#place_v)
	  (NP-OB1 (ONE one#one_adj)
		  (NP-PRN *ICH*-3))
	  (PP (P insteede#instead_adv)
	      (PP (P of#of_prep)
		  (NP (PRO it#it_pron))))
	  (PUNC ,)
	  (IP-MAT-PRN (NP-3 (D an#a_adj)
			    (OTHER other#other_adj)
			    (N square#square_n)
			    (PP (P of#of_prep)
				(NP (N equalitee#equality_n))))
		      (PUNC ,)
		      (PP (P with#with_prep)
			  (NP (PRO it#it_pron))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,G1V.466))

( (IP-MAT (NP-SBJ (D that#that_pron1))
	  (BEP is#be_v)
	  (IP-INF (TO to#to_prep)
		  (VB saye#say_v1)
		  (PUNC ,)
		  (NP-OB1 (N D.E.K.H#NA)
			  (PUNC ,)
			  (CP-REL (WNP-1 (WPRO which#which_adj))
				  (C 0)
				  (IP-SUB (NP-SBJ *T*-1)
					  (BED was#be_v)
					  (PP (P at#at_prep)
					      (NP (Q no#no_adj) (N tyme#time_n)))
					  (VAG accompting#account_v)
					  (PP (P as#as_adv)
					      (NP (N percell#parcel_n)
						  (PP (P of#of_prep)
						      (NP (Q any#any_adj)
							  (ONE one#one_adj)
							  (PP (P of#of_prep)
							      (NP (PRO them#them_pron)))))))))))
	  (PUNC ,))
  (ID RECORD-1551-E1-P2,2,G1V.467))

( (IP-MAT (CONJ and#and_conj1)
	  (ADVP (ADV then#then_adv))
	  (HVP haue#have_v)
	  (NP-SBJ (PRO you#you_pron))
	  (NP-OB1 (NUM iiij.#four_adj)
		  (ADJ long#long_adj1)
		  (NS squares#square_n)
		  (RRC (ADVP (ADV distinctly#distinctly_adv))
		       (VAN made#make_v1)
		       (PP (P of#of_prep)
			   (NP (NP (D the#the_adj)
				   (ADJ whole#whole_adj)
				   (N line#line_n2)
				   (NP-PRN (N A.B#NA)))
			       (PUNC ,)
			       (CONJP (CONJ and#and_conj1)
				      (NP (PRO$ his#his_adj)
					  (ADJR lesser#lesser_adj)
					  (N portion#portion_n)
					  (NP-PRN (N A.C#NA))))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,G1V.468))

( (IP-MAT (CONJ And#and_conj1)
	  (PP (P within#within_adv)
	      (NP (PRO them#them_pron)))
	  (BEP is#be_v)
	  (NP-SBJ-1 (EX there#there_adv))
	  (NP-1 (D a#a_adj)
		(ADJ greate#great_adj)
		(ADJ full#full_adj)
		(N square#square_n)
		(NP-PRN (N P.Q.T.V.#NA))
		(CP-REL (WNP-2 (WPRO whiche#which_adj))
			(C 0)
			(IP-SUB (NP-SBJ *T*-2)
				(BEP is#be_v)
				(NP-PRD (D the#the_adj)
					(ADJ iust#just_adj)
					(N square#square_n)
					(PP (P of#of_prep)
					    (NP (N B.C#NA))))
				(PUNC ,)
				(IP-PPL (BAG beynge#be_v)
					(NP-PRD (D the#the_adj)
						(ADJR greatter#great_adj)
						(N portion#portion_n)
						(PP (P of#of_prep)
						    (NP (D the#the_adj)
							(N line#line_n2)
							(NP-PRN (N A.B.#NA))))))))))
  (ID RECORD-1551-E1-P2,2,G1V.469))

( (IP-MAT (CONJ And#and_conj1)
	  (CP-THT-1 (C that#that_conj)
		    (IP-SUB (NP-SBJ (D those#those_pron) (NUM fiue#five_v) (NS squares#square_n))
			    (DOP doo#do_v)
			    (VB make#make_v1)
			    (NP-OB1 (QP (ADV iuste#just_adv) (ADVR as#as_adv) (Q muche#much_adj))
				    (PP (P as#as_adv)
					(NP (D the#the_adj)
					    (ADJ whole#whole_adj)
					    (N square#square_n)
					    (PP (P of#of_prep)
						(NP (D that#that_pron1)
						    (ADJR longer#long_adj1)
						    (N line#line_n2)
						    (NP-PRN (N D.G#NA))
						    (PUNC ,)
						    (PUNC <paren>)
						    (CP-REL (WNP-2 (WPRO whiche#which_adj))
							    (C 0)
							    (IP-SUB (NP-SBJ *T*-2)
								    (BEP is#be_v)
								    (ADJP-PRD (ADVR as#as_adv)
									      (ADJ longe#long_adj1)
									      (PP (P as#as_adv)
										  (NP (N A.B#NA)
										      (PUNC ,)
										      (CONJ and#and_conj1)
										      (N A.C.#NA)
										      (PUNC <$$paren>)
										      (RRC (VAN ioyned#join_v1)
											   (ADVP (ADV togither#together_adv)))))))))))))))
	  (PUNC <$$paren>)
	  (NP-SBJ-1 (PRO it#it_pron))
	  (MD may#may_v1)
	  (BE be#be_v)
	  (VAN iudged#judge_v)
	  (ADVP (ADV easyly#easily_adv))
	  (PP (P by#by_prep)
	      (NP (D the#the_adj) (N eye#eye_n1)))
	  (PUNC ,)
	  (PP (P sith#sith_adv)
	      (CP-ADV (C 0)
		      (IP-SUB (NP-SBJ (D that#that_pron1) (ONE one#one_adj) (ADJ greate#great_adj) (N square#square_n))
			      (DOP doth#do_v)
			      (VB comprehe~d#comprehend_v)
			      (PP (P in#in_prep)
				  (NP (PRO it#it_pron)))
			      (NP-OB1 (Q all#all_adj) (D the#the_adj) (OTHER other#other_adj) (NUM fiue#five_v) (NS squares#square_n)))))
	  (PUNC ,)
	  (IP-MAT-PRN (NP-SBJ (D that#that_pron1))
		      (BEP is#be_v)
		      (IP-INF (TO to#to_prep) (VB say#say_v1))
		      (PUNC ,)
		      (NP-PRD (NP (NUM foure#four_adj) (NS longsqares#SEE_long_adj1))
			      (CONJP *ICH*-3))
		      (PUNC <paren>)
		      (PP-PRN (P as#as_adv)
			      (IP-PPL (ADVP-TMP (ADV before#before_adv))
				      (VAN mencioned#mention_v)))
		      (PUNC <$$paren>)
		      (CONJP-3 (CONJ and#and_conj1)
			       (NP (ONE one#one_adj) (ADJ full#full_adj) (N square#square_n))))
	  (PUNC ,)
	  (CP-CAR (WNP-4 (WPRO which#which_adj))
		  (C 0)
		  (IP-SUB (NP-SBJ *T*-4)
			  (BEP is#be_v)
			  (NP-PRD (D the#the_adj)
				  (N intent#intent_n)
				  (PP (P of#of_prep)
				      (NP (D the#the_adj) (N Theoreme#theorem_n))))))
	  (PUNC .))
  (ID RECORD-1551-E1-P2,2,G1V.470))
